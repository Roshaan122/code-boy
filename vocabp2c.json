{
    "src_vocab": {
        "<pad>": 0,
        "<sos>": 1,
        "<eos>": 2,
        "create": 3,
        "string": 4,
        "s": 5,
        "integers": 6,
        "x1,": 7,
        "y1,": 8,
        "x2,": 9,
        "y2": 10,
        "read": 11,
        "set": 12,
        "x1": 13,
        "to": 14,
        "s[0]": 15,
        "-": 16,
        "96": 17,
        "y1": 18,
        "s[1]": 19,
        "'0'": 20,
        "x2": 21,
        "print": 22,
        "maximum": 23,
        "of": 24,
        "absolute": 25,
        "value": 26,
        "and": 27,
        "y2,": 28,
        "newline": 29,
        "while": 30,
        "is": 31,
        "not": 32,
        "or": 33,
        "if": 34,
        "greater": 35,
        "than": 36,
        "\"R\"": 37,
        "increment": 38,
        "less": 39,
        "\"L\"": 40,
        "decrement": 41,
        "\"D\"": 42,
        "\"U\"": 43,
        "\"\\n\"": 44,
        "=": 45,
        "Read": 46,
        "0": 47,
        "(x1": 48,
        "x2)": 49,
        "(y1": 50,
        "y2)": 51,
        "!=": 52,
        "OR": 53,
        "TRUE,": 54,
        "do": 55,
        "the": 56,
        "following": 57,
        ",": 58,
        "R": 59,
        "L": 60,
        "D": 61,
        "U": 62,
        "a": 63,
        "new": 64,
        "line": 65,
        "character": 66,
        "array": 67,
        "c1": 68,
        "size": 69,
        "2": 70,
        "c2": 71,
        "c1[0]": 72,
        "c1[1]": 73,
        "c2[0]": 74,
        "c2[1]": 75,
        "vector": 76,
        "ans": 77,
        "add": 78,
        "element": 79,
        "\"RU\"": 80,
        "end": 81,
        "else": 82,
        "\"RD\"": 83,
        "\"LD\"": 84,
        "\"LU\"": 85,
        "for": 86,
        "i": 87,
        "exclusive,": 88,
        "ans[i]": 89,
        "let": 90,
        "be": 91,
        "an": 92,
        "characters": 93,
        "length": 94,
        "strings": 95,
        "||": 96,
        "<": 97,
        "&&": 98,
        "push": 99,
        "into": 100,
        "increase": 101,
        "by": 102,
        "one": 103,
        "c1[1]>": 104,
        ">": 105,
        "decrease": 106,
        "all": 107,
        "elements": 108,
        "with": 109,
        "after": 110,
        "each": 111,
        "n,": 112,
        "m": 113,
        "long": 114,
        "x,": 115,
        "y,": 116,
        "a,": 117,
        "b": 118,
        "s,": 119,
        "s1": 120,
        "n": 121,
        "(s[0]": 122,
        "s1[0])": 123,
        "int(s[1]": 124,
        "s1[1])": 125,
        "-n": 126,
        "x": 127,
        "-m": 128,
        "y": 129,
        "bitwise": 130,
        "n,m": 131,
        "m,": 132,
        "s1[0],": 133,
        "s1[1]": 134,
        "invert": 135,
        "sign": 136,
        "'R'": 137,
        "'L'": 138,
        "'U'": 139,
        "'D'": 140,
        "max": 141,
        "(n)": 142,
        "(m)": 143,
        "now,": 144,
        "goal,": 145,
        "way": 146,
        "100": 147,
        "step,": 148,
        "i,": 149,
        "tstep": 150,
        "now": 151,
        "goal": 152,
        "now[0]": 153,
        "goal[0]": 154,
        "step": 155,
        "now[1]": 156,
        "goal[1]": 157,
        "exclusive": 158,
        "way[increment": 159,
        "step]": 160,
        "-step": 161,
        "tstep]": 162,
        "way[i]": 163,
        "strings.": 164,
        "equal": 165,
        "way[tstep]": 166,
        "'RD'": 167,
        "'LD'": 168,
        "'RU'": 169,
        "'LU'": 170,
        "S": 171,
        "S[0]": 172,
        "49,": 173,
        "S[1]": 174,
        "97": 175,
        "Way": 176,
        "\"\"": 177,
        "integer": 178,
        "counter": 179,
        "true": 180,
        "sign_X": 181,
        "(x2": 182,
        "x1)": 183,
        "/": 184,
        "0,": 185,
        "sigh_Y": 186,
        "sign_Y": 187,
        "(y2": 188,
        "y1)": 189,
        "1": 190,
        "-1": 191,
        "sign_Y,": 192,
        "break": 193,
        "loop": 194,
        "'\\n'": 195,
        "49": 196,
        "empty": 197,
        "WAY": 198,
        "int": 199,
        "abs(x2": 200,
        "otherwise": 201,
        "abs(y2": 202,
        "append": 203,
        "are": 204,
        "both": 205,
        "counter,": 206,
        "10": 207,
        "2d": 208,
        "csx": 209,
        "ctx": 210,
        "sx,": 211,
        "sy,": 212,
        "tx": 213,
        "ty": 214,
        "k": 215,
        "sy": 216,
        "sx": 217,
        "a[k]": 218,
        "6": 219,
        "8": 220,
        "3": 221,
        "5": 222,
        "k-th": 223,
        "4": 224,
        "7": 225,
        "inclusive": 226,
        "a[i]": 227,
        "csx,": 228,
        "tx,": 229,
        "1,": 230,
        "2,": 231,
        "3,": 232,
        "4,": 233,
        "5,": 234,
        "6,": 235,
        "7,": 236,
        "8,": 237,
        "declare": 238,
        "res": 239,
        "as": 240,
        "arguments": 241,
        "returning": 242,
        "return": 243,
        "from": 244,
        "function": 245,
        "-1,": 246,
        "xy": 247,
        "wtih": 248,
        "arguments,": 249,
        "j,": 250,
        "k,": 251,
        "l,": 252,
        "count,": 253,
        "count": 254,
        "to,": 255,
        "vec": 256,
        "from[0],": 257,
        "from[1],": 258,
        "to[0],": 259,
        "to[1]": 260,
        "result": 261,
        "run": 262,
        "vec,": 263,
        "vec[i]": 264,
        "that": 265,
        "returns": 266,
        "char": 267,
        "assign": 268,
        "called": 269,
        "to[0]": 270,
        "xy(x1,": 271,
        "xy(y1,": 272,
        "res(x,": 273,
        "y)": 274,
        "aa,": 275,
        "bb,": 276,
        "bb": 277,
        "aa": 278,
        "values": 279,
        "creat": 280,
        "t": 281,
        "abs(s[0]": 282,
        "t[0])": 283,
        "abs(s[1]": 284,
        "t[1])": 285,
        "t[0]": 286,
        "t[1]": 287,
        "t,": 288,
        "+": 289,
        "+1": 290,
        "l": 291,
        "define": 292,
        "'": 293,
        "symbol": 294,
        "',": 295,
        "d": 296,
        "short": 297,
        "'a'": 298,
        "b,": 299,
        "ints": 300,
        "abs(x": 301,
        "a)": 302,
        "abs(y": 303,
        "b)": 304,
        "d1": 305,
        "d2": 306,
        "abs(d1)": 307,
        "abs(d2)": 308,
        "min": 309,
        "c1,": 310,
        "abs(d1": 311,
        "d2)": 312,
        "minimum": 313,
        "d2,": 314,
        "casted": 315,
        "t[1],": 316,
        "(s[1]": 317,
        "s[i]": 318,
        "variable": 319,
        "inp": 320,
        "inp[0]": 321,
        "inp[1]": 322,
        "'0';": 323,
        "64": 324,
        "c": 325,
        "at": 326,
        "index": 327,
        "r": 328,
        "int;": 329,
        "ctr": 330,
        "dr": 331,
        "d[1]": 332,
        "dc": 333,
        "res[i]": 334,
        "vectors": 335,
        "VI,": 336,
        "VI2,": 337,
        "VI3,": 338,
        "VI4": 339,
        "f": 340,
        "abs(a)": 341,
        "abs(b)": 342,
        "f,": 343,
        "t[0],": 344,
        "c,": 345,
        "int(c)": 346,
        "int(d)": 347,
        "(a": 348,
        "\"RU\\n\"": 349,
        "\"RD\\n\"": 350,
        "\"LU\\n\"": 351,
        "\"LD\\n\"": 352,
        "\"U\\n\"": 353,
        "\"D\\n\"": 354,
        "\"R\\n\"": 355,
        "\"L\\n\"": 356,
        "arrays": 357,
        "ans,": 358,
        "xx": 359,
        "yy": 360,
        "abs(x)": 361,
        "abs(y)": 362,
        "xx,": 363,
        "y1-y2": 364,
        "abs(a": 365,
        "c)": 366,
        "abs(b": 367,
        "d)": 368,
        "start": 369,
        "endless": 370,
        "(b": 371,
        "d),": 372,
        "d,": 373,
        "s2": 374,
        "(s1[0]": 375,
        "s2[0])": 376,
        "(s1[1]": 377,
        "s2[1])": 378,
        "s1[0]": 379,
        "s2[0]": 380,
        "s2[1]": 381,
        "c_x": 382,
        "c_y": 383,
        "d_y": 384,
        "d_x": 385,
        ">=": 386,
        "-y": 387,
        "get": 388,
        "c_x,": 389,
        "d_y,": 390,
        "d_x,": 391,
        "open": 392,
        "file": 393,
        "\"cp.inp\"": 394,
        "reading": 395,
        "\"cp.out\"": 396,
        "writing": 397,
        "abs(s1[0]": 398,
        "abs(s1[1]": 399,
        "\"CP.inp\"": 400,
        "mode": 401,
        "using": 402,
        "stream": 403,
        "stdin": 404,
        "\"CP.out\"": 405,
        "\"w\"": 406,
        "stdout": 407,
        "s1,": 408,
        "s2[1],": 409,
        "\"R\",": 410,
        "\"L\",": 411,
        "\"U\",": 412,
        "\"D\",": 413,
        "reference": 414,
        "in": 415,
        "t1": 416,
        "t2": 417,
        "t2,": 418,
        "abs(s1": 419,
        "t1)": 420,
        "abs(s2": 421,
        "t2)": 422,
        "x[0]": 423,
        "y[0]": 424,
        "x[1]": 425,
        "y[1]": 426,
        "q,": 427,
        "v,": 428,
        "z,": 429,
        "w,": 430,
        "u,": 431,
        "R,": 432,
        "D,": 433,
        "L,": 434,
        "q": 435,
        "q[0]": 436,
        "q[1]": 437,
        "w": 438,
        "G": 439,
        "inclusive,": 440,
        "\"G\"": 441,
        "minimal": 442,
        "sum": 443,
        "times": 444,
        "current": 445,
        "destination": 446,
        "input": 447,
        "udmoves": 448,
        "current[1]": 449,
        "destination[1]": 450,
        "rlmoves": 451,
        "current[0]": 452,
        "destination[0]": 453,
        "abs(udmoves)": 454,
        "abs(rlmoves)": 455,
        "current,": 456,
        "aboslute": 457,
        "rlmoves,": 458,
        "res,": 459,
        "o,": 460,
        "p": 461,
        "o": 462,
        "multiply": 463,
        "int(s)": 464,
        "int(a)": 465,
        "char(int(a)": 466,
        "1)": 467,
        "longs": 468,
        "*": 469,
        "(": 470,
        ")": 471,
        "n1,": 472,
        "n2": 473,
        "n1": 474,
        "n2,": 475,
        "s2)": 476,
        "abs(n1": 477,
        "n2)": 478,
        "startx,": 479,
        "starty,": 480,
        "endx,": 481,
        "endy": 482,
        "startx": 483,
        "starty": 484,
        "'1'": 485,
        "endx": 486,
        "v": 487,
        "starx": 488,
        "v[i]": 489,
        "variables": 490,
        "type": 491,
        "i-th": 492,
        "d=": 493,
        "k=": 494,
        "start,": 495,
        "dest": 496,
        "letter_start": 497,
        "letter_start=start[0]": 498,
        "letter_dest": 499,
        "dest[0]": 500,
        "num_start": 501,
        "start[1]": 502,
        "num_dest": 503,
        "dest[1]": 504,
        "num_dest,": 505,
        "v1,": 506,
        "v2,": 507,
        "v1": 508,
        "a[0]": 509,
        "b[0],": 510,
        "v2": 511,
        "a[1]": 512,
        "b[1]": 513,
        "v1+v2-minimum": 514,
        "b[0]": 515,
        "abs(a[0]": 516,
        "b[0])": 517,
        "abs(a[1]": 518,
        "b[1]);": 519,
        "i1,": 520,
        "i2,": 521,
        "l1": 522,
        "l2": 523,
        "abs(i1": 524,
        "l1)": 525,
        "abs(i2": 526,
        "l2)": 527,
        "i1": 528,
        "i2": 529,
        "l1,": 530,
        "l2,": 531,
        "s1[0]-'a'": 532,
        "s1[1]-'1'": 533,
        "s2[0]-'a'": 534,
        "s2[0]-'1'": 535,
        "str": 536,
        "1000": 537,
        "str[count]": 538,
        "str[i]": 539,
        "y1=": 540,
        "subtract": 541,
        "cx,": 542,
        "cy,": 543,
        "dx,": 544,
        "dy": 545,
        "cy": 546,
        "cx": 547,
        "48": 548,
        "dx": 549,
        "xd,yd": 550,
        "xd": 551,
        "yd": 552,
        "decrementing": 553,
        "can": 554,
        "abs(xd)": 555,
        "abs(yd)": 556,
        "mx": 557,
        "s1[0]-s2[0]": 558,
        "rx": 559,
        "ry": 560,
        "xf": 561,
        "yf": 562,
        "1;": 563,
        "kol": 564,
        "==": 565,
        "kol,": 566,
        "{1,": 567,
        "1}": 568,
        "{0,": 569,
        "-1}": 570,
        "ans[i],": 571,
        "xie,": 572,
        "int(b)": 573,
        "xie": 574,
        "abs(abs(dx)": 575,
        "abs(dy))": 576,
        "abs(dx)": 577,
        "abs(dy)": 578,
        "s1[1]-s2[1]": 579,
        "s1[1]+1": 580,
        "r1,": 581,
        "r2,": 582,
        "=integers": 583,
        "=string": 584,
        "r1": 585,
        "r2": 586,
        "absolute(r1": 587,
        "r2)": 588,
        "absolute(c1": 589,
        "c2)": 590,
        "(r1": 591,
        "abs(r1": 592,
        "abs(c1": 593,
        "strings,": 594,
        "1001": 595,
        "c[0]": 596,
        "c[1]": 597,
        "d[0]": 598,
        "cnt": 599,
        "s[cnt]": 600,
        "content": 601,
        "indices": 602,
        "through": 603,
        "xs,": 604,
        "ys,": 605,
        "xt,": 606,
        "yt": 607,
        "200": 608,
        "xs": 609,
        "ys": 610,
        "xt": 611,
        "l[n]": 612,
        "yt,": 613,
        "yet": 614,
        "yes": 615,
        "l[i]": 616,
        "p1": 617,
        "p2": 618,
        "chars": 619,
        "p2[0]": 620,
        "p1[0],": 621,
        "p2[1]": 622,
        "p1[1];": 623,
        "pointers": 624,
        "(lesser": 625,
        "x)": 626,
        "x--": 627,
        "y--": 628,
        "inline": 629,
        "no": 630,
        "ch": 631,
        "digit": 632,
        "'-',": 633,
        "bitshift": 634,
        "left": 635,
        "fx,": 636,
        "fy,": 637,
        "fx": 638,
        "fy": 639,
        "an[incremented": 640,
        "ans]": 641,
        "an[i]": 642,
        "whitespace": 643,
        "getchar()": 644,
        "'-'": 645,
        "(x": 646,
        "<<": 647,
        "3)": 648,
        "an[ans]": 649,
        "inccrement": 650,
        "gap": 651,
        "characters,": 652,
        "terminated": 653,
        "'\\n',": 654,
        "discard": 655,
        "start[0]": 656,
        "end[0]": 657,
        "end[1]": 658,
        "'R',": 659,
        "'L',": 660,
        "'D',": 661,
        "'U',": 662,
        "hi2": 663,
        "hi2,": 664,
        "abs(x1": 665,
        "abs(hi2": 666,
        "hi2>": 667,
        "b[1])": 668,
        "b[1],": 669,
        "then": 670,
        "U,": 671,
        "ex": 672,
        "ey": 673,
        "flag1": 674,
        "flag2": 675,
        "fabs(ex": 676,
        "sx)": 677,
        "fabs(ey": 678,
        "sy)": 679,
        "flag1,": 680,
        "ex-sx": 681,
        "ey-sy": 682,
        "fabs": 683,
        "argument": 684,
        "s2,": 685,
        "t1,": 686,
        "abs(m)": 687,
        "abs(n)": 688,
        "on": 689,
        "every": 690,
        "iteration": 691,
        "diag": 692,
        "diag2": 693,
        "i1-l1": 694,
        "getint": 695,
        "'9'": 696,
        "b[0]-a[0],": 697,
        "excluisve,": 698,
        "absoluve": 699,
        "integet": 700,
        "b[0]-a[0]": 701,
        "b[1]-a[1]": 702,
        "truthy": 703,
        "'0',": 704,
        "max(fabs(x1": 705,
        "x2),": 706,
        "fabs(y1": 707,
        "y2))": 708,
        "ans--": 709,
        "more": 710,
        "reduce": 711,
        "lessen": 712,
        "fastIo": 713,
        "invoke": 714,
        "MAT": 715,
        "j": 716,
        "MAT[i][j]": 717,
        "LC,": 718,
        "RC,": 719,
        "TR": 720,
        "BR": 721,
        "LC": 722,
        "RC": 723,
        "boolean": 724,
        "first": 725,
        "false": 726,
        "'*'": 727,
        "false,": 728,
        "min_i,": 729,
        "min_j,": 730,
        "max_i,": 731,
        "max_j,": 732,
        "min_i": 733,
        "51,": 734,
        "min_j": 735,
        "51": 736,
        "55": 737,
        "a[i][j]": 738,
        "max_i": 739,
        "max_j": 740,
        "integers,": 741,
        "z": 742,
        "55,": 743,
        "check": 744,
        "mn,": 745,
        "mx,": 746,
        "mn": 747,
        "888888,": 748,
        "s[i][j]": 749,
        "check[i]": 750,
        "m1": 751,
        "m2": 752,
        "444": 753,
        "ar": 754,
        "uper,": 755,
        "lowar,": 756,
        "right": 757,
        "ck": 758,
        "con": 759,
        "ar[i][j]": 760,
        "uper": 761,
        "lowar": 762,
        "left,": 763,
        "'*''": 764,
        "\"*\"": 765,
        "vec[j": 766,
        "m]": 767,
        "h1": 768,
        "stop": 769,
        "h2": 770,
        "until": 771,
        "<=": 772,
        "vec[q": 773,
        "yy,": 774,
        "2e9,": 775,
        "2e9": 776,
        "'*',": 777,
        "66": 778,
        "6666,": 779,
        "c[i][j]": 780,
        "finishx,": 781,
        "finishy,": 782,
        "startx=55,": 783,
        "starty=55": 784,
        "st": 785,
        "st[i][j]": 786,
        "finishx": 787,
        "finishy": 788,
        "90": 789,
        "hangx": 790,
        "4409": 791,
        "coty": 792,
        "4999": 793,
        "tt": 794,
        "xaydung": 795,
        "hang,": 796,
        "cot": 797,
        "void": 798,
        "hang": 799,
        "bao1": 800,
        "bao2": 801,
        "demx": 802,
        "demy": 803,
        "maxx": 804,
        "f[x][col]": 805,
        "f[hang][y]": 806,
        "coty[0]": 807,
        "coty[tt-1]": 808,
        "f[i][cot]": 809,
        "hangx[0]": 810,
        "hangx[tt-1]": 811,
        "f[hang][i]": 812,
        "'.'": 813,
        "f[i][j]": 814,
        "hangx[tt]": 815,
        "coty[tt]": 816,
        "sort": 817,
        "chodoi": 818,
        "\".\"": 819,
        "f[x][cot]": 820,
        "coty[tt": 821,
        "1]": 822,
        "hangx[tt": 823,
        "call": 824,
        "xaydung(i,": 825,
        "j)": 826,
        "100,": 827,
        "-100,": 828,
        "-100": 829,
        "A": 830,
        "A[i][j]": 831,
        "q[i][j]": 832,
        "u": 833,
        "true,": 834,
        "xmin,": 835,
        "xmax,": 836,
        "ymin,": 837,
        "ymax,": 838,
        "xmin": 839,
        "200,": 840,
        "xmax": 841,
        "ymin": 842,
        "ymax": 843,
        "p,": 844,
        "mat": 845,
        "mat[i][j]": 846,
        "e": 847,
        "counting": 848,
        "down": 849,
        "50,": 850,
        "50": 851,
        "substring": 852,
        "r,": 853,
        "arr": 854,
        "arr[i][j]": 855,
        "up,": 856,
        "down,": 857,
        "up": 858,
        "mni,": 859,
        "mnj,": 860,
        "mxi": 861,
        "mxj": 862,
        "mni": 863,
        "INT_MAX,": 864,
        "mnj": 865,
        "miny,": 866,
        "maxy,": 867,
        "minx,": 868,
        "maxx,": 869,
        "miny": 870,
        "maxy": 871,
        "minx": 872,
        "f[i][r]": 873,
        "ch,": 874,
        "ch1,": 875,
        "ch2,": 876,
        "ch3": 877,
        "ch4": 878,
        "ch1": 879,
        "1001,": 880,
        "ch2": 881,
        "x0": 882,
        "y0": 883,
        "0;": 884,
        "s[j]": 885,
        "d[2]": 886,
        "d[3]": 887,
        "d[0],": 888,
        "d[1],": 889,
        "d[2],": 890,
        "d[3],": 891,
        "go": 892,
        "jump": 893,
        "point": 894,
        "=n": 895,
        "label": 896,
        "lx": 897,
        "ly": 898,
        "constant": 899,
        "MOD": 900,
        "1000000007": 901,
        "INF": 902,
        "INF2": 903,
        "1000000007LL": 904,
        "double": 905,
        "EPS": 906,
        "1e-9": 907,
        "min,": 908,
        "minj": 909,
        "maxi,": 910,
        "maxj": 911,
        "-INF": 912,
        "mini": 913,
        "maxi": 914,
        "a1,": 915,
        "a2,": 916,
        "a3": 917,
        "a4": 918,
        "a1": 919,
        "a2": 920,
        "a3,": 921,
        "a4,": 922,
        "lett(n)": 923,
        "errl": 924,
        "lett[i]": 925,
        "err": 926,
        "lett[i][j]": 927,
        "\"": 928,
        "lett[j][i]": 929,
        "alt,": 930,
        "ust,": 931,
        "sag,": 932,
        "sol,": 933,
        "alt": 934,
        "-1000,": 935,
        "ust": 936,
        "1000,": 937,
        "sag": 938,
        "sol": 939,
        "incluisive,": 940,
        "60": 941,
        "mini,": 942,
        "500,": 943,
        "500": 944,
        "endj": 945,
        "ch[i][j]": 946,
        "incrementing": 947,
        "endi": 948,
        "99999999": 949,
        "101": 950,
        "lu,": 951,
        "ru,": 952,
        "ld,": 953,
        "rd,": 954,
        "lu": 955,
        "100000": 956,
        "ld": 957,
        "ru": 958,
        "rd": 959,
        "hi,": 960,
        "hj,": 961,
        "li,": 962,
        "lj": 963,
        "hi": 964,
        "hj": 965,
        "li": 966,
        "flag": 967,
        "lj,": 968,
        "gg": 969,
        "char,": 970,
        "0x3f,": 971,
        "0x3f": 972,
        "m3": 973,
        "m4": 974,
        "map": 975,
        "map[i][j]": 976,
        "map[j][i]": 977,
        "booleans": 978,
        "g": 979,
        "52": 980,
        "g,": 981,
        "X": 982,
        "Y": 983,
        "999999": 984,
        "ok": 985,
        "999,": 986,
        "999": 987,
        "mini1,": 988,
        "mini2,": 989,
        "maxi1,": 990,
        "maxi2,": 991,
        "mini1": 992,
        "60,": 993,
        "mini2": 994,
        "maxi1": 995,
        "maxi2": 996,
        "imx,": 997,
        "imn,": 998,
        "jmx": 999,
        "jmn": 1000,
        "imn": 1001,
        "1222": 1002,
        "imx": 1003,
        "s[k][p]": 1004,
        "-2019,": 1005,
        "-2019": 1006,
        "a[j][i]": 1007,
        "MX": 1008,
        "1e4,": 1009,
        "1e4": 1010,
        "continue": 1011,
        "!s": 1012,
        "e,": 1013,
        "arr1": 1014,
        "arr1[k][l]": 1015,
        "arr1[i][j]": 1016,
        "imin,": 1017,
        "imax,": 1018,
        "jmin": 1019,
        "jmax": 1020,
        "imin": 1021,
        "imex": 1022,
        "str[i][j]": 1023,
        "imax": 1024,
        "jmin,": 1025,
        "jmax,": 1026,
        "max,": 1027,
        "row_min,": 1028,
        "row_max": 1029,
        "row_min": 1030,
        "row_max,": 1031,
        "right,": 1032,
        "c[2]": 1033,
        "c[3]": 1034,
        "9": 1035,
        "11": 1036,
        "fill": 1037,
        "s[(i": 1038,
        "%": 1039,
        "r[(i": 1040,
        "r[i]": 1041,
        "a[(i": 1042,
        "j]": 1043,
        "i=": 1044,
        "arr[j][i]": 1045,
        "34298343": 1046,
        "2193809": 1047,
        "data": 1048,
        "initialized": 1049,
        "data[i]": 1050,
        "data[i][j]": 1051,
        "m1,": 1052,
        "craete": 1053,
        "row": 1054,
        "col": 1055,
        "graph": 1056,
        "start_x": 1057,
        "start_y": 1058,
        "end_x": 1059,
        "end_y": 1060,
        "graph[i][j]": 1061,
        "row,": 1062,
        "Min_X": 1063,
        "Min_Y": 1064,
        "Max_X": 1065,
        "Max_Y,": 1066,
        "Max_Y": 1067,
        "ch[i]": 1068,
        "q[i]": 1069,
        "**sheet": 1070,
        "*[n]": 1071,
        "minRow": 1072,
        "minCol": 1073,
        "maxRow": 1074,
        "maxCol": 1075,
        "sheet[i][j]": 1076,
        "minRow,": 1077,
        "maxRow,": 1078,
        "minCol,": 1079,
        "maxCol,": 1080,
        "pointer": 1081,
        "sheet": 1082,
        "sheet[i]": 1083,
        "**shap": 1084,
        "shap[i]": 1085,
        "newchar[m]": 1086,
        "rows,": 1087,
        "colums,": 1088,
        "rowe": 1089,
        "colume": 1090,
        "user": 1091,
        "shap[i][j]": 1092,
        "loop,": 1093,
        "change": 1094,
        "rows": 1095,
        "name": 1096,
        "colums": 1097,
        "standard": 1098,
        "output": 1099,
        "N": 1100,
        "123": 1101,
        "1e9": 1102,
        "KIOT_camp,": 1103,
        "x3,": 1104,
        "y3,": 1105,
        "x4,": 1106,
        "y4": 1107,
        "exit": 1108,
        "KIOT_camp": 1109,
        "y3": 1110,
        "x3": 1111,
        "x4": 1112,
        "n,m=int": 1113,
        "s=vector": 1114,
        "checktop": 1115,
        "(no": 1116,
        "args,": 1117,
        "int)": 1118,
        "i=0": 1119,
        "j=0": 1120,
        "checkbottom": 1121,
        "i=n-1": 1122,
        "checkleft": 1123,
        "checkright": 1124,
        "i=m-1": 1125,
        "resize": 1126,
        "left=checkleft()": 1127,
        "right=checkright()": 1128,
        "top=checktop()": 1129,
        "bottom=checkbottom()": 1130,
        "i=top": 1131,
        "bottom": 1132,
        "starting": 1133,
        "len": 1134,
        "right-left+1": 1135,
        "n-1": 1136,
        "m-1": 1137,
        "flag=0": 1138,
        "i=u": 1139,
        "j=l": 1140,
        "'#'": 1141,
        "inclusive;": 1142,
        "modulo": 1143,
        "\"#\"": 1144,
        "odd": 1145,
        "where": 1146,
        "a1[i]": 1147,
        "a2[i]": 1148,
        "a3[i]": 1149,
        "a1[m]": 1150,
        "'\\0'": 1151,
        "a2[m]": 1152,
        "a3[m]": 1153,
        "a2[m": 1154,
        "a3[0]": 1155,
        "bitwise-and": 1156,
        "(i": 1157,
        "multiple": 1158,
        "even": 1159,
        "\"#\\n\"": 1160,
        "\".\\n\"": 1161,
        "const": 1162,
        "maxn": 1163,
        "200000": 1164,
        "zw": 1165,
        "make": 1166,
        "pair": 1167,
        "30": 1168,
        "ss,": 1169,
        "sss": 1170,
        "&": 1171,
        "falsy,": 1172,
        "!f": 1173,
        "2)": 1174,
        "temp": 1175,
        "uneven": 1176,
        "=1": 1177,
        ".": 1178,
        "adding": 1179,
        "even[i]": 1180,
        "further": 1181,
        "#": 1182,
        "1e5": 1183,
        "nn": 1184,
        "305": 1185,
        "print('#',": 1186,
        "m)": 1187,
        "print('.',": 1188,
        "method": 1189,
        "different": 1190,
        "flg": 1191,
        "=0,": 1192,
        "odd,": 1193,
        "even,": 1194,
        "lie": 1195,
        "skip": 1196,
        "rest": 1197,
        "filled": 1198,
        "changing": 1199,
        "increasing": 1200,
        "setting": 1201,
        "a[i][0]": 1202,
        "a[i][m": 1203,
        "printing": 1204,
        "cnt,": 1205,
        "sum,": 1206,
        "rem,": 1207,
        "rem": 1208,
        "v3": 1209,
        "make_pair": 1210,
        "long,": 1211,
        "se": 1212,
        "h,": 1213,
        "mod": 1214,
        "pritn": 1215,
        "isn't": 1216,
        "reset": 1217,
        "i=1": 1218,
        "m=": 1219,
        "a[51][51]": 1220,
        "i=i+2": 1221,
        "exclusivem": 1222,
        "i+1": 1223,
        "a[i][j]=.": 1224,
        "exclusive;": 1225,
        "endline": 1226,
        "fastio": 1227,
        "value)": 1228,
        "fastio()": 1229,
        "n,m=long": 1230,
        "(i+1)": 1231,
        "h": 1232,
        "120": 1233,
        "0)": 1234,
        "2000010": 1235,
        "taking": 1236,
        "mul": 1237,
        "1LL": 1238,
        "?": 1239,
        ":": 1240,
        "10000": 1241,
        "((i": 1242,
        "'#')": 1243,
        ">>": 1244,
        "isitright": 1245,
        "j=1": 1246,
        "s=0": 1247,
        "a-1": 1248,
        "v=0": 1249,
        "b-1": 1250,
        "n/2,": 1251,
        "=1,": 1252,
        "l=0": 1253,
        "k=1": 1254,
        "k=2": 1255,
        "1.exclusive,": 1256,
        "bool": 1257,
        "col-1": 1258,
        "=0": 1259,
        "j=m": 1260,
        "20": 1261,
        "[100][100]": 1262,
        "a[i][1]": 1263,
        "but": 1264,
        "last": 1265,
        "equals": 1266,
        "power": 1267,
        "(get": 1268,
        "a,b,modi,": 1269,
        "res=1": 1270,
        "res=(res*a)": 1271,
        "modi": 1272,
        "divide": 1273,
        "a=(a*a)": 1274,
        "dirx=array": 1275,
        "int,": 1276,
        "-1,-1,-1,0,0,1,1,1": 1277,
        "diry=array": 1278,
        "-1,0,1,-1,1,-1,0,1": 1279,
        "dx=array": 1280,
        "-1,1,0,0": 1281,
        "dy=array": 1282,
        "0,0,-1,1": 1283,
        "k,x,y=int,": 1284,
        "sum,ans,cur=0": 1285,
        "n,m,r,c=int": 1286,
        "a=array": 1287,
        "1005": 1288,
        "s,t,r=string": 1289,
        "c=0": 1290,
        "decremented": 1291,
        "(c": 1292,
        "column": 1293,
        "s3": 1294,
        "columns": 1295,
        "**p": 1296,
        "*[n": 1297,
        "assigning": 1298,
        "int[m": 1299,
        "p[i]": 1300,
        "TESTS": 1301,
        "a[n][m]": 1302,
        "j=m-1": 1303,
        "a[n][m]=#": 1304,
        "integer.": 1305,
        "ma": 1306,
        "\"#\",": 1307,
        "iterate": 1308,
        "check,": 1309,
        "lol": 1310,
        "flag=1": 1311,
        "\".\",": 1312,
        "rtr": 1313,
        "c[j]": 1314,
        "c[m]": 1315,
        "4=0": 1316,
        "num": 1317,
        "o=true": 1318,
        "o=false": 1319,
        "a[i][m-1]": 1320,
        "n,m,i,j=int": 1321,
        "part": 1322,
        "c=1": 1323,
        "flag=false": 1324,
        "flag=true": 1325,
        "mxn": 1326,
        "[101][101]": 1327,
        "(j": 1328,
        "m),": 1329,
        "(cnt": 1330,
        "1),": 1331,
        "sizeof(a)": 1332,
        "bytes": 1333,
        "i/2": 1334,
        "event": 1335,
        "c[i][m": 1336,
        "4;": 1337,
        "c[i][0]": 1338,
        "a[i][m]": 1339,
        "a[55]": 1340,
        "m-1,": 1341,
        "j=m-1,": 1342,
        "j=0,": 1343,
        "check=1": 1344,
        "check=0": 1345,
        "statement": 1346,
        "mk": 1347,
        "mx[x][y]": 1348,
        "mk[x": 1349,
        "1][y]": 1350,
        "mk[i][j]": 1351,
        "falsy": 1352,
        "which": 1353,
        "takes": 1354,
        "i*i": 1355,
        "evenly": 1356,
        "divisible": 1357,
        "1000005": 1358,
        "c(i)": 1359,
        "g[l": 1360,
        "i]": 1361,
        "c(i),": 1362,
        "g[i]": 1363,
        "intergers": 1364,
        "g[i],": 1365,
        "YES": 1366,
        "NO": 1367,
        "argument,": 1368,
        "g[l+1+i]": 1369,
        "\"YES\\n\"": 1370,
        "\"NO\\n\"": 1371,
        "SZ": 1372,
        "1003": 1373,
        "isprime": 1374,
        "sieve": 1375,
        "isprime,": 1376,
        "isprime[1]": 1377,
        "isprime[0]": 1378,
        "isprime[i]": 1379,
        "iprime[j]": 1380,
        "primes": 1381,
        "primes[i]": 1382,
        "primes[i": 1383,
        "isprime[num]": 1384,
        "isPrime": 1385,
        "ji": 1386,
        "prime": 1387,
        "isPrime[0]": 1388,
        "isPrime[1]": 1389,
        "isPrime[i]": 1390,
        "p[ji]": 1391,
        "isPrime[j]": 1392,
        "isPrime[j+1]": 1393,
        "p[i+1]": 1394,
        "isPrime[j": 1395,
        "p[i": 1396,
        "ifprime": 1397,
        "squared": 1398,
        "divides": 1399,
        "without": 1400,
        "remainder": 1401,
        "good": 1402,
        "3000": 1403,
        "ifprime(i)": 1404,
        "good[i": 1405,
        "good[i]": 1406,
        "\"YES\"": 1407,
        "\"NO\"": 1408,
        "good[i+last+1]": 1409,
        "1005,": 1410,
        "prime[1]": 1411,
        "falst": 1412,
        "sq": 1413,
        "ceil": 1414,
        "square": 1415,
        "root": 1416,
        "1005+0.0": 1417,
        "prime[j]": 1418,
        "prime[i]": 1419,
        "prime[i": 1420,
        "prn": 1421,
        "pr[i]": 1422,
        "j*j": 1423,
        "next": 1424,
        "pr[j]": 1425,
        "pr[k]": 1426,
        "next[j]": 1427,
        "pr[i": 1428,
        "k]": 1429,
        "next[x]": 1430,
        "primos": 1431,
        "esPrimo": 1432,
        "primo": 1433,
        "esPrimo[i]": 1434,
        "primos[i": 1435,
        "primos[i]": 1436,
        "esPrimo[primos[i": 1437,
        "1],": 1438,
        "n+1,": 1439,
        "primos[i+1]": 1440,
        "1111": 1441,
        "plen": 1442,
        "N,": 1443,
        "p[increment": 1444,
        "plen]": 1445,
        "a[j]": 1446,
        "p[j]": 1447,
        "p[j+1]": 1448,
        "p[plen]": 1449,
        "incresing": 1450,
        "p[j": 1451,
        "num[0]": 1452,
        "num[1]": 1453,
        "num[i]": 1454,
        "num[j]": 1455,
        "2]": 1456,
        "num[sum]": 1457,
        "can[i]": 1458,
        "can[last+i+1]": 1459,
        "can[last": 1460,
        "m[primes[i]": 1461,
        "primes[i-1]": 1462,
        "bitset": 1463,
        "was": 1464,
        "100010": 1465,
        "bits": 1466,
        "was[0]": 1467,
        "was[1]": 1468,
        "was[i]": 1469,
        "m[i]": 1470,
        "was[j]": 1471,
        "bit": 1472,
        "sieve(n)": 1473,
        "sqrt(a)": 1474,
        "fase": 1475,
        "a^2": 1476,
        "divided": 1477,
        "defined,": 1478,
        "1010": 1479,
        "visit": 1480,
        "visit[i]": 1481,
        "p[++*p]": 1482,
        "visit[j]": 1483,
        "*p": 1484,
        "(t": 1485,
        "visit[t]": 1486,
        "\"YES\",": 1487,
        "MAXN": 1488,
        "pd": 1489,
        "find_prime": 1490,
        "pd[0]": 1491,
        "pd[1]": 1492,
        "pd[i]": 1493,
        "[num]": 1494,
        "pd[i": 1495,
        "prime[j]]": 1496,
        "find": 1497,
        "mid": 1498,
        "(l": 1499,
        "r)": 1500,
        "prime[mid]": 1501,
        "mz": 1502,
        "pos": 1503,
        "pd[t]": 1504,
        "find(t)": 1505,
        "prime[pos": 1506,
        "prime[pos]": 1507,
        "prime[MAXN],": 1508,
        "prime[incremented": 1509,
        "num]": 1510,
        "MAXN,": 1511,
        "pd[i*prime[j]]": 1512,
        "pos,": 1513,
        "flag,": 1514,
        "(square": 1515,
        "tmp,": 1516,
        "tmp": 1517,
        "ju": 1518,
        "insert": 1519,
        "iterator": 1520,
        "it": 1521,
        "beginning": 1522,
        "ju,": 1523,
        "{1,1}": 1524,
        "2002": 1525,
        "{0}": 1526,
        "b[p[i]": 1527,
        "b[i]": 1528,
        "a[i],": 1529,
        "puts": 1530,
        "isp": 1531,
        "isprime(i)": 1532,
        "can(s)": 1533,
        "Primes": 1534,
        "Primes[i]": 1535,
        "Primes[0]": 1536,
        "Primes[1]": 1537,
        "Primes[i": 1538,
        "v[j]": 1539,
        "v[j": 1540,
        "20000": 1541,
        "[N": 1542,
        "5]": 1543,
        "fin": 1544,
        "30000": 1545,
        "seive": 1546,
        "f[0]": 1547,
        "f[1]": 1548,
        "f[i]": 1549,
        "exists": 1550,
        "f[j]": 1551,
        "prevI": 1552,
        "2000": 1553,
        "defined": 1554,
        "prime[c]": 1555,
        "memset": 1556,
        "fin,": 1557,
        "test": 1558,
        "fin[test]": 1559,
        "fin[i]": 1560,
        "fin[i-1]": 1561,
        "fin[num]": 1562,
        "prevI,": 1563,
        "prime[0]": 1564,
        "c]": 1565,
        "f[test],": 1566,
        "num,": 1567,
        "File": 1568,
        "output.txt": 1569,
        "input.txt": 1570,
        "fast": 1571,
        "pi": 1572,
        "3.1415926": 1573,
        "1e3": 1574,
        "solve": 1575,
        "arr[x]": 1576,
        "arr[j]": 1577,
        "arr[j": 1578,
        "address": 1579,
        "is_prime": 1580,
        "mark": 1581,
        "mark[i]": 1582,
        "mark[j]": 1583,
        "sqrt(n)": 1584,
        "nextPrime": 1585,
        "isPrime(ans)": 1586,
        "noldbach": 1587,
        "isPrime(i)": 1588,
        "nextPrimeNum": 1589,
        "nextPrime(i)": 1590,
        "noldbach(i)": 1591,
        "error": 1592,
        "otherwise,": 1593,
        "arrar": 1594,
        "check(i)": 1595,
        "(good[i]": 1596,
        "true)": 1597,
        "pri": 1598,
        "168": 1599,
        "a[temp]": 1600,
        "a[j": 1601,
        "increments": 1602,
        "pri(i)": 1603,
        "1000+10,": 1604,
        "1000+10": 1605,
        "num[i],": 1606,
        "prime[increment": 1607,
        "prime[j": 1608,
        "*i": 1609,
        "cin": 1610,
        "!num[i]": 1611,
        "4000": 1612,
        "4000,": 1613,
        "isprime[j]": 1614,
        "binary_search": 1615,
        "prime,": 1616,
        "p[0]": 1617,
        "p[1]": 1618,
        "1009": 1619,
        "ok[i": 1620,
        "incremement": 1621,
        "prime[i-1]+prime[i-2]+1": 1622,
        "num[sum],": 1623,
        "zero": 1624,
        "!num[sum]": 1625,
        "sievesize": 1626,
        "bs": 1627,
        "bs[0]": 1628,
        "bs[1]": 1629,
        "bs[i]": 1630,
        "bs[j]": 1631,
        "primes[j]": 1632,
        "primes[j+1]": 1633,
        "primes[i],": 1634,
        "600,": 1635,
        "putprime": 1636,
        "600": 1637,
        "primes[increment": 1638,
        "point]": 1639,
        "isNoldPrime": 1640,
        "primes[i]*2": 1641,
        "primes[i+1]": 1642,
        "primes[point]": 1643,
        "isprime(x)": 1644,
        "returned": 1645,
        "peimrs[i]": 1646,
        "<=x": 1647,
        "isNoldPrime(i)": 1648,
        "judge": 1649,
        "a[u]": 1650,
        "ii": 1651,
        "a[s]": 1652,
        "ii,": 1653,
        "a[r": 1654,
        "a[r]": 1655,
        "sqrt": 1656,
        "tp": 1657,
        "cm": 1658,
        "lt": 1659,
        "tp(let": 1660,
        "integer)": 1661,
        "has": 1662,
        "cm(let": 1663,
        "tp(i)": 1664,
        "assigned": 1665,
        "cm(p)": 1666,
        "YES,": 1667,
        "character,": 1668,
        "flush": 1669,
        "condition": 1670,
        "met": 1671,
        "so": 1672,
        "NO,": 1673,
        "0}": 1674,
        "2002,": 1675,
        "pp,": 1676,
        "1111,": 1677,
        "pp": 1678,
        "2222,": 1679,
        "2222": 1680,
        "pm": 1681,
        "modulus": 1682,
        "pm2": 1683,
        "prime[i],": 1684,
        "prime[j],": 1685,
        "prime[i+j+1],": 1686,
        "pp[i+j+1]": 1687,
        "cnt[i]": 1688,
        "cnt[i-1]": 1689,
        "pp[i]": 1690,
        "cnt[n]": 1691,
        "newline\"": 1692,
        "pv": 1693,
        "pv[i]": 1694,
        "pv[i": 1695,
        "ok(i": 1696,
        "oolean": 1697,
        "pv[i+1]": 1698,
        "lt,": 1699,
        "ok[i]": 1700,
        "ok[lt": 1701,
        "ok[lt+i+1]": 1702,
        "os": 1703,
        "prime[num]": 1704,
        "find_prime()": 1705,
        "mz(prime[i])": 1706,
        "100001": 1707,
        "check(s)": 1708,
        "1000010": 1709,
        "phi": 1710,
        "primesize": 1711,
        "register": 1712,
        "isdigit": 1713,
        "isprime[r]": 1714,
        "getlist": 1715,
        "listsize,": 1716,
        "listsize": 1717,
        "primesize]": 1718,
        "isprime[i*prime[j]]": 1719,
        "read,": 1720,
        "pre": 1721,
        "init": 1722,
        "prime[cnt]": 1723,
        "check(t),": 1724,
        "pre[t]": 1725,
        "pre[i]": 1726,
        "+=": 1727,
        "pre[i": 1728,
        "pre[n]": 1729,
        "check(t)": 1730,
        "get_prime": 1731,
        "sizeof(x)": 1732,
        "*it": 1733,
        "x[q]": 1734,
        "get_prime()": 1735,
        "x[i]": 1736,
        "instance": 1737,
        "w=": 1738,
        "prime[": 1739,
        "]": 1740,
        "euql": 1741,
        "a[sum]": 1742,
        "prime[k]": 1743,
        "86": 1744,
        "steps": 1745,
        "cnd": 1746,
        "pre,": 1747,
        "cnt]": 1748,
        "prime[i-1]+1": 1749,
        "pre[i-1]": 1750,
        "87": 1751,
        "87,": 1752,
        "g[": 1753,
        "rounded": 1754,
        "v[i": 1755,
        "check(v[i]": 1756,
        "book": 1757,
        "is_p": 1758,
        "is_p[i]": 1759,
        "is_p[0]": 1760,
        "is_p[1]": 1761,
        "is_p[j]": 1762,
        "p[i+1]+1": 1763,
        "is_p[p[i]": 1764,
        "book[p[i]": 1765,
        "book[i]": 1766,
        "(power((x": 1767,
        "m))": 1768,
        "power((x": 1769,
        "Seive": 1770,
        "n+1,true": 1771,
        "is_prime[0]": 1772,
        "is_prime[1]": 1773,
        "is_prime[i]": 1774,
        "is_prime[j]": 1775,
        "prime[j+1]": 1776,
        "CalculatePrimes": 1777,
        "&primes": 1778,
        "limit": 1779,
        "CalculatePrimes(primes,": 1780,
        "limit)": 1781,
        "sums": 1782,
        "primes,": 1783,
        "sums[i]": 1784,
        "limit,": 1785,
        "primes.size()": 1786,
        "test,": 1787,
        "primes.size(),": 1788,
        "sums.push_back(primes[i]": 1789,
        "sums.size()": 1790,
        "find(primes.begin(),": 1791,
        "primes.end(),": 1792,
        "sums[i])": 1793,
        "inf": 1794,
        "1e18": 1795,
        "is(i)": 1796,
        "vec[i": 1797,
        "is(vec[i]": 1798,
        "x=int": 1799,
        "y=x/2": 1800,
        "z=0": 1801,
        "x-2*y": 1802,
        "y=0": 1803,
        "y=1": 1804,
        "x/2": 1805,
        "abs": 1806,
        "cont": 1807,
        "star": 1808,
        "display": 1809,
        "tmp/2": 1810,
        "(tmp": 1811,
        "i)": 1812,
        "dCount,": 1813,
        "starCount": 1814,
        "dCount": 1815,
        "decreasing": 1816,
        "(2": 1817,
        "mf": 1818,
        "tr": 1819,
        "(n": 1820,
        "read(i,": 1821,
        "max_n": 1822,
        "show": 1823,
        "float": 1824,
        "ceil(n": 1825,
        "draw": 1826,
        "202": 1827,
        "201": 1828,
        "\"n%2==0||n": 1829,
        "201\"": 1830,
        "draw[i][k]": 1831,
        "Mid": 1832,
        "DiamondCount": 1833,
        "draw[i][Mid": 1834,
        "draw[i]": 1835,
        "abs(mid": 1836,
        "i),": 1837,
        "(abs(mid": 1838,
        "i))),": 1839,
        "c=array": 1840,
        "110": 1841,
        "n,l,r=int": 1842,
        "c[i][j]='*'": 1843,
        "n/2+1": 1844,
        "r<=n": 1845,
        "l>=1": 1846,
        "c[i][j]='D'": 1847,
        "r>=l": 1848,
        "keep": 1849,
        "it,": 1850,
        "going": 1851,
        "further,": 1852,
        "doubles": 1853,
        "301": 1854,
        "\"*\",": 1855,
        "(p": 1856,
        "abs(i)": 1857,
        "abs(j)": 1858,
        "abs(i": 1859,
        "abs(j": 1860,
        "numD": 1861,
        "numStar": 1862,
        "kkk": 1863,
        "pair<int,": 1864,
        "int>": 1865,
        "(a.first": 1866,
        "b.first),": 1867,
        "(a.second": 1868,
        "b.second)": 1869,
        "b.first)": 1870,
        "inc": 1871,
        "(pointer": 1872,
        "k)": 1873,
        "(abs((n": 1874,
        "p)": 1875,
        "iskom": 1876,
        "k1": 1877,
        "dem": 1878,
        "dem)": 1879,
        "dem,": 1880,
        "MD": 1881,
        "1000000009": 1882,
        "2e3": 1883,
        "33": 1884,
        "2))": 1885,
        "n=int": 1886,
        "s=array": 1887,
        "n/2": 1888,
        "n/2-i": 1889,
        "s[i][j]='D'": 1890,
        "s[i][j]='*'": 1891,
        "j=n/2+1": 1892,
        "s[i][n-j-1]": 1893,
        "i=n/2+1": 1894,
        "s[n-i-1][j]": 1895,
        "sized": 1896,
        "matrix": 1897,
        "arr[i][k]": 1898,
        "/2": 1899,
        "n/2-1": 1900,
        "write": 1901,
        "star,": 1902,
        "M,": 1903,
        "K,": 1904,
        "H,": 1905,
        "W,": 1906,
        "1000x1000": 1907,
        "a[k][j]": 1908,
        "a[n/2][i]": 1909,
        "forij": 1910,
        "(1": 1911,
        "n)": 1912,
        "key": 1913,
        "modpow": 1914,
        "x,n,m,": 1915,
        "long)": 1916,
        "u=modpow(x,n/2,m)": 1917,
        "u=(u*u)": 1918,
        "u=(u*x)": 1919,
        "n,k=int,": 1920,
        "tt=0": 1921,
        "e=0": 1922,
        "p=0": 1923,
        "(n-k)/2": 1924,
        "tt=1": 1925,
        "n,count": 1926,
        "minus": 1927,
        "(mid": 1928,
        "cnt)": 1929,
        "table": 1930,
        "[MAXN][MAXN]": 1931,
        "half": 1932,
        "table[i][j]": 1933,
        "exlclusive": 1934,
        "(half": 1935,
        "i)),": 1936,
        "table[half][i]": 1937,
        "table[u][j]": 1938,
        "1))": 1939,
        "102": 1940,
        "a[n": 1941,
        "1][j]": 1942,
        "Size": 1943,
        "(Size": 1944,
        "nothing)": 1945,
        "abs(i-n/2)+abs(j-n/2)": 1946,
        "A(n)": 1947,
        "printDiamond": 1948,
        "diamond": 1949,
        "dotNum": 1950,
        "diamond)": 1951,
        "x[a][n": 1952,
        "b]": 1953,
        "x[i][j]": 1954,
        "(n/2": 1955,
        "plus": 1956,
        "print(i,": 1957,
        "a[i][p": 1958,
        "a[i][k]": 1959,
        "between": 1960,
        "m-i": 1961,
        "m+i": 1962,
        "abort": 1963,
        "program": 1964,
        "md": 1965,
        "endl": 1966,
        "sz,": 1967,
        "s3,": 1968,
        "s4,": 1969,
        "s5,": 1970,
        "s6": 1971,
        "10,": 1972,
        "ar2": 1973,
        "brainfuck": 1974,
        "=int": 1975,
        "(n-i*2-1)/2,": 1976,
        "i*2+1,": 1977,
        "(n-i2*2-1)/2,": 1978,
        "i2*2+1,": 1979,
        "icrement": 1980,
        "stars": 1981,
        "ds": 1982,
        "mp": 1983,
        "q[i][f]": 1984,
        "\"\",": 1985,
        "a[mid]": 1986,
        "mid,": 1987,
        "mid),": 1988,
        "(n-(2*i+1))/2": 1989,
        "x=0": 1990,
        "2*i+1": 1991,
        "o=0": 1992,
        "i=n-2-1": 1993,
        "(k": 1994,
        "(abs(m": 1995,
        "v)": 1996,
        "(m": 1997,
        "i+2": 1998,
        "n-i/2": 1999,
        "n-i/2,": 2000,
        "i=n-2": 2001,
        "n+i/2": 2002,
        "t)": 2003,
        "\\n": 2004,
        "i,j,n": 2005,
        "2.0)": 2006,
        "accepts": 2007,
        "modpow(x,": 2008,
        "(u": 2009,
        "u)": 2010,
        "x-i": 2011,
        "x+i": 2012,
        "od": 2013,
        "boost": 2014,
        "times,": 2015,
        "Vector": 2016,
        "Vector[k]": 2017,
        "Vector[m]": 2018,
        "star_count": 2019,
        "d_count": 2020,
        "integer,": 2021,
        "back": 2022,
        "looping": 2023,
        "nprint": 2024,
        "0x3f3f3f3f": 2025,
        "n),": 2026,
        "nd": 2027,
        "ns": 2028,
        "nd)": 2029,
        "out": 2030,
        "arr[i": 2031,
        "arr[i][j": 2032,
        "out[i][j]": 2033,
        "t3": 2034,
        "b[i][j]": 2035,
        "b[0][0]": 2036,
        "(b[0][0]": 2037,
        "b[0][1]": 2038,
        "(b[0][1]": 2039,
        "b[1][0]": 2040,
        "(b[1][0]": 2041,
        "b[0][2]": 2042,
        "(b[0][2]": 2043,
        "b[1][1]": 2044,
        "(b[1][1]": 2045,
        "b[1][2]": 2046,
        "(b[1][2]": 2047,
        "b[2][0]": 2048,
        "(b[2][0]": 2049,
        "b[2][1]": 2050,
        "(b[2][1]": 2051,
        "b[2][2]": 2052,
        "(b[2][2]": 2053,
        "l[i][j]": 2054,
        "l[i-1][j]": 2055,
        "l[i+1][j]": 2056,
        "l[i][j-1]": 2057,
        "l[i][j+1]": 2058,
        "arr2": 2059,
        "{{1,": 2060,
        "1},": 2061,
        "1}}": 2062,
        "colom": 2063,
        "arr[row][colom]": 2064,
        "arr2[row][colom]": 2065,
        "arr2[row][colom": 2066,
        "arr2[row": 2067,
        "1][colom]": 2068,
        "b[i": 2069,
        "b[i][j": 2070,
        "toggle": 2071,
        "number,": 2072,
        "a[i][j]=1": 2073,
        "input=array": 2074,
        "input[i][j]": 2075,
        "input[i][j]=input[i][j]": 2076,
        "toggle(a[i][j])": 2077,
        "a[i][j+1]": 2078,
        "toggle(a[i][j+1])": 2079,
        "a[i+1][j]": 2080,
        "toggle(a[i+1][j])": 2081,
        "a[i][j-1]": 2082,
        "toggle(a[i][j-1])": 2083,
        "a[i-1][j]": 2084,
        "toggle(a[i-1][j])": 2085,
        "containing": 2086,
        "Assign": 2087,
        "(int": 2088,
        "*)a": 2089,
        "sizeof(int)": 2090,
        "abs(1": 2091,
        "a[i][j])": 2092,
        "a[i][abs(j": 2093,
        "1)]": 2094,
        "1)])": 2095,
        "a[abs(i": 2096,
        "1)][j]": 2097,
        "1)][j])": 2098,
        "1)][(j)])": 2099,
        "a[0][1]": 2100,
        "a[2][1]": 2101,
        "a[1][0]": 2102,
        "a[1][2]": 2103,
        "a[x]": 2104,
        "v[i][j]": 2105,
        "n[i][j]": 2106,
        "n[i+1][j]": 2107,
        "n[i-1][j]": 2108,
        "n[i][j+1]": 2109,
        "n[i][j-1]": 2110,
        "arr,": 2111,
        "l[i": 2112,
        "l[i][j": 2113,
        "2e5": 2114,
        "[5][5]": 2115,
        "off_or_on": 2116,
        "a[i": 2117,
        "a[i][j": 2118,
        "bin": 2119,
        "in[i]": 2120,
        "bin[i]": 2121,
        "!bin[i]": 2122,
        "bin[i": 2123,
        "9,": 2124,
        "3]": 2125,
        "two": 2126,
        "dimensional": 2127,
        "sizes": 2128,
        "light": 2129,
        "light[i][j]": 2130,
        "C": 2131,
        "n_i": 2132,
        "R[k]": 2133,
        "n_j": 2134,
        "C[k]": 2135,
        "light[n_i][n_j]": 2136,
        "{0},": 2137,
        "[4][4]": 2138,
        "a[t][k]": 2139,
        "b[t][k]": 2140,
        "a[t][k": 2141,
        "a[t": 2142,
        "1][k]": 2143,
        "dimensions": 2144,
        "c[i": 2145,
        "c[i][j": 2146,
        "pole": 2147,
        "naj": 2148,
        "pole[i][j]": 2149,
        "iii": 2150,
        "pole[i][iii]": 2151,
        "pole[i][ii]": 2152,
        "pole[i+1][ii]": 2153,
        "pole[i-1][ii]": 2154,
        "pole[i][ii+1]": 2155,
        "pole[i][ii-1]": 2156,
        "isvalid": 2157,
        "((r": 2158,
        "3))": 2159,
        "[j]": 2160,
        "isvalid(i": 2161,
        "s[i": 2162,
        "isvalid(i,": 2163,
        "s[i][j": 2164,
        "curr": 2165,
        "actions": 2166,
        "actions[i][j]": 2167,
        "curr[i][j]": 2168,
        "curr[i][j": 2169,
        "curr[i": 2170,
        "a,b": 2171,
        "AND": 2172,
        "NOT": 2173,
        "b[i][j],": 2174,
        "b[i-1][j]": 2175,
        "b[i-1][j],": 2176,
        "b[i+1][j]": 2177,
        "b[i][j-1]": 2178,
        "b[i][j-1],": 2179,
        "b[i][j+1]": 2180,
        "a[k][l]": 2181,
        "arr[5][5]": 2182,
        "cpy": 2183,
        "cpy[5][5]": 2184,
        "cpy[i][j]": 2185,
        "cpy[i": 2186,
        "cpy[i][j": 2187,
        "[]": 2188,
        "lights": 2189,
        "lights[i][j]": 2190,
        "toggle[i][j]": 2191,
        "lights,": 2192,
        "f[i][e]": 2193,
        "p[i][e]": 2194,
        "f[i][e": 2195,
        "f[i": 2196,
        "1][e]": 2197,
        "[3][3]": 2198,
        "b[0][0],": 2199,
        "b[0][1],": 2200,
        "b[1][0],": 2201,
        "b[1][1],": 2202,
        "b[2][0],": 2203,
        "b[2][1],": 2204,
        "light,": 2205,
        "(light[i][j]": 2206,
        "dx[k]": 2207,
        "dy[k]": 2208,
        "light[y][x]": 2209,
        "(light[y][x]": 2210,
        "off": 2211,
        "off[i][j]": 2212,
        "off[i": 2213,
        "off[i][j": 2214,
        "b[i][increment": 2215,
        "b[i][decrement": 2216,
        "b[increment": 2217,
        "i][j]": 2218,
        "b[decrement": 2219,
        "j1,": 2220,
        "press,": 2221,
        "press": 2222,
        "[3][3],": 2223,
        "press[i][j]": 2224,
        "light[i][j": 2225,
        "light[i": 2226,
        "1][j": 2227,
        "2][j": 2228,
        "ans[i][j]": 2229,
        "fill(&ans[0][0],": 2230,
        "&ans[0][0]": 2231,
        "sizeof(ans),": 2232,
        "change(i,": 2233,
        "change(i": 2234,
        "[5][5],": 2235,
        "ar1": 2236,
        "contents": 2237,
        "ar[i][j": 2238,
        "ar[i": 2239,
        "ar1[i][j]": 2240,
        "arr[0][0]": 2241,
        "arr[0][1]": 2242,
        "arr[1][0]": 2243,
        "arr1[0][0]": 2244,
        "arr[1][1]": 2245,
        "arr[0][2]": 2246,
        "arr1[0][1]": 2247,
        "arr[1][2]": 2248,
        "arr1[0][2]": 2249,
        "arr[2][0]": 2250,
        "arr1[1][0]": 2251,
        "arr[2][1]": 2252,
        "arr1[1][1]": 2253,
        "arr[2][2]": 2254,
        "arr1[1][2]": 2255,
        "arr1[2][0]": 2256,
        "arr1[2][1]": 2257,
        "arr1[2][2]": 2258,
        "\"1\"": 2259,
        "\"0\"": 2260,
        "width": 2261,
        "a[0][i]": 2262,
        "a[4][i]": 2263,
        "a[i][4]": 2264,
        "(a[i": 2265,
        "\"11111\"": 2266,
        "jj": 2267,
        "arr[ii][j]": 2268,
        "arr[i][jj]": 2269,
        "remove": 2270,
        "arr[i]": 2271,
        "imprimir": 2272,
        "mat[i][e]": 2273,
        "encender": 2274,
        "mat[i][e": 2275,
        "mat[i": 2276,
        "aux": 2277,
        "TOOG": 2278,
        "TOOG[i][j]": 2279,
        "_i": 2280,
        "ni": 2281,
        "_i[c]": 2282,
        "nj=": 2283,
        "_j[c]": 2284,
        "(ni": 2285,
        "(nj": 2286,
        "nj": 2287,
        "0),": 2288,
        "MAT[ni][nj]": 2289,
        "!=0,": 2290,
        "*a": 2291,
        "*a=0": 2292,
        "*a=1": 2293,
        "toggle(&b[i][j])": 2294,
        "toggle(&b[i][j": 2295,
        "1])": 2296,
        "toggle(&b[i": 2297,
        "1][j])": 2298,
        "isval": 2299,
        "(ans[i][j]": 2300,
        "mat[i][j])": 2301,
        "isval(x,": 2302,
        "(ans[x][y]": 2303,
        "ans[x][y]": 2304,
        "(a[0][0]": 2305,
        "a[1][0])": 2306,
        "a[1][1]": 2307,
        "a[0][2])": 2308,
        "(a[0][2]": 2309,
        "a[1][2])": 2310,
        "\"0\\n\"": 2311,
        "\"1\\n\"": 2312,
        "a[2][0]": 2313,
        "a[1][1])": 2314,
        "(a[1][0]": 2315,
        "a[2][1])": 2316,
        "a[2][2]": 2317,
        "(a[2][0]": 2318,
        "(a[2][2]": 2319,
        "grid": 2320,
        "grid[i][j]": 2321,
        "ans[i][j": 2322,
        "ans[i": 2323,
        "ar=array": 2324,
        "ar[i][j]=1": 2325,
        "x=long": 2326,
        "ar[i][j]=1-ar[i][j]": 2327,
        "ar[i-1][j]=1-ar[i-1][j]": 2328,
        "ar[i+1][j]=1-ar[i+1][j]": 2329,
        "ar[i][j+1]=1-ar[i][j+1]": 2330,
        "ar[i][j-1]=1-ar[i][j-1]": 2331,
        "size[3][3]": 2332,
        "p[a][b]": 2333,
        "res[i][j]": 2334,
        "(a[i][j]": 2335,
        "(a[i][j": 2336,
        "!a[i][j]": 2337,
        "j+1": 2338,
        "modd": 2339,
        "-1LL": 2340,
        "dir": 2341,
        "-1},": 2342,
        "0},": 2343,
        "{-1,": 2344,
        "dir[ii][0]": 2345,
        "dir[ii][1]": 2346,
        "arr=array": 2347,
        "arr[0][0]=fabs(arr[0][0]-1)": 2348,
        "arr[0][1]=fabs(arr[0][1]-1)": 2349,
        "arr[1][0]=fabs(arr[1][0]-1)": 2350,
        "arr[0][2]=fabs(arr[0][2]-1)": 2351,
        "arr[1][2]=fabs(arr[1][2]-1)": 2352,
        "arr[1][1]=fabs(arr[1][1]-1)": 2353,
        "arr[2][0]=fabs(arr[2][0]-1)": 2354,
        "arr[2][2]=fabs(arr[2][2]-1)": 2355,
        "arr[2][1]=fabs(arr[2][1]-1)": 2356,
        "!a[i": 2357,
        "!a[i][j": 2358,
        "dimension": 2359,
        "out[0]": 2360,
        "a[0]+a[1]+a[3]": 2361,
        "out[1]": 2362,
        "a[1]+a[0]+a[2]+a[4]": 2363,
        "out[2": 2364,
        "a[1]+a[2]+a[5]": 2365,
        "out[3]": 2366,
        "a[0]+a[3]+a[4]+a[6]": 2367,
        "out[4]": 2368,
        "a[1]+a[3]+a[4]+a[5]+a[7]": 2369,
        "out[5]": 2370,
        "a[2]+a[4]+a[5]+a[8]": 2371,
        "out[6]": 2372,
        "a[3]+a[6]+a[7]": 2373,
        "out[7]": 2374,
        "a[4]+a[6]+a[7]+a[8]": 2375,
        "out[8]": 2376,
        "a[7]+a[8]+a[5]": 2377,
        "out[i]": 2378,
        "5x5": 2379,
        "grid[i][j],": 2380,
        "ans[i][j+1]": 2381,
        "ans[i][j-1]": 2382,
        "ans[i-1][j]": 2383,
        "ans[i+1][j]": 2384,
        "x[i][0]": 2385,
        "(x[i][0]": 2386,
        "x[i][2]": 2387,
        "(x[i][2]": 2388,
        "x[i][1]": 2389,
        "(x[i][1]": 2390,
        "x[0][j]": 2391,
        "(x[0][j]": 2392,
        "x[2][j]": 2393,
        "(x[2][j]": 2394,
        "x[1][j]": 2395,
        "(x[1][j]": 2396,
        "(x[i][j]": 2397,
        "ara": 2398,
        "sizeof(ara)": 2399,
        "ara[w][q]": 2400,
        "ara[w": 2401,
        "1][q]": 2402,
        "ara[w][q": 2403,
        "ara[i][r]": 2404,
        "b[x][y]": 2405,
        "(a[x][y]": 2406,
        "a[x": 2407,
        "a[x][y": 2408,
        "arx": 2409,
        "ary": 2410,
        "y=j": 2411,
        "arx[l]": 2412,
        "ary[l]": 2413,
        "arr[x][y]": 2414,
        "checkodd": 2415,
        "checkodd(a[0][0]": 2416,
        "checkodd(a[0][1]": 2417,
        "a[0][0]": 2418,
        "a[0][2]": 2419,
        "checkodd(a[1][0]": 2420,
        "checkodd(a[1][2]": 2421,
        "checkodd(a[2][0]": 2422,
        "checkodd(a[2][1]": 2423,
        "sizeof(b)": 2424,
        "i,j=int,": 2425,
        "b=array": 2426,
        "a[i][j],": 2427,
        "1-b[i][j]": 2428,
        "1-b[i][j+1]": 2429,
        "1-b[i][j-1]": 2430,
        "1-b[i+1][j]": 2431,
        "1-b[i-1][j]": 2432,
        "n[i][1],": 2433,
        "n[i][2],": 2434,
        "n[i][3]": 2435,
        "m[i][1]": 2436,
        "m[i][2]": 2437,
        "m[i][3]": 2438,
        "m[i][j]": 2439,
        "m[i": 2440,
        "m[i][1],": 2441,
        "m[i][2],": 2442,
        "a[3]": 2443,
        "a[2]": 2444,
        "a[4]": 2445,
        "b[2]": 2446,
        "a[5]": 2447,
        "b[3]": 2448,
        "a[6]": 2449,
        "b[4]": 2450,
        "a[7]": 2451,
        "b[5]": 2452,
        "a[8]": 2453,
        "b[6]": 2454,
        "b[7]": 2455,
        "b[8]": 2456,
        "b[3],": 2457,
        "b[4],": 2458,
        "b[6],": 2459,
        "b[7],": 2460,
        "bitwise-xor": 2461,
        "out[i][j": 2462,
        "dy]": 2463,
        "out[i": 2464,
        "dx][j]": 2465,
        "ou[i": 2466,
        "3x3": 2467,
        "col,": 2468,
        "y[row][col]": 2469,
        "incement": 2470,
        "y[0][1]": 2471,
        "y[0][0]": 2472,
        "y[1][0]": 2473,
        "x[0][1]": 2474,
        "y[1][1]": 2475,
        "y[0][2]": 2476,
        "x[0][2]": 2477,
        "y[0][1": 2478,
        "y[1][2]": 2479,
        "x[1][0]": 2480,
        "y[2][0]": 2481,
        "x[1][1]": 2482,
        "y[2][1]": 2483,
        "x[1][2]": 2484,
        "y[2][2]": 2485,
        "x[2][0]": 2486,
        "x[2][1]": 2487,
        "x[2][2]": 2488,
        "S,T=string": 2489,
        "N,M,sum,x,y,K,ans,val,L,a=long": 2490,
        "B=array": 2491,
        "C=char": 2492,
        "sum=A[i][j]+A[i-1][j]+A[i+1][j]+A[i][j-1]+A[i][j+1]": 2493,
        "pdd": 2494,
        "ans=array": 2495,
        "ans[i][j]=1": 2496,
        "sum=input[i][j]": 2497,
        "i-1": 2498,
        "input[i-1][j]": 2499,
        "input[i+1][j]": 2500,
        "j-1": 2501,
        "input[i][j-1]": 2502,
        "input[i][j+1]": 2503,
        "ans[i][j]=0": 2504,
        "matrices": 2505,
        "sizeof(l)": 2506,
        "!l[i": 2507,
        "!l[i][j": 2508,
        "!l[i][j]": 2509,
        "str[0]": 2510,
        "\"+------------------------+\"": 2511,
        "str[1]": 2512,
        "\"|#.#.#.#.#.#.#.#.#.#.#.|D|)\"": 2513,
        "str[2]": 2514,
        "\"|#.#.#.#.#.#.#.#.#.#.#.|.|\"": 2515,
        "str[3]": 2516,
        "\"|#.......................|\"": 2517,
        "str[4]": 2518,
        "\"|#.#.#.#.#.#.#.#.#.#.#.|.|)\"": 2519,
        "str[5]": 2520,
        "23": 2521,
        "'O',": 2522,
        "s[2]": 2523,
        "s[3]": 2524,
        "s[4]": 2525,
        "s[5]": 2526,
        "21": 2527,
        "outer": 2528,
        "inner": 2529,
        "'O'": 2530,
        "\"|\"": 2531,
        "\"O.\"": 2532,
        "\"#.\"": 2533,
        "\"...\"": 2534,
        "(4": 2535,
        "(3": 2536,
        "))": 2537,
        "\"|D|)\\n\"": 2538,
        "\"|.|)\\n\"": 2539,
        "\"..|\\n\"": 2540,
        "\"|.|\\n\"": 2541,
        "copy": 2542,
        "xx[0]": 2543,
        "zz": 2544,
        "xx[1]": 2545,
        "xx[2]": 2546,
        "kk": 2547,
        "xx[3]": 2548,
        "ss": 2549,
        "xx[4]": 2550,
        "xx[5]": 2551,
        "xx[j][i]": 2552,
        "xx[i]": 2553,
        "numbers": 2554,
        "12": 2555,
        "numbers[0][0]": 2556,
        "numbers[1][0]": 2557,
        "numbers[3][0]": 2558,
        "numbers[2][0]": 2559,
        "5)": 2560,
        "numbers[i][j]": 2561,
        "+------------------------+": 2562,
        "|": 2563,
        "numbers[0][i]": 2564,
        "|D|)": 2565,
        "numbers[1][i]": 2566,
        "|.|": 2567,
        ".......................|": 2568,
        "numbers[2][i]": 2569,
        "single": 2570,
        "9999999999999": 2571,
        "a,db": 2572,
        "'|'": 2573,
        "\"|D|)\"": 2574,
        "\"|.|\"": 2575,
        "\"|O.......................|\"": 2576,
        "\"|.|)\"": 2577,
        "\"#.#.#.#.#.#.#.#.#.#.|D|)\"": 2578,
        "\"#.#.#.#.#.#.#.#.#.#.|.|\"": 2579,
        "k1,": 2580,
        "k2,": 2581,
        "k3,": 2582,
        "ost": 2583,
        "k2": 2584,
        "k3": 2585,
        "|O.......................|": 2586,
        "|#.......................|": 2587,
        "ind": 2588,
        "O": 2589,
        ".|D|": 2590,
        ".|.|": 2591,
        ".|.|)": 2592,
        "24": 2593,
        "followin": 2594,
        "O.": 2595,
        "#.": 2596,
        "..": 2597,
        "|D|": 2598,
        "..|": 2599,
        "bus": 2600,
        "bus[0]": 2601,
        "bus[1]": 2602,
        "bus[2]": 2603,
        "bus[3]": 2604,
        "bus[4]": 2605,
        "bus[5]": 2606,
        "bus[j][i]": 2607,
        "bus[i]": 2608,
        "1st": 2609,
        "2nd": 2610,
        "|#.#.#.#.#.#.#.#.#.#.#.|D|)": 2611,
        "3rd": 2612,
        "|#.#.#.#.#.#.#.#.#.#.#.|.|": 2613,
        "4th": 2614,
        "5th": 2615,
        "|#.#.#.#.#.#.#.#.#.#.#.|.|)": 2616,
        "6th": 2617,
        "27": 2618,
        "exclusive)": 2619,
        "(st[j][i]": 2620,
        "st[j][i]": 2621,
        "ith": 2622,
        "22": 2623,
        "[i]": 2624,
        "\"+------------------------+\\n\"": 2625,
        "\"..\"": 2626,
        "|O.#.#.#.#.#.#.#.#.#.#.|D|)": 2627,
        "|O.#.#.#.#.#.#.#.#.#.#.|.|": 2628,
        "|O.#.#.#.#.#.#.#.#.#.#.|.|)": 2629,
        "|O.O.#.#.#.#.#.#.#.#.#.|D|)": 2630,
        "|O.O.#.#.#.#.#.#.#.#.#.|.|": 2631,
        "|O.O.#.#.#.#.#.#.#.#.#.|.|)": 2632,
        "|O.O.O.#.#.#.#.#.#.#.#.|D|)": 2633,
        "|O.O.O.#.#.#.#.#.#.#.#.|.|": 2634,
        "|O.O.O.#.#.#.#.#.#.#.#.|.|)": 2635,
        "|O.O.O.O.#.#.#.#.#.#.#.|D|)": 2636,
        "|O.O.O.O.#.#.#.#.#.#.#.|.|": 2637,
        "13": 2638,
        "|O.O.O.O.#.#.#.#.#.#.#.|.|)": 2639,
        "14": 2640,
        "|O.O.O.O.O.#.#.#.#.#.#.|D|)": 2641,
        "15": 2642,
        "|O.O.O.O.O.#.#.#.#.#.#.|.|": 2643,
        "16": 2644,
        "|O.O.O.O.O.#.#.#.#.#.#.|.|)": 2645,
        "17": 2646,
        "|O.O.O.O.O.O.#.#.#.#.#.|D|)": 2647,
        "18": 2648,
        "|O.O.O.O.O.O.#.#.#.#.#.|.|": 2649,
        "19": 2650,
        "|O.O.O.O.O.O.#.#.#.#.#.|.|)": 2651,
        "|O.O.O.O.O.O.O.#.#.#.#.|D|)": 2652,
        "|O.O.O.O.O.O.O.#.#.#.#.|.|": 2653,
        "|O.O.O.O.O.O.O.#.#.#.#.|.|)": 2654,
        "|O.O.O.O.O.O.O.O.#.#.#.|D|)": 2655,
        "|O.O.O.O.O.O.O.O.#.#.#.|.|": 2656,
        "25": 2657,
        "|O.O.O.O.O.O.O.O.#.#.#.|.|)": 2658,
        "26": 2659,
        "|O.O.O.O.O.O.O.O.O.#.#.|D|)": 2660,
        "|O.O.O.O.O.O.O.O.O.#.#.|.|": 2661,
        "28": 2662,
        "|O.O.O.O.O.O.O.O.O.#.#.|.|)": 2663,
        "29": 2664,
        "|O.O.O.O.O.O.O.O.O.O.#.|D|)": 2665,
        "|O.O.O.O.O.O.O.O.O.O.#.|.|": 2666,
        "31": 2667,
        "|O.O.O.O.O.O.O.O.O.O.#.|.|)": 2668,
        "32": 2669,
        "|O.O.O.O.O.O.O.O.O.O.O.|D|)": 2670,
        "|O.O.O.O.O.O.O.O.O.O.O.|.|": 2671,
        "34": 2672,
        "|O.O.O.O.O.O.O.O.O.O.O.|.|)": 2673,
        "Pi": 2674,
        "arc": 2675,
        "cosine": 2676,
        "(-1.0)": 2677,
        "4)": 2678,
        "((k": 2679,
        "else,": 2680,
        "11th": 2681,
        "(ind": 2682,
        "10)": 2683,
        "(integer": 2684,
        "(flg": 2685,
        "2),": 2686,
        "proceed": 2687,
        "(ind)th": 2688,
        "infinite": 2689,
        "\"O\"": 2690,
        "\".......................|\"": 2691,
        "idx": 2692,
        "s[i][idx]": 2693,
        "4x11": 2694,
        "second": 2695,
        "move": 2696,
        "|.|)": 2697,
        "passengers": 2698,
        "\"..|\"": 2699,
        "\"ttttttttttttttttttttttttttt\"": 2700,
        "'+'": 2701,
        "a[0][25]": 2702,
        "a[5][0]": 2703,
        "a[5][25]": 2704,
        "a[1][26]": 2705,
        "a[4][26]": 2706,
        "a[5][i]": 2707,
        "a[1][i]": 2708,
        "a[2][i]": 2709,
        "24,": 2710,
        "a[3][i]": 2711,
        "a[i][25]": 2712,
        "a[i][23]": 2713,
        "fo": 2714,
        "ri": 2715,
        "'t'": 2716,
        "che": 2717,
        "\"+----------------------+\"": 2718,
        "che[0]": 2719,
        "che[1]": 2720,
        "che[2]": 2721,
        "che[3]": 2722,
        "che[4]": 2723,
        "\"+----------------------+\")": 2724,
        "che[5]": 2725,
        "che[j][i]": 2726,
        "che[i]": 2727,
        "\"|O.#.#.#.#.#.#.#.#.#.#.|D|)\"": 2728,
        "\"|O.#.#.#.#.#.#.#.#.#.#.|.|\"": 2729,
        "\"|O.#.#.#.#.#.#.#.#.#.#.|.|)\"": 2730,
        "\"|O.O.#.#.#.#.#.#.#.#.#.|D|)\"": 2731,
        "\"|O.O.#.#.#.#.#.#.#.#.#.|.|\"": 2732,
        "\"|O.O.#.#.#.#.#.#.#.#.#.|.|)\"": 2733,
        "\"|O.O.O.#.#.#.#.#.#.#.#.|D|)\"": 2734,
        "\"|O.O.O.#.#.#.#.#.#.#.#.|.|\"": 2735,
        "\"|O.O.O.#.#.#.#.#.#.#.#.|.|)\"": 2736,
        "\"|O.O.O.O.#.#.#.#.#.#.#.|D|)\"": 2737,
        "\"|O.O.O.O.#.#.#.#.#.#.#.|.|\"": 2738,
        "\"|O.O.O.O.#.#.#.#.#.#.#.|.|)\"": 2739,
        "\"|O.O.O.O.O.#.#.#.#.#.#.|D|)\"": 2740,
        "\"|O.O.O.O.O.#.#.#.#.#.#.|.|\"": 2741,
        "\"|O.O.O.O.O.#.#.#.#.#.#.|.|)\"": 2742,
        "\"|O.O.O.O.O.O.#.#.#.#.#.|D|)\"": 2743,
        "\"|O.O.O.O.O.O.#.#.#.#.#.|.|\"": 2744,
        "\"|O.O.O.O.O.O.#.#.#.#.#.|.|)\"": 2745,
        "\"|O.O.O.O.O.O.O.#.#.#.#.|D|)\"": 2746,
        "\"|O.O.O.O.O.O.O.#.#.#.#.|.|\"": 2747,
        "\"|O.O.O.O.O.O.O.#.#.#.#.|.|)\"": 2748,
        "\"|O.O.O.O.O.O.O.O.#.#.#.|D|)\"": 2749,
        "\"|O.O.O.O.O.O.O.O.#.#.#.|.|\"": 2750,
        "\"|O.O.O.O.O.O.O.O.#.#.#.|.|)\"": 2751,
        "\"|O.O.O.O.O.O.O.O.O.#.#.|D|)\"": 2752,
        "\"|O.O.O.O.O.O.O.O.O.#.#.|.|\"": 2753,
        "\"|O.O.O.O.O.O.O.O.O.#.#.|.|)\"": 2754,
        "\"|O.O.O.O.O.O.O.O.O.O.#.|D|)\"": 2755,
        "\"|O.O.O.O.O.O.O.O.O.O.#.|.|\"": 2756,
        "\"|O.O.O.O.O.O.O.O.O.O.#.|.|)\"": 2757,
        "\"|O.O.O.O.O.O.O.O.O.O.O.|D|)\"": 2758,
        "\"|O.O.O.O.O.O.O.O.O.O.O.|.|\"": 2759,
        "\"|O.O.O.O.O.O.O.O.O.O.O.|.|)\"": 2760,
        "solve()": 2761,
        "acos(-1.0)": 2762,
        "\".......................|\\n\"": 2763,
        "n,t": 2764,
        "sandali": 2765,
        "0th": 2766,
        "(reading": 2767,
        "(sandali[j][i]": 2768,
        "jth": 2769,
        "6)": 2770,
        "sandali[t]": 2771,
        "s[6]": 2772,
        "+------------------------+\"": 2773,
        "'#',": 2774,
        "a=1": 2775,
        "3*": 2776,
        "+2": 2777,
        "......................|": 2778,
        "3*a+4": 2779,
        "calc_subtractions_slow": 2780,
        "inlined": 2781,
        "numOps": 2782,
        "calc_subtractions_div": 2783,
        "temp)": 2784,
        "calc_subtractions_mod": 2785,
        "calc_subtractions": 2786,
        "calc_subtractions_div(a,": 2787,
        "subtractions_solve": 2788,
        "numPairs,": 2789,
        "numPairs": 2790,
        "subtractions_solve(cin,": 2791,
        "cout)": 2792,
        "a,b=int": 2793,
        "ans=0": 2794,
        "a>0": 2795,
        "b>0": 2796,
        "a>b": 2797,
        "a/b": 2798,
        "a=a": 2799,
        "b/a": 2800,
        "b=b": 2801,
        "swap": 2802,
        "hasil": 2803,
        "ret": 2804,
        "tc": 2805,
        "cnt=0": 2806,
        "MAX=max(a,b)": 2807,
        "MIN=min(a,b)": 2808,
        "MAX>0": 2809,
        "MIN>0": 2810,
        "MIN": 2811,
        "MAX/MIN": 2812,
        "MAX": 2813,
        "temp=MIN": 2814,
        "MIN=MAX-MIN*(MAX/MIN)": 2815,
        "MAX=temp": 2816,
        "T": 2817,
        "min(a,": 2818,
        "max(a,": 2819,
        "unsigned": 2820,
        "swp": 2821,
        "addresses": 2822,
        "test_div": 2823,
        "INT_MAX": 2824,
        "1000000000,": 2825,
        "999999999": 2826,
        "test_mod": 2827,
        "getNumbers": 2828,
        "gotValue": 2829,
        "gotVale": 2830,
        "subtractions_solve_low": 2831,
        "istream": 2832,
        "in,": 2833,
        "ostream": 2834,
        "subtractions_solve_fast": 2835,
        "getline": 2836,
        "nums": 2837,
        "nums[0],": 2838,
        "nums[1]": 2839,
        "cin,": 2840,
        "cout": 2841,
        "round": 2842,
        "1.0": 2843,
        "a[1000]": 2844,
        ">y": 2845,
        "x/y": 2846,
        "y/x": 2847,
        "=y": 2848,
        "Q,": 2849,
        "Q": 2850,
        "(d": 2851,
        "cntint": 2852,
        "cntfloat": 2853,
        "adivb,": 2854,
        "bdiva,": 2855,
        "adivb": 2856,
        "bdiva": 2857,
        "total": 2858,
        "positive": 2859,
        "a/b*b": 2860,
        "b/a*a": 2861,
        "ans(0)": 2862,
        "doit": 2863,
        "T,": 2864,
        "T--": 2865,
        "doit(a,": 2866,
        "(1ll": 2867,
        "31)": 2868,
        "get(a,b)": 2869,
        "we": 2870,
        "valid": 2871,
        "orderArguments": 2872,
        "arg1,": 2873,
        "arg2": 2874,
        "arg1": 2875,
        "subtraction": 2876,
        "areg2": 2877,
        "\"arg1=\"": 2878,
        "\"arg2=\"": 2879,
        "quotient": 2880,
        "evaluate": 2881,
        "numOfTestCases": 2882,
        "casos,": 2883,
        "casos": 2884,
        "((a": 2885,
        "(o": 2886,
        "((b": 2887,
        "modu": 2888,
        "(n,": 2889,
        "\"1\",": 2890,
        "cases": 2891,
        "num1,": 2892,
        "num2": 2893,
        "ops": 2894,
        "num1": 2895,
        "gcd": 2896,
        "gcd(b,": 2897,
        "solve(b": 2898,
        "a))": 2899,
        "t--": 2900,
        "solve(min(a,": 2901,
        "b),": 2902,
        "b))": 2903,
        "getans": 2904,
        "getans(b": 2905,
        "getans(min(a,": 2906,
        "GCD": 2907,
        "decreased": 2908,
        "n--": 2909,
        "10000002": 2910,
        "1000001": 2911,
        "cift": 2912,
        "tek": 2913,
        "doIt": 2914,
        "t_ab": 2915,
        "t_a": 2916,
        "t_b": 2917,
        "calling": 2918,
        "bigger": 2919,
        "lower": 2920,
        "ctr,": 2921,
        "rad": 2922,
        "first,": 2923,
        "second,": 2924,
        "smaller,": 2925,
        "larger": 2926,
        "mult": 2927,
        "smaller": 2928,
        "infinitely": 2929,
        "f(x,": 2930,
        "a>b,": 2931,
        "a=b": 2932,
        "a=0": 2933,
        "b=": 2934,
        "gcd_answ": 2935,
        "(a,": 2936,
        "gcd_answ(a,": 2937,
        "initialize": 2938,
        "settings": 2939,
        "1073741824": 2940,
        "f(b": 2941,
        "f(a,b)": 2942,
        "MAX1": 2943,
        "3e8": 2944,
        "acos(-1)": 2945,
        "a,b=long": 2946,
        "x=max(a,b),": 2947,
        "y=min(a,b),": 2948,
        "x>0": 2949,
        "y>0": 2950,
        "(x/y)*y": 2951,
        "m=max(x,y),": 2952,
        "n=min(x,y)": 2953,
        "x=m": 2954,
        "y=n": 2955,
        "B": 2956,
        "Calc": 2957,
        "0LL": 2958,
        "Calc(b,": 2959,
        "Calc(A,B)": 2960,
        "tc=int": 2961,
        "res=0": 2962,
        "swap(a,b)": 2963,
        "h=b-a": 2964,
        "a-h": 2965,
        "h/a": 2966,
        "subtraction(a,b),": 2967,
        "co,": 2968,
        "co": 2969,
        "(co": 2970,
        "shift": 2971,
        "places": 2972,
        "numOfTestCases,": 2973,
        "subtraction(r,": 2974,
        "w)": 2975,
        "longs,": 2976,
        "f(n,m)": 2977,
        "int64_t": 2978,
        "modex": 2979,
        "(res": 2980,
        ">>=": 2981,
        "dv": 2982,
        "count((min": 2983,
        "(max": 2984,
        "count(min(a,": 2985,
        "n,a,b,r,c=long": 2986,
        "r=0": 2987,
        "x=a": 2988,
        "b=x": 2989,
        "c=b/a": 2990,
        "b=b-a*c": 2991,
        "iterations": 2992,
        "noop": 2993,
        "solve(a,": 2994,
        "a(0),": 2995,
        "b(0)": 2996,
        "total(0)": 2997,
        "final": 2998,
        "path": 2999,
        "txt.in": 3000,
        "txt.out": 3001,
        "fixed": 3002,
        "setprecision": 3003,
        "a/b,": 3004,
        "b/a,": 3005,
        "kq": 3006,
        "xuli": 3007,
        "_": 3008,
        "lcm": 3009,
        "retutn": 3010,
        "100005": 3011,
        "say": 3012,
        "cmd": 3013,
        "people_cnt": 3014,
        "cmd[0]": 3015,
        "\":\"": 3016,
        "(length": 3017,
        "cmd)": 3018,
        "maxs": 3019,
        "100+10": 3020,
        "s[t]": 3021,
        "':',": 3022,
        "unique": 3023,
        "skipping": 3024,
        "erase": 3025,
        "':'": 3026,
        "Q)": 3027,
        "save": 3028,
        "position": 3029,
        "(size": 3030,
        "EOF": 3031,
        "1000000": 3032,
        "total,": 3033,
        "'+',": 3034,
        "c[t]": 3035,
        "((length": 3036,
        "s)": 3037,
        "105": 3038,
        "byte": 3039,
        "ch[0]": 3040,
        "active": 3041,
        "ineger": 3042,
        "s[9]": 3043,
        "i(0)": 3044,
        "commands": 3045,
        "person,": 3046,
        "mark_idx,": 3047,
        "send_size": 3048,
        "person": 3049,
        "commands[0]": 3050,
        "mark_idx": 3051,
        "unintialized": 3052,
        "time": 3053,
        "neither": 3054,
        "colon": 3055,
        "followed": 3056,
        "1e2": 3057,
        "creatre": 3058,
        "mygets": 3059,
        "me,": 3060,
        "ok,": 3061,
        "me": 3062,
        "c[i]": 3063,
        "characterfrom": 3064,
        "input,": 3065,
        "\"+\"": 3066,
        "\"-\"": 3067,
        "gets(s1)": 3068,
        "s1[j]": 3069,
        "(s1": 3070,
        "{}": 3071,
        "c2,": 3072,
        "c3,": 3073,
        "c3": 3074,
        "infinity": 3075,
        "c3)": 3076,
        "comando": 3077,
        "comando[0]": 3078,
        "ln": 3079,
        "(ln": 3080,
        "n_participantes,": 3081,
        "n_bytes,": 3082,
        "n_participantes=0,": 3083,
        "n_bytes=0": 3084,
        "linha_chat": 3085,
        "linha_chat[0]": 3086,
        "n_participantes": 3087,
        "linha_chat[x]": 3088,
        "n_bytes": 3089,
        "st[0]": 3090,
        "st[i]": 3091,
        "10005": 3092,
        "sm": 3093,
        "mp[st]": 3094,
        "sz": 3095,
        ";": 3096,
        "(sz": 3097,
        "s[idx-1]": 3098,
        "s[idx": 3099,
        "((int)s.size()": 3100,
        "idx)": 3101,
        "local": 3102,
        "s[i],": 3103,
        "vis": 3104,
        "205": 3105,
        "(s": 3106,
        "local(s)": 3107,
        "tp(s,": 3108,
        "st)": 3109,
        "vis.count(tp)": 3110,
        "strlen(s": 3111,
        "vis.size()": 3112,
        "(len": 3113,
        "cine": 3114,
        "result,": 3115,
        "z)": 3116,
        "empty,": 3117,
        "command": 3118,
        "command[0]": 3119,
        "id": 3120,
        "command[i]": 3121,
        "clear": 3122,
        "command.substr(1,": 3123,
        "command.size()": 3124,
        "id)": 3125,
        "lens": 3126,
        "(lens": 3127,
        "frq": 3128,
        "count1": 3129,
        "count1,": 3130,
        "store": 3131,
        "count;": 3132,
        "users": 3133,
        "traffic": 3134,
        "olnum": 3135,
        "charnum,": 3136,
        "charsum": 3137,
        "charnum": 3138,
        "indefinitely": 3139,
        "input[0]": 3140,
        "inpu[0]": 3141,
        "coun": 3142,
        "count_now": 3143,
        "input[i]": 3144,
        "FindLen": 3145,
        "ss[i]": 3146,
        "Set": 3147,
        "ss[0]": 3148,
        "FindLen(ss)": 3149,
        "it's": 3150,
        "check1": 3151,
        "check1(s)": 3152,
        "FindLen(string": 3153,
        "ss)": 3154,
        "getline(cin,": 3155,
        "+(": 3156,
        "lengh": 3157,
        "txt,": 3158,
        "txt": 3159,
        "txt[0]": 3160,
        "txt[i]": 3161,
        "mp[name]": 3162,
        "ampty": 3163,
        "(substring": 3164,
        "found": 3165,
        "answer": 3166,
        ":,": 3167,
        "S)": 3168,
        "tc,": 3169,
        "sm,": 3170,
        "100011": 3171,
        "decimal": 3172,
        "precision": 3173,
        "format": 3174,
        "cnt1": 3175,
        "cnt2": 3176,
        "tot": 3177,
        "'('": 3178,
        "'?'": 3179,
        "incremen": 3180,
        "resp": 3181,
        "qClose": 3182,
        "'(',": 3183,
        "')',": 3184,
        "((x": 3185,
        "aa[b]": 3186,
        "')'": 3187,
        "1000000000000": 3188,
        "5001": 3189,
        "cur": 3190,
        "g[j][i]": 3191,
        "g[i][j]": 3192,
        "a<": 3193,
        "5050": 3194,
        "displayed": 3195,
        "utilize": 3196,
        "decimals": 3197,
        "fixed-point": 3198,
        "notation": 3199,
        "qmarks": 3200,
        "j=i": 3201,
        "1e7": 3202,
        "r-1": 3203,
        "5000": 3204,
        "can[N][N]": 3205,
        "fail": 3206,
        "<0,": 3207,
        "-c": 3208,
        "((j": 3209,
        "can[i][j]": 3210,
        "j=u": 3211,
        "q+1": 3212,
        "c+q": 3213,
        "can[j][i]": 3214,
        "5010": 3215,
        "l=length": 3216,
        "j=int": 3217,
        "l-1": 3218,
        "x,y,z=0": 3219,
        "x+z": 3220,
        "y-z": 3221,
        "x<y": 3222,
        "siz,": 3223,
        "tmp2": 3224,
        "ck,": 3225,
        "5e3": 3226,
        "dp": 3227,
        "sum1,": 3228,
        "sum2,": 3229,
        "sum3": 3230,
        "sum2": 3231,
        "sum1": 3232,
        "negative": 3233,
        "5005": 3234,
        "num2,": 3235,
        "sup": 3236,
        "str[j]": 3237,
        "else{": 3238,
        "=)": 3239,
        "doit()": 3240,
        "q=0": 3241,
        "sup,": 3242,
        "s.size()": 3243,
        "ok[i][i": 3244,
        "j][i]": 3245,
        "3f3f3f3f": 3246,
        "exadecimal": 3247,
        "N=5050": 3248,
        "i,j=int": 3249,
        "l,r=0": 3250,
        "l<0": 3251,
        "r<0": 3252,
        "(exclusive)": 3253,
        "ch[j]": 3254,
        "MAXN=5005": 3255,
        "vis=array": 3256,
        "s=string": 3257,
        "n=size": 3258,
        "r>l": 3259,
        "vis[i][j]": 3260,
        "r<l": 3261,
        "vis[j][i]": 3262,
        "(j-i+1)": 3263,
        "zuo,": 3264,
        "wen": 3265,
        "zuo": 3266,
        "que,": 3267,
        "que": 3268,
        "floating": 3269,
        "s=": 3270,
        "strlen(s)": 3271,
        "strlen": 3272,
        "contstant": 3273,
        "val": 3274,
        "recude": 3275,
        "god,": 3276,
        "god": 3277,
        "stirng": 3278,
        "kh,": 3279,
        "kh": 3280,
        "len,": 3281,
        "s's": 3282,
        "zeroing": 3283,
        "them": 3284,
        "zero,": 3285,
        "Terminate": 3286,
        "s[MX]": 3287,
        "a<0,": 3288,
        "s[j]=')'": 3289,
        "=(": 3290,
        "integral": 3291,
        "MAX_N": 3292,
        "1,000,000": 3293,
        "hex": 3294,
        "EPS,": 3295,
        "1e-10": 3296,
        "mod,": 3297,
        "rt,": 3298,
        "rt": 3299,
        "negative,": 3300,
        "cout.precision(10)": 3301,
        "a[110]": 3302,
        "ed": 3303,
        "G,": 3304,
        "f=0": 3305,
        "st,": 3306,
        "i=i+k": 3307,
        "f=1": 3308,
        "'G'": 3309,
        "'T'": 3310,
        "s[m]": 3311,
        "getchar": 3312,
        "'A'": 3313,
        "'Z'": 3314,
        "initial": 3315,
        "indexT": 3316,
        "indexG": 3317,
        "size_t": 3318,
        "indexT,": 3319,
        "#,": 3320,
        "indexG,": 3321,
        "inreasing": 3322,
        "crate": 3323,
        "start=0": 3324,
        "len=0": 3325,
        "c=": 3326,
        "start=1": 3327,
        "n=0": 3328,
        "s=i": 3329,
        "t=i": 3330,
        "i=s": 3331,
        "i+k": 3332,
        "i-k": 3333,
        "location": 3334,
        "line[i]": 3335,
        "location,": 3336,
        "line[left]": 3337,
        "line[right]": 3338,
        "BFS": 3339,
        "sizeof(vis)": 3340,
        "N[i]": 3341,
        "tar": 3342,
        "s[r]": 3343,
        "'G',": 3344,
        "'T',": 3345,
        "s[pos]": 3346,
        "(arr[i]": 3347,
        "T)": 3348,
        "(arr[i": 3349,
        "#)": 3350,
        "s[c]": 3351,
        "s[e]": 3352,
        "subtracting": 3353,
        "loc1": 3354,
        "loc2": 3355,
        "(loc2": 3356,
        "loc1)": 3357,
        "otherwise)": 3358,
        "a[t]": 3359,
        "1120": 3360,
        "p[1001]": 3361,
        "a[maxn]": 3362,
        "a[105]": 3363,
        "x=i": 3364,
        "y=i": 3365,
        "x>=": 3366,
        "i=y": 3367,
        "+k": 3368,
        "str[105]": 3369,
        "a=i": 3370,
        "b=i": 3371,
        "i=a": 3372,
        "loct,": 3373,
        "locg": 3374,
        "(s[i]": 3375,
        "T),": 3376,
        "loct": 3377,
        "G),": 3378,
        "(locg": 3379,
        "loct)": 3380,
        "#),": 3381,
        "false)": 3382,
        "rue": 3383,
        "incrment": 3384,
        "s[g]": 3385,
        "x1[i]": 3386,
        "s[105]": 3387,
        "r=1": 3388,
        "No": 3389,
        "dfs": 3390,
        "ed,": 3391,
        "arr[now]": 3392,
        "vis[now]": 3393,
        "dfs(now,": 3394,
        "dfs(st,": 3395,
        "s[110]": 3396,
        "g=i": 3397,
        "i=g": 3398,
        "g)": 3399,
        "suucessful": 3400,
        "termination": 3401,
        ",a,": 3402,
        "temp,": 3403,
        "d[c]": 3404,
        "d[i]": 3405,
        "diff": 3406,
        "t-10": 3407,
        "diff=1": 3408,
        "-10": 3409,
        "G'or": 3410,
        "newline,": 3411,
        "n,k,locg,loct": 3412,
        "n,k,s": 3413,
        "NO\\n": 3414,
        "solve(string": 3415,
        "str,integer": 3416,
        "n,integer": 3417,
        "indG": 3418,
        "indT": 3419,
        "n,k": 3420,
        "str,": 3421,
        "inputs": 3422,
        "insect": 3423,
        "=a": 3424,
        "Start": 3425,
        "End": 3426,
        "max(Start,": 3427,
        "End)": 3428,
        "min(Start,": 3429,
        "i=Start": 3430,
        "='#": 3431,
        "l=i": 3432,
        "m=i": 3433,
        "i=l": 3434,
        "i=i-k": 3435,
        "c=c+1": 3436,
        "hap": 3437,
        "abs(l": 3438,
        "m1=map": 3439,
        "lo": 3440,
        "itr=iterator": 3441,
        "n,k=long": 3442,
        "pos1": 3443,
        "pos2=long": 3444,
        "pos1=i": 3445,
        "pos2=i": 3446,
        "pos1>pos2": 3447,
        "str[pos1]": 3448,
        "pos2": 3449,
        "pos1<pos2": 3450,
        "100007": 3451,
        "_s": 3452,
        "_f": 3453,
        "(a[i]": 3454,
        "G)": 3455,
        "(_s": 3456,
        "_f),": 3457,
        "_f)": 3458,
        "k=min": 3459,
        "s[k]": 3460,
        "locg,": 3461,
        "(locg-loct)": 3462,
        "i=(minimum": 3463,
        "(maximum": 3464,
        "post": 3465,
        "(pos": 3466,
        "post)": 3467,
        "s8i]": 3468,
        "n,k=int": 3469,
        "st=-1": 3470,
        "ed=-1": 3471,
        "st=i": 3472,
        "ed=i": 3473,
        "i=st": 3474,
        "-k": 3475,
        "ti,": 3476,
        "tg": 3477,
        "ti": 3478,
        "str[j": 3479,
        "(str[j": 3480,
        "k]=": 3481,
        "'T')": 3482,
        "endl,": 3483,
        "flag2,": 3484,
        "space": 3485,
        "s4": 3486,
        "\",": 3487,
        "f,s": 3488,
        "str1,": 3489,
        "str2,": 3490,
        "str3": 3491,
        "str1": 3492,
        "days": 3493,
        "str,\"": 3494,
        "\",str1": 3495,
        "str2": 3496,
        "15,": 3497,
        "nonzero": 3498,
        "number": 3499,
        "strcpy": 3500,
        "n1a,": 3501,
        "n2a": 3502,
        "push_back": 3503,
        "n1a": 3504,
        "sir1": 3505,
        "sir2": 3506,
        "s1,\"": 3507,
        "\",s2": 3508,
        "sir1[i],": 3509,
        "sir2[i]": 3510,
        "(sir1[i]": 3511,
        "s1)": 3512,
        "sir1[i]": 3513,
        "sir1[i],\"": 3514,
        "\",sir2[i]": 3515,
        "str[i][0]": 3516,
        "str[i][1]": 3517,
        "now[0],": 3518,
        "s1,s2,s,p=string": 3519,
        "s1,s2": 3520,
        "space,": 3521,
        "s,p": 3522,
        "s1=p": 3523,
        "s2=p": 3524,
        "s,'": 3525,
        "',s2": 3526,
        "maxN": 3527,
        "1e6": 3528,
        "1e10": 3529,
        "s=a": 3530,
        "killed,": 3531,
        "added,": 3532,
        "day": 3533,
        "killed": 3534,
        "added": 3535,
        "S,": 3536,
        "A,": 3537,
        "B,": 3538,
        "aa=a,": 3539,
        "aa=b,": 3540,
        "linf": 3541,
        "62": 3542,
        "iinf": 3543,
        "dinf": 3544,
        "1e17": 3545,
        "Mod": 3546,
        "(n1": 3547,
        "(decrement": 3548,
        "t),": 3549,
        "a[100006]": 3550,
        "b[110]": 3551,
        "c=a": 3552,
        "a=d": 3553,
        "acos": 3554,
        "a,b=string": 3555,
        "x,y=string": 3556,
        "x,y": 3557,
        "a=y": 3558,
        "b=y": 3559,
        "=d": 3560,
        "readind": 3561,
        "rep,": 3562,
        "kill": 3563,
        "rep": 3564,
        "na1": 3565,
        "na2": 3566,
        "n1=": 3567,
        "s[i][0]": 3568,
        "s[i][1]": 3569,
        "str3,": 3570,
        "str4": 3571,
        "=integer": 3572,
        "compare": 3573,
        "copies": 3574,
        "pointed": 3575,
        "MAX2": 3576,
        "1000000000": 3577,
        "eps": 3578,
        "a,b,x,y": 3579,
        "setprecision(12)": 3580,
        "a,b,n": 3581,
        "a[30]": 3582,
        "pot1": 3583,
        "pot2": 3584,
        "pot1,": 3585,
        "crete": 3586,
        "vict": 3587,
        "ele,": 3588,
        "ele": 3589,
        "bal": 3590,
        "val[i]": 3591,
        "S[0][i]": 3592,
        "S[1][i]": 3593,
        "counts": 3594,
        "1e-8": 3595,
        "pod,": 3596,
        "pod1": 3597,
        "pod": 3598,
        "c,d": 3599,
        "a,\"": 3600,
        "\",b": 3601,
        "x,\"": 3602,
        "\",y": 3603,
        "res_arr": 3604,
        "res_arr[0]": 3605,
        "res_arr[1]": 3606,
        "res_arr[i": 3607,
        "to_be_replaced": 3608,
        "res_arr[i]": 3609,
        "replaced_by": 3610,
        "res_arr[i],": 3611,
        "name1": 3612,
        "name2": 3613,
        "temp1,": 3614,
        "temp2": 3615,
        "temp1": 3616,
        "1024": 3617,
        "ans[0]": 3618,
        "make_pair(A,": 3619,
        "B)": 3620,
        "ans[i].first": 3621,
        "ans[i].second": 3622,
        "1].second": 3623,
        "1].second)": 3624,
        "1].first": 3625,
        "1].first)": 3626,
        "(B": 3627,
        "ans[i].first,\"": 3628,
        "\",ans[i].second": 3629,
        "a,b=string,": 3630,
        "A[i]": 3631,
        "B[i]": 3632,
        "A[i]=B[i]": 3633,
        "B[i]=b": 3634,
        "A[i]=a": 3635,
        "A[i-1]": 3636,
        "B[i]=B[i-1]": 3637,
        "B[i-1]": 3638,
        "A[i]=A[i-1]": 3639,
        "A[i],": 3640,
        "af": 3641,
        "nex": 3642,
        "looping,": 3643,
        "ft,": 3644,
        "a,'": 3645,
        "',b": 3646,
        "q.count(a)": 3647,
        "f[increment": 3648,
        "ft]": 3649,
        "q[a]": 3650,
        "ft": 3651,
        "q.count(b)": 3652,
        "q[b]": 3653,
        "(z": 3654,
        "f[x],'": 3655,
        "',f[y]": 3656,
        "s,\"": 3657,
        "\",t": 3658,
        "s1.compare(s)": 3659,
        "a=s": 3660,
        "s=b": 3661,
        "a0": 3662,
        "b0": 3663,
        "replacement": 3664,
        "a+y": 3665,
        "b+y": 3666,
        "name1,": 3667,
        "name2,": 3668,
        "death": 3669,
        "s3=s1": 3670,
        "setIO": 3671,
        "setIO(\"\")": 3672,
        "same": 3673,
        "b1": 3674,
        "vs(n)": 3675,
        "vs[i]": 3676,
        "vs[i][j]": 3677,
        "vs[i][0]": 3678,
        "vs[i": 3679,
        "1][0]": 3680,
        "\"Time": 3681,
        "elapsed:": 3682,
        "clock()": 3683,
        "CLOCKS_PER_SEC": 3684,
        "s.\\n\"": 3685,
        "digits": 3686,
        "vs": 3687,
        "vs[i-1][0]": 3688,
        "clock": 3689,
        "ticks": 3690,
        "fir": 3691,
        "excluisve": 3692,
        "s[j": 3693,
        "not,": 3694,
        "s[j-1]": 3695,
        "prevc": 3696,
        "prevr": 3697,
        "v[i][0]": 3698,
        "pr,": 3699,
        "ls": 3700,
        "nx": 3701,
        "pr": 3702,
        "x[i][j": 3703,
        "x[i": 3704,
        "1][1]": 3705,
        "x[i][j-1]": 3706,
        "x[i-1][1]": 3707,
        "a[j+1],": 3708,
        "s[j+1],": 3709,
        "ff,": 3710,
        "used": 3711,
        "n+1": 3712,
        "v[i+1]": 3713,
        "st[i][j-1]": 3714,
        "st[i-1][j]": 3715,
        "iso": 3716,
        "chrColor": 3717,
        "color,": 3718,
        "perColor": 3719,
        "perRowColor": 3720,
        "color": 3721,
        "perRowColor,": 3722,
        "perColor,": 3723,
        "\"NO\",": 3724,
        "SIZE": 3725,
        "M": 3726,
        "M[i]": 3727,
        "M[i][j]": 3728,
        "M[i][j": 3729,
        "M[i+1][j]": 3730,
        "M[i": 3731,
        "shorts": 3732,
        "flag[0][0]": 3733,
        "flag[0][i]": 3734,
        "flag[0][i-1]": 3735,
        "flag[i][0]": 3736,
        "flag[i][j]": 3737,
        "flag[i][j-1]": 3738,
        "flag[i-1][j]": 3739,
        "anomalyFound": 3740,
        "mat[i][0]": 3741,
        "mat[i-1][0]": 3742,
        "mat[i+1][0]": 3743,
        "matriz": 3744,
        "suma": 3745,
        "matriz,": 3746,
        "matriz[i][j]": 3747,
        "aux[j]": 3748,
        "prom": 3749,
        "pass": 3750,
        "matriz[i][j+1]": 3751,
        "matriz[k][0]": 3752,
        "matriz[k+1][0]": 3753,
        "'x'": 3754,
        "n[0]": 3755,
        "n[j]": 3756,
        "c[i][j+1]": 3757,
        "c[i+1][j]": 3758,
        "s[i][j-1],": 3759,
        "s[i-1][j],": 3760,
        "tmp1,": 3761,
        "tmp3": 3762,
        "tmp1": 3763,
        "e[i][0]": 3764,
        "e[i][j]": 3765,
        "e[i": 3766,
        "e[i][j],": 3767,
        "e[i+1][0],": 3768,
        "isRow": 3769,
        "&=": 3770,
        "isRow(s[i])": 3771,
        "(s[i][0]": 3772,
        "1][0])": 3773,
        "last_stripe": 3774,
        "current_stripe": 3775,
        "stripe": 3776,
        "str.find_first_not_of(str[0],": 3777,
        "string::npos": 3778,
        "fre": 3779,
        "2005": 3780,
        "n-1,": 3781,
        "m-2": 3782,
        "str[i][j": 3783,
        "does": 3784,
        "n-2": 3785,
        "str[i": 3786,
        "Print": 3787,
        "(aux[j]": 3788,
        "48)": 3789,
        "matrix[i][j]": 3790,
        "(pass": 3791,
        "stderr": 3792,
        "prev": 3793,
        "'z'": 3794,
        "prev,": 3795,
        "s[i]j]": 3796,
        "s[i][j+1]": 3797,
        "s[i+1][0]": 3798,
        "a[i-1]": 3799,
        "a[i+1]": 3800,
        "s[n-i-1],": 3801,
        "s[n": 3802,
        "s[len])": 3803,
        "sizeof(used)": 3804,
        "used[s[i]]": 3805,
        "abs(s[n": 3806,
        "s[i])": 3807,
        "func": 3808,
        "goto": 3809,
        "b=true": 3810,
        "abs(s[x]": 3811,
        "s[y])": 3812,
        "upLetter": 3813,
        "letter": 3814,
        "downLetter": 3815,
        "palindrom": 3816,
        "begin,": 3817,
        "begin": 3818,
        "numW,": 3819,
        "numL,": 3820,
        "word": 3821,
        "readn": 3822,
        "numW": 3823,
        "numL": 3824,
        "word[j]m": 3825,
        "word[size": 3826,
        "200007": 3827,
        "s[n-i-1]": 3828,
        "num/2": 3829,
        "j=n-1": 3830,
        "cmp": 3831,
        "ch2-": 3832,
        "chk": 3833,
        "untile": 3834,
        "(int)s[i]": 3835,
        "(int)s[n": 3836,
        "w(0)": 3837,
        "f(0)": 3838,
        "'9',": 3839,
        "-w": 3840,
        "read()": 3841,
        "abs(s[i]": 3842,
        "i])": 3843,
        "abs(a[i]": 3844,
        "1-": 3845,
        "998244353": 3846,
        "ONLINE__JUDGE": 3847,
        "y[st]": 3848,
        "y[ed]": 3849,
        "valid(y[st],": 3850,
        "y[ed])": 3851,
        "ac": 3852,
        "S[i],": 3853,
        "S[n-i-1]": 3854,
        "lss": 3855,
        "str[l]": 3856,
        "str[r],": 3857,
        "act": 3858,
        "str[r]": 3859,
        "i]),": 3860,
        "reverse": 3861,
        "s2.begin()": 3862,
        "s2.end()": 3863,
        "s1.size()": 3864,
        "((abs(s1[i]": 3865,
        "s2[i])": 3866,
        "(s1[i]": 3867,
        "s2[i]))": 3868,
        "setf": 3869,
        "(n),": 3870,
        "mi": 3871,
        "1e9,": 3872,
        "-1e9,": 3873,
        "ints,": 3874,
        "1002,": 3875,
        "m/2": 3876,
        "abs(s[j]": 3877,
        "s[m": 3878,
        "j])": 3879,
        "n-j-1": 3880,
        "s[n-j-1]-1": 3881,
        "[n-j-1]-1": 3882,
        "inclsuive": 3883,
        "k=0": 3884,
        "m,s": 3885,
        "s[m-i-1]": 3886,
        "abs(s[i]-s[m-i-1])": 3887,
        "_=": 3888,
        "isP": 3889,
        "abs(s.at(i)": 3890,
        "s.at(n": 3891,
        "v4": 3892,
        "s2[j]": 3893,
        "can_change": 3894,
        "c--": 3895,
        "can_change(s[i],": 3896,
        "s[j])": 3897,
        "t=int": 3898,
        "i,flag=0": 3899,
        "i<n/2": 3900,
        "s[n-1-i]": 3901,
        "s[i]+2": 3902,
        "s[i]-2": 3903,
        "n,x=int": 3904,
        "k=x-1,": 3905,
        "s[j]-1": 3906,
        "s[k]+1": 3907,
        "s[j]+1": 3908,
        "s[k]-1": 3909,
        "s[lo++]": 3910,
        "s[hi--]": 3911,
        "(c1": 3912,
        "semicolumn": 3913,
        "T=int": 3914,
        "S=string": 3915,
        "ac=true": 3916,
        "t1=S[i]-97,": 3917,
        "t2=S[n-1-i]-97": 3918,
        "t1<t2": 3919,
        "t1-t2": 3920,
        "ac=false": 3921,
        "qpow": 3922,
        "again": 3923,
        "inve": 3924,
        "(mod": 3925,
        "inve(mod": 3926,
        "pri_num": 3927,
        "vis[i]": 3928,
        "prime[pri_num]": 3929,
        "vis[j]": 3930,
        "s[l]": 3931,
        "palin": 3932,
        "a[len": 3933,
        "((int)a[i]": 3934,
        "(c2": 3935,
        ",check": 3936,
        "there": 3937,
        "g1": 3938,
        "s[t": 3939,
        "(g": 3940,
        "g1)": 3941,
        "b1)": 3942,
        "\"-": 3943,
        "-\"": 3944,
        "(s[i]-s[n-i-1)": 3945,
        "(s[i]-s[n-i-1])": 3946,
        "\"YES|n\"": 3947,
        "palindrome": 3948,
        "modPow": 3949,
        "nCr": 3950,
        "i))": 3951,
        "modPow(i": 3952,
        "Sieve": 3953,
        "1000009": 3954,
        "sizeof(prime)": 3955,
        "1000006": 3956,
        "factorial": 3957,
        "factorial(n": 3958,
        "catalan": 3959,
        "(nCr(2": 3960,
        "modPow(n": 3961,
        "isCheck": 3962,
        "(a+1)": 3963,
        "(b-1)": 3964,
        "(b+1)": 3965,
        "(a-1)": 3966,
        "i=0,": 3967,
        "isCheck(str[i],": 3968,
        "str[j])": 3969,
        "going,": 3970,
        "ok(s[j],": 3971,
        "str=string": 3972,
        "tam=int": 3973,
        "teste": 3974,
        "tam": 3975,
        "i=int,": 3976,
        "lim=tam/2": 3977,
        "lim": 3978,
        "abs(str[i]-str[tam-i])": 3979,
        "ncasos=int": 3980,
        "ncasos": 3981,
        "teste()": 3982,
        "proverka": 3983,
        "proverka(s[j],": 3984,
        "othewise": 3985,
        "ans;": 3986,
        "57": 3987,
        "57,": 3988,
        "48,": 3989,
        "*pre": 3990,
        "&s[0]": 3991,
        "*end": 3992,
        "&s[n": 3993,
        "abs((*pre)": 3994,
        "(*end))": 3995,
        "ac(s,": 3996,
        "check_palindrome": 3997,
        "b2": 3998,
        "'b'": 3999,
        "'y'": 4000,
        "str[i],": 4001,
        "alphabetic": 4002,
        "order": 4003,
        "previous": 4004,
        "before": 4005,
        "code": 4006,
        "lines": 4007,
        "check_palindrome(s)": 4008,
        "a[l]": 4009,
        "(a[j]": 4010,
        "(a[k]": 4011,
        "candidate": 4012,
        "votes": 4013,
        "cond": 4014,
        "Max": 4015,
        "candidate[i]": 4016,
        "candidate[0]": 4017,
        "candidate[x]": 4018,
        "arr[105]": 4019,
        "-9999999": 4020,
        "arr[0]": 4021,
        "arr[k]": 4022,
        "ending": 4023,
        "v[sz],": 4024,
        "v[sz]": 4025,
        "INFF": 4026,
        "1000000000000000005LL": 4027,
        "priority_queue": 4028,
        "liz": 4029,
        "top": 4030,
        "pop": 4031,
        "ncandidates": 4032,
        "nvotes": 4033,
        "changedVotes": 4034,
        "bestIndex": 4035,
        "bestVotes": 4036,
        "votes[i]": 4037,
        "least": 4038,
        "votes[0]": 4039,
        "votes[bestIndex]": 4040,
        "leave": 4041,
        "a*b/gcd": 4042,
        "(a[0]": 4043,
        "pq": 4044,
        "priority": 4045,
        "queue": 4046,
        "counts=0": 4047,
        "a+2": 4048,
        "a+n+1": 4049,
        "t<=": 4050,
        "a[n]": 4051,
        "-10000": 4052,
        "(Max": 4053,
        "a[i]),": 4054,
        "Max),": 4055,
        "(a[1]": 4056,
        "Max)": 4057,
        "(flag)": 4058,
        "forward": 4059,
        "front": 4060,
        "biggest": 4061,
        "pq.empty()": 4062,
        "pq.top()": 4063,
        "a,x,temp,y=int": 4064,
        "g=0": 4065,
        "highnum=0": 4066,
        "highid=-1": 4067,
        "arr[y]": 4068,
        "highnum": 4069,
        "highid=y": 4070,
        "highid": 4071,
        "arr[highid]": 4072,
        "g=1": 4073,
        "log": 4074,
        "points": 4075,
        "allocate": 4076,
        "block": 4077,
        "memory": 4078,
        "(exclusive),": 4079,
        "log[i]": 4080,
        "smallest": 4081,
        "largest": 4082,
        "runs": 4083,
        "log[0]": 4084,
        "log[n-1]": 4085,
        "ara[i]": 4086,
        "ara[i],": 4087,
        "elemetns": 4088,
        "loops": 4089,
        "ascending": 4090,
        "ara[0]": 4091,
        "v[s": 4092,
        "forever": 4093,
        "v[0]": 4094,
        "a[107],": 4095,
        "i=2": 4096,
        "a+1": 4097,
        "p=a[n]": 4098,
        "a[n-1]": 4099,
        "vote": 4100,
        "most": 4101,
        "max_element": 4102,
        "as[n-2]": 4103,
        "cnt++": 4104,
        "choc": 4105,
        "voters": 4106,
        "maxv": 4107,
        "loc": 4108,
        "having": 4109,
        "v[1]": 4110,
        "arr[n-1]": 4111,
        "form": 4112,
        "arr[1000]": 4113,
        "l=": 4114,
        "arr[n": 4115,
        "arr+1": 4116,
        "arr+n": 4117,
        "font": 4118,
        "a[0]-ans": 4119,
        "comp": 4120,
        "fl": 4121,
        "my,": 4122,
        "my": 4123,
        "mx),": 4124,
        "mx)": 4125,
        "vec[0]": 4126,
        "voters.top()": 4127,
        "modn": 4128,
        "greater<int>()": 4129,
        "p.top()": 4130,
        "dq": 4131,
        "greatest": 4132,
        "q=priority_queue": 4133,
        "n,x,y,t=int,": 4134,
        "temp=0": 4135,
        "n,x": 4136,
        "y>=x": 4137,
        "t=first": 4138,
        "item": 4139,
        "t>=x": 4140,
        "f1": 4141,
        "[0]": 4142,
        "ff": 4143,
        "a[0],": 4144,
        "a[1],": 4145,
        "a[2],": 4146,
        "\"TRIANGLE\"": 4147,
        "\"SEGMENT\"": 4148,
        "\"IMPOSSIBLE\"": 4149,
        "interchange": 4150,
        "TRIANGLE": 4151,
        "SEGMENT": 4152,
        "IMPOSSIBLE": 4153,
        "xx+4": 4154,
        "b=0": 4155,
        "yy[b++]": 4156,
        "xx[j]": 4157,
        "yy[0]": 4158,
        "yy[1]": 4159,
        "yy[2],": 4160,
        "xx[0],": 4161,
        "xx[1],": 4162,
        "yy[b]": 4163,
        "valuef": 4164,
        "a[j]-a[k]": 4165,
        "\"IMPOSSIBLE\\n\"": 4166,
        "\"SEGMENT\\n\"": 4167,
        "\"TRIANGLE\\n\"": 4168,
        "a=": 4169,
        "a[k])": 4170,
        "(int)fabs((a[j]": 4171,
        "a[k]))),": 4172,
        "a[k],": 4173,
        "terminate": 4174,
        "t[2],": 4175,
        "t[3]": 4176,
        "t[i],": 4177,
        "t[j],": 4178,
        "t[k]": 4179,
        ",a[1]": 4180,
        "a+4": 4181,
        "OR|": 4182,
        "a[3])": 4183,
        "arr[1]": 4184,
        "arr[2]": 4185,
        "arr[3]": 4186,
        "'TRIANGLE\"": 4187,
        "arr=": 4188,
        "arr+4": 4189,
        "(arr[0]": 4190,
        "arr[2])": 4191,
        "(arr[1]": 4192,
        "arr[3])": 4193,
        "n[max]": 4194,
        "n[i]": 4195,
        "(n[1]": 4196,
        "n[2])": 4197,
        "n[2]": 4198,
        "n[3]": 4199,
        "n[1]": 4200,
        "n[max],": 4201,
        "arr[0],": 4202,
        "arr[1],": 4203,
        "a[i+2]": 4204,
        "ar[i]": 4205,
        "ar[3]": 4206,
        "ar[0]": 4207,
        "ar[1]": 4208,
        "ar[2]": 4209,
        "ar[2],": 4210,
        "ar[1],": 4211,
        "v[i-1]": 4212,
        "v[i-2]": 4213,
        "v[i-1]+v[i-2]": 4214,
        "best": 4215,
        "v[2]": 4216,
        "best=integer,": 4217,
        "v=": 4218,
        "swap(a,": 4219,
        "swap(b,": 4220,
        "swap(c,": 4221,
        "=integer,": 4222,
        "a[1]=": 4223,
        "a[2])": 4224,
        ",swap(b,": 4225,
        "x[2]": 4226,
        "x[3]": 4227,
        "exit(0)": 4228,
        "par": 4229,
        "l[1]": 4230,
        "l[2]": 4231,
        "l[3]": 4232,
        "l[0]": 4233,
        "arr[min]": 4234,
        "arr[j],": 4235,
        "11111": 4236,
        "'IMPOSSIBLE\"": 4237,
        "checkDegenerate": 4238,
        "check(a[1],": 4239,
        "check(a[2],": 4240,
        "a[3],": 4241,
        "a[4])": 4242,
        "checkDegenerate(a[1],": 4243,
        "checkDegenerate(a[2],": 4244,
        "exchange": 4245,
        "seg": 4246,
        "normal": 4247,
        "deg": 4248,
        "(tr(a,": 4249,
        "c))": 4250,
        "d))": 4251,
        "(tr(b,": 4252,
        "(seg(a,": 4253,
        "(seg(b,": 4254,
        "b+c": 4255,
        "constants": 4256,
        "tri": 4257,
        "\"TRIANGLE\\n\",": 4258,
        "\"SEGMENT\\n\",": 4259,
        "1]),": 4260,
        "reopen": 4261,
        "\"debug.txt\"": 4262,
        "len[0]": 4263,
        "len[1]": 4264,
        "len[2]": 4265,
        "len[3]": 4266,
        "f[2]": 4267,
        "f[3]": 4268,
        "equ": 4269,
        "|=": 4270,
        "tri(a,": 4271,
        "tri(b,": 4272,
        "\"TRIANGLE\",": 4273,
        "equ(a,": 4274,
        "equ(b,": 4275,
        "\"SEGMENT\",": 4276,
        "check(a,": 4277,
        "check(b,": 4278,
        "ch(a,": 4279,
        "ch(a,b,d)": 4280,
        "ch(b,c,d)": 4281,
        "ch(a,c,d),": 4282,
        "1,2,3,4": 4283,
        "continuing": 4284,
        "statement,": 4285,
        "j'th": 4286,
        "i'th": 4287,
        "k'th": 4288,
        "SEGMENT,": 4289,
        "IMPOSSIBLE,": 4290,
        "triangle,": 4291,
        "segment": 4292,
        "triangle": 4293,
        "stat": 4294,
        "match": 4295,
        "base": 4296,
        "(num": 4297,
        "base)": 4298,
        "arr[": 4299,
        "arr2[": 4300,
        "match(num)": 4301,
        "arrr2[": 4302,
        "pad": 4303,
        "get(n)": 4304,
        "m[num]": 4305,
        "18,": 4306,
        "m[str]": 4307,
        "5e5": 4308,
        "(1LL": 4309,
        "mt": 4310,
        "mt[get(x)]": 4311,
        "pow(2,": 4312,
        "s.length()": 4313,
        "mt[res]": 4314,
        "'),": 4315,
        "(char)((a[i]": 4316,
        "'0')": 4317,
        "c[r]": 4318,
        "')": 4319,
        "c[a]": 4320,
        "a[tmp]": 4321,
        "(long": 4322,
        "long)length": 4323,
        "((int)(s[j]": 4324,
        "0))": 4325,
        "s.find(1)": 4326,
        "s.substr(pos1)": 4327,
        "mp[s]": 4328,
        "fast_exp": 4329,
        "non": 4330,
        "theen": 4331,
        "res*base%mod": 4332,
        "base^2": 4333,
        "re": 4334,
        "longn": 4335,
        "mg": 4336,
        "conv": 4337,
        "ChuyenDoi": 4338,
        "\"000000000000000000\"": 4339,
        "a[ma]": 4340,
        "flat": 4341,
        "string,": 4342,
        "=char": 4343,
        "flat[a]": 4344,
        "524289": 4345,
        "pos)": 4346,
        "conv(num)": 4347,
        "+)": 4348,
        "arr[position]": 4349,
        "-)": 4350,
        "x[p]": 4351,
        "tran": 4352,
        "elements,": 4353,
        "res[18": 4354,
        "(s[length": 4355,
        "biao": 4356,
        "op": 4357,
        "biao[num]": 4358,
        "resulf": 4359,
        "tran(s)": 4360,
        "alter": 4361,
        "(x[idx]": 4362,
        "x.size()": 4363,
        "dig": 4364,
        "(x[i]": 4365,
        "alter(x)": 4366,
        "cnt.find(x)": 4367,
        "cnt.end()": 4368,
        "cnt[x]": 4369,
        "{x": 4370,
        "tipo": 4371,
        "s[c]=0,": 4372,
        "usa": 4373,
        "us": 4374,
        "cont[usa]": 4375,
        "m[": 4376,
        "f(a)": 4377,
        "m[s],": 4378,
        "inter": 4379,
        "(ss[i]": 4380,
        "poss": 4381,
        "inter(s)": 4382,
        "ok[s]": 4383,
        "x=": 4384,
        "siz=": 4385,
        "siz": 4386,
        "(int(s[i])": 4387,
        "-siz": 4388,
        "s2+s1": 4389,
        "m[s2]": 4390,
        "(s[i])": 4391,
        "x=?": 4392,
        "ope": 4393,
        "bi": 4394,
        "m[bi]": 4395,
        "m[b]": 4396,
        "query": 4397,
        "(left": 4398,
        "place)": 4399,
        "?)": 4400,
        "num.size()": 4401,
        "(num[i]": 4402,
        "query[x]": 4403,
        "((cast": 4404,
        "integer)(num[i]": 4405,
        "tobin": 4406,
        "m[tobin": 4407,
        "x]": 4408,
        "constance": 4409,
        "1000*1000*1000": 4410,
        "var": 4411,
        "lol(x)": 4412,
        "prepend": 4413,
        "mp[ans[i]]": 4414,
        "q;": 4415,
        "str,x": 4416,
        "m[y]": 4417,
        "maxm": 4418,
        "mp1": 4419,
        "mp2": 4420,
        "mp1[num]": 4421,
        "mp2[str]": 4422,
        "getsolved": 4423,
        "alpha": 4424,
        "getsolved(num)": 4425,
        "a[y]": 4426,
        "mymap": 4427,
        "reads": 4428,
        "mp[d]": 4429,
        "delete": 4430,
        "((d": 4431,
        "mymap[s]": 4432,
        "mymap=map": 4433,
        "n=int,": 4434,
        "sum=0": 4435,
        "ch=char": 4436,
        "base=0": 4437,
        "remains": 4438,
        "ch,s": 4439,
        "sum,base=0": 4440,
        "i=length": 4441,
        "k=s[i]-'0'": 4442,
        "mymap[sum]": 4443,
        "res.find_first_not_of(0)": 4444,
        "res.substr(pos,": 4445,
        "pot": 4446,
        "s=+": 4447,
        "num=0": 4448,
        ">0": 4449,
        "+pot": 4450,
        "pot*10": 4451,
        "aux/10": 4452,
        "m[aux]": 4453,
        "IntToPattern": 4454,
        "patt": 4455,
        "nl": 4456,
        "el": 4457,
        "IntToPattern(el)": 4458,
        "p[t]": 4459,
        "sl": 4460,
        "p[temp]": 4461,
        "Cnt": 4462,
        "q--": 4463,
        "msk": 4464,
        "truthy,": 4465,
        "Cnt[msk]": 4466,
        "x+k": 4467,
        "k*2": 4468,
        "c=+,": 4469,
        "m[x]": 4470,
        "c=-,": 4471,
        "c=?,": 4472,
        "f[1000000]": 4473,
        "ch=+": 4474,
        "cn": 4475,
        "p=": 4476,
        "x/10": 4477,
        "f[s]": 4478,
        "t[i]=1,": 4479,
        "a/__gcd(a,b)*b": 4480,
        "dX": 4481,
        "dY": 4482,
        "s[i]-'0'": 4483,
        "mp[ss]": 4484,
        "20,": 4485,
        "map1": 4486,
        "tmp1[0]": 4487,
        "t[i]": 4488,
        "t[19]": 4489,
        "map1[t]": 4490,
        "tmp[0]": 4491,
        "tmp[lens-i]": 4492,
        "map1[t],": 4493,
        "newlien": 4494,
        "get_str": 4495,
        "string)": 4496,
        "s=\"\"": 4497,
        "n=num": 4498,
        "mp=map": 4499,
        "num=long": 4500,
        "sp=string": 4501,
        "sp": 4502,
        "str=get_str(num)": 4503,
        "mp[str]": 4504,
        "mcnt=0": 4505,
        "lead=0": 4506,
        "sp[i]": 4507,
        "s=substring": 4508,
        "sp-cnt": 4509,
        "mcnt": 4510,
        "s=\"0\"": 4511,
        "mp[m]": 4512,
        "h1,": 4513,
        "h2,": 4514,
        "'S',": 4515,
        "(h1": 4516,
        "h2)": 4517,
        "rr": 4518,
        "cc": 4519,
        "rr[i]": 4520,
        "cc[i]": 4521,
        "'S'": 4522,
        "cnt[2]": 4523,
        "cnt[0]": 4524,
        "cnt[1]": 4525,
        "put": 4526,
        "row[i]": 4527,
        "col[j]": 4528,
        "!(row[i]": 4529,
        "col[j]),": 4530,
        "11,": 4531,
        "c[j],": 4532,
        "'.',": 4533,
        "cnt1,": 4534,
        "arr[i][c]": 4535,
        "arr[r][j]": 4536,
        "r,c,": 4537,
        "row=array": 4538,
        "Create": 4539,
        "(i=0": 4540,
        "r(exclusive))": 4541,
        "(j=0": 4542,
        "c(exclusive))": 4543,
        "if(s[j]": 4544,
        "'S')": 4545,
        "execute": 4546,
        "row[i]=1": 4547,
        "col[j]=1": 4548,
        "cakes=0": 4549,
        "if(row[i]==0": 4550,
        "col[j]==0)": 4551,
        "cakes": 4552,
        "bools": 4553,
        "default": 4554,
        "cols": 4555,
        "rows[i]": 4556,
        "cols[j]": 4557,
        "vis,": 4558,
        "12,": 4559,
        "col[i]": 4560,
        "t[i][j]": 4561,
        "x,y,": 4562,
        "true,increment": 4563,
        "respectively": 4564,
        "r=": 4565,
        "memset(r,": 4566,
        "sizeof(r))": 4567,
        "memset(c,": 4568,
        "sizeof(c))": 4569,
        "memset(b,": 4570,
        "sizeof(b))": 4571,
        "exclusive),": 4572,
        "(s[i][j]": 4573,
        ".)": 4574,
        "(for": 4575,
        "j=": 4576,
        "(b[j][i]": 4577,
        "b[j]": 4578,
        "b[j],": 4579,
        "{false}": 4580,
        "coun,": 4581,
        "arr[w][i]": 4582,
        "a[w][i]": 4583,
        "a[w][n]": 4584,
        "arr[i][w]": 4585,
        "a[i][w]": 4586,
        "sizeof(r)": 4587,
        "sizeof(c)": 4588,
        "eaten": 4589,
        "Input": 4590,
        "Solve": 4591,
        "eaten[i][j]": 4592,
        "hor,": 4593,
        "ver,": 4594,
        "hor": 4595,
        "ver": 4596,
        "v[y][x]": 4597,
        "hor[x]": 4598,
        "ver[y]": 4599,
        "ver[y],": 4600,
        "sets": 4601,
        "cake": 4602,
        "r,c": 4603,
        "exclusive,increase": 4604,
        "noteaten_r": 4605,
        "noteaten_c": 4606,
        "y[i][j]": 4607,
        "y[j][i]": 4608,
        "x[j][i]": 4609,
        "freq": 4610,
        "freq1": 4611,
        "zeroes": 4612,
        "freq[i]": 4613,
        "freq1[j]": 4614,
        "freq1[i]": 4615,
        "maxn,": 4616,
        "C,": 4617,
        "r[i],": 4618,
        "a[i-cnt]": 4619,
        "a[u][j]": 4620,
        "vis[0][i]": 4621,
        "vis[1][j]": 4622,
        "chn,": 4623,
        "chm": 4624,
        "chn": 4625,
        "vis[1][i]": 4626,
        "(chn": 4627,
        "(chm": 4628,
        "chm)": 4629,
        "ans=integer": 4630,
        "(s1.size()": 4631,
        "s2.size())": 4632,
        "ro": 4633,
        "ro[i]": 4634,
        "co[j]": 4635,
        "'n'": 4636,
        "co[i]": 4637,
        "rowsDeleted": 4638,
        "**inputArr": 4639,
        "*rows": 4640,
        "*cols": 4641,
        "inputArr[i]": 4642,
        "inputArr[i][j]": 4643,
        "lenght": 4644,
        "rowCount,": 4645,
        "colCount,": 4646,
        "rowCount": 4647,
        "colCount": 4648,
        "prunt": 4649,
        "(rowCount": 4650,
        "colCount)": 4651,
        "sizeof": 4652,
        "rb": 4653,
        "cb": 4654,
        "rb[i]": 4655,
        "cb[j]": 4656,
        "cb[i]": 4657,
        "rb[j]": 4658,
        "lenghts": 4659,
        "cont,": 4660,
        "cont2,": 4661,
        "aux1": 4662,
        "aux2": 4663,
        "cont=0,": 4664,
        "cont2=0,": 4665,
        "aux1=0": 4666,
        "aux2=0": 4667,
        "m[j][i]": 4668,
        "cont2": 4669,
        "'@'": 4670,
        "(r": 4671,
        "(max(r,": 4672,
        "min(r,": 4673,
        "line[j]": 4674,
        "trans": 4675,
        "arr2[j]": 4676,
        "arr2[i]": 4677,
        "str[j][i]": 4678,
        "onf": 4679,
        "rowSet": 4680,
        "colSet": 4681,
        "eatable": 4682,
        "(rows": 4683,
        "(cols": 4684,
        "cols)": 4685,
        "\"purple\"": 4686,
        "\"Power\"": 4687,
        "\"green\"": 4688,
        "\"Time\"": 4689,
        "\"blue\"": 4690,
        "\"Space\"": 4691,
        "\"orange\"": 4692,
        "\"Soul\"": 4693,
        "\"red\"": 4694,
        "\"Reality\"": 4695,
        "\"yellow\"": 4696,
        "\"Mind\"": 4697,
        "a[j],": 4698,
        "\"00\"": 4699,
        "\"00\",": 4700,
        "{\"Power\",": 4701,
        "\"Time\",": 4702,
        "\"Space\",": 4703,
        "\"Soul\",": 4704,
        "\"Reality\",": 4705,
        "\"Mind\"}": 4706,
        "\"purple\",": 4707,
        "book[0]": 4708,
        "\"green\",": 4709,
        "book[1]": 4710,
        "\"blue\",": 4711,
        "book[2]": 4712,
        "\"orange\",": 4713,
        "book[3]": 4714,
        "\"red\",": 4715,
        "book[4]": 4716,
        "\"yellow\",": 4717,
        "book[5]": 4718,
        "index[p]": 4719,
        "index[g]": 4720,
        "index[b]": 4721,
        "index[o]": 4722,
        "index[r]": 4723,
        "index[y]": 4724,
        "names": 4725,
        "Power,": 4726,
        "Time,": 4727,
        "Space,": 4728,
        "Soul,": 4729,
        "Reality,": 4730,
        "Mind": 4731,
        "need": 4732,
        "names[index[color[0]]]": 4733,
        "null": 4734,
        "names[x][0]": 4735,
        "names[x]": 4736,
        "v[j],": 4737,
        "maxn=100010": 4738,
        "\"Power\",": 4739,
        "'p'": 4740,
        "vis[0]": 4741,
        "'g'": 4742,
        "vis[1]": 4743,
        "vis[2]": 4744,
        "'o'": 4745,
        "vis[3]": 4746,
        "'r'": 4747,
        "vis[4]": 4748,
        "vis[5]": 4749,
        "q[\"purple\"]": 4750,
        "q[\"green\"]": 4751,
        "q[\"blue\"]": 4752,
        "q[\"orange\"]": 4753,
        "q[\"red\"]": 4754,
        "q[\"yellow\"]": 4755,
        "q[ss]": 4756,
        "ignore": 4757,
        "\"-1\"": 4758,
        "\"red\"]": 4759,
        "comparison": 4760,
        "inp[i]": 4761,
        "s1[i]": 4762,
        "inp[j],": 4763,
        "s2[i]": 4764,
        "Power\\nTime\\nSpace\\nSoul\\nReality\\nMind\\n": 4765,
        "purple": 4766,
        "args": 4767,
        "rfind": 4768,
        "line,": 4769,
        "v[3]": 4770,
        "v[4]": 4771,
        "v[5]": 4772,
        "x5": 4773,
        "x6": 4774,
        "'p',": 4775,
        "'g',": 4776,
        "'b',": 4777,
        "'r',": 4778,
        "'y',": 4779,
        "!x3": 4780,
        "!x4": 4781,
        "!x5": 4782,
        "\"Mind\",": 4783,
        "'o',": 4784,
        "m['p']": 4785,
        "m['g']": 4786,
        "m['b']": 4787,
        "m['o']": 4788,
        "m['r']": 4789,
        "m['y']": 4790,
        "m[s[0]]": 4791,
        "output=array": 4792,
        "temp=string": 4793,
        "out=array": 4794,
        "out[j]=false": 4795,
        "t=0": 4796,
        "output[i]": 4797,
        "rean": 4798,
        "color[0]": 4799,
        "color[2]": 4800,
        "color[3]": 4801,
        "color[5]": 4802,
        "vvod": 4803,
        "Power": 4804,
        "green": 4805,
        "Time": 4806,
        "blue": 4807,
        "Space": 4808,
        "orange": 4809,
        "Soul": 4810,
        "red": 4811,
        "Reality": 4812,
        "yellow": 4813,
        "f[p],": 4814,
        "f[p]": 4815,
        "f[\"purple\"]": 4816,
        "f[\"green\"]": 4817,
        "f[\"blue\"]": 4818,
        "f[\"orange\"]": 4819,
        "f[\"red\"]": 4820,
        "f[\"yellow\"]": 4821,
        "reshala,": 4822,
        "gol,": 4823,
        "kachok,": 4824,
        "y=": 4825,
        "reshala": 4826,
        "gol": 4827,
        "kachok": 4828,
        "nome": 4829,
        "0s": 4830,
        "purple,": 4831,
        "green,": 4832,
        "blue,": 4833,
        "orange,": 4834,
        "red,": 4835,
        "yellow,": 4836,
        "mas": 4837,
        "=\"Power\",": 4838,
        "mas1": 4839,
        "=\"purple\",": 4840,
        "inclusve": 4841,
        "Names": 4842,
        "DeleteIt": 4843,
        "nothing": 4844,
        "replace": 4845,
        "Names[x]": 4846,
        "Colours": 4847,
        "Colours[i]": 4848,
        "Names[i]": 4849,
        "s_color": 4850,
        "s_ip": 4851,
        "s_color[i]": 4852,
        "s_ip[j]": 4853,
        "vis[6]": 4854,
        "a.second": 4855,
        "si": 4856,
        "c=1,": 4857,
        "k=array": 4858,
        "k[ans]": 4859,
        "k[i]": 4860,
        "y[2]": 4861,
        "y[3]": 4862,
        "y[4]": 4863,
        "y[5]": 4864,
        "y[6]": 4865,
        "y[i]": 4866,
        "vet": 4867,
        "vet[i]": 4868,
        "vet[j]": 4869,
        "\"Power\\n\"": 4870,
        "\"Time\\n\"": 4871,
        "\"Space\\n\"": 4872,
        "\"Soul\\n\"": 4873,
        "\"Reality\\n\"": 4874,
        "\"Mind\\n\"": 4875,
        "puno": 4876,
        "nula": 4877,
        "c[4]": 4878,
        "c[5]": 4879,
        "nope": 4880,
        "nope,": 4881,
        "GetStone": 4882,
        "FindNotFound": 4883,
        "stone,": 4884,
        "stones,": 4885,
        "bool)": 4886,
        "ret=false": 4887,
        "stones": 4888,
        "stone": 4889,
        "stones[i]": 4890,
        "ret=true": 4891,
        "stones=vector": 4892,
        "st=vector": 4893,
        "GetStone(s)": 4894,
        "not_found=vector": 4895,
        "FindNotFound(stones[j],": 4896,
        "stones[j]": 4897,
        "not_found": 4898,
        "not_found[i]": 4899,
        "gem": 4900,
        "{\"purple\",": 4901,
        "\"yellow\"}": 4902,
        "have": 4903,
        "color[i]": 4904,
        "gem[i]": 4905,
        "out,": 4906,
        "mass": 4907,
        "mass[i]": 4908,
        "mass[0]": 4909,
        "mass[1]": 4910,
        "mass[2]": 4911,
        "mass[3]": 4912,
        "mass[4]": 4913,
        "mass[5]": 4914,
        "6-n": 4915,
        "n,i=int,": 4916,
        "b[0]=0": 4917,
        "b[1]=0": 4918,
        "b[2]=0": 4919,
        "b[3]=0": 4920,
        "b[4]=0": 4921,
        "b[5]=0": 4922,
        "ans1": 4923,
        "ans2": 4924,
        "ans3": 4925,
        "ans4": 4926,
        "ans5": 4927,
        "ans6": 4928,
        "sir": 4929,
        "colors": 4930,
        "strcmp(sir,": 4931,
        "colors[0]": 4932,
        "has[0]": 4933,
        "colors[1])": 4934,
        "has[1]": 4935,
        "colors[2])": 4936,
        "has[2]": 4937,
        "colors[3])": 4938,
        "has[3]": 4939,
        "colors[4])": 4940,
        "has[4]": 4941,
        "colors[5])": 4942,
        "has[5]": 4943,
        "has[i]": 4944,
        "gems": 4945,
        "mp[\"purple\"]": 4946,
        "mp[\"green\"]": 4947,
        "mp[\"blue\"]": 4948,
        "mp[\"orange\"]": 4949,
        "mp[\"red\"]": 4950,
        "mp[\"yellow\"]": 4951,
        "id[mp[color]]": 4952,
        "id[i]": 4953,
        "gems[i]": 4954,
        "inf[0]": 4955,
        "color[1]": 4956,
        "inf[1]": 4957,
        "inf[2]": 4958,
        "inf[3]": 4959,
        "color[4]": 4960,
        "inf[4]": 4961,
        "inf[5]": 4962,
        "color[j]": 4963,
        "inf[i]": 4964,
        "isdigit(ch)": 4965,
        "iterating": 4966,
        "getchar(),": 4967,
        "^": 4968,
        "(ch": 4969,
        "'-')": 4970,
        "-x": 4971,
        "vis[read()]": 4972,
        "a[g]": 4973,
        "exclusivev": 4974,
        "r[y]": 4975,
        "101-element": 4976,
        "no,": 4977,
        "signal,": 4978,
        "signal": 4979,
        "postdecremented": 4980,
        "flag[no]": 4981,
        "flag[i]": 4982,
        "!signal": 4983,
        "tt,t=int": 4984,
        "vis=false": 4985,
        "vis=true": 4986,
        "bt": 4987,
        "bohlam": 4988,
        "list": 4989,
        "duplicate": 4990,
        "consecutive": 4991,
        "150": 4992,
        "vis[x]": 4993,
        "blag": 4994,
        "1,000-element": 4995,
        "Boolean": 4996,
        "cek": 4997,
        "cek[b]": 4998,
        "!cek[i]": 4999,
        "a[num]": 5000,
        "a[b]": 5001,
        "INF_INT": 5002,
        "2147483647": 5003,
        "INF_LL": 5004,
        "9223372036854775807LL": 5005,
        "INF_ULL": 5006,
        "18446744073709551615Ull": 5007,
        "P": 5008,
        "92540646808111039LL": 5009,
        "Move[4][2]": 5010,
        "Move_": 5011,
        "[8][2]": 5012,
        "lasagna[696969]": 5013,
        "cyka": 5014,
        "blyat": 5015,
        "A=0": 5016,
        "lasagna[cyka]": 5017,
        "lasagna[a]": 5018,
        "a[c]": 5019,
        "i--": 5020,
        "mp[k]": 5021,
        "p=set": 5022,
        "x,y=int": 5023,
        "a=int": 5024,
        "m=int": 5025,
        "l=int": 5026,
        "l=size": 5027,
        "buttons,": 5028,
        "bulbs": 5029,
        "marks": 5030,
        "marks[0]": 5031,
        "buttons": 5032,
        "connected,": 5033,
        "bulb_no": 5034,
        "connected": 5035,
        "marks[bulb_no]": 5036,
        "is_possible": 5037,
        "marks[i]": 5038,
        "ccreate": 5039,
        "go[z]": 5040,
        "go[i]": 5041,
        "inserting": 5042,
        "it()": 5043,
        "a[y1]": 5044,
        "a[xx]": 5045,
        "sizeofb": 5046,
        "b[a]": 5047,
        "105-elt.": 5048,
        "dc,": 5049,
        "bulb": 5050,
        "bulb[kk]": 5051,
        "bulb[i]": 5052,
        "towhid": 5053,
        "towhid.size()": 5054,
        "H": 5055,
        "cek[B]": 5056,
        "cek[i]": 5057,
        ",x,": 5058,
        "tail": 5059,
        "bulbs[i]": 5060,
        "F": 5061,
        "bulbs[next]": 5062,
        "removeDuplicates": 5063,
        "+1],": 5064,
        "temp[j++]": 5065,
        "bul": 5066,
        "bul[y]": 5067,
        "sizebul": 5068,
        "removeDuplicates(bul,": 5069,
        "sizebul)": 5070,
        "vis[y]": 5071,
        "LIM": 5072,
        "nb": 5073,
        "nbulb": 5074,
        "nb--": 5075,
        "qt": 5076,
        "qt--": 5077,
        "vis[a]": 5078,
        "l[x]": 5079,
        "20001": 5080,
        "An": 5081,
        "book[y]": 5082,
        "!flag": 5083,
        "m-element": 5084,
        "fill(a,": 5085,
        "a[c": 5086,
        "turned": 5087,
        "turned[a]": 5088,
        "turned[i]": 5089,
        "a[t2]": 5090,
        "contain": 5091,
        "p[r]": 5092,
        "10^9+7": 5093,
        "l>0": 5094,
        "MOD,": 5095,
        "res=(res*x)": 5096,
        "x=(x*x)": 5097,
        "arr[i]=0": 5098,
        "esclusive": 5099,
        "g=int": 5100,
        "arr[g-1]": 5101,
        "done=true": 5102,
        "asc": 5103,
        "(t/(m-1))": 5104,
        "(m-1))": 5105,
        "(m-1))+1": 5106,
        "(asc": 5107,
        "(not": 5108,
        "now)": 5109,
        "f)": 5110,
        "f))": 5111,
        "dt": 5112,
        "(dt": 5113,
        "nr,": 5114,
        "!dir": 5115,
        "Control": 5116,
        "jumps": 5117,
        "curlower": 5118,
        "NeedTime": 5119,
        "curlower)": 5120,
        "curlower,": 5121,
        "t=": 5122,
        "s<f": 5123,
        "tim": 5124,
        "tim=tim+": 5125,
        "2*m-2": 5126,
        "tim=": 5127,
        "seed": 5128,
        "131": 5129,
        "1200": 5130,
        "(f": 5131,
        "((m": 5132,
        "si,": 5133,
        "fi,": 5134,
        "gotodown,": 5135,
        "gotoup": 5136,
        "moves": 5137,
        "fi": 5138,
        "gotodown": 5139,
        "(position": 5140,
        "fi)": 5141,
        "(fi": 5142,
        "position)": 5143,
        "piso,": 5144,
        "piso": 5145,
        "(piso": 5146,
        "dist": 5147,
        "2*(M-1)": 5148,
        "(sx": 5149,
        "mod)": 5150,
        "(sy": 5151,
        "ts": 5152,
        "fx)": 5153,
        "(fx": 5154,
        "(fy": 5155,
        "xxx": 5156,
        "ud": 5157,
        "control": 5158,
        "to(t[i]": 5159,
        "ax": 5160,
        "(n-1)": 5161,
        "l/2": 5162,
        "(l/2)": 5163,
        "-(m": 5164,
        "work": 5165,
        "0if": 5166,
        "abs(F(t))": 5167,
        "F(t)": 5168,
        "(F(t)": 5169,
        "abs(F(t)))": 5170,
        "work()": 5171,
        "ans=": 5172,
        "over": 5173,
        "1)))": 5174,
        "a)),": 5175,
        "timr": 5176,
        "(fin": 5177,
        "((2": 5178,
        "s[i]))": 5179,
        "max3": 5180,
        "adji": 5181,
        "adjo": 5182,
        "10000000000": 5183,
        "dif": 5184,
        "dif)": 5185,
        "(dif": 5186,
        "-=": 5187,
        "-f": 5188,
        "u_d,": 5189,
        "d_u,": 5190,
        "u_d": 5191,
        "d_u": 5192,
        "nap": 5193,
        "et": 5194,
        "t/m": 5195,
        "t/m+1": 5196,
        "-s": 5197,
        "(et": 5198,
        "s),": 5199,
        "tem": 5200,
        "et),": 5201,
        "temp=(et": 5202,
        "et)": 5203,
        "s-": 5204,
        "f),": 5205,
        "(in": 5206,
        "abs(in": 5207,
        "o)": 5208,
        "in)": 5209,
        "integerss": 5210,
        "tm": 5211,
        "tim(et(t[i]),": 5212,
        "s[i],t[i])": 5213,
        "ttt": 5214,
        "tim(s[i],": 5215,
        "f[i],tt)": 5216,
        "0x3FFFFFFF": 5217,
        "f[i],": 5218,
        "(((t[i]": 5219,
        "mp[h]": 5220,
        "mp[l]": 5221,
        "lca": 5222,
        "mp,": 5223,
        "mp[v]": 5224,
        "tp,": 5225,
        "lca(u,v,w)": 5226,
        "lcu(u,v)": 5227,
        "peso": 5228,
        "peso[max": 5229,
        "v]": 5230,
        "contains": 5231,
        "op,": 5232,
        "LCA": 5233,
        "v/2": 5234,
        "u/2": 5235,
        "LCA(u,": 5236,
        "mp[u]": 5237,
        "3e5": 5238,
        "&a": 5239,
        "&b": 5240,
        "a.first": 5241,
        "b.first": 5242,
        "mp[n]": 5243,
        ",m": 5244,
        "(log2(u)": 5245,
        "log2(v)),": 5246,
        "swap(u,": 5247,
        "cal": 5248,
        "LCA(x,": 5249,
        "cal(l,": 5250,
        "dp[v]": 5251,
        "parent": 5252,
        "parent(n/2)": 5253,
        "route": 5254,
        "pu": 5255,
        "parent(u),": 5256,
        "parent(v)": 5257,
        "mxcommon": 5258,
        "pu[i]": 5259,
        "rta": 5260,
        "cost": 5261,
        ",p": 5262,
        "cost[make": 5263,
        "from(minimum": 5264,
        "of(r[i]": 5265,
        "r[i": 5266,
        "1]))]": 5267,
        "),": 5268,
        "131071": 5269,
        "a[v]": 5270,
        "pair,": 5271,
        "m[make_pair": 5272,
        "q)": 5273,
        "sel": 5274,
        "depth": 5275,
        "(v": 5276,
        "place": 5277,
        "<pair<long": 5278,
        "long>,": 5279,
        "long>": 5280,
        "dep_u,": 5281,
        "dep_v": 5282,
        "dep_u": 5283,
        "depth(u),": 5284,
        "depth(v)": 5285,
        "(dep_v": 5286,
        "dep_u)": 5287,
        "(dep_u": 5288,
        "dep_v)": 5289,
        "A[pair<long": 5290,
        "long>(u,": 5291,
        "2)]": 5292,
        "long>(v,": 5293,
        "(A.find(pair<long": 5294,
        "A.end())": 5295,
        "{": 5296,
        "decrementim": 5297,
        "temp2,": 5298,
        "temp0": 5299,
        "M[temp1]": 5300,
        "pair<long": 5301,
        "getPr": 5302,
        "getPr(u": 5303,
        "getPr(u,": 5304,
        "getAns": 5305,
        "finish": 5306,
        "value[make_pair(start": 5307,
        "start)]": 5308,
        "getAns(start": 5309,
        "finish)": 5310,
        "setTree": 5311,
        "end,": 5312,
        "value[make_pair(v": 5313,
        "v)]": 5314,
        "send": 5315,
        "getAns(u,": 5316,
        "pr)": 5317,
        "getAns(v,": 5318,
        "x>y": 5319,
        "cost=map": 5320,
        "poskupi": 5321,
        "x,y,w,": 5322,
        "cost[x]": 5323,
        "cost[y]": 5324,
        "cena": 5325,
        "q=int": 5326,
        "u,v,w=long": 5327,
        "u,v,w": 5328,
        "poskupi(u,v,w)": 5329,
        "u,v=long": 5330,
        "u,v": 5331,
        "cena(u,v)": 5332,
        "p,u": 5333,
        "m[u]": 5334,
        "m[v]": 5335,
        "q-1": 5336,
        "M[v]": 5337,
        "solve(u,": 5338,
        "e=long": 5339,
        "lol=pair": 5340,
        "signature": 5341,
        "finder": 5342,
        "a,b,c": 5343,
        "p=a,": 5344,
        "q=b": 5345,
        "x=lca()": 5346,
        "brainfuck()": 5347,
        "finder()": 5348,
        "log2(p)<log2(q)": 5349,
        "log_=1": 5350,
        "y=log2(p)": 5351,
        "x=log2(q)": 5352,
        "2^log_": 5353,
        "log_": 5354,
        "i=log_": 5355,
        "y-2^(i-1)": 5356,
        "substract": 5357,
        "2^(i-1)": 5358,
        "p/2": 5359,
        "q/2": 5360,
        "e=a": 5361,
        "lol=e": 5362,
        "lol=a": 5363,
        "mp[lol]": 5364,
        "mp[lol]=z": 5365,
        "e=b": 5366,
        "lol=b": 5367,
        "m[{a,": 5368,
        "2}]": 5369,
        "dis": 5370,
        "m[{b,": 5371,
        "anc": 5372,
        "anc,": 5373,
        "cost[{v,": 5374,
        "cost[{v": 5375,
        "v}]": 5376,
        "qq": 5377,
        "u),": 5378,
        "inteiger": 5379,
        "lca(u,v),": 5380,
        "tht": 5381,
        "(p.find(v)": 5382,
        "p.end()),": 5383,
        "(m[make_pair(v": 5384,
        "v)])": 5385,
        "m[make_pair(v": 5386,
        "dfs2": 5387,
        "get(u,": 5388,
        "dfs2(p,": 5389,
        "tree": 5390,
        "add_path": 5391,
        "tree[v]": 5392,
        "tree[u]": 5393,
        "dist(u,": 5394,
        "wh,": 5395,
        "wh": 5396,
        "M[u]": 5397,
        "max1": 5398,
        "m],": 5399,
        "s[j],": 5400,
        "freq[temp]": 5401,
        "++freq[temp]": 5402,
        "length,": 5403,
        "k],": 5404,
        "Max;": 5405,
        "pnt": 5406,
        "t[j": 5407,
        "judge(x)": 5408,
        "m[ss]": 5409,
        "s]": 5410,
        "ar[j": 5411,
        "s],": 5412,
        "1000000,": 5413,
        "s[ii]": 5414,
        "s[jj]": 5415,
        "sum[k]": 5416,
        "comparator": 5417,
        "sum[0]": 5418,
        "x[a]": 5419,
        "x[b]": 5420,
        "cmp(i,": 5421,
        "l)": 5422,
        "brr": 5423,
        "500000": 5424,
        "m[p]": 5425,
        "it->second": 5426,
        "it->first": 5427,
        "a[ii]": 5428,
        "a[jj]": 5429,
        "main_str": 5430,
        "start_index": 5431,
        "str_for_compare": 5432,
        "reg": 5433,
        "<length": 5434,
        "occ": 5435,
        "set,": 5436,
        "ks": 5437,
        "max1)": 5438,
        "-1000000007": 5439,
        "str[tmp]": 5440,
        "str[tmp2]": 5441,
        "z[k]": 5442,
        "z[k": 5443,
        "letter[index]": 5444,
        "letter[i]": 5445,
        "index1": 5446,
        "letter[i][j]": 5447,
        "index2": 5448,
        "letter[i][k]": 5449,
        "tmp_ans": 5450,
        "s[index1]": 5451,
        "s[index2]": 5452,
        "p[a[i]": 5453,
        "p[i][j]": 5454,
        "p[i][k]": 5455,
        "a[t1]": 5456,
        "cent": 5457,
        "l--": 5458,
        "a[m],": 5459,
        "present": 5460,
        "fre[temp]": 5461,
        "(s[i": 5462,
        "m]),": 5463,
        "a=string": 5464,
        "max=0": 5465,
        "j=i+1": 5466,
        "m=0": 5467,
        "a[i+m]": 5468,
        "a[j+m]": 5469,
        "max=m": 5470,
        "name[i]": 5471,
        "name[j]": 5472,
        "make()": 5473,
        "record": 5474,
        "name,": 5475,
        "total]": 5476,
        "c[j": 5477,
        "intege": 5478,
        "c]),": 5479,
        "s.find(x,": 5480,
        "s.substr(i,": 5481,
        "str.size()": 5482,
        "sub": 5483,
        "str.substr(j,": 5484,
        "str.find(sub,": 5485,
        "pos))": 5486,
        "sub.length()": 5487,
        "all.size()": 5488,
        "all=set": 5489,
        "i=size": 5490,
        "s-1": 5491,
        "s-i": 5492,
        "inserti": 5493,
        "s-i+1": 5494,
        "elseif(v[length": 5495,
        "v-1]<=k){": 5496,
        "K": 5497,
        "num[p]": 5498,
        "j=i-1": 5499,
        "num[index]": 5500,
        "num[last]": 5501,
        "a[105],": 5502,
        "fpr": 5503,
        "j>0": 5504,
        "opposite": 5505,
        "forth,": 5506,
        "forth": 5507,
        "j1": 5508,
        "a[j1]": 5509,
        "deque": 5510,
        "deq": 5511,
        "countl": 5512,
        "countr": 5513,
        "A[0]": 5514,
        "V": 5515,
        "V[i]": 5516,
        "V[j]": 5517,
        "Bn": 5518,
        "preorder": 5519,
        "An[i]": 5520,
        "rearorder": 5521,
        "preorder()": 5522,
        "rearorder()": 5523,
        "min(n,": 5524,
        "1002": 5525,
        "i=n": 5526,
        "bf": 5527,
        "(bf": 5528,
        "v[r]": 5529,
        "v[f]": 5530,
        "v[b]": 5531,
        "l=false": 5532,
        "cou": 5533,
        "n1[i]": 5534,
        "1e8": 5535,
        "ct": 5536,
        "marked": 5537,
        "marked[i]": 5538,
        "A[j]": 5539,
        "seen=array": 5540,
        "N,K=int,": 5541,
        "answer=0": 5542,
        "N,K": 5543,
        "seen[i]": 5544,
        "seen[i]=1": 5545,
        "i=N-1": 5546,
        "head,": 5547,
        "head": 5548,
        "a[head]": 5549,
        "a[end]": 5550,
        "N=1000006,": 5551,
        "inf=1000000007": 5552,
        "Arr=array": 5553,
        "n+2": 5554,
        "Arr[i]": 5555,
        "lft=1": 5556,
        "lft": 5557,
        "Arr[lft]": 5558,
        "rgt=n": 5559,
        "rgt": 5560,
        "Arr[rgt]": 5561,
        "gcd(q,": 5562,
        "manx": 5563,
        "remove_zeros": 5564,
        "ten": 5565,
        "remove_zeros(a)": 5566,
        "remove_zeros(b)": 5567,
        "remove_zeros(c)": 5568,
        "bx": 5569,
        "bx(a)": 5570,
        "bx(b)": 5571,
        "bx(a": 5572,
        "cry": 5573,
        "max(a.size(),": 5574,
        "b.size())": 5575,
        "ta,": 5576,
        "tb": 5577,
        "a.size()": 5578,
        "ta": 5579,
        "b.size()": 5580,
        "10;": 5581,
        "ans[ans.size()": 5582,
        "ans.size()": 5583,
        "era": 5584,
        "p.size()": 5585,
        "srings": 5586,
        "a.begin()": 5587,
        "a.end())": 5588,
        "b.begin()": 5589,
        "b.end())": 5590,
        "a_,": 5591,
        "b_,": 5592,
        "c_": 5593,
        "a_": 5594,
        "b_": 5595,
        "(a_": 5596,
        "VI3": 5597,
        "remove_zero": 5598,
        "modulo%": 5599,
        "remove_zero(a)": 5600,
        "remove_zero(b)": 5601,
        "remove_zero(c)": 5602,
        "lzl(int": 5603,
        "sum,z": 5604,
        "x=1": 5605,
        "following)": 5606,
        "a[z++]": 5607,
        "(a[i])": 5608,
        "lzl(t)": 5609,
        "lzl(a)": 5610,
        "lzl(b)": 5611,
        "zeroRemover": 5612,
        "remove0": 5613,
        "m(0),": 5614,
        "pow(0)": 5615,
        "pow": 5616,
        "remove0(a)": 5617,
        "remove0(b)": 5618,
        "remove0(c)": 5619,
        "gum": 5620,
        "10^k": 5621,
        "320": 5622,
        "n/10": 5623,
        "(d*pow)": 5624,
        "a+b": 5625,
        "A+B": 5626,
        "zx": 5627,
        "s,t": 5628,
        "removeZeros": 5629,
        "tempa": 5630,
        "tempb": 5631,
        "rem1": 5632,
        "newa": 5633,
        "newb": 5634,
        "newsum": 5635,
        "putchar": 5636,
        "a[increment": 5637,
        "remv": 5638,
        "div": 5639,
        "remv(a)": 5640,
        "remv(b)": 5641,
        "remv(c)": 5642,
        "static": 5643,
        "ostringstream": 5644,
        "r(a)": 5645,
        "r(b)": 5646,
        "r(c)": 5647,
        "getNum(int": 5648,
        "gets": 5649,
        "currMod": 5650,
        "(currMod": 5651,
        "(ans": 5652,
        "(power": 5653,
        "(10,": 5654,
        "ds)))": 5655,
        "getNum(c1)": 5656,
        "(getNum(a)": 5657,
        "getNum(b)": 5658,
        "zy,": 5659,
        "zy": 5660,
        "removeZeros(a)": 5661,
        "removeZeros(b)": 5662,
        "removeZeros(c)": 5663,
        "removeZero": 5664,
        "takeing": 5665,
        "0.01": 5666,
        "three": 5667,
        "bit-wise": 5668,
        "returnr": 5669,
        "es": 5670,
        "-a": 5671,
        "ad,": 5672,
        "cd,": 5673,
        "bg": 5674,
        "as,": 5675,
        "bs,": 5676,
        "cs,": 5677,
        "cs": 5678,
        "multiplier": 5679,
        "ad[k]": 5680,
        "bd[k]": 5681,
        "cd[k]": 5682,
        "ad[i]": 5683,
        "bd[i]": 5684,
        "cd[i]": 5685,
        "darVuelta": 5686,
        "dig1": 5687,
        "quitarZeros": 5688,
        "darVuelta(x),": 5689,
        "darVuelta(y)": 5690,
        "darVuelta(c)": 5691,
        "quitarZeros(xx)": 5692,
        "quitarZeros(yy)": 5693,
        "quitarZeros(cc)": 5694,
        "pow(1)": 5695,
        "sum1_str": 5696,
        "sum2_str": 5697,
        "string_int": 5698,
        "int_string": 5699,
        "char(x": 5700,
        "string_int(a,": 5701,
        "string_int(b,": 5702,
        "string_int(sum1_str,": 5703,
        "ta+tb+cry": 5704,
        "p/10": 5705,
        "ans[size": 5706,
        "a1/10": 5707,
        "mul1": 5708,
        "b[y2]": 5709,
        "mul2": 5710,
        "c[y]": 5711,
        "v/10": 5712,
        "/10": 5713,
        "y-1": 5714,
        "converted": 5715,
        "ss.str()": 5716,
        "ss1": 5717,
        "anew": 5718,
        "ss2": 5719,
        "bnew": 5720,
        "ss3": 5721,
        "cnew": 5722,
        "matching": 5723,
        "removed)": 5724,
        "stringstream": 5725,
        "geek": 5726,
        "geek1": 5727,
        "geek2": 5728,
        "b1,": 5729,
        "(A[i]": 5730,
        "(B[j]": 5731,
        "aa[num]": 5732,
        "aa[i]": 5733,
        "bb[num]": 5734,
        "bb[i]": 5735,
        "cc[num]": 5736,
        "gcd1": 5737,
        "modx": 5738,
        "base,": 5739,
        "1LL,": 5740,
        "val)": 5741,
        "1000000009LL": 5742,
        "(val": 5743,
        "ans1,": 5744,
        "ans2=": 5745,
        "adj": 5746,
        "visit[start]": 5747,
        "adj[start]": 5748,
        "pt": 5749,
        "adj[start][i]": 5750,
        "visit[pt]": 5751,
        "adj[a]": 5752,
        "adj[b]": 5753,
        "dist[b][a]": 5754,
        "dist[v[i]][v[(i": 5755,
        "n]]": 5756,
        "dist[v[i]][v[size": 5757,
        "1]]": 5758,
        "dist[v[i]][v[i": 5759,
        "en": 5760,
        "vis[k]": 5761,
        "num[k][i]": 5762,
        "num[i][k]": 5763,
        "sizeof(num)": 5764,
        "num[x][y]": 5765,
        "num[en][1]": 5766,
        "num[1][en]": 5767,
        "counts,": 5768,
        "ne": 5769,
        "fa": 5770,
        "viy": 5771,
        "dg": 5772,
        "msh": 5773,
        "viy[dg][0]": 5774,
        "v[dg][0]": 5775,
        "fa[v[dg][0]][dg]": 5776,
        "fa[v[dg][1]][dg]": 5777,
        "v[dg][1]": 5778,
        "f2": 5779,
        "viy[dg][1]": 5780,
        "v[a]": 5781,
        "fa[b][a]": 5782,
        "G1": 5783,
        "lsum,": 5784,
        "ssum": 5785,
        "cur,": 5786,
        "G1[cur][i]": 5787,
        "G[cur][i]": 5788,
        "lsum": 5789,
        "G[cur][1]": 5790,
        "G[x][y]": 5791,
        "G1[x][y]": 5792,
        "G1[y][x]": 5793,
        "!vis[i]": 5794,
        "G[cur][1],": 5795,
        "G1,": 5796,
        "edges": 5797,
        "visited,": 5798,
        "index,": 5799,
        "visited[index]": 5800,
        "edges[index][i]": 5801,
        "visited[i]": 5802,
        "*ans": 5803,
        "visited": 5804,
        "edges[i][j]": 5805,
        "edges[a][b]": 5806,
        "edges[b][a]": 5807,
        "&ans": 5808,
        "edges[0][i]": 5809,
        "edges[i][0]": 5810,
        "&ans2": 5811,
        "105,": 5812,
        "ans2,": 5813,
        "bo": 5814,
        "a[x][y]": 5815,
        "a[y][x]": 5816,
        "c[x][y]": 5817,
        "c[y][x]": 5818,
        "a[cur][i]": 5819,
        "c[cur][i]": 5820,
        "vis[cur]": 5821,
        "a[cur][1]": 5822,
        "(a[cur][i]": 5823,
        "(vis[i]": 5824,
        "a[cur][2]": 5825,
        "c[cur][1]": 5826,
        "sizeof(G)": 5827,
        "sizeof(G1)": 5828,
        "self": 5829,
        "b[i],": 5830,
        "gtw": 5831,
        "edge": 5832,
        "ada_edge": 5833,
        "(edge[i][j]": 5834,
        "edge[a][b]": 5835,
        "ada_out_edge": 5836,
        "(edge[a][i]": 5837,
        "edge[a][i]": 5838,
        "edge[i][a]": 5839,
        "m[1][u]": 5840,
        "graph[u][i]": 5841,
        "m[i][u]": 5842,
        "graph[x][y]": 5843,
        "graph[y][x]": 5844,
        "m[y][x]": 5845,
        "vis[u]": 5846,
        "graph,": 5847,
        "sizeof(graph)": 5848,
        "sizeof(m)": 5849,
        "GRAPH": 5850,
        "DFS": 5851,
        "v[x]": 5852,
        "vis[v[x][i]]": 5853,
        "GRAPH[v[x][i]][x]": 5854,
        "v[x][i]": 5855,
        "GRAPH[i][j]": 5856,
        "GRAPH[x][y]": 5857,
        "v[y]": 5858,
        "v[1][0]": 5859,
        "cost1": 5860,
        "cost1=cost": 5861,
        "GRAPH[1][v[1][0]]": 5862,
        "GRAPH[v[1][0]][1]": 5863,
        "GRAPH[v[1][1]][1]": 5864,
        "GRAPH[1][v[1][1]]": 5865,
        "v[1][1]": 5866,
        "cost2": 5867,
        "cost2,": 5868,
        "MAX,": 5869,
        "g[t]": 5870,
        "g[f]": 5871,
        "v[t]": 5872,
        "u[i]": 5873,
        "u[i],": 5874,
        "v[i],": 5875,
        "u[1],": 5876,
        "v[1],1": 5877,
        "u[1]": 5878,
        "ans,val": 5879,
        "500005": 5880,
        "cycle": 5881,
        "visit[adj[start][i]],": 5882,
        "mp1[create": 5883,
        "a]": 5884,
        "mp1[": 5885,
        "cycle[i]": 5886,
        "cycle[i+1]": 5887,
        "cycle[sz-1]": 5888,
        "cycle[0]": 5889,
        "cycle[sz": 5890,
        "sizeof(k)": 5891,
        "sizeof(y)": 5892,
        "sizeof(z)": 5893,
        "sizeof(s)": 5894,
        "vis[a[i]]": 5895,
        "vis[b[i]]": 5896,
        "k[t]": 5897,
        "x[v]": 5898,
        "y[v]": 5899,
        "z[v]": 5900,
        "gb1": 5901,
        "gb2": 5902,
        "x[j]": 5903,
        "y[j]": 5904,
        "z[j]": 5905,
        "out[a]": 5906,
        "in[b]": 5907,
        "out[b]": 5908,
        "in[a]": 5909,
        "integers=": 5910,
        "[n": 5911,
        "res1": 5912,
        "used[0]": 5913,
        "used[i]": 5914,
        "cur)": 5915,
        "res2": 5916,
        "used.assign(n,": 5917,
        "isVisited": 5918,
        "totAll,": 5919,
        "totCc": 5920,
        "totAll": 5921,
        "path[a][b]": 5922,
        "isVisited[1]": 5923,
        "isVisited[i]": 5924,
        "path[now][i]": 5925,
        "path[i][now]": 5926,
        "count2": 5927,
        "dfs1": 5928,
        "root,": 5929,
        "visit,": 5930,
        "exlusive": 5931,
        "rom": 5932,
        "m[p[0]]": 5933,
        "sh[4][n]": 5934,
        "sh[temp][a[temp]]": 5935,
        "min1": 5936,
        "min(min(a[1],": 5937,
        "a[2]),": 5938,
        "sh[1][i],": 5939,
        "sh[2][i],": 5940,
        "sh[3][i]": 5941,
        "cnt[a]": 5942,
        "make_pair(a,": 5943,
        "ar,": 5944,
        "cnt[1],": 5945,
        "ar[b].second": 5946,
        "ar[c].second": 5947,
        "ar[d].second": 5948,
        "programming": 5949,
        "math": 5950,
        "PE": 5951,
        "team": 5952,
        "programming,": 5953,
        "math,": 5954,
        "programming[i]": 5955,
        "math[i]": 5956,
        "PE[i]": 5957,
        "i[j]": 5958,
        "i3": 5959,
        "i1[a]": 5960,
        "i2[b]": 5961,
        "i3[c]": 5962,
        "i1[j],": 5963,
        "i2[j],": 5964,
        "i3[j],": 5965,
        "satu": 5966,
        "dua": 5967,
        "tiga": 5968,
        "groups": 5969,
        "its": 5970,
        "min(min(one.size(),": 5971,
        "two.size()),": 5972,
        "three.size())": 5973,
        "groups,": 5974,
        "one[i],": 5975,
        "two[i],": 5976,
        "three[i]": 5977,
        "npr": 5978,
        "nma": 5979,
        "nph": 5980,
        "ma,": 5981,
        "ph": 5982,
        "nrp": 5983,
        "pr[i],": 5984,
        "ma[i],": 5985,
        "ph[i],": 5986,
        "sh": 5987,
        "min1,": 5988,
        "alen,": 5989,
        "blen,": 5990,
        "clen": 5991,
        "alen": 5992,
        "blen": 5993,
        "b[x]": 5994,
        "d[z]": 5995,
        "t[2]": 5996,
        "c[i],": 5997,
        "n,t=int": 5998,
        "one,two,three": 5999,
        "minsize=min": 6000,
        "one,": 6001,
        "minsize": 6002,
        "Min": 6003,
        "(min": 6004,
        "v[3])": 6005,
        "v[1][i],": 6006,
        "v[2][i],": 6007,
        "v[3][i]": 6008,
        "5005,n,cnt1": 6009,
        "0,cnt2": 6010,
        "0,cnt3": 6011,
        "cnt3": 6012,
        "mohi,": 6013,
        "mohi": 6014,
        "tot1,": 6015,
        "tot2,": 6016,
        "tot3,": 6017,
        "z,d": 6018,
        ",e,": 6019,
        "5002": 6020,
        "tot1": 6021,
        "increased": 6022,
        "tot2": 6023,
        "tot3": 6024,
        "z[i]": 6025,
        "x[k]": 6026,
        "d[l]": 6027,
        "invlusive": 6028,
        "y[p]": 6029,
        "e[o]": 6030,
        "z[r]": 6031,
        "f[q]": 6032,
        "d[m]": 6033,
        "e[m]": 6034,
        "f[m]": 6035,
        "a1,a2,a3=array": 6036,
        "j,k,l=0": 6037,
        "a1[j]=i": 6038,
        "a2[k]=i": 6039,
        "a3[l]=i": 6040,
        "j,k,l": 6041,
        "a1[i]+1,": 6042,
        "a2[i]+1,": 6043,
        "a3[i]+1": 6044,
        "pusch": 6045,
        "v1[i]": 6046,
        "v2[i]": 6047,
        "v3[i]": 6048,
        "exclusivee": 6049,
        "mins": 6050,
        "n3": 6051,
        "t1[i]": 6052,
        "t2[i]": 6053,
        "t3[i]": 6054,
        "ca,": 6055,
        "cb,": 6056,
        "cc,": 6057,
        "ca": 6058,
        "min(cb,": 6059,
        "cc)": 6060,
        "a.front()": 6061,
        "b.front()": 6062,
        "c.front()": 6063,
        "p,m,t": 6064,
        "n,temp": 6065,
        "p.size,": 6066,
        "m.size,t.size": 6067,
        "pc": 6068,
        "10010,": 6069,
        "pc[x][increment": 6070,
        "pc[0][x]]": 6071,
        "pc[0][1]": 6072,
        "pc[0][2]": 6073,
        "pc[0][3]": 6074,
        "pc[1][i],": 6075,
        "pc[2][i],": 6076,
        "pc[3][i],": 6077,
        "ara[6005][5]": 6078,
        "ara[0][k]": 6079,
        "ara[ara[0][k]][k]": 6080,
        "min(ara[0][1],": 6081,
        "ara[0][2])": 6082,
        "ara[0][3])": 6083,
        "ara[i][1],": 6084,
        "ara[i][2],": 6085,
        "ara[i][3]": 6086,
        "p=vector": 6087,
        "m=vector": 6088,
        "pe=vector": 6089,
        "pe": 6090,
        "t=min": 6091,
        "p,m,pe": 6092,
        "p[i],": 6093,
        "m[i],": 6094,
        "pe[i]": 6095,
        "storing": 6096,
        "values,": 6097,
        ",y,": 6098,
        ",d": 6099,
        "b[k]": 6100,
        "c[l]": 6101,
        "min(x,": 6102,
        "b[k],": 6103,
        "c[l],": 6104,
        "i,a=int": 6105,
        "nt=min": 6106,
        "items": 6107,
        "nt": 6108,
        "arr[0][i],": 6109,
        "arr[1][i],": 6110,
        "arr[2][i]": 6111,
        "a[x][increment": 6112,
        "c[x]]": 6113,
        "a[1][i],": 6114,
        "a[2][i],": 6115,
        "a[3][i],": 6116,
        "decalre": 6117,
        "va": 6118,
        "vb": 6119,
        "vc": 6120,
        "mp[arr[i]]": 6121,
        "va[i]": 6122,
        "vb[i]": 6123,
        "vc[i]": 6124,
        "10010": 6125,
        "book=array": 6126,
        "c[a[i]]": 6127,
        "c[1],": 6128,
        "1,2,3": 6129,
        "top=1": 6130,
        "c[a[i]],": 6131,
        "book[i]=true,": 6132,
        "freq[0]": 6133,
        "freq[A[i]]": 6134,
        "min_element(freq,": 6135,
        "p1,p2,p3": 6136,
        "p3": 6137,
        "min-1": 6138,
        "p1[i]": 6139,
        "p2[i]": 6140,
        "p3[i]": 6141,
        "Ta": 6142,
        "Ta[x": 6143,
        "g][1]": 6144,
        "g][2]": 6145,
        "f][3]": 6146,
        "none": 6147,
        "Ta[x][1,": 6148,
        "Ta[x][2]": 6149,
        "Ta[x][3]": 6150,
        "Ta[x][1],": 6151,
        "Ta[x][2],": 6152,
        "e[i]": 6153,
        "te": 6154,
        "one[on]": 6155,
        "two[to]": 6156,
        "three[te]": 6157,
        "three[i],": 6158,
        "f3": 6159,
        "teams": 6160,
        "f2,": 6161,
        "n,ans,j=int,": 6162,
        "a1,a2,a3=0,": 6163,
        "t=array": 6164,
        "j=min(a1,a2)": 6165,
        "ans=min(j,a3)": 6166,
        "b1,b2,b3=array": 6167,
        "b1[i]=i+1": 6168,
        "b1[i]=5002": 6169,
        "b2[i]=i+1": 6170,
        "b2[i]=5002": 6171,
        "b3[i]=i+1": 6172,
        "b3[i]=5002": 6173,
        "b3": 6174,
        "b1[i],": 6175,
        "b2[i],": 6176,
        "b3[i]": 6177,
        "count[arr[i]": 6178,
        "count[0]": 6179,
        "trunc": 6180,
        "qbe": 6181,
        "html": 6182,
        "jjj": 6183,
        "mp[qbe]": 6184,
        "tr[hj]": 6185,
        "trunc[html]": 6186,
        "trunc)": 6187,
        "mp[q],": 6188,
        "tr[q],": 6189,
        "trunc[q]": 6190,
        "two,": 6191,
        "one[count[0]]": 6192,
        "two[count[1]]": 6193,
        "count[1]": 6194,
        "three[count[2]]": 6195,
        "count[2]": 6196,
        "unos,": 6197,
        "dos,": 6198,
        "tres": 6199,
        "unos": 6200,
        "dos": 6201,
        "dos.size()": 6202,
        "tres.size()": 6203,
        "unos[i],": 6204,
        "dos[i],": 6205,
        "tres[i]": 6206,
        "(y)": 6207,
        "compa1": 6208,
        "compa2": 6209,
        "mx1": 6210,
        "mx2": 6211,
        "compa1(l,": 6212,
        "compa2(l,": 6213,
        "dp[2][maxn][maxn]": 6214,
        "arr[k][i]": 6215,
        "cal_dp": 6216,
        "dp[k][i][i]": 6217,
        ",dp[k][i][j]": 6218,
        "dp[k][i][j": 6219,
        "arr[k][j]": 6220,
        "dp[0][i][j]": 6221,
        "dp[1][i][j]": 6222,
        "ansa": 6223,
        "ansb": 6224,
        "b[l]": 6225,
        "bitwise-or": 6226,
        "b[r]": 6227,
        "n=long": 6228,
        "a,b=array": 6229,
        "maks=0": 6230,
        "suma,sumb=0": 6231,
        "sumb": 6232,
        "maks": 6233,
        "max(maks,": 6234,
        "suma+sumb)": 6235,
        "[1005],": 6236,
        "l[1005]": 6237,
        "k[1]": 6238,
        "answer1": 6239,
        "answer2": 6240,
        "a[pre]": 6241,
        "b[pre]": 6242,
        "sign1,": 6243,
        "sign2": 6244,
        "sign1": 6245,
        "arr1,": 6246,
        "arr2,": 6247,
        "arr1[i]": 6248,
        "suck": 6249,
        "calc": 6250,
        "INT_MIN": 6251,
        "y=INT_MIN": 6252,
        "calc(a,": 6253,
        "calc(b,": 6254,
        "sumA,": 6255,
        "sumB=0,": 6256,
        "a=long": 6257,
        "sumA": 6258,
        "sumB": 6259,
        "sumA+sumB": 6260,
        "fa,": 6261,
        "fb": 6262,
        "fa[i]": 6263,
        "fa[i-1]": 6264,
        "fb[i]": 6265,
        "fb[i-1]": 6266,
        "fa[j-1]": 6267,
        "fb[j-1]": 6268,
        "Loop": 6269,
        "operation": 6270,
        "Output": 6271,
        "fa[i": 6272,
        "fb[i": 6273,
        "fa[j": 6274,
        "fb[j": 6275,
        "a,b=vector": 6276,
        "x,y=0": 6277,
        "s,pre=0": 6278,
        "x=max(s,x)": 6279,
        "(bitwise": 6280,
        "a[pre])": 6281,
        "y=max(s,y)": 6282,
        "b[pre])": 6283,
        "x+y": 6284,
        "LONG_MAX": 6285,
        "fa(i,": 6286,
        "fb(i,": 6287,
        "j),": 6288,
        "n,a,x,y": 6289,
        "brr[i]": 6290,
        "var1": 6291,
        "var2": 6292,
        "brr[k]": 6293,
        "max(maxi,": 6294,
        "var2)": 6295,
        "PI": 6296,
        "3.14159265358979323846264338": 6297,
        "biwise": 6298,
        "100009,": 6299,
        "any": 6300,
        "1500": 6301,
        "pa,": 6302,
        "pb": 6303,
        "pa[0]": 6304,
        "pb[0]": 6305,
        "pa[i": 6306,
        "pb[i": 6307,
        "pa[i]": 6308,
        "pb[i]": 6309,
        "suma,": 6310,
        "created": 6311,
        "this": 6312,
        "either": 6313,
        "contained": 6314,
        "b[n]": 6315,
        "exclusie": 6316,
        "vecton": 6317,
        "a(n)": 6318,
        "b(n)": 6319,
        "ai": 6320,
        "v1[j]": 6321,
        "sum(k,": 6322,
        "(int)5e5": 6323,
        "(int)1e9": 6324,
        "indicates": 6325,
        "successful": 6326,
        "comparing": 6327,
        "number's": 6328,
        "earlier": 6329,
        "func(i,": 6330,
        "s[i-1]": 6331,
        "s[i-2]": 6332,
        "aux,": 6333,
        "s[j-2]": 6334,
        "s[x": 6335,
        "s[postfix": 6336,
        "2]))": 6337,
        "1050,": 6338,
        "1050": 6339,
        "p1,": 6340,
        "y[n]": 6341,
        "x[i-1]": 6342,
        "x[i-2]": 6343,
        "get_ans": 6344,
        "s[pos": 6345,
        "s[pos],": 6346,
        "s[strlen(s)": 6347,
        "get_ans(0)": 6348,
        "\"ab\"": 6349,
        "\"ba\\n\"": 6350,
        "\"a\"": 6351,
        "\"b\\n\"": 6352,
        "2],": 6353,
        "'c'": 6354,
        "i-": 6355,
        "1011": 6356,
        "[N]": 6357,
        "encontrado": 6358,
        "ans[pos]": 6359,
        "pos--;": 6360,
        "p;": 6361,
        "i++)": 6362,
        "ans[pos": 6363,
        "ans[pos+2]": 6364,
        "undefined": 6365,
        "ce(long": 6366,
        "cel[pos]": 6367,
        "cel[pos": 6368,
        "!ok": 6369,
        "brute_force(pos": 6370,
        "s.begin": 6371,
        "s.end": 6372,
        "cel[i]": 6373,
        "brute_force": 6374,
        "helper": 6375,
        "helper(i": 6376,
        "success": 6377,
        "helper(j,": 6378,
        "'a')": 6379,
        "s[idx]": 6380,
        "[i": 6381,
        "bigmod": 6382,
        "2]),": 6383,
        "f(i": 6384,
        "k),": 6385,
        "s[s": 6386,
        "f(0,": 6387,
        "beginat": 6388,
        "beginat,": 6389,
        "old_t": 6390,
        "old_t)": 6391,
        "oldai": 6392,
        "im": 6393,
        "max_idx": 6394,
        "A[i": 6395,
        "2])": 6396,
        "work2": 6397,
        "s[x]": 6398,
        "s[x])": 6399,
        "work2(x": 6400,
        "work(i)": 6401,
        "relax": 6402,
        "relax(ed,": 6403,
        "s[ed]": 6404,
        "succ": 6405,
        "relax(ne,": 6406,
        "makeChanges": 6407,
        "whichPosn,": 6408,
        "size,": 6409,
        "adj,": 6410,
        "nadj": 6411,
        "whichPosn": 6412,
        "thisChar": 6413,
        "s[whichPosn]": 6414,
        "nadj,": 6415,
        "s[whichPosn": 6416,
        "makeChanges(s,": 6417,
        "adj)": 6418,
        "nadj)": 6419,
        "c[n]": 6420,
        "sc=vector": 6421,
        "n,p=int": 6422,
        "idx,": 6423,
        "sc[idx]": 6424,
        "sc[idx-1]": 6425,
        "sc[idx-2]": 6426,
        "solve(idx-1)": 6427,
        "solve(idx)": 6428,
        "n,p,s": 6429,
        "sc": 6430,
        "sc[i]": 6431,
        "sc[i]-'a'": 6432,
        "sc[n-1]": 6433,
        "solve(n-1)": 6434,
        "char('a'+sc[i])": 6435,
        "sting": 6436,
        "T[i]": 6437,
        "\"abcdefghijklmnopqrstuvwxyz\"": 6438,
        "a[ind]": 6439,
        "a[ind": 6440,
        "(cast": 6441,
        "char)(A[0]": 6442,
        "excluding": 6443,
        "char)(A[i]": 6444,
        "s[whichPosn+1]": 6445,
        "whichPosn+1,": 6446,
        "s[whichPosn-3]": 6447,
        "s[whichPosn-2]": 6448,
        "whichPosn-1,": 6449,
        "s[whichPosn-1]": 6450,
        "n,p": 6451,
        "safe(char": 6452,
        "c,int": 6453,
        "andand": 6454,
        "calc(int": 6455,
        "safe": 6456,
        "ok(int": 6457,
        "cel": 6458,
        "ans[pos+1]": 6459,
        "cel[pos]+1": 6460,
        "pos+2": 6461,
        "cel[pos+1]": 6462,
        "cel[pos+2]": 6463,
        "arugment": 6464,
        "variables,": 6465,
        "that's": 6466,
        "passed": 6467,
        "results": 6468,
        "ALPH": 6469,
        "four": 6470,
        "ALPH,": 6471,
        "termina": 6472,
        "getChar": 6473,
        "lowercase": 6474,
        "upper": 6475,
        "ant1": 6476,
        "30,": 6477,
        "ant2": 6478,
        "used[pos][upper][ant1][ant2]": 6479,
        "uppercase": 6480,
        "ant2,": 6481,
        "f(pos": 6482,
        "getChar(i)": 6483,
        "(f(pos": 6484,
        "getchar(i)": 6485,
        "f()": 6486,
        "resp[i]": 6487,
        "4d": 6488,
        "upper,": 6489,
        "ant1,": 6490,
        "efrom": 6491,
        "s[length": 6492,
        "mystr": 6493,
        "mystr.length()": 6494,
        "i--)": 6495,
        "mystr[i]": 6496,
        "count(str.begin(),": 6497,
        "str.end(),": 6498,
        "str[0])": 6499,
        "str.length();": 6500,
        "ms": 6501,
        "i;": 6502,
        "j++)": 6503,
        "(reverse(ms)": 6504,
        "notequal": 6505,
        "Sr": 6506,
        "s[size": 6507,
        "buhuiwen": 6508,
        "s[y]": 6509,
        "buhuiwen(i,": 6510,
        "MN": 6511,
        "-1e9": 6512,
        "bl": 6513,
        "propblem": 6514,
        "popblem": 6515,
        "2.0": 6516,
        "sub_str": 6517,
        "S[i]": 6518,
        "works": 6519,
        "sub[k]": 6520,
        "sub[length": 6521,
        "S[length": 6522,
        "boolean,": 6523,
        "s[h]": 6524,
        "judge(s)": 6525,
        "strlen(a)": 6526,
        "a[strlen(a)": 6527,
        "a[e]": 6528,
        "check(a)": 6529,
        "run()": 6530,
        "euqals": 6531,
        "\"\\0\"": 6532,
        "mapa": 6533,
        "mapa[s[i]]": 6534,
        "naem": 6535,
        "name[i+1],": 6536,
        "name[j],": 6537,
        "pan(int": 6538,
        "zs,": 6539,
        "z;": 6540,
        "y;": 6541,
        "s++)": 6542,
        "zs": 6543,
        "s--)": 6544,
        "v=s+1": 6545,
        "(pan(s,": 6546,
        "ans)": 6547,
        "pan(0,": 6548,
        "a.size())": 6549,
        "ans+1": 6550,
        "r-l+1": 6551,
        "len/2": 6552,
        "s[l+i]": 6553,
        "s[r-i]": 6554,
        "check(0,": 6555,
        "s-1,": 6556,
        "check(l,": 6557,
        "max(res,": 6558,
        "r-l+1)": 6559,
        "i],": 6560,
        "s1.begin()": 6561,
        "s1.end()": 6562,
        "s.length": 6563,
        "so_far": 6564,
        "rj": 6565,
        "f(s.substr(i,": 6566,
        "max_n,": 6567,
        "Mod,": 6568,
        "2e6,": 6569,
        "read_input": 6570,
        "process": 6571,
        "read_input,": 6572,
        "solve,": 6573,
        "s[l": 6574,
        "palindrome(t)": 6575,
        "palindrome(s)": 6576,
        "s[len": 6577,
        "0m": 6578,
        "flag_a": 6579,
        "s[i+1]": 6580,
        "iis": 6581,
        "t[m": 6582,
        "-k]": 6583,
        "i++,": 6584,
        "j--": 6585,
        "rs": 6586,
        "isPalindrome": 6587,
        "s[l++]": 6588,
        "s[r--]": 6589,
        "isPalindrome(s,": 6590,
        "s[2*j+i-1-k]": 6591,
        "ispalin": 6592,
        "str[k]": 6593,
        "sameletter": 6594,
        "s+i": 6595,
        "st.length(),": 6596,
        "mar": 6597,
        "marr": 6598,
        "st[i": 6599,
        "st[len": 6600,
        "x[decrement": 6601,
        "l]": 6602,
        "x[i],": 6603,
        "MaxN": 6604,
        "acosign": 6605,
        "mp[s[i]]": 6606,
        "mp[s[0]]": 6607,
        "maxnum": 6608,
        "gap,": 6609,
        "exam": 6610,
        "IfHuiwen": 6611,
        "exam[i]": 6612,
        "exam[j]": 6613,
        "numx": 6614,
        "exam[numx--]": 6615,
        "exam,": 6616,
        "sizeof(exam)": 6617,
        "exam[flag]": 6618,
        "IfHuiwen()": 6619,
        "maxnum,": 6620,
        "pal": 6621,
        "pal(s)": 6622,
        "pal(n)": 6623,
        "flagee": 6624,
        "stack": 6625,
        "lat": 6626,
        "str[lat],": 6627,
        "m[index]": 6628,
        "appen": 6629,
        "book[j]": 6630,
        "set1": 6631,
        "set2": 6632,
        "map2": 6633,
        "cp": 6634,
        "mc1": 6635,
        "mc2": 6636,
        "malloc_1": 6637,
        "set1.count(a)": 6638,
        "map1[a]": 6639,
        "malloc_2": 6640,
        "map2[a]": 6641,
        "cp,": 6642,
        "0,and": 6643,
        "malloc_1(a)": 6644,
        "malloc_2(b)": 6645,
        "cp[c][d]": 6646,
        "incremented": 6647,
        "p[s]": 6648,
        "asd": 6649,
        "dsa": 6650,
        "dataa": 6651,
        "itung": 6652,
        "asd[a]": 6653,
        "dsa[s]": 6654,
        "dataa[asd[a]][dsa[s]]": 6655,
        "maps": 6656,
        "z--": 6657,
        "make_pair(str,": 6658,
        "leaves": 6659,
        "concatenated": 6660,
        "l1+\"": 6661,
        "\"+l2": 6662,
        "leafName": 6663,
        "1e9+7": 6664,
        "!cek[s],": 6665,
        "cek[s]": 6666,
        "alana": 6667,
        "inp,": 6668,
        "intp": 6669,
        "myset": 6670,
        "leaf": 6671,
        "myset,": 6672,
        "solution": 6673,
        "stack,": 6674,
        "st[i+1]": 6675,
        "strr": 6676,
        "str[strr]": 6677,
        "itr": 6678,
        "lopp": 6679,
        "pict": 6680,
        "10000,": 6681,
        "a[i][2]": 6682,
        "a[j][1]": 6683,
        "a[j][2]": 6684,
        "2D": 6685,
        "main": 6686,
        "string,string": 6687,
        "(y,1)": 6688,
        "a[p]": 6689,
        "pairs": 6690,
        "nr": 6691,
        "s[incremented": 6692,
        "1e-12": 6693,
        "[": 6694,
        "pairs<string,": 6695,
        "string>": 6696,
        "in;": 6697,
        "m[make_pair(s,": 6698,
        "str)]": 6699,
        "m[s]": 6700,
        "map<string,": 6701,
        "string/string": 6702,
        "arr[i].first": 6703,
        "arr[i].second": 6704,
        "\"rat\"": 6705,
        "\"woman\"": 6706,
        "\"child\"": 6707,
        "\"man\"": 6708,
        "\"captain\"": 6709,
        "urut": 6710,
        "\"rat\",": 6711,
        "\"woman\",": 6712,
        "\"child\",": 6713,
        "\"man\",": 6714,
        "nama": 6715,
        "tipe": 6716,
        "nama[a]": 6717,
        "tipe[a]": 6718,
        "tipe[b]": 6719,
        "urut[a]": 6720,
        "urut[a": 6721,
        "nama[b]": 6722,
        "kd": 6723,
        "pos[i]": 6724,
        "\"man\")": 6725,
        "\"captain\",": 6726,
        "a[i].second": 6727,
        "a[i].first": 6728,
        "\"women\"": 6729,
        "rat": 6730,
        "woman": 6731,
        "child": 6732,
        "w[s]": 6733,
        "man": 6734,
        "e[d]": 6735,
        "captain": 6736,
        "r[f]": 6737,
        "w[i]": 6738,
        "function_sort_down": 6739,
        "5000000": 6740,
        "number,ans,length,sum": 6741,
        "str2=string,": 6742,
        "rat=array": 6743,
        "woman=array": 6744,
        "210": 6745,
        "man=array": 6746,
        "captain=array": 6747,
        "maxe": 6748,
        "rat[i]": 6749,
        "woman[i]": 6750,
        "man[i]": 6751,
        "captain[i]": 6752,
        "2*number": 6753,
        "rats": 6754,
        "WandC": 6755,
        "men": 6756,
        "witn": 6757,
        "z1": 6758,
        "p[i].first": 6759,
        "p[i].second": 6760,
        "s1[y]": 6761,
        "s2[z]": 6762,
        "s3[z1]": 6763,
        "s3[j]": 6764,
        "1e5+1": 6765,
        "s1}": 6766,
        "{2,": 6767,
        "s2}": 6768,
        "{3,": 6769,
        "{4,": 6770,
        "spec": 6771,
        "spec[i]": 6772,
        "n,i=int": 6773,
        "s,s1=string": 6774,
        "r,kw,m,c=vector": 6775,
        "it=iterator": 6776,
        "kw": 6777,
        "crew": 6778,
        "feature": 6779,
        "crew[0]": 6780,
        "crew[1]": 6781,
        "crew[2]": 6782,
        "crew[3]": 6783,
        "crew[i]": 6784,
        "crew[i][j]": 6785,
        "arrays,": 6786,
        "rat,": 6787,
        "woman,": 6788,
        "man,": 6789,
        "captain,": 6790,
        "s[n],": 6791,
        "d[n]": 6792,
        "(d[i]": 6793,
        "chil,": 6794,
        "ans[1]": 6795,
        "'m'": 6796,
        "'i'": 6797,
        "ans[2]": 6798,
        "ans[3]": 6799,
        "ans[4]": 6800,
        "s=first": 6801,
        "status": 6802,
        "status[i]": 6803,
        "status[j]": 6804,
        "str1[q]": 6805,
        "str2[w]": 6806,
        "str2[t]": 6807,
        "str1[i]": 6808,
        "str2[i]": 6809,
        "str3[i]": 6810,
        "a[j][0]": 6811,
        "woch,": 6812,
        "men,": 6813,
        "cap": 6814,
        "woch": 6815,
        "arr[i][0]": 6816,
        "arr[i][1]": 6817,
        "\"2\"": 6818,
        "\"3\"": 6819,
        "pple": 6820,
        "pple[i]": 6821,
        "101,": 6822,
        "rank": 6823,
        "wc,": 6824,
        "cap[c]": 6825,
        "wc[w]": 6826,
        "men[m]": 6827,
        "rat[r]": 6828,
        "name[rat[i]]": 6829,
        "name[wc[i]]": 6830,
        "name[men[i]]": 6831,
        "name[cap[i]]": 6832,
        "position,": 6833,
        "captin": 6834,
        "wc": 6835,
        "CASE": 6836,
        "priority[i]": 6837,
        "name[priority[i].second]": 6838,
        "child,": 6839,
        "women": 6840,
        "rat[j]": 6841,
        "women[j]": 6842,
        "men[j]": 6843,
        "str1[a]": 6844,
        "kw,": 6845,
        "a[i].size()": 6846,
        "ut": 6847,
        "ut[0]": 6848,
        "ut[1]": 6849,
        "ut[2]": 6850,
        "ut[3]": 6851,
        "ut[i]": 6852,
        "ut[i][j]": 6853,
        "[101][11]": 6854,
        "[101][6]": 6855,
        "speed": 6856,
        "multimap": 6857,
        "fun": 6858,
        "v.size()v[i]": 6859,
        "tag,": 6860,
        "tag": 6861,
        "tag[i]": 6862,
        "tag[j]": 6863,
        "5,M": 6864,
        "2e4": 6865,
        "5,OO": 6866,
        "1e-6": 6867,
        "rat.size()": 6868,
        "child.size()": 6869,
        "man.size()": 6870,
        "captain.size()": 6871,
        "status,": 6872,
        "n,d": 6873,
        "p+d": 6874,
        "pth": 6875,
        "ans[i-j]": 6876,
        "ans[n]": 6877,
        "k[n]": 6878,
        "k[j]": 6879,
        "min(a[j],": 6880,
        "1061109567": 6881,
        "'1',": 6882,
        "v[n": 6883,
        "flower": 6884,
        "pasos": 6885,
        "used[position][pasos],": 6886,
        "dp[position][pasos]": 6887,
        "flower[position+1]": 6888,
        "used[position][pasos]": 6889,
        "flower[i]": 6890,
        "d]": 6891,
        "dist[0]": 6892,
        "dist[j]": 6893,
        "dist[i]": 6894,
        "dist[n-1]": 6895,
        "0x3f3f3f3f,": 6896,
        "dist[n-1],": 6897,
        "loopting": 6898,
        "dp[i]": 6899,
        "dp[0]": 6900,
        "dp[j]": 6901,
        "dp[n-1]": 6902,
        "s[i+d]": 6903,
        "dp,": 6904,
        "sizeof(dp)": 6905,
        "L[j]": 6906,
        "L[i]": 6907,
        "dp[i": 6908,
        "dp[length": 6909,
        "lvl": 6910,
        "bfs": 6911,
        "lvl[0]": 6912,
        "lvl[u]": 6913,
        "lvl[i]": 6914,
        "fuction": 6915,
        "vis[s]": 6916,
        "l[s]": 6917,
        "q.front()": 6918,
        "adj[p]": 6919,
        "vis[adj[p][i]]": 6920,
        "l[adj[p][i]]": 6921,
        "l[p]": 6922,
        "enqueue": 6923,
        "adj[p][i]": 6924,
        "adj[i],": 6925,
        "adj[j]": 6926,
        "l[n": 6927,
        "dp[q.front()]": 6928,
        "dp[n": 6929,
        "recurse": 6930,
        "maxid": 6931,
        "camino": 6932,
        "kiu": 6933,
        "camino[a": 6934,
        "dist[a": 6935,
        "dist[a]": 6936,
        "dist[n": 6937,
        "step[i]": 6938,
        "step[0]": 6939,
        "max(0,": 6940,
        "min(step[i],": 6941,
        "step[j]": 6942,
        "step[n": 6943,
        "mmap": 6944,
        "mmap[a+d]": 6945,
        "mmap[i]": 6946,
        "\"-1\\n\"": 6947,
        "inf,": 6948,
        "dist,": 6949,
        "dp[dist.front()]": 6950,
        "=integers,": 6951,
        "<=n": 6952,
        "dp[1]": 6953,
        "data[j]": 6954,
        "dp[n]": 6955,
        "shu": 6956,
        "shu[j]": 6957,
        "str[i+d]": 6958,
        "s[current-i]": 6959,
        "-i": 6960,
        "billion": 6961,
        "j=i-d": 6962,
        "min(dp[j]+1,": 6963,
        "dp[i])": 6964,
        "103": 6965,
        "s[i+j]": 6966,
        "p[i+j]": 6967,
        "p[i-1]": 6968,
        "p[n-1]": 6969,
        "i=d": 6970,
        "(dp[i": 6971,
        "-1),": 6972,
        "1+min": 6973,
        "(dp[n": 6974,
        "1000000)": 6975,
        "(n-1)th": 6976,
        "term": 6977,
        "ar[j]": 6978,
        "s[i-j]": 6979,
        "dp[i-j]": 6980,
        "(ith": 6981,
        "till": 6982,
        "dp[i],dp[i-j]+1": 6983,
        "th": 6984,
        "MJ": 6985,
        "jumps[i]": 6986,
        "jumps[0]": 6987,
        "result[i]": 6988,
        "result[0]": 6989,
        "result[2]": 6990,
        "nums[i]": 6991,
        "nums[j]": 6992,
        "jumps[j]": 6993,
        "jumps[n": 6994,
        "minjumps": 6995,
        "nums,": 6996,
        "and,": 6997,
        "nmax": 6998,
        "1e2+2": 6999,
        "visited[i][j]": 7000,
        "visited[v[i][k]][j+1]": 7001,
        "v[i][k]": 7002,
        "i+j": 7003,
        "gov": 7004,
        "u[x]": 7005,
        "u[a[x][i]],": 7006,
        "dfs(a[x][i])": 7007,
        "gov[i]": 7008,
        "f[x]": 7009,
        "unionn": 7010,
        "num[find": 7011,
        "Max,": 7012,
        "num[s[i]]": 7013,
        "s[i]]": 7014,
        "(num[s[i]])": 7015,
        "(num[s[i]]": 7016,
        "(ss": 7017,
        "ki": 7018,
        "gover": 7019,
        "nogover": 7020,
        "pre[x]": 7021,
        "find(pre[x])": 7022,
        "Union": 7023,
        "find(x)": 7024,
        "find(y)": 7025,
        "fb,": 7026,
        "pre[fa]": 7027,
        "init()": 7028,
        "sizeof(tree)": 7029,
        "sizeof(gover)": 7030,
        "ki[i]": 7031,
        "Union(a,": 7032,
        "gover[find(ki[i])]": 7033,
        "tree[find(i)]": 7034,
        "find(i)": 7035,
        "gover[i]": 7036,
        "tree[i]": 7037,
        "tree[max]": 7038,
        "(tree[i]": 7039,
        "nogover[i]": 7040,
        "nogover[j]": 7041,
        "father": 7042,
        "father[x]": 7043,
        "node": 7044,
        "fathercnt": 7045,
        "isgro": 7046,
        "gro": 7047,
        "father[j]": 7048,
        "isgro[g]": 7049,
        "fathercnt[j]": 7050,
        "isgro[p]": 7051,
        "find(q)": 7052,
        "father[": 7053,
        "find(p)": 7054,
        "fathercnt[": 7055,
        "fathercnt[x]": 7056,
        "isgro[q]": 7057,
        "isgro[father[result": 7058,
        "find(p)]]": 7059,
        "maxfather": 7060,
        "strunity": 7061,
        "fathercnt[i]": 7062,
        "maxgro": 7063,
        "strgro": 7064,
        "isgro[i]": 7065,
        "isgro[run": 7066,
        "find(i)]": 7067,
        "fathercnt[strgro]": 7068,
        "(fathercnt[i]": 7069,
        "isHome": 7070,
        "used[v]": 7071,
        "deg[v]": 7072,
        "isHome[v],": 7073,
        "g[v]": 7074,
        "used[g[v][i]]": 7075,
        "g[v][i]": 7076,
        "home": 7077,
        "isHome[x]": 7078,
        "g[u]": 7079,
        "deg[u]": 7080,
        "edges=array": 7081,
        "1004": 7082,
        "degree=array": 7083,
        "cap,": 7084,
        "numedges,": 7085,
        "numver,": 7086,
        "visited[index]=1": 7087,
        "degree[i]": 7088,
        "numedges[cap]": 7089,
        "numver[cap]": 7090,
        "dfs(i,": 7091,
        "n,m,k=int": 7092,
        "n,m,k": 7093,
        "cap=array": 7094,
        "cap[i]": 7095,
        "visited[i]=0": 7096,
        "degree[i]=0": 7097,
        "edges[a][b]=1": 7098,
        "edges[b][a]=1": 7099,
        "degree[a]": 7100,
        "degree[b]": 7101,
        "numedges": 7102,
        "k+1": 7103,
        "numver": 7104,
        "k-1": 7105,
        "numedges[i]=0": 7106,
        "numver[i]=0": 7107,
        "count=0": 7108,
        "dfs(cap[i],": 7109,
        "degree[cap[i]]": 7110,
        "numedges[i]": 7111,
        "numver[i]": 7112,
        "numedges[k]": 7113,
        "numver[k]": 7114,
        "maxm=0": 7115,
        "maxindex=0": 7116,
        "maxm=numver[i]": 7117,
        "maxindex=i": 7118,
        "maxindex": 7119,
        "xx=numver[i]*(numver[i]-1)": 7120,
        "(xx-numedges[i]/2)": 7121,
        "xx=numver[maxindex]+numver[k]": 7122,
        "x2=(xx*(xx-1))/2": 7123,
        "numedges[maxindex]/2": 7124,
        "numedges[k]/2": 7125,
        "find(father[x])": 7126,
        "father[find(q)]": 7127,
        "father[find(p)]": 7128,
        "fathercnt[find(p)]": 7129,
        "fathercnt[find(q)]": 7130,
        "isgro[father[find(p)]]": 7131,
        "[find(p)]": 7132,
        "isgro[find(i)]": 7133,
        "find(f[x])": 7134,
        "uion": 7135,
        "p2,": 7136,
        "f1,": 7137,
        "f[f1]": 7138,
        "p[run": 7139,
        "lef": 7140,
        "p[c[i]]": 7141,
        "find(c[i])]": 7142,
        "(p[c[i]]": 7143,
        "(p[c[i]])": 7144,
        "(lef": 7145,
        "maxn)": 7146,
        "(maxn": 7147,
        "f=array": 7148,
        "g=array": 7149,
        "(f[x]": 7150,
        "find(f[x]),": 7151,
        "f[x])": 7152,
        "f[i]=i": 7153,
        "clear()": 7154,
        "gov=int": 7155,
        "g[gov]=1": 7156,
        "g[x]": 7157,
        "f[find(y)]=x": 7158,
        "g[y]": 7159,
        "f[find(x)]=y": 7160,
        "g[find(x)]": 7161,
        "f[find(y)]=f[find(x)]": 7162,
        "g[find(y)]": 7163,
        "f[find(x)]=f[find(y)]": 7164,
        "maxx=0": 7165,
        "temp=int": 7166,
        "temp=1": 7167,
        "g[j]": 7168,
        "f[find(j)]": 7169,
        "temp*(temp-1)/2": 7170,
        "maxx=max(maxx,temp)": 7171,
        "g[f[find(i)]]": 7172,
        "maxx*cnt": 7173,
        "cnt*(cnt-1)/2": 7174,
        "100005,": 7175,
        "cnt[fb]": 7176,
        "cnt[fa]": 7177,
        "cap[the": 7178,
        "c[i]]": 7179,
        "(cnt[i]": 7180,
        "mp[i]": 7181,
        "mp[j]": 7182,
        "MAx": 7183,
        "202002": 7184,
        "findfa": 7185,
        "fa[x]": 7186,
        "joint": 7187,
        "fa[rx]": 7188,
        "sum[ry]": 7189,
        "sum[rx]": 7190,
        "sum[i]": 7191,
        "join": 7192,
        "vis[the": 7193,
        "(sum[i]": 7194,
        "vec[j]": 7195,
        "ll": 7196,
        "vis[r]": 7197,
        "cou,": 7198,
        "nas": 7199,
        "pq[i": 7200,
        "mp[f][r]": 7201,
        "mp[r][f]": 7202,
        "(nas": 7203,
        "((o": 7204,
        "vis[pq[i],first]": 7205,
        "isHome[v]": 7206,
        "(ver": 7207,
        "no[no.size()": 7208,
        "1100": 7209,
        "parentu": 7210,
        "visited[x]": 7211,
        "visited[v[x][i]],": 7212,
        "search": 7213,
        "v[x][i],": 7214,
        "visited[home[i]]": 7215,
        "home[i],": 7216,
        "((node": 7217,
        "(node))": 7218,
        "sum)": 7219,
        "((n": 7220,
        "sum))": 7221,
        "edge)": 7222,
        "findfa(fa[x])": 7223,
        "findfa(x)": 7224,
        "findfa(y)": 7225,
        "vis[findfa(c[i])]": 7226,
        "u[a[x][i]]": 7227,
        "ind,": 7228,
        "adj[i]": 7229,
        "visited[adj[u][i]]": 7230,
        "adj[u][i],": 7231,
        "adj[u]": 7232,
        "adj[v]": 7233,
        "s[a[i]]": 7234,
        "adj[s[a[i]][j]]": 7235,
        "(mx": 7236,
        "dd": 7237,
        "dd[s]": 7238,
        "v[s]": 7239,
        "vis[v[s][i]]": 7240,
        "dfs(v[s][i])": 7241,
        "k--": 7242,
        "dd[a]": 7243,
        "ml": 7244,
        "m1--": 7245,
        "(cnt1": 7246,
        "(vec[i]": 7247,
        "r[x]": 7248,
        "find(r[x])": 7249,
        "setunion": 7250,
        "ry,": 7251,
        "r[rx]": 7252,
        "they": 7253,
        "num[find(i)]": 7254,
        "num[gov[i]]": 7255,
        "num[find(gov[i])": 7256,
        "(num[gov[i]]": 7257,
        "maxs)": 7258,
        "(maxs": 7259,
        "((d[i]": 7260,
        "dis[i]": 7261,
        "sup[i]": 7262,
        "tank": 7263,
        "sup[0]": 7264,
        "sup[m]": 7265,
        "dis[i": 7266,
        "dis[i-1]": 7267,
        "tank=tank": 7268,
        "3010": 7269,
        "is,": 7270,
        "bak": 7271,
        "[is]": 7272,
        "s[is]": 7273,
        "dsum": 7274,
        "d[is]": 7275,
        "MAXN=1001": 7276,
        "dist=array": 7277,
        "fuel=array": 7278,
        "m,k=int": 7279,
        "m,k": 7280,
        "fuel[i]": 7281,
        "maxi=0": 7282,
        "m+1": 7283,
        "maxi=max(maxi,": 7284,
        "fuel[i])": 7285,
        "d[i])": 7286,
        "acum": 7287,
        "many": 7288,
        "ceil(need": 7289,
        "((double)pq.top()))": 7290,
        "dist_sum": 7291,
        "bak[i]": 7292,
        "mybak": 7293,
        "bak[cur]": 7294,
        "best,": 7295,
        "dist[cur]": 7296,
        "t0,": 7297,
        "t0": 7298,
        "naxn": 7299,
        "d[i],": 7300,
        "abs(sum2": 7301,
        "sum1)": 7302,
        "t0)": 7303,
        "bool(nd": 7304,
        "fuel": 7305,
        "pet": 7306,
        "req": 7307,
        "k;": 7308,
        "m,k=int,": 7309,
        "t=1": 7310,
        "i=t,": 7311,
        "distance": 7312,
        "freefuel=0": 7313,
        "freefuel": 7314,
        "tank-s[t]+freefuel": 7315,
        "d[t]": 7316,
        "ds[i]": 7317,
        "best=0": 7318,
        "fuel=": 7319,
        "time=": 7320,
        "oil,": 7321,
        "oil": 7322,
        "1007": 7323,
        "timer": 7324,
        "bz": 7325,
        "mxl": 7326,
        "functoin": 7327,
        "d=array": 7328,
        "dp=array": 7329,
        "dp[i]=s[i]": 7330,
        "dp[i-1]": 7331,
        "dp[i]=dp[i-1]": 7332,
        "fuel=0": 7333,
        "fuel-d[i]": 7334,
        "z=dp[i]": 7335,
        "dif=d[i]-fuel": 7336,
        "(dif/z*k)": 7337,
        "(dif/z+1)*k": 7338,
        "(dif/z+1)*z": 7339,
        "d[N],": 7340,
        "s[N],": 7341,
        "Ans,": 7342,
        "Ans": 7343,
        "D[i]": 7344,
        "second[i]": 7345,
        "tm,": 7346,
        "second[0],": 7347,
        "(D[i]": 7348,
        "fuel)": 7349,
        "ttl": 7350,
        "tiempo,": 7351,
        "tiempo": 7352,
        "falta": 7353,
        "flata": 7354,
        "tiemp": 7355,
        "gas": 7356,
        "gas[i]": 7357,
        "gas[0]": 7358,
        "actual": 7359,
        "big": 7360,
        "etime": 7361,
        "liter": 7362,
        "load": 7363,
        "ceil(double(load": 7364,
        "liter)": 7365,
        "double(big))": 7366,
        "cfgincrease": 7367,
        "300300": 7368,
        "ANS": 7369,
        "second[1]": 7370,
        "second[j]": 7371,
        "second[pos]": 7372,
        "d[j]": 7373,
        "(ds": 7374,
        "CUR": 7375,
        "(need": 7376,
        "second[pos])": 7377,
        "w-1": 7378,
        "second[w]": 7379,
        "distance,": 7380,
        "distance[i]": 7381,
        "iincrement": 7382,
        "INFLL": 7383,
        "0x3f3f3f3f3f3f3f3fLL": 7384,
        "mx[i]": 7385,
        "max(mx[i": 7386,
        "global": 7387,
        "Define": 7388,
        "sequential": 7389,
        "i=m": 7390,
        "Call": 7391,
        "Run": 7392,
        "Increase": 7393,
        "If": 7394,
        "dividable": 7395,
        "s[p]": 7396,
        "Otherwise": 7397,
        "a*k": 7398,
        "Decrease": 7399,
        "300300,": 7400,
        "second[j];": 7401,
        "max(need,": 7402,
        "ss=0": 7403,
        "1=0": 7404,
        "d[j": 7405,
        "s[f]": 7406,
        "ans[j]": 7407,
        "ans[j": 7408,
        "(e": 7409,
        "((e": 7410,
        "ans[m": 7411,
        "vale": 7412,
        "inputting": 7413,
        "sufmax,": 7414,
        "mxpos,": 7415,
        "pred": 7416,
        "sufmax": 7417,
        "mxpos": 7418,
        "sufmax[i+1]": 7419,
        "mxpos[i]": 7420,
        "sufmax[i]": 7421,
        "mxpos[i+1]": 7422,
        "pred[i]": 7423,
        "pred[i-1]": 7424,
        "tott,": 7425,
        "tott": 7426,
        "pred[n-1]": 7427,
        "other": 7428,
        "index2,": 7429,
        "LastoddPos,": 7430,
        "LastevenPos,": 7431,
        "evenCount": 7432,
        "LastoddPos": 7433,
        "LastevenPos": 7434,
        "mainvector": 7435,
        "mainvector[i]": 7436,
        "par,": 7437,
        "indpar,": 7438,
        "indimpar,": 7439,
        "impar,": 7440,
        "npar": 7441,
        "nimpar": 7442,
        "indpar": 7443,
        "impar": 7444,
        "indimpar": 7445,
        "npar,": 7446,
        "nimpar,": 7447,
        "cnt2,": 7448,
        "cOdd,": 7449,
        "cEven,": 7450,
        "lOdd": 7451,
        "lEven,": 7452,
        "cOdd": 7453,
        "cEven": 7454,
        "lEven": 7455,
        "(a[x]": 7456,
        "ev": 7457,
        "sumeven,": 7458,
        "sumodd,": 7459,
        "sumeven": 7460,
        "sumodd": 7461,
        "body": 7462,
        "arr[n]": 7463,
        "ep,": 7464,
        "ep": 7465,
        "evn": 7466,
        "oCount": 7467,
        "eCount": 7468,
        "E": 7469,
        "integers;": 7470,
        "ec": 7471,
        "oc": 7472,
        "ec,": 7473,
        "n;": 7474,
        "even[0]": 7475,
        "odd[0]": 7476,
        "counter1,": 7477,
        "counter2": 7478,
        "counter1": 7479,
        "n,i,pe,po=int,": 7480,
        "ct=0": 7481,
        "pe=i+1": 7482,
        "po=i+1": 7483,
        "cnt>ct": 7484,
        "po": 7485,
        "v1[0],": 7486,
        "v[0],": 7487,
        "nn[i]": 7488,
        "indE,": 7489,
        "indO,": 7490,
        "indE": 7491,
        "indO": 7492,
        "lastodd,": 7493,
        "lasteven": 7494,
        "lastodd": 7495,
        "(if": 7496,
        "lasteven)": 7497,
        "'X'": 7498,
        "X,": 7499,
        "arr[i]=1": 7500,
        "choose": 7501,
        "den": 7502,
        "numzero": 7503,
        "division": 7504,
        "a[4],": 7505,
        "a[7],": 7506,
        "a[9]": 7507,
        "1-3": 7508,
        "9th": 7509,
        "8th": 7510,
        "7th": 7511,
        "s[0][i]": 7512,
        "s[2][j]": 7513,
        "s[1][0]": 7514,
        "s[1][2]": 7515,
        "s[2-i][2-j],": 7516,
        "minutes": 7517,
        "false.": 7518,
        "true:": 7519,
        "Otherwise...": 7520,
        "str1[0]": 7521,
        "str3[2]": 7522,
        "str1[1]": 7523,
        "str3[1]": 7524,
        "str1[2]": 7525,
        "str3[0],": 7526,
        "str2[0]": 7527,
        "str2[2]": 7528,
        "str2[1]": 7529,
        "str2[0],": 7530,
        "a[l][m]": 7531,
        "s[0][0]": 7532,
        "s[2][2]": 7533,
        "s[0][1]": 7534,
        "s[2][1]": 7535,
        "s[0][2]": 7536,
        "s[2][0]": 7537,
        "s[2][2],": 7538,
        "s[2][1],": 7539,
        "s[2][0],": 7540,
        "s[1][2],": 7541,
        "finall": 7542,
        "one[i]": 7543,
        "three[res]": 7544,
        "two[0]": 7545,
        "two[2]": 7546,
        "rts": 7547,
        ",b": 7548,
        "a[2][2],": 7549,
        "a[2][1],": 7550,
        "a[2][0],": 7551,
        "a[1][2],": 7552,
        "m[0]": 7553,
        "m[2],": 7554,
        "chacter": 7555,
        "Do": 7556,
        "times:": 7557,
        "slot": 7558,
        "xth": 7559,
        "I'th": 7560,
        "interation": 7561,
        "B[x]": 7562,
        "A[I]": 7563,
        "a[8": 7564,
        "value,": 7565,
        "graph[i]+1": 7566,
        "graph[4-i][4-j]": 7567,
        "4x5": 7568,
        "graph[i]": 7569,
        "graph[4": 7570,
        "i][4": 7571,
        "x[8": 7572,
        "a[2*5-i]": 7573,
        "a[2": 7574,
        "v[2": 7575,
        "i][2": 7576,
        "x[i][k]": 7577,
        "x[2": 7578,
        "data[0][0]": 7579,
        "data[2][2]": 7580,
        "data[0][1]": 7581,
        "data[2][1]": 7582,
        "data[0][2]": 7583,
        "data[2][0]": 7584,
        "data[1][0]": 7585,
        "data[1][2]": 7586,
        "m[10": 7587,
        "e[2": 7588,
        "e[2-1][2-j]": 7589,
        "disC": 7590,
        "s2[2]": 7591,
        "s1[c]": 7592,
        "s3[2": 7593,
        "oo": 7594,
        "_cnt": 7595,
        "_p": 7596,
        "file_put": 7597,
        "\"filename.in\"": 7598,
        "\"filename.out\"": 7599,
        "st[2": 7600,
        "rorate90": 7601,
        "end[j][N-i-1]": 7602,
        "start[i][j]": 7603,
        "areSame": 7604,
        "end[i][j]": 7605,
        "start[i][j],": 7606,
        "resultsquare,": 7607,
        "newsquare,": 7608,
        "originalsquare,": 7609,
        "resultsquare": 7610,
        "newsquare": 7611,
        "originalsquare": 7612,
        "originalsquare[i][j]": 7613,
        "rotate90": 7614,
        "c[0][i]": 7615,
        "c[2][j],": 7616,
        "flase": 7617,
        "c[1][0]": 7618,
        "c[1][2],": 7619,
        "'X',": 7620,
        "c[2],": 7621,
        "mp[i][j]": 7622,
        "mp[2": 7623,
        "mp[2-i][2-j]": 7624,
        "table[3": 7625,
        "1][3": 7626,
        "quickpow": 7627,
        "1ll,": 7628,
        "200005": 7629,
        "(vis),": 7630,
        "(0)": 7631,
        "(sizeof(vis))": 7632,
        "vis[op[i]]": 7633,
        "!vis[i],": 7634,
        "len1": 7635,
        "len2": 7636,
        "temp[p1]": 7637,
        "s2[p2]": 7638,
        "len2,": 7639,
        "op[i]": 7640,
        "judge(mid)": 7641,
        "Arr": 7642,
        "Mark": 7643,
        "del": 7644,
        "Mark[Arr[i]]": 7645,
        "Mark[i]": 7646,
        "tmp[i]": 7647,
        "T[ind]": 7648,
        "del(mid)": 7649,
        "in(tmp)": 7650,
        "s1[record[i]": 7651,
        "idnex": 7652,
        "wa,": 7653,
        "lulz,": 7654,
        "ss[v[i]]": 7655,
        "s1[current],": 7656,
        "200010": 7657,
        "vis[i],": 7658,
        "len1,": 7659,
        "(left+right)/2": 7660,
        "(base": 7661,
        "isSubSequence": 7662,
        "str1[j]": 7663,
        "str2[i],": 7664,
        "200001": 7665,
        "vi": 7666,
        "vi[ar[i]]": 7667,
        "vi[i]": 7668,
        "isSubSequence(t,": 7669,
        "h)": 7670,
        "check(mi)": 7671,
        "BS": 7672,
        "low,": 7673,
        "high": 7674,
        "low": 7675,
        "high,": 7676,
        "a[t[i]-1]": 7677,
        "temp[i]": 7678,
        "fim": 7679,
        "ini": 7680,
        "((fim": 7681,
        "ini)": 7682,
        "nao_usa": 7683,
        "nao_usa,": 7684,
        "nao_usa[arr[i]": 7685,
        "!nao_usa[i],": 7686,
        "eh": 7687,
        "usa[i]": 7688,
        "t[pos]": 7689,
        "predicate": 7690,
        "&v": 7691,
        "memo": 7692,
        "memo[v[i]": 7693,
        "!memo[i]": 7694,
        "s2[k]": 7695,
        "+(r": 7696,
        "predicate(s,": 7697,
        "mid)": 7698,
        "exist": 7699,
        "exist[arr[i]]": 7700,
        "exist[i]": 7701,
        "fg": 7702,
        "chec": 7703,
        "c[p[i]": 7704,
        "b[fg]": 7705,
        "chec(m)": 7706,
        "taken": 7707,
        "t[i": 7708,
        "moves_so_far": 7709,
        "s[p[i]]": 7710,
        "t[curr]": 7711,
        "thenr": 7712,
        "eturn": 7713,
        "200100": 7714,
        "busca": 7715,
        "seq": 7716,
        "deleta": 7717,
        "qtd": 7718,
        "deleta[i]": 7719,
        "deleta[seq[i]]": 7720,
        "pal[i]": 7721,
        "busca[j]": 7722,
        "pal[1]": 7723,
        "busca[1]": 7724,
        "seq[i]": 7725,
        "meio": 7726,
        "lp": 7727,
        "lp,": 7728,
        "p[j],": 7729,
        "e)/2": 7730,
        "T[a[i]-1]": 7731,
        "possible": 7732,
        "edits,": 7733,
        "changeIndex": 7734,
        "firstPointer": 7735,
        "secondPointer": 7736,
        "t[firstPointer]": 7737,
        "p[secondPointer]": 7738,
        "edits[firstPointer]": 7739,
        "secoindPointer": 7740,
        "moves[i]": 7741,
        "edits": 7742,
        "edits[i]": 7743,
        "edits[moves[i]-1]": 7744,
        "s2[p],": 7745,
        "flag[a[i]]": 7746,
        "210000": 7747,
        "increme": 7748,
        "s1[v[i]": 7749,
        "fun(mid)": 7750,
        "check(s,": 7751,
        "check(fun(i),": 7752,
        "del[num[i]]": 7753,
        "del[i+1]": 7754,
        "s2[k],": 7755,
        "1e12": 7756,
        "multidimensional": 7757,
        "s[a[i]": 7758,
        "ptr,": 7759,
        "t.length()": 7760,
        "ptr": 7761,
        "p.length()": 7762,
        "p[ptr]": 7763,
        "equal,": 7764,
        "l,r,m": 7765,
        "check(m)": 7766,
        "2e6": 7767,
        "casn,": 7768,
        "vis[x[i]]": 7769,
        "b[pos],": 7770,
        "check(mid)": 7771,
        "(arr[cnt]": 7772,
        "str1[cnt]": 7773,
        "str2[i])": 7774,
        "arr[a": 7775,
        "good(mid)": 7776,
        "lenp": 7777,
        "t[a[i]": 7778,
        "p[ptr],": 7779,
        "(l+r+1)/2": 7780,
        "lenA": 7781,
        "lenB": 7782,
        "c[arr[i]": 7783,
        "'`'": 7784,
        "b[idx],": 7785,
        "lo,": 7786,
        "(lo": 7787,
        "hi)": 7788,
        "vis[],": 7789,
        "a[]": 7790,
        "vis[]": 7791,
        "vis[a[i]": 7792,
        "str2[j]": 7793,
        "str1[i],": 7794,
        "legnth": 7795,
        "READ": 7796,
        "INPUT": 7797,
        "(default": 7798,
        "\"NO\")": 7799,
        "OUTPUT": 7800,
        "INPUT.c_str()": 7801,
        "OUTPUT.c_str()": 7802,
        "mp[A[i]]": 7803,
        "b[id],": 7804,
        "ok(m)": 7805,
        "p[cnt]": 7806,
        "b[y]": 7807,
        "le": 7808,
        "+(ri": 7809,
        "le)": 7810,
        "sub(mi)": 7811,
        "take": 7812,
        "tt,": 7813,
        "take[i]": 7814,
        "take[x[i]]": 7815,
        "take[l]": 7816,
        "t[l]": 7817,
        "p[2]": 7818,
        "r[0]": 7819,
        "(r[0]": 7820,
        "l[0])": 7821,
        "(r[i]": 7822,
        "l[i])": 7823,
        "p[0],": 7824,
        "p[1],": 7825,
        "p[2],": 7826,
        "p3,": 7827,
        "e1,": 7828,
        "e2": 7829,
        "e1": 7830,
        "last)": 7831,
        "((l": 7832,
        "(t1": 7833,
        "t2))": 7834,
        "(gap": 7835,
        "P1,": 7836,
        "P2,": 7837,
        "P3,": 7838,
        "T1": 7839,
        "T2": 7840,
        "rprev": 7841,
        "tdiff": 7842,
        "tp1,": 7843,
        "tp2": 7844,
        "tp3": 7845,
        "tp1": 7846,
        "P1": 7847,
        "P2": 7848,
        "P3": 7849,
        "(b[i]": 7850,
        "a[i])": 7851,
        "b[i])": 7852,
        "T1,": 7853,
        "(T1": 7854,
        "T2))": 7855,
        "T1)": 7856,
        "lasr": 7857,
        "40,": 7858,
        "r0": 7859,
        "r0,": 7860,
        "(l[i]": 7861,
        "consume": 7862,
        "prer": 7863,
        "(diff": 7864,
        "min(t1,": 7865,
        "min(l": 7866,
        "r[i-1]": 7867,
        "(t-t2)*p3": 7868,
        "1440": 7869,
        "1440,": 7870,
        "erad": 7871,
        "(v[i]": 7872,
        "(t1)": 7873,
        "(t2)": 7874,
        "1];": 7875,
        "T2)": 7876,
        "((en": 7877,
        "p1)": 7878,
        "(en-st)*p1": 7879,
        "1e-7": 7880,
        "(minimum": 7881,
        "(r-l)": 7882,
        "workTime": 7883,
        "midTime": 7884,
        "sleepTime": 7885,
        "=workTime": 7886,
        "t1+t2": 7887,
        "+t1": 7888,
        "=midTime": 7889,
        "+t2": 7890,
        "=sleepTime+": 7891,
        "(r-l)*p1": 7892,
        "(p1": 7893,
        "(e[i]": 7894,
        "diff,": 7895,
        "(t2": 7896,
        "p2)": 7897,
        "((diff": 7898,
        "p3)": 7899,
        "(t1+t2)": 7900,
        "sum=integer": 7901,
        "last_time=integer": 7902,
        "last_time=0": 7903,
        "end=integers": 7904,
        "interval=integer": 7905,
        "interval=begin": 7906,
        "last_time": 7907,
        "interval": 7908,
        "sum+t1": 7909,
        "interval-t1": 7910,
        "sum+t2": 7911,
        "interval-t2": 7912,
        "sum+p3": 7913,
        "sum+p2": 7914,
        "sum+p1": 7915,
        "sum+(end": 7916,
        "begin)": 7917,
        "begin-": 7918,
        "qi": 7919,
        "\"YES\\n2\\n\",": 7920,
        "s[0],": 7921,
        "amount,": 7922,
        "request,": 7923,
        "amount": 7924,
        "request": 7925,
        "amounts": 7926,
        "gs": 7927,
        "amounts[y]": 7928,
        "gs[y][j]": 7929,
        "amounts[0]": 7930,
        "compare(b,": 7931,
        "a.substr(1,": 7932,
        "n))": 7933,
        "s.size(),": 7934,
        "\"YES\\n\",": 7935,
        "m,n=int": 7936,
        "x=string": 7937,
        "x[0]-'0'": 7938,
        "x[i]-'0'": 7939,
        "300": 7940,
        "within": 7941,
        "\"2\",": 7942,
        "int(s[i][0])": 7943,
        "int(s[i][1])": 7944,
        "s[i][0],": 7945,
        "s[i][1],": 7946,
        "\"2\\n\"": 7947,
        "ans1[0]": 7948,
        "ans1[1]": 7949,
        "ans2[i": 7950,
        "str[0],": 7951,
        "grab": 7952,
        "in[400]": 7953,
        "l=2": 7954,
        "in[0]": 7955,
        "in[1]": 7956,
        "in[0],": 7957,
        "3.141592": 7958,
        "mod1": 7959,
        "n=2": 7960,
        "\"TEMP.inp\"": 7961,
        "\"TEMP.out\"": 7962,
        "310": 7963,
        "s[i]-1": 7964,
        "S[j]": 7965,
        "onward": 7966,
        "excluded": 7967,
        "*s": 7968,
        "302": 7969,
        "alocated": 7970,
        "malloc": 7971,
        "deallocate": 7972,
        "a[500]": 7973,
        "400": 7974,
        "\"YES\\n2\\n\"": 7975,
        "k[2]": 7976,
        "k[1],": 7977,
        "a80]": 7978,
        "string::iterator": 7979,
        "&s[1]": 7980,
        "[n[i]]": 7981,
        "s[0],\"": 7982,
        "\",s[1]": 7983,
        "tin": 7984,
        "Q[a[i]]": 7985,
        "tin[i]": 7986,
        "Q[1],": 7987,
        "Q[2]": 7988,
        "Q[3]": 7989,
        "Q[k]": 7990,
        "e[u]": 7991,
        "e[u][i]": 7992,
        "tin[v]": 7993,
        "Q[a[v]]": 7994,
        "e[x]": 7995,
        "bfs(i)": 7996,
        "pc,": 7997,
        "req,": 7998,
        "creq,": 7999,
        "210,": 8000,
        "creq": 8001,
        "pc[i]": 8002,
        "creq[i]": 8003,
        "creq[adj[i][j]],": 8004,
        "req[i]": 8005,
        "mo": 8006,
        "2},": 8007,
        "ind[i]": 8008,
        "G[i][j]": 8009,
        "ind[j]": 8010,
        "mo[x][a[i]]": 8011,
        "F(a[i])": 8012,
        "G[u": 8013,
        "1][i]": 8014,
        "0xfffffff": 8015,
        "t[j]": 8016,
        "ind[k]": 8017,
        "F(i)": 8018,
        "n,m,a=int": 8019,
        "cc=array": 8020,
        "cc[c[i]]": 8021,
        "g[a-1]": 8022,
        "mx=INT_MAX": 8023,
        "d[k]": 8024,
        "dp[i]=d[i]": 8025,
        "p=c[k],": 8026,
        "ok=0,": 8027,
        "an=n": 8028,
        "cc[p]": 8029,
        "d[cc[p][i]]": 8030,
        "g[cc[p][i]]": 8031,
        "u=g[cc[p][i]][j]": 8032,
        "d[u]": 8033,
        "i=-1": 8034,
        "ok<n": 8035,
        "p=(p+1)": 8036,
        "d[i]=dp[i]": 8037,
        "mx=min(mx,an)": 8038,
        "2e2": 8039,
        "ned,": 8040,
        "a[x].size()": 8041,
        "a[x][i],": 8042,
        "vis[id],": 8043,
        "ned[id].size()": 8044,
        "vis[ned[id][j]],": 8045,
        "vis[id]": 8046,
        "-4,": 8047,
        "a[c[i]].push_back(i)": 8048,
        "ned[i]": 8049,
        "min(res,": 8050,
        "solve(i))": 8051,
        "computer": 8052,
        "201,": 8053,
        "3x201,": 8054,
        "vv": 8055,
        "bsf": 8056,
        "che[num][i]": 8057,
        "vis[head]": 8058,
        "vv[head]": 8059,
        "vv[head][i]": 8060,
        "check[num][v]": 8061,
        "vv[i]": 8062,
        "aj": 8063,
        "vv[aj]": 8064,
        "check[0][i]++,": 8065,
        "check[1][i]++,": 8066,
        "check[2][i]++": 8067,
        "simulate": 8068,
        "edges[i]": 8069,
        "c[edges[i][j]]": 8070,
        "queues": 8071,
        "q[a[i]]": 8072,
        "poped": 8073,
        "q[s]": 8074,
        "edges[f]": 8075,
        "edges[f][i]": 8076,
        "c[next],": 8077,
        "c[next]": 8078,
        "q[a[next]]": 8079,
        "edges[t": 8080,
        "min(ans,": 8081,
        "simulate(i))": 8082,
        "computer,": 8083,
        "bk": 8084,
        "sizeof(bk)": 8085,
        "bk[head]": 8086,
        "computer[head]": 8087,
        "in[v]": 8088,
        "sizeof(in)": 8089,
        "computer[i]": 8090,
        "in[j]": 8091,
        "temp[j]": 8092,
        "check[num][i]": 8093,
        "check[num][vv[head][i]]": 8094,
        "sizeof(check)": 8095,
        "check[0][i],": 8096,
        "check[1][i]": 8097,
        "check[2][i]": 8098,
        "bfs(i": 8099,
        "tu": 8100,
        "checks": 8101,
        "qua": 8102,
        "qua[a[i]]": 8103,
        "qua[1]": 8104,
        "qua[2]": 8105,
        "qua[3]": 8106,
        "qua[x]": 8107,
        "tu[k]": 8108,
        "tu[k][i]": 8109,
        "cnt[xx]": 8110,
        "qua[a[xx]]": 8111,
        "tu[x]": 8112,
        "checks[i]": 8113,
        "cnt[j]": 8114,
        "checks[j]": 8115,
        "check=array": 8116,
        "vv=array": 8117,
        "q=queue": 8118,
        "ans=n": 8119,
        "check[k][i]": 8120,
        "check[k][vv[head][i]]": 8121,
        "now+1": 8122,
        "compute[i]": 8123,
        "ki=int": 8124,
        "aj=int": 8125,
        "check[0][i],check[1][i],check[2][i]": 8126,
        "ans=3f3f3f3f": 8127,
        "ans=min(ans,": 8128,
        "bfs(i-1,i))": 8129,
        "fast_pow": 8130,
        "res=a,": 8131,
        "ret=1": 8132,
        "ret=(ret*res)": 8133,
        "res=(res*res)": 8134,
        "k=int": 8135,
        "u=int": 8136,
        "g[u][i]=1": 8137,
        "ans=100*n": 8138,
        "ok=array": 8139,
        "cur=start": 8140,
        "res=n": 8141,
        "kpyto=false": 8142,
        "win=true": 8143,
        "g[j][j]": 8144,
        "ok[j]": 8145,
        "win=false": 8146,
        "win": 8147,
        "kpyto=true": 8148,
        "ok[i]=true": 8149,
        "kpyto": 8150,
        "cur=(cur+1)": 8151,
        "ans=min(res,": 8152,
        "nowp": 8153,
        "mc": 8154,
        "nsp": 8155,
        "!mark[i]": 8156,
        "need[i]": 8157,
        "!mark[need[i][j]]": 8158,
        "c[nsp[i]]": 8159,
        "dist(nowp,": 8160,
        "c[nsp[i]])": 8161,
        "mark[nsp[i]": 8162,
        "solve(n,": 8163,
        "mc)": 8164,
        "mans": 8165,
        "!k": 8166,
        "mark[sp[i]]": 8167,
        "min(mans,": 8168,
        "c[sp[i]])": 8169,
        "204": 8170,
        "dependency": 8171,
        "203": 8172,
        "dependency[i]": 8173,
        "hours": 8174,
        "cvis": 8175,
        "!visit[i]": 8176,
        "cr": 8177,
        "!visit[dependency[i][j]]": 8178,
        "!cvis": 8179,
        "(cur)": 8180,
        "ANS=-1,": 8181,
        "n,m,k,x,y,a,b,t,q,ans": 8182,
        "sum=long": 8183,
        "v=vector": 8184,
        "A,fix": 8185,
        "K=array": 8186,
        "0,1,2,2,0,1,1,2,0": 8187,
        "K[i]": 8188,
        "B[i][j]": 8189,
        "T=1": 8190,
        "ans=0,": 8191,
        "cur=T": 8192,
        "fix[i]=0": 8193,
        "N<n": 8194,
        "ind=-1,": 8195,
        "mndist=10": 8196,
        "fix[i]": 8197,
        "ok=true": 8198,
        "fix[B[i][j]-1]": 8199,
        "ok=false": 8200,
        "mndist": 8201,
        "dist[cur-1][A[i]-1])": 8202,
        "mndist=dist[cur-1][A[i]-1],": 8203,
        "cur=A[ind]": 8204,
        "fix[ind]=1": 8205,
        "ANS=ans": 8206,
        "ANS+n": 8207,
        "desperate_optimization": 8208,
        "use": 8209,
        "vec=vector": 8210,
        "250": 8211,
        "q=array": 8212,
        "qq=array": 8213,
        "type=array": 8214,
        "outt": 8215,
        "toutt": 8216,
        "desperate_optimization(20)": 8217,
        "type[i]": 8218,
        "outt[i]": 8219,
        "vec[u]": 8220,
        "q[type[i]]": 8221,
        "qq[i]=q[i]": 8222,
        "toutt[i]=outt[i]": 8223,
        "ans=1000000000": 8224,
        "qq[i]": 8225,
        "q[j]=qq[j]": 8226,
        "outt[j]=toutt[j]": 8227,
        "start=i": 8228,
        "total=0": 8229,
        "q[0],": 8230,
        "q[2]": 8231,
        "q[start]": 8232,
        "pos=first": 8233,
        "vec[pos]": 8234,
        "nx=vec[pos][i]": 8235,
        "outt[nx]": 8236,
        "q[type[nx]]": 8237,
        "start=(start+1)": 8238,
        "total-1)": 8239,
        "bk,": 8240,
        "10000000": 8241,
        "w1": 8242,
        "w2": 8243,
        "done": 8244,
        "done2": 8245,
        "x1[p1]": 8246,
        "'P'": 8247,
        "x2[p2]": 8248,
        "x[count]": 8249,
        "count)": 8250,
        "w1,": 8251,
        "256": 8252,
        "D[integer": 8253,
        "'R'][integer": 8254,
        "'S']": 8255,
        "'S'][integer": 8256,
        "'P']": 8257,
        "'P'][integer": 8258,
        "'R']": 8259,
        "br": 8260,
        "am": 8261,
        "bm": 8262,
        "A[i%b]": 8263,
        "B[i%b]": 8264,
        "bb][integer": 8265,
        "aa]": 8266,
        "aa][integer": 8267,
        "bb]": 8268,
        "am,": 8269,
        "bm,": 8270,
        "beat": 8271,
        "tims": 8272,
        "a[": 8273,
        "],": 8274,
        "b[": 8275,
        "Mininum": 8276,
        "Mininum(l1,": 8277,
        "prog": 8278,
        "l1]": 8279,
        "l2]": 8280,
        "prog[i]": 8281,
        "loss1,": 8282,
        "loss2,": 8283,
        "rl1": 8284,
        "rl2": 8285,
        "loss1": 8286,
        "loss2": 8287,
        "rl1,": 8288,
        "Minimum": 8289,
        "a.length()": 8290,
        "b.length()": 8291,
        "(l1,": 8292,
        "11]": 8293,
        "12]": 8294,
        "r11,": 8295,
        "r12": 8296,
        "LINF": 8297,
        "ITER": 8298,
        "100000007": 8299,
        "cyc": 8300,
        "__gcd(m,": 8301,
        "(aa[i]": 8302,
        "P),": 8303,
        "S),": 8304,
        "R),": 8305,
        "P)": 8306,
        "R)": 8307,
        "f,'": 8308,
        "',s": 8309,
        "tn": 8310,
        "(temp": 8311,
        "prime[p]": 8312,
        "s1[i": 8313,
        "n]": 8314,
        "s2[i": 8315,
        "'P',": 8316,
        "{},": 8317,
        "s[result": 8318,
        "win(a[i": 8319,
        "k])]": 8320,
        "p[result": 8321,
        "k))": 8322,
        "win(A[i": 8323,
        "a],": 8324,
        "B[i": 8325,
        "b])]": 8326,
        "p[": 8327,
        "nike": 8328,
        "poly": 8329,
        "losn": 8330,
        "losp": 8331,
        "mp[\"RR\"]": 8332,
        "mp[\"RP\"]": 8333,
        "mp[\"RS\"]": 8334,
        "mp[\"PR\"]": 8335,
        "mp[\"PP\"]": 8336,
        "mp[\"PS\"]": 8337,
        "mp[\"SR\"]": 8338,
        "mp[\"SP\"]": 8339,
        "mp[\"SS\"]": 8340,
        "N[nike]": 8341,
        "P[poly]": 8342,
        "s.clear()": 8343,
        "concatenate": 8344,
        "P,": 8345,
        "multiplied": 8346,
        "losn,": 8347,
        "dp1": 8348,
        "1000100": 8349,
        "dp2": 8350,
        "get(a[x],": 8351,
        "b[y])": 8352,
        "dp1[i": 8353,
        "dp1[i]": 8354,
        "dp2[i]": 8355,
        "get(b[y],": 8356,
        "a[x])": 8357,
        "dp2[i": 8358,
        "(y": 8359,
        "dp1[cnt]": 8360,
        "1ll": 8361,
        "dp1[k": 8362,
        "dp2[cnt]": 8363,
        "dp2[k": 8364,
        "bark": 8365,
        "bark(a[i": 8366,
        "k])": 8367,
        "bark(b[i": 8368,
        "m])": 8369,
        "int-int": 8370,
        "beat(a[i": 8371,
        "a.size()],": 8372,
        "b.size()])": 8373,
        "beat(b[i": 8374,
        "b.size()],": 8375,
        "a.size()])": 8376,
        "make_pair(a1,": 8377,
        "a2)": 8378,
        "gcd(length": 8379,
        "solve(c)": 8380,
        "t.first": 8381,
        "t.second": 8382,
        "solve(n": 8383,
        "c).first": 8384,
        "c).second": 8385,
        "t.second,": 8386,
        "sa,sb=0": 8387,
        "a*size": 8388,
        "b])": 8389,
        "sb": 8390,
        "b],": 8391,
        "a])": 8392,
        "sa": 8393,
        "n/size": 8394,
        "sa,": 8395,
        "dim": 8396,
        "fact": 8397,
        "1000004": 8398,
        "getDivisors": 8399,
        "vt": 8400,
        "(n/i)": 8401,
        "n/i": 8402,
        "nCrModp": 8403,
        "C[i][0]": 8404,
        "C[i][j]": 8405,
        "(C[i-1][j-1]": 8406,
        "C[i-1][j])": 8407,
        "m*k": 8408,
        "n=": 8409,
        "200x200": 8410,
        "g['P']['S']": 8411,
        "g['P']['R']": 8412,
        "g['P']['SP=": 8413,
        "g['S']['S']": 8414,
        "g['S']['R']": 8415,
        "g['S']['P']": 8416,
        "g['R']['S']": 8417,
        "g['R']['P']": 8418,
        "g['R']['R']": 8419,
        "la": 8420,
        "lb": 8421,
        "pa": 8422,
        "n/(lla*lb)": 8423,
        "g[a[pa]][b[pb]]": 8424,
        "pa+1": 8425,
        "increent": 8426,
        "n/(la*lb)": 8427,
        "(la*lb)": 8428,
        "a*length": 8429,
        "s[": 8430,
        "a.length(),": 8431,
        "who": 8432,
        "games": 8433,
        "((a.size())": 8434,
        "(b.size()))": 8435,
        "cnt[who(a[i": 8436,
        "(a.size())],": 8437,
        "(b.size())])]": 8438,
        "cnt[2],": 8439,
        "A,B=string": 8440,
        "n,A,B": 8441,
        "b=size": 8442,
        "p=array": 8443,
        "a*b": 8444,
        "s[win(A[i": 8445,
        "(a*b)": 8446,
        "p[win(A[i": 8447,
        "s[i]*(n/(a*b))": 8448,
        "res1,": 8449,
        "Loses": 8450,
        "Loses(a[i": 8451,
        "a.length()],": 8452,
        "b.length()])": 8453,
        "Loses(b[i": 8454,
        "b.length()],": 8455,
        "a.length()])": 8456,
        "res1,\"": 8457,
        "\",res2": 8458,
        "loser": 8459,
        "gcd(a,b)": 8460,
        "loser[pair": 8461,
        "('R',": 8462,
        "'P')]": 8463,
        "('P',": 8464,
        "'R')]": 8465,
        "'S')]": 8466,
        "('S','P')]": 8467,
        "('S','R')": 8468,
        "('R','S')]": 8469,
        "('S','S')]": 8470,
        "('P','P')]": 8471,
        "('R','R')]": 8472,
        "lcm(size": 8473,
        "*=": 8474,
        "loser[pair<character,": 8475,
        "character>(s[i": 8476,
        "t])]": 8477,
        "coun1": 8478,
        "coun2": 8479,
        "cad": 8480,
        "(0,": 8481,
        "cad[i]": 8482,
        "1000)": 8483,
        "exclusively": 8484,
        "(H": 8485,
        "k+2": 8486,
        "rcont": 8487,
        "ucont": 8488,
        "-201": 8489,
        "sum[i": 8490,
        "sum[j]": 8491,
        "3e5+5": 8492,
        "U)": 8493,
        "L)": 8494,
        "D)": 8495,
        "(jth": 8496,
        "d[i": 8497,
        "u[i": 8498,
        "u[j]": 8499,
        "r[j]": 8500,
        "l[j]": 8501,
        "bisa": 8502,
        "subs": 8503,
        "subs[i]": 8504,
        "kata": 8505,
        "pjg": 8506,
        "imulai": 8507,
        "bisa(substr": 8508,
        "pjg)": 8509,
        "make_pair(x,": 8510,
        "make_pair(0,": 8511,
        "mapper": 8512,
        "mapper['R']": 8513,
        "mapper['U']": 8514,
        "mapper['L']": 8515,
        "mapper['D']": 8516,
        "mx[mapper[s[j]]]": 8517,
        "my[mapper[s[j]]]": 8518,
        "{0,0}": 8519,
        "s1[k]": 8520,
        "ud,": 8521,
        "lr": 8522,
        "conditions": 8523,
        "(ud": 8524,
        "n,l,i,j,ans": 8525,
        "i=250": 8526,
        "j=250": 8527,
        "cad[l]": 8528,
        "a+b[j]": 8529,
        "st(a)": 8530,
        "strinj]g": 8531,
        "y=0,": 8532,
        "size_n": 8533,
        "com": 8534,
        "UDRL": 8535,
        "curX": 8536,
        "curY": 8537,
        "ind(str[jj])": 8538,
        "cx[tmp]": 8539,
        "cy[tmp]": 8540,
        "(curX": 8541,
        "(curY": 8542,
        "com[ii]": 8543,
        "st[j]": 8544,
        "is_return": 8545,
        "a['U']": 8546,
        "a['D']": 8547,
        "a['L']": 8548,
        "a['R']": 8549,
        "int:": 8550,
        "mx[dir[s[i]]]": 8551,
        "my[dir[s[i]]]": 8552,
        "sim": 8553,
        "j-i+1": 8554,
        "simulate(0,": 8555,
        "sim,": 8556,
        "dir)": 8557,
        "i=j": 8558,
        "((sum1": 8559,
        "(sum": 8560,
        "0)),": 8561,
        "str[m]": 8562,
        "h_marks": 8563,
        "111,": 8564,
        "h_marks[i]": 8565,
        "marks[j][i]": 8566,
        "h_marks[i],": 8567,
        "c[i][j+1]=s[j]-'0'": 8568,
        "s[j]-'0'": 8569,
        "a[j+1]": 8570,
        "max(a[j+1],": 8571,
        "s[j]-'0')": 8572,
        "b[j+1]=i": 8573,
        "A[j][i]": 8574,
        "B[j]": 8575,
        "h_marks,": 8576,
        "marks[k][j]": 8577,
        "h_marks)": 8578,
        "marks[i][j]": 8579,
        "300,": 8580,
        "9000": 8581,
        "a[0][j]": 8582,
        "[n][m]": 8583,
        "ma[i][j]": 8584,
        "misa": 8585,
        "int)ma[j][i]": 8586,
        "stu": 8587,
        "stu[i][j]": 8588,
        "maxi[j]": 8589,
        "a[max][i]": 8590,
        "check1[max]": 8591,
        "check1[j]": 8592,
        "check[j]": 8593,
        "incusive": 8594,
        "best[i]": 8595,
        "best[j]": 8596,
        "suc": 8597,
        "marks[i][sub]": 8598,
        "suc[i]": 8599,
        "ch[k]": 8600,
        "ch[l]": 8601,
        "ch[n-1]": 8602,
        "n,m=int,": 8603,
        "mx=array": 8604,
        "vc=vector": 8605,
        "st=set": 8606,
        "mx[j]=max(mx[j],": 8607,
        "(vc[i][j]-'0'))": 8608,
        "mx[j]": 8609,
        "s[j][i]": 8610,
        "s[i][j],": 8611,
        "s[t][j]": 8612,
        "gr": 8613,
        "maxk": 8614,
        "gr[i][j]": 8615,
        "maxk[j]": 8616,
        "mm[n][m]": 8617,
        "mm[i][j]": 8618,
        "may": 8619,
        "mm[0][0],": 8620,
        "mejor": 8621,
        "sw,": 8622,
        "sww": 8623,
        "mm[k][j]": 8624,
        "110,": 8625,
        "presented": 8626,
        "v[j][i]": 8627,
        "ss[k]": 8628,
        "students": 8629,
        "int)(a[i][j]": 8630,
        "N[j],": 8631,
        "N[j]": 8632,
        "mp=array": 8633,
        "109": 8634,
        "used=array": 8635,
        "maxV=-1": 8636,
        "mp[j][i]": 8637,
        "maxV": 8638,
        "maxV=mp[j][i]": 8639,
        "used[j]": 8640,
        "used[j]=1": 8641,
        "arr[i],": 8642,
        "legth": 8643,
        "110x110": 8644,
        "arg": 8645,
        "getchar,": 8646,
        "xor": 8647,
        "-x,": 8648,
        "a[j][k]": 8649,
        "115": 8650,
        "wasBest": 8651,
        "isBest": 8652,
        "g[w]": 8653,
        "g[w][q]": 8654,
        "maxn[q]": 8655,
        "mark[w]": 8656,
        "highest": 8657,
        "high[j],": 8658,
        "high[j]": 8659,
        "highest[i]": 8660,
        "s[n]": 8661,
        "best_score": 8662,
        "s[k][i]": 8663,
        "best_score,": 8664,
        "best[k]": 8665,
        "s[k][j]": 8666,
        "gcd(a,b=integers)": 8667,
        "b=1": 8668,
        "a%b)": 8669,
        "nn,": 8670,
        "nn%i,": 8671,
        "also": 8672,
        "nn=": 8673,
        "nn/i": 8674,
        "gcd(ans,": 8675,
        "n-2)": 8676,
        "ans/o": 8677,
        "\"/\"": 8678,
        "(n-2)/o": 8679,
        "!b": 8680,
        "(nn": 8681,
        "\"/\",": 8682,
        "su": 8683,
        "su2": 8684,
        "__gcd": 8685,
        "(n-2)/l": 8686,
        "su,": 8687,
        "su2,": 8688,
        "ct,": 8689,
        "a%b": 8690,
        "sum/re": 8691,
        "x(0),": 8692,
        "y(m": 8693,
        "n(m),": 8694,
        "z(0)": 8695,
        "%b": 8696,
        "'/'": 8697,
        "2)/div": 8698,
        "div,": 8699,
        "__gcd(sum,": 8700,
        "-2": 8701,
        "'/',": 8702,
        "gcd(s,": 8703,
        "gcd(res,": 8704,
        "(A": 8705,
        "(A-2)": 8706,
        "numerator": 8707,
        "denominator": 8708,
        "numerator,": 8709,
        "fraction": 8710,
        "fra": 8711,
        "base(a,": 8712,
        "fraction(sum,": 8713,
        "200000000711": 8714,
        "sumit": 8715,
        "gcd(b": 8716,
        "__gcd(k,": 8717,
        "digitsum": 8718,
        "digitsum(a,": 8719,
        "fpb": 8720,
        "fpb,": 8721,
        "sumaEnOtraBase": 8722,
        "numerador": 8723,
        "sumaEnOtraBase(n,": 8724,
        "denominador": 8725,
        "numerador,": 8726,
        "number(n,": 8727,
        "gcd(a,": 8728,
        "a;": 8729,
        "temp;": 8730,
        "/=": 8731,
        "convert": 8732,
        "convert(n,": 8733,
        "(__gcd": 8734,
        "fin1": 8735,
        "fin1,": 8736,
        "save,": 8737,
        "nominator": 8738,
        "getDigits": 8739,
        "nok": 8740,
        "nok(b,": 8741,
        "nok(nominator,": 8742,
        "denominator)": 8743,
        "nk": 8744,
        "(nominator": 8745,
        "nk),": 8746,
        "(denominator": 8747,
        "nk)": 8748,
        "gcd(sum,": 8749,
        "multiples": 8750,
        "runn": 8751,
        "a[n][n]": 8752,
        "[n][n]": 8753,
        "1][n": 8754,
        "table[1][i]": 8755,
        "table[i": 8756,
        "table[i][j": 8757,
        "table[n][n]": 8758,
        "in[i][j]": 8759,
        "in[i": 8760,
        "in[i][j": 8761,
        "in[n": 8762,
        "wiith": 8763,
        "v.back()": 8764,
        "a[n-1][n-1]": 8765,
        "n[1][i]": 8766,
        "n[i": 8767,
        "n[i][j": 8768,
        "n[m][m]": 8769,
        "tabla": 8770,
        "tabla[0][i]": 8771,
        "tabla[i][0]": 8772,
        "tabla[i][a]": 8773,
        "tabla[i": 8774,
        "1][a]": 8775,
        "tabla[i][a": 8776,
        "tabla[x": 8777,
        "1][x": 8778,
        "A[0][b]": 8779,
        "A[b][0]": 8780,
        "A[c][d]": 8781,
        "A[c": 8782,
        "1][d]": 8783,
        "A[c][d": 8784,
        "A[a-1][a-1]": 8785,
        "a[n-1][n-1],": 8786,
        "a[u][j": 8787,
        "a[15][15]": 8788,
        "j=2": 8789,
        "[i][j]": 8790,
        "70,": 8791,
        "252,": 8792,
        "924,": 8793,
        "3432,": 8794,
        "12870,": 8795,
        "48620": 8796,
        "a[n][n],": 8797,
        "f[n]": 8798,
        "1][v": 8799,
        "1][m": 8800,
        "table[0][i]": 8801,
        "table[i][0]": 8802,
        "table[N": 8803,
        "1][N": 8804,
        "11x11": 8805,
        "grid=array": 8806,
        "grid[0][i]=1": 8807,
        "grid[i][0]=1": 8808,
        "mx=1": 8809,
        "grid[i][j]=grid[i-1][j]+grid[i][j-1]": 8810,
        "mx=max(mx,grid[i][j])": 8811,
        "g[1][i]=1": 8812,
        "g[i][j]=g[i-1][j]+g[i][j-1]": 8813,
        "g[n][n]": 8814,
        "(dfs(i": 8815,
        "dfs(n": 8816,
        "ans=1": 8817,
        "a[i][j]=a[i-1][j]+a[i][j-1]": 8818,
        "ans=mac(ans,a[i][j])": 8819,
        "grid[0][i]": 8820,
        "grid[i][0]": 8821,
        "grid[i": 8822,
        "grid[i][j": 8823,
        "a[1][i]=1": 8824,
        "a[i][1]=1": 8825,
        "a[i][j]a[i-1][j]+a[i][j-1]": 8826,
        "[20][20]": 8827,
        "a[size": 8828,
        "1][size": 8829,
        "48620,": 8830,
        "arr[0][i]": 8831,
        "g[1][i]": 8832,
        "g[i": 8833,
        "g[i][j": 8834,
        "n=1,": 8835,
        "=3,": 8836,
        "n=4,": 8837,
        "70": 8838,
        "252": 8839,
        "n=7,": 8840,
        "924": 8841,
        "n=9,": 8842,
        "prnt": 8843,
        "3432": 8844,
        "12870": 8845,
        "10.": 8846,
        "s[n][n]": 8847,
        "-500": 8848,
        "NaNarray": 8849,
        "ar[n": 8850,
        "nin": 8851,
        "forj": 8852,
        "c(n,": 8853,
        "arr[i][i]": 8854,
        "arr[n][n],": 8855,
        "\"6\",": 8856,
        "\"20\",": 8857,
        "\"70\",": 8858,
        "\"252\",": 8859,
        "\"924\",": 8860,
        "\"3432\",": 8861,
        "\"12870\",": 8862,
        "\"48620\",": 8863,
        "mat[1][i]": 8864,
        "mat[i][1]": 8865,
        "mat[i][j": 8866,
        "mat[n][n]": 8867,
        "sizeof(table)": 8868,
        "[15][15]": 8869,
        "dp[0][0]": 8870,
        "1o": 8871,
        "dp[0][i]": 8872,
        "dp[i][0]": 8873,
        "dp[i][j]": 8874,
        "dp[i][j": 8875,
        "nul": 8876,
        "n1[nul]": 8877,
        "n1[n]": 8878,
        "ar[i][0]": 8879,
        "ar[0][i]": 8880,
        "ar[i][k]": 8881,
        "ar[w][j]": 8882,
        "ar[o][o]": 8883,
        "1.": 8884,
        "zhuangtai": 8885,
        "t[zhuangtai]": 8886,
        "n,a,b,c=int": 8887,
        "n,a,b,c": 8888,
        "sum=0,": 8889,
        "pos=1": 8890,
        "pos=3": 8891,
        "pos=2": 8892,
        "a>c": 8893,
        "b>c": 8894,
        "minn": 8895,
        "min(b,": 8896,
        "max(b,": 8897,
        "sr": 8898,
        "minn)": 8899,
        "min(min(a,": 8900,
        "a,b,c,n": 8901,
        "--n": 8902,
        "functin": 8903,
        "p(a,": 8904,
        "ish": 8905,
        "n,a,b,c=int,": 8906,
        "r=0,": 8907,
        "o=1,": 8908,
        "e=2": 8909,
        "d[r][o]=d[o][r]=a": 8910,
        "d[r][e]=d[e][r]=b": 8911,
        "d[e][o]=d[o][e]=c": 8912,
        "d[r][r]=d[o][o]=d[e][e]=99999999": 8913,
        "p=r": 8914,
        "min(min(d[p][0],": 8915,
        "d[p][1]),": 8916,
        "d[p][2])": 8917,
        "d[p][i]": 8918,
        "p=i": 8919,
        "t[z]": 8920,
        "n,a,b,c,x,y,ans": 8921,
        "=3": 8922,
        "=2": 8923,
        "(a,b)": 8924,
        "\"0\",": 8925,
        "remaining": 8926,
        "<=c": 8927,
        "dp[1][2]": 8928,
        "dp[1][3]": 8929,
        "dp[i][1]": 8930,
        "dp[i-1][2]": 8931,
        "dp[i-1][3]": 8932,
        "dp[i][2]": 8933,
        "dp[i-1][1]": 8934,
        "dp[i][3]": 8935,
        "dp[n][1]": 8936,
        "dp[n][2]": 8937,
        "dp[n][3]": 8938,
        "min(dp[i": 8939,
        "1][2]": 8940,
        "1][3]": 8941,
        "min(dp[n][2],": 8942,
        "dp[n][3])": 8943,
        "min(d,": 8944,
        "a,b,c,d,e": 8945,
        "1,f": 8946,
        "1,l": 8947,
        "a,b,c,d": 8948,
        "*x": 8949,
        "-=1": 8950,
        "minx(a[0],": 8951,
        "&t)": 8952,
        "'e'": 8953,
        "minx(a[1],": 8954,
        "(N": 8955,
        "b;": 8956,
        "(n-2)*c": 8957,
        "maxn=300005": 8958,
        "t=min(a,b)": 8959,
        "m=min(t,c)": 8960,
        "t+(n-2)*m": 8961,
        "max(min(min(a,": 8962,
        "2)),": 8963,
        "n,a,b,c,x,p,sum,lo,i": 8964,
        "before,": 8965,
        "(before[i]": 8966,
        "after[i])": 8967,
        "max(x,": 8968,
        "min(9": 8969,
        "mini)": 8970,
        "lock": 8971,
        "lock[i]": 8972,
        "min(abs(num[i]": 8973,
        "lock[i]),": 8974,
        "abs(9": 8975,
        "num[i])": 8976,
        "lock[i])": 8977,
        "lwt": 8978,
        "comp1": 8979,
        "comp2": 8980,
        "altoi": 8981,
        "nim": 8982,
        "atoi": 8983,
        "a[i]-b[i]": 8984,
        "ori,": 8985,
        "pas,": 8986,
        "originalState": 8987,
        "passCode": 8988,
        "originalState,": 8989,
        "originalState.length()": 8990,
        "ori": 8991,
        "originalState[i]": 8992,
        "pas": 8993,
        "passCode[i]": 8994,
        "min(abs(x": 8995,
        "y),": 8996,
        "y))": 8997,
        "dist(i[k],": 8998,
        "j[k])": 8999,
        "s(a[i]": 9000,
        "simb": 9001,
        "'2',": 9002,
        "'3',": 9003,
        "'4',": 9004,
        "'5',": 9005,
        "'6',": 9006,
        "'7',": 9007,
        "'8',": 9008,
        "ifstream": 9009,
        "\"duom.txt\"": 9010,
        "ofstream": 9011,
        "\"rez.txt\"": 9012,
        "mas2": 9013,
        "mas[i]": 9014,
        "mas2[i]": 9015,
        "kiekis": 9016,
        "(10": 9017,
        "suma)": 9018,
        "pertama,": 9019,
        "kedua": 9020,
        "jumlah": 9021,
        "1069": 9022,
        "pertama": 9023,
        "max(a[i],": 9024,
        "min(a[i],": 9025,
        "of(absolute": 9026,
        "of(x": 9027,
        "of(((10": 9028,
        "y)))": 9029,
        "tmpA,": 9030,
        "tmpB": 9031,
        "tmpA": 9032,
        "lowever": 9033,
        "awal": 9034,
        "asli": 9035,
        "gede": 9036,
        "cilik": 9037,
        "awal[i]": 9038,
        "asli[i]": 9039,
        "min(10": 9040,
        "gede,": 9041,
        "cilik)": 9042,
        "fcount": 9043,
        "bcount": 9044,
        "minsteps": 9045,
        "comb": 9046,
        "os,": 9047,
        "os[i]": 9048,
        "comb[i]": 9049,
        "minstep": 9050,
        "s1[i],": 9051,
        "s1[i])": 9052,
        "min(x": 9053,
        "min(y": 9054,
        "a[n]-b[n]": 9055,
        "org,": 9056,
        "dst": 9057,
        "org": 9058,
        "min(abs(org[i]": 9059,
        "dst[i]),": 9060,
        "abs(org[i]": 9061,
        "dst[i]))": 9062,
        "(9": 9063,
        "a<b": 9064,
        "\u00e8": 9065,
        "b-a": 9066,
        "min(a": 9067,
        "abs(n[i]": 9068,
        "m[j])": 9069,
        "abs((n[i]": 9070,
        "abs(m[j]": 9071,
        "n[i])": 9072,
        "min(c,": 9073,
        "e)))": 9074,
        "s12": 9075,
        "s12[i]": 9076,
        "(s2[i]": 9077,
        "s12[i])": 9078,
        "s12[i]))": 9079,
        "((10": 9080,
        "n,ans": 9081,
        "n,a,b": 9082,
        "=strings": 9083,
        "(a[i]-b[i])": 9084,
        "a[i]-'0'": 9085,
        "b[i]-'0'": 9086,
        "10-t1+t2": 9087,
        "pass[i]": 9088,
        "caster": 9089,
        "dif1": 9090,
        "n+5": 9091,
        "c[i]=a[i]-'0'": 9092,
        "d[i]=b[i]-'0'": 9093,
        "x=c[i]-d[i]": 9094,
        "y=int": 9095,
        "x<0": 9096,
        "y=c[i]": 9097,
        "1+9-d[i]": 9098,
        "y>abs(x)": 9099,
        "y=9-c[i]": 9100,
        "min(abs(s1[i]": 9101,
        "s2[i]),": 9102,
        "abs((s1[i]": 9103,
        "s2[i])))": 9104,
        "of(s1[i]": 9105,
        "of(10": 9106,
        "'0')))": 9107,
        "sch": 9108,
        "47": 9109,
        "ori[i]": 9110,
        "\\0": 9111,
        "ope[i]": 9112,
        "s,t=string": 9113,
        "min(abs[si]-t[i]),abs(min(s[i],t[i])+10-max(s[i],t[i])))": 9114,
        "num1[i]": 9115,
        "num2[i]": 9116,
        "b[i]),": 9117,
        "b[i]))": 9118,
        "da=a[i]-'0'": 9119,
        "db=b[i]-'0'": 9120,
        "min((da": 9121,
        "db": 9122,
        "(db": 9123,
        "da": 9124,
        "n,item=int,": 9125,
        "s1,s2=string": 9126,
        "item=s1[i]-s2[i]": 9127,
        "item<0": 9128,
        "item=item*-1": 9129,
        "item=4": 9130,
        "item=3": 9131,
        "item=2": 9132,
        "item=1": 9133,
        "min(abs(b[i]": 9134,
        "abs(b[i]": 9135,
        "a[i]))": 9136,
        "of(s[i]": 9137,
        "s1[i]),": 9138,
        "s1[i]))": 9139,
        "n,i,t,j,sum,x=int": 9140,
        "x=10001": 9141,
        "x=min(abs((s1[i]-'0')-0)+abs(10-(s2[i]-'0')),x)": 9142,
        "x=min(abs((s2[i]-'0')-0)+abs(10-(s1[i]-'0')),x)": 9143,
        "x=min(abs((s2[i]-'0')-(s1[i]-'0')),x)": 9144,
        "moves,": 9145,
        "cur_pos": 9146,
        "signed": 9147,
        "pointeger": 9148,
        "the_same": 9149,
        "(t)": 9150,
        "(p[i][2]": 9151,
        "p[i][2]": 9152,
        "p[i][0]": 9153,
        "p[i][1]": 9154,
        "2;": 9155,
        "Let": 9156,
        "running": 9157,
        "((c": 9158,
        "a,b,k=long": 9159,
        "a,b,k": 9160,
        "a*(k/2)-b*(k/2)": 9161,
        "a*((k+1)/2)-b*((k-1)/2)": 9162,
        "(times": 9163,
        "(k/2)*a-(k/2)*b": 9164,
        "((k/2)+1)*": 9165,
        "a-(k/2)*b": 9166,
        "fastpow": 9167,
        "exp": 9168,
        "ask": 9169,
        "testcases": 9170,
        "postdecrement": 9171,
        "k/2": 9172,
        "(k/2)": 9173,
        "right*a": 9174,
        "*b": 9175,
        "right-left": 9176,
        "'`n'": 9177,
        "**p,": 9178,
        "*[x]": 9179,
        "int[3]": 9180,
        "(p[i][0]": 9181,
        "ong": 9182,
        "a-b": 9183,
        "A[i][2]": 9184,
        "A[i][0]": 9185,
        "A[i][1]": 9186,
        "(A[i][2]": 9187,
        "(a)": 9188,
        "la,": 9189,
        "ra": 9190,
        "k/2*a": 9191,
        "k/2*b": 9192,
        "temp1*a": 9193,
        "(value": 9194,
        "v.size()": 9195,
        "e)": 9196,
        "(k-1)*(a-b)/2+a": 9197,
        "k*(a-b)/2": 9198,
        "2)))": 9199,
        "s5": 9200,
        "t=long": 9201,
        "a*(k/2)-b*(k/2)+a*(k": 9202,
        "(k[i]": 9203,
        "(k)": 9204,
        "99999999999": 9205,
        "cnt=long": 9206,
        "1+n": 9207,
        "arr[]": 9208,
        "999999999,": 9209,
        "spot": 9210,
        "hold": 9211,
        "plug": 9212,
        "1000000003": 9213,
        "jum": 9214,
        "100009": 9215,
        "um1,": 9216,
        "sum1=0": 9217,
        "sum=sum": 9218,
        "a1[n]": 9219,
        "a1[k]": 9220,
        "min=a1[0]": 9221,
        "min=a1[i]": 9222,
        "sum1=sum1-min": 9223,
        "sum1=": 9224,
        "odds": 9225,
        "odds.begin()": 9226,
        "odds.end()": 9227,
        "odds[i]": 9228,
        "1999999999": 9229,
        "e=0,": 9230,
        "f=f+d": 9231,
        "a+e": 9232,
        "gankil": 9233,
        "ganjil,": 9234,
        "ganjil": 9235,
        "minn,": 9236,
        "ganjilterkecil": 9237,
        "1000000001": 9238,
        "jumlahgenap": 9239,
        "jumlahganjil": 9240,
        "banyakganjil": 9241,
        "1v[i]": 9242,
        "v1[0]": 9243,
        "100100": 9244,
        "soma": 9245,
        "10000005": 9246,
        "(temp1": 9247,
        "temp2th": 9248,
        "temp2)": 9249,
        "(temp2": 9250,
        "for(integer": 9251,
        "inclusive),": 9252,
        "dans,": 9253,
        "9999999999998": 9254,
        "dans": 9255,
        "minodd,": 9256,
        "blyat,": 9257,
        "minodd": 9258,
        "69696969696": 9259,
        "b[t]": 9260,
        "swap(b[i],": 9261,
        "b[t": 9262,
        "menor": 9263,
        "some": 9264,
        "1000005,": 9265,
        "(suma": 9266,
        "tota": 9267,
        "vector<long": 9268,
        "ou": 9269,
        "a+n": 9270,
        "jum,": 9271,
        "mi,": 9272,
        "INFF,": 9273,
        "s+k": 9274,
        "banyakganjil=": 9275,
        "min=INT_MAX": 9276,
        "first(4,": 9277,
        "ara[n+1],": 9278,
        "6-a-b": 9279,
        "to=array": 9280,
        "keyboard": 9281,
        "keyboard,": 9282,
        "x=x/2+x/8+e^48": 9283,
        "n=read()": 9284,
        "x=1,y=2": 9285,
        "to[1][2]": 9286,
        "to[2][1]=3": 9287,
        "to[1][3]": 9288,
        "to[3][1]=2": 9289,
        "to[2][3]": 9290,
        "to[3][2]=1": 9291,
        "wn=read()": 9292,
        "wn": 9293,
        "y=to[x][y]": 9294,
        "x=to[x][y]": 9295,
        "op1": 9296,
        "op2": 9297,
        "winner,": 9298,
        "spectator": 9299,
        "winner": 9300,
        "N=int": 9301,
        "vis[k]=false": 9302,
        "vis[k]=true": 9303,
        "player1,": 9304,
        "player2": 9305,
        "player3": 9306,
        "player1": 9307,
        "exp(1)": 9308,
        "p[3]": 9309,
        "p[re[k]]": 9310,
        "re[k]": 9311,
        "length5": 9312,
        "u[2]": 9313,
        "x-": 9314,
        "ok=0": 9315,
        "a=x": 9316,
        "waiter": 9317,
        "&p2": 9318,
        "&waiter": 9319,
        "&p1": 9320,
        "game": 9321,
        "m=1,": 9322,
        "n=3": 9323,
        "n=1": 9324,
        "m=3": 9325,
        "m=2": 9326,
        "m=1": 9327,
        "players": 9328,
        "players[1]": 9329,
        "players[2]": 9330,
        "players[3]": 9331,
        "won": 9332,
        "players[won]": 9333,
        "won,": 9334,
        "players[j]": 9335,
        "spect": 9336,
        "b=2": 9337,
        "d=3": 9338,
        "b=3": 9339,
        "c=2": 9340,
        "a=2": 9341,
        "c=3": 9342,
        "a=3": 9343,
        "q.empty()": 9344,
        "a[1": 9345,
        "!flag2": 9346,
        "n,w,l,v,i=int": 9347,
        "w=arr[0]": 9348,
        "l=1": 9349,
        "w=1": 9350,
        "l=3": 9351,
        "w=2": 9352,
        "w=3": 9353,
        "delcare": 9354,
        "f(temp,": 9355,
        "prohibited": 9356,
        "first_p": 9357,
        "second_p": 9358,
        "third_p": 9359,
        "yeah": 9360,
        "second_p,": 9361,
        "b[105]": 9362,
        "c=c": 9363,
        "c>x": 9364,
        "Mishka": 9365,
        "Chris": 9366,
        "Friendship": 9367,
        "magic!^^": 9368,
        "\"Mishka\"": 9369,
        "\"Chris\"": 9370,
        "\"Friendship": 9371,
        "magic!^^\"": 9372,
        "winm,": 9373,
        "winc": 9374,
        "winm": 9375,
        "(winc": 9376,
        "magic!": 9377,
        "^^": 9378,
        "tot,": 9379,
        "mishka": 9380,
        "chrish": 9381,
        "magic!^^\",": 9382,
        "sumc": 9383,
        "n--)": 9384,
        ">b": 9385,
        "summ": 9386,
        "summc": 9387,
        "m>": 9388,
        "a[10005]": 9389,
        "b[10005]": 9390,
        "inclusive.": 9391,
        "sb,": 9392,
        "b[105],": 9393,
        "a[i[": 9394,
        "n,m,c0int,": 9395,
        "cp=0": 9396,
        "m,c": 9397,
        "m>c": 9398,
        "m<c": 9399,
        "mp>cp": 9400,
        "mp<cp": 9401,
        "n,a,b=int,": 9402,
        "sum2=0": 9403,
        "sum1>sum2": 9404,
        "sum1<sum2": 9405,
        "chris": 9406,
        "mishkaCounter": 9407,
        "chrisCounter": 9408,
        "mCount,": 9409,
        "cCount,": 9410,
        "wit": 9411,
        "mCount": 9412,
        "cCount": 9413,
        "step1": 9414,
        "a[100010]": 9415,
        "cntm": 9416,
        "cntc": 9417,
        "mis": 9418,
        "x=x": 9419,
        "y=array": 9420,
        "x[i]>y[i]": 9421,
        "x[i]<y[i]": 9422,
        "tot=0,": 9423,
        "cn,": 9424,
        "cn1": 9425,
        "lees": 9426,
        "n,m,c=int,x1,x2=0": 9427,
        "x2>x1": 9428,
        "x2<x1": 9429,
        "ni,": 9430,
        "c++": 9431,
        "Magic": 9432,
        "ekse": 9433,
        "Magic!^^": 9434,
        "n,i,j,k=int,": 9435,
        "j>k": 9436,
        "k>j": 9437,
        "c>m": 9438,
        "num>sum": 9439,
        "\"Mishka\",": 9440,
        "\"Chris\",": 9441,
        "\"rock\"": 9442,
        "\"scissors\"": 9443,
        "\"M\"": 9444,
        "\"F\"": 9445,
        "\"S\"": 9446,
        "\"paper\"": 9447,
        "\"?\"": 9448,
        "\"rock\",": 9449,
        "\"FMS\"": 9450,
        "cnt[m[i]]": 9451,
        "cnt[m[(i": 9452,
        "3]]": 9453,
        "judge(s1)": 9454,
        "judge(s2)": 9455,
        "\"S\\n\"": 9456,
        "\"M\\n\"": 9457,
        "\"F\\n\"": 9458,
        "\"?\\n\"": 9459,
        "check(a[0],": 9460,
        "a[1])": 9461,
        "a[0])": 9462,
        "(a[0],": 9463,
        "(a[1],": 9464,
        "arguments(a[1],": 9465,
        "(a[2],": 9466,
        "F,": 9467,
        "'s'": 9468,
        "win(F,": 9469,
        "M)": 9470,
        "win(M,": 9471,
        "F)": 9472,
        "win(S,": 9473,
        "\"F\",": 9474,
        "\"M\",": 9475,
        "\"S\",": 9476,
        "getwin": 9477,
        "getwin(a,": 9478,
        "winner[0]": 9479,
        "getwin(b,": 9480,
        "winner[1]": 9481,
        "getwin(c,": 9482,
        "winner[2]": 9483,
        "winner[3]": 9484,
        "'F',": 9485,
        "'M',": 9486,
        "battle": 9487,
        "wins": 9488,
        "battle(a,": 9489,
        "winA,": 9490,
        "winB,": 9491,
        "winC,": 9492,
        "maxWin": 9493,
        "winCounter": 9494,
        "winA": 9495,
        "wins(a,": 9496,
        "winB": 9497,
        "wins(b,": 9498,
        "winC": 9499,
        "wins(c,": 9500,
        "(maxWin": 9501,
        "winA)": 9502,
        "winB)": 9503,
        "winC)": 9504,
        "person[winner]": 9505,
        "111111": 9506,
        "211111": 9507,
        "ms[f]": 9508,
        "ms[m]": 9509,
        "ms[s]": 9510,
        "W": 9511,
        "'F'": 9512,
        "'M'": 9513,
        "win(f,": 9514,
        "win(m,": 9515,
        "win(s,": 9516,
        "winner(x,": 9517,
        "winner(y,": 9518,
        "winner(z,": 9519,
        "nan": 9520,
        "'s',": 9521,
        "checker": 9522,
        "checker(F,": 9523,
        "checker(S,": 9524,
        "checker(M,": 9525,
        "gesture": 9526,
        "gesture[\"rock\"]": 9527,
        "gesture[\"scissors\"]": 9528,
        "gesture[\"paper\"]": 9529,
        "gesture[f]": 9530,
        "gesture[m]": 9531,
        "gesture[s]": 9532,
        "u[0]": 9533,
        "\"rrs\"": 9534,
        "\"ppr\"": 9535,
        "\"pss\"": 9536,
        "box": 9537,
        "r[1]": 9538,
        "r[2]": 9539,
        "box,": 9540,
        "mp[s4]": 9541,
        "mp[s1]": 9542,
        "mp[s2]": 9543,
        "mp[s3]": 9544,
        "rock": 9545,
        "paper": 9546,
        "scissors": 9547,
        "b=\"scissors\",": 9548,
        "b=\"paper\"": 9549,
        "b=\"rock\"": 9550,
        "\"scissors\",": 9551,
        "\"paper\",": 9552,
        "b=\"rock\",": 9553,
        "cmp(a,": 9554,
        "cmp(b,": 9555,
        "cmp(c,": 9556,
        "{'F',": 9557,
        "'S'}": 9558,
        "m[\"rock\"]": 9559,
        "m[\"paper\"]": 9560,
        "m[\"scissors\"]": 9561,
        "m[str[2]]": 9562,
        "ch[2]": 9563,
        "m[str[1]]": 9564,
        "ch[1]": 9565,
        "m[str[0]]": 9566,
        "(s2": 9567,
        "s3)": 9568,
        "(s3": 9569,
        "'Q'": 9570,
        "dp[3]": 9571,
        "memeset": 9572,
        "dp[2]": 9573,
        "QAQ_count": 9574,
        "(line.size()": 9575,
        "line.size()": 9576,
        "(line[k]": 9577,
        "Q),": 9578,
        "q1": 9579,
        "(q": 9580,
        "q1)": 9581,
        "s1[2]": 9582,
        "s1[3]": 9583,
        "strcmp(s1,": 9584,
        "QAQ)),": 9585,
        "QAQ": 9586,
        "'Q',": 9587,
        "find_it": 9588,
        "parameters": 9589,
        "letters": 9590,
        "find_it(s,": 9591,
        "\"QAQ\"": 9592,
        "125": 9593,
        "dp[idx][cur]": 9594,
        "bitwise-not": 9595,
        "str[idx]": 9596,
        "ss[cur]": 9597,
        "t[X]": 9598,
        "s[C],": 9599,
        "dp[X": 9600,
        "dp[X]": 9601,
        "dp[m]": 9602,
        "'A',": 9603,
        "elemens": 9604,
        "FindString": 9605,
        "my[idx]": 9606,
        "FindString(s,": 9607,
        "staus[2][101],result": 9608,
        "0,temp2": 9609,
        "strlen(ori)": 9610,
        "str.length()": 9611,
        "staus[0][temp1+1]": 9612,
        "staus[1][temp2+1]": 9613,
        "staus[0][i]": 9614,
        "staus[1][j]": 9615,
        "staus[0][d]": 9616,
        "a[z]": 9617,
        "%=": 9618,
        "1000000007)": 9619,
        "1000000007))": 9620,
        "A),": 9621,
        "q[i])": 9622,
        "dp[j": 9623,
        "lnum": 9624,
        "rnum=0": 9625,
        "j=size": 9626,
        "rnum": 9627,
        "lnum*rnum": 9628,
        "pref": 9629,
        "suff": 9630,
        "pref[i]": 9631,
        "suff[i]": 9632,
        "pref[i": 9633,
        "suff[i": 9634,
        "element,": 9635,
        "a<0": 9636,
        "n=length": 9637,
        "a_post": 9638,
        "q_post": 9639,
        "a_post[n]=0": 9640,
        "q_post[n]=0": 9641,
        "a_post[i]=a_post[i+1]": 9642,
        "q_post[i]=q_post[i+1]": 9643,
        "a_post[i]": 9644,
        "q_post[i]": 9645,
        "i<n-2": 9646,
        "a_post[i]>0": 9647,
        "q_post[i+2]>0": 9648,
        "j<n-1": 9649,
        "q_post[j+1]": 9650,
        "countSubseq": 9651,
        "m+1,": 9652,
        "b[i-1]": 9653,
        "dp[m][n]": 9654,
        "pref[0]": 9655,
        "pref[i-1]": 9656,
        "pref[n-1]": 9657,
        "ats": 9658,
        "f[b],": 9659,
        "strlength": 9660,
        "k=j+1": 9661,
        "(arr[n": 9662,
        "arr[i])": 9663,
        "q_count": 9664,
        "QA": 9665,
        "QAQ[0]": 9666,
        "QA[0]": 9667,
        "QAQ[i]": 9668,
        "QAQ[i-1]": 9669,
        "QA[i]": 9670,
        "QA[i-1]": 9671,
        "QAQ[n-1]": 9672,
        "ce": 9673,
        "cs[0]": 9674,
        "ce[n]": 9675,
        "cs[i": 9676,
        "cs[i]": 9677,
        "ce[i]": 9678,
        "ce[i": 9679,
        "(sum[len": 9680,
        "sum[i])": 9681,
        "0,i,j,k": 9682,
        "x.length()": 9683,
        "QQ": 9684,
        "[len": 9685,
        "AQ": 9686,
        "Q[len]": 9687,
        "x[lin]": 9688,
        "AQ[len]": 9689,
        "QQ[len]": 9690,
        "AQ[i]": 9691,
        "AQ[i": 9692,
        "Q[i": 9693,
        "QQ[i]": 9694,
        "QQ[i": 9695,
        "Q[i]": 9696,
        "QQ[0]": 9697,
        "s.size": 9698,
        "(s[k]": 9699,
        "sizeof(L)": 9700,
        "sizeof(R)": 9701,
        "goind": 9702,
        "R[i]": 9703,
        "a[flag]": 9704,
        "A)": 9705,
        "a[k": 9706,
        "st[k]": 9707,
        "solve(integer": 9708,
        "i,integer": 9709,
        "solve(j": 9710,
        "Athen": 9711,
        "0,0": 9712,
        "(q[length": 9713,
        "20)": 9714,
        "n/100": 9715,
        "n/20": 9716,
        "N/!0": 9717,
        "N/5": 9718,
        "N/1": 9719,
        "100}": 9720,
        "bills[]": 9721,
        "{100,": 9722,
        "bills[i]": 9723,
        "bills[i++]": 9724,
        "n>=": 9725,
        "n>=5": 9726,
        "n/5": 9727,
        "+n": 9728,
        "kt": 9729,
        "&n": 9730,
        "100;": 9731,
        "100))": 9732,
        "20))": 9733,
        "10))": 9734,
        "5))": 9735,
        "a/10": 9736,
        "a/20": 9737,
        "a/5": 9738,
        "-5": 9739,
        "banyak": 9740,
        "100)": 9741,
        "declar": 9742,
        ">=1": 9743,
        "99": 9744,
        "0LL,": 9745,
        "a*-1LL": 9746,
        "myC": 9747,
        "shengyu": 9748,
        "An,": 9749,
        "n,i,j": 9750,
        "100,20,10,5,1": 9751,
        "n,s": 9752,
        "n/100,": 9753,
        "n>=10": 9754,
        "s+n/10,": 9755,
        "n-": 9756,
        "n/10*10": 9757,
        "n/5,": 9758,
        "n-n/5*5": 9759,
        "n>=1": 9760,
        "s+": 9761,
        "n/1,": 9762,
        "n/1*1": 9763,
        "tmp,min1,max1,sum_n,index_max,index_min": 9764,
        "min_max": 9765,
        "index_min": 9766,
        "index_max": 9767,
        "sum_v": 9768,
        "uses": 9769,
        "sum_n": 9770,
        "test1": 9771,
        "is_it_sorted_des": 9772,
        "thats": 9773,
        "n,r,ans": 9774,
        "cost[i]": 9775,
        "n/a[i]": 9776,
        "n/p[i]": 9777,
        "(100": 9778,
        "(20": 9779,
        "(5": 9780,
        "1,5,10,20,100": 9781,
        "hitung": 9782,
        "n*q-y": 9783,
        "MAXM": 9784,
        "1e-5": 9785,
        "mceil": 9786,
        "!(first": 9787,
        "mceil(first,": 9788,
        "mceil(second": 9789,
        "kek": 9790,
        "getans()": 9791,
        "((y": 9792,
        "max(r1,": 9793,
        "2999999999ll": 9794,
        "lowest": 9795,
        "getInt": 9796,
        "shifted": 9797,
        "enter": 9798,
        "-(read": 9799,
        "(y-x)*1.0": 9800,
        "(q-p)": 9801,
        "((q": 9802,
        "1.0)": 9803,
        "(q-p)*1.0": 9804,
        "(round": 9805,
        "up(x": 9806,
        "1.0))": 9807,
        "up((y": 9808,
        "1.0)))": 9809,
        "ok(1e9,": 9810,
        "dividing": 9811,
        "ok(z": 9812,
        "poww": 9813,
        "(result": 9814,
        "itnegers": 9815,
        "(mid)-x": 9816,
        "(l)-x": 9817,
        "len=100005": 9818,
        "pi=acos(-1)": 9819,
        "mod=998244353": 9820,
        "seed=131": 9821,
        "x,y,p,q=long": 9822,
        "((x+(mid*q-y))": 9823,
        "p*mid": 9824,
        "x,y,p,q": 9825,
        "x*q": 9826,
        "y*p": 9827,
        "l=0,": 9828,
        "r=1000000000,": 9829,
        "mid=long": 9830,
        "l<r": 9831,
        "mid=(l+r)/2": 9832,
        "solve(mid)": 9833,
        "r=mid": 9834,
        "l=mid+1": 9835,
        "r*q-y": 9836,
        "(r1,": 9837,
        "decrement,": 9838,
        "a1>=0": 9839,
        "1000000004": 9840,
        "(hi": 9841,
        "lo)": 9842,
        "__gcd(q,": 9843,
        "(1e18": 9844,
        "(low": 9845,
        "high)": 9846,
        "jav": 9847,
        "Check": 9848,
        "Khela_Hobe": 9849,
        "Khela_Hobe()": 9850,
        "mode1": 9851,
        "mode2": 9852,
        "gcdNum": 9853,
        "priint": 9854,
        "m2,": 9855,
        "gdc": 9856,
        "0x7fffffffffffffff": 9857,
        "tinf": 9858,
        "!(x": 9859,
        "(function": 9860,
        "y-x": 9861,
        "q-p)": 9862,
        "triangleNumber": 9863,
        "inegers": 9864,
        "501": 9865,
        "precomp": 9866,
        "triangleNumber[(i": 9867,
        "triangleNumber[N]": 9868,
        "tambah=1": 9869,
        "for(create": 9870,
        "500)": 9871,
        "(i=1": 9872,
        "i<=500": 9873,
        "i=i+tambah)": 9874,
        "tambah": 9875,
        "if(arr[n]": 9876,
        "zero)": 9877,
        "ley": 9878,
        "505": 9879,
        "prealoc": 9880,
        "v[n]": 9881,
        "minIncl": 9882,
        "maxExcl": 9883,
        "(minIncl": 9884,
        "maxExcl)": 9885,
        "\"NO\\n\")": 9886,
        "minIncl,": 9887,
        "maxExcl,": 9888,
        "50000": 9889,
        "tri[tot]": 9890,
        "tri[num]": 9891,
        "(i*i": 9892,
        "!(cout": 9893,
        "\"YES\\n\")": 9894,
        "v.begin()": 9895,
        "int's": 9896,
        "fix": 9897,
        "sqrt(val)": 9898,
        "(val)": 9899,
        "ture": 9900,
        "(8": 9901,
        "asd[temp]": 9902,
        "asd[z]": 9903,
        "'YES\"": 9904,
        "1.e3": 9905,
        "tri(n)": 9906,
        "(int)y": 9907,
        "x=vector": 9908,
        "505,": 9909,
        "binary": 9910,
        "Team": 9911,
        "Win": 9912,
        "Goals": 9913,
        "mm": 9914,
        "mm[s]": 9915,
        "S686": 9916,
        "M249": 9917,
        "s[S686]": 9918,
        "M249(n)": 9919,
        "mmm": 9920,
        "mmm[a]": 9921,
        "100000000": 9922,
        "wt": 9923,
        "v[wt]": 9924,
        "score1,": 9925,
        "score2": 9926,
        "score": 9927,
        "score1": 9928,
        "olds": 9929,
        "s+n": 9930,
        "f=0,": 9931,
        "s1=\"": 9932,
        "t=\"": 9933,
        "m=\"": 9934,
        "n(exclusive)": 9935,
        "if(t==\"": 9936,
        "\")": 9937,
        "increament": 9938,
        "if(s1==t)": 9939,
        "if(m": 9940,
        "s[n/s]": 9941,
        "n=integer": 9942,
        "(s,": 9943,
        "s+n)": 9944,
        "2e9+7": 9945,
        "gx": 9946,
        "gy": 9947,
        "creates": 9948,
        "last,": 9949,
        "m[last]": 9950,
        "cn1,": 9951,
        "cn2,": 9952,
        "cn2": 9953,
        "-699999999": 9954,
        "setIt": 9955,
        "p[a]": 9956,
        "(1e9),": 9957,
        "maap": 9958,
        "maap[s]": 9959,
        "-1.0": 9960,
        "s[n/2]": 9961,
        "ma[s]": 9962,
        "2e5+5": 9963,
        "aux1,": 9964,
        "sw": 9965,
        "ingegers": 9966,
        "v0,": 9967,
        "v0": 9968,
        "c,v0,v1,a": 9969,
        "1;;": 9970,
        "min(v1,": 9971,
        "x-1": 9972,
        "1e-15": 9973,
        "(v0": 9974,
        "c,v0,v1,a,l": 9975,
        "min(v0,": 9976,
        "v1)-l": 9977,
        "continuously": 9978,
        "since": 9979,
        "c-v0": 9980,
        "v1),": 9981,
        "c+l": 9982,
        "sp,": 9983,
        "min(sp": 9984,
        "np,": 9985,
        "ms,": 9986,
        "np": 9987,
        "cur_speed": 9988,
        "min(v1": 9989,
        "min(sum,": 9990,
        "l),": 9991,
        "l)))": 9992,
        "+a": 9993,
        "c=c-v0": 9994,
        "v0=v0+a": 9995,
        "vl,": 9996,
        "vl": 9997,
        "v0+a": 9998,
        "300005": 9999,
        "maxa": 10000,
        "large": 10001,
        "powmod": 10002,
        "clockticks": 10003,
        "duartion": 10004,
        "vm,": 10005,
        "vm": 10006,
        "curr,": 10007,
        "ddd,": 10008,
        "infint64_t": 10009,
        "64bit": 10010,
        "(int64_t)": 10011,
        "pagesRead": 10012,
        "(pagesRead": 10013,
        "(days": 10014,
        "+v0": 10015,
        "min(v0": 10016,
        "Day": 10017,
        "Page_Sum": 10018,
        "diferent": 10019,
        "s=s-p": 10020,
        "s+v0": 10021,
        "greather": 10022,
        "tan": 10023,
        "pages_read": 10024,
        "v1)": 10025,
        "page": 10026,
        "total_page,": 10027,
        "acc,": 10028,
        "page_back": 10029,
        "day_count,": 10030,
        "total_page": 10031,
        "acc": 10032,
        "day_count": 10033,
        "acc)": 10034,
        "all,": 10035,
        "more,": 10036,
        "maxs,": 10037,
        "see": 10038,
        "((sum": 10039,
        "(v0))": 10040,
        "v0)": 10041,
        "newpage": 10042,
        "curs": 10043,
        "\":(\"": 10044,
        "sumd,": 10045,
        "hred,": 10046,
        "sumd": 10047,
        "hred": 10048,
        "lessthan": 10049,
        "c+1": 10050,
        "ew": 10051,
        "v0+(at-1)*a": 10052,
        "v1-l": 10053,
        "v0+(at-1)*a-l": 10054,
        "cns": 10055,
        "000000": 10056,
        "(v1": 10057,
        "entered": 10058,
        "<=9": 10059,
        "(x/10)": 10060,
        "writeln": 10061,
        "6100,": 10062,
        "4610000": 10063,
        "ind[],": 10064,
        "ver[],": 10065,
        "nxt[],": 10066,
        "head[]": 10067,
        "ver[en]": 10068,
        "nxt[en]": 10069,
        "head[x]": 10070,
        "ind[y]": 10071,
        "d[]": 10072,
        "[x]": 10073,
        "ver[i]": 10074,
        "d[y]": 10075,
        "d[x]": 10076,
        "getRank": 10077,
        "2001,": 10078,
        "2001": 10079,
        "gr,": 10080,
        "ans[gr[x]]": 10081,
        "gr[x]": 10082,
        "ans[x]": 10083,
        "gr[a]": 10084,
        "ans[a]": 10085,
        "dep,": 10086,
        "dep": 10087,
        "v[k]": 10088,
        "v[k][i],": 10089,
        "m[x],": 10090,
        "fa[j]": 10091,
        "iteration,": 10092,
        "2e+3": 10093,
        "sizeof(input)": 10094,
        "tree[pos]": 10095,
        "dfs(tree[pos][i],": 10096,
        "tree[input[i]]": 10097,
        "num[x]": 10098,
        "degree": 10099,
        "maxlevel": 10100,
        "recur": 10101,
        "level": 10102,
        "a[now].size()": 10103,
        "a[now][i]": 10104,
        "a[temp": 10105,
        "2010": 10106,
        "*max_element(b,": 10107,
        "fth,": 10108,
        "fth": 10109,
        "maxN,": 10110,
        "fth[x]": 10111,
        "fth[x],": 10112,
        "fth[i]": 10113,
        "2003": 10114,
        "oldest": 10115,
        "vis[v[a][i]]": 10116,
        "v[a][i]": 10117,
        "par[i]": 10118,
        "20005": 10119,
        "xx[x]": 10120,
        "ar[i].size()": 10121,
        "solve(ar[i][j])": 10122,
        "ar1[N],": 10123,
        "ar1[k++]": 10124,
        "ar[c]": 10125,
        "ar1[i]": 10126,
        "boss": 10127,
        "dep[p]": 10128,
        "dep[u]": 10129,
        "graph[u]": 10130,
        "!dep[graph[u][i]])": 10131,
        "sizeof(dep)": 10132,
        "graph[v]": 10133,
        "boss[i]": 10134,
        "dep[i]": 10135,
        "wile": 10136,
        "fa[j],": 10137,
        "seen": 10138,
        "dep[s]": 10139,
        "seen[s]": 10140,
        "ngh": 10141,
        "adj[a][i]": 10142,
        "seen[ngh]": 10143,
        "dep[ngh]": 10144,
        "dep[a]": 10145,
        "depth[i]": 10146,
        "now=int": 10147,
        "fi(get": 10148,
        "fi(d[x])+1": 10149,
        "Max=-1": 10150,
        "Max=max(Max,": 10151,
        "fi(i))": 10152,
        "mp[x]": 10153,
        "fun(i)": 10154,
        "height": 10155,
        "adj[v],": 10156,
        "adj[temp]": 10157,
        "j=a[j],": 10158,
        "n,v": 10159,
        "vth": 10160,
        "(p[cnt]": 10161,
        "-1)": 10162,
        "(mx,": 10163,
        "node,": 10164,
        "maxh": 10165,
        "a[node]": 10166,
        "a[nide]": 10167,
        "maxh,": 10168,
        "V[u]": 10169,
        "dfs(V[u][i])": 10170,
        "V[p[i]]": 10171,
        "dfs(i)": 10172,
        "p[v[i]]": 10173,
        "dfs(a[x],": 10174,
        "cnts": 10175,
        "p[k]": 10176,
        "!vis[p[k][i]]": 10177,
        "p[k][i]": 10178,
        "cnts,": 10179,
        "max_depth": 10180,
        "max_depth[i]": 10181,
        "root[j]": 10182,
        "vis[root[j]]": 10183,
        "level[root[j]]": 10184,
        "vis[v[t][i]]": 10185,
        "level[v[t][i]]": 10186,
        "level[t]": 10187,
        "max_depth[j]": 10188,
        "level[v[t][i]],": 10189,
        "v[t][i]": 10190,
        "employee": 10191,
        "employee[pos]": 10192,
        "employee[i]": 10193,
        "dfs(employee[i])": 10194,
        "2020": 10195,
        "parent[i": 10196,
        "parent[x]": 10197,
        "pf": 10198,
        "a[v[i][j]]": 10199,
        "v[x-1]": 10200,
        "\"Anton\"": 10201,
        "\"Danik\"": 10202,
        "\"Friendship\"": 10203,
        "Anton": 10204,
        "Danik": 10205,
        "cnta,": 10206,
        "cntd": 10207,
        "cnta": 10208,
        "(cnta": 10209,
        "cntd)": 10210,
        "cntd),": 10211,
        "100003": 10212,
        "sum_A": 10213,
        "sum_D": 10214,
        "anton": 10215,
        "danik": 10216,
        "3.14159": 10217,
        "numOfGames": 10218,
        "65": 10219,
        "68": 10220,
        "Declare": 10221,
        "cd": 10222,
        "counter_A": 10223,
        "counter_D": 10224,
        "lse": 10225,
        "a[i]=A": 10226,
        "a[i]=D": 10227,
        "ans<tot": 10228,
        "n,A,D": 10229,
        "=s": 10230,
        "valuve": 10231,
        "otherwse": 10232,
        "Dani": 10233,
        "key,": 10234,
        "mp[A]": 10235,
        "mp[D]": 10236,
        "(mp[D]": 10237,
        "mp[A])": 10238,
        "(mp[A]": 10239,
        "mp[D])": 10240,
        "integers=0": 10241,
        "lenght()": 10242,
        "a,d=": 10243,
        "a>d": 10244,
        "a<d": 10245,
        "folllowing": 10246,
        "totd": 10247,
        "createintegers": 10248,
        "rount,": 10249,
        "rount": 10250,
        "joy": 10251,
        "joy[i]": 10252,
        "'A\"": 10253,
        "n,a,d": 10254,
        "sumD": 10255,
        "(sumA": 10256,
        "sumD)": 10257,
        "(sumD": 10258,
        "sumA)": 10259,
        "sizeof(game)": 10260,
        "game[v]": 10261,
        "game[i]": 10262,
        "\"Oh,": 10263,
        "keyboard!\\n\"": 10264,
        "\"I": 10265,
        "become": 10266,
        "guy.\\n\"": 10267,
        "guy.\"": 10268,
        "keyboard!\"": 10269,
        "a[110],": 10270,
        "check[x]": 10271,
        "levels": 10272,
        "indx": 10273,
        "lv": 10274,
        "lv[indx]": 10275,
        "lv[j]": 10276,
        "a,b,c=array": 10277,
        "d,e=int": 10278,
        "mp[temp]": 10279,
        "Oh,": 10280,
        "keyboard!": 10281,
        "I": 10282,
        "guy.": 10283,
        "g[a[i]]": 10284,
        "g[b[i]]": 10285,
        "guy\"": 10286,
        "111": 10287,
        "v=array": 10288,
        "k,a=int": 10289,
        "v[a]=1": 10290,
        "i=int": 10291,
        "high1": 10292,
        "high2,": 10293,
        "*q": 10294,
        "newint[high1]": 10295,
        "high2": 10296,
        "newint[high2]": 10297,
        "q[j]": 10298,
        "player_1": 10299,
        "player_2": 10300,
        "achivement_Player1_2": 10301,
        "pass[100]": 10302,
        "pass[achivement_Player1_2": 10303,
        "*itr": 10304,
        "*r": 10305,
        "r[p]": 10306,
        "*u": 10307,
        "u[p]": 10308,
        "*m": 10309,
        "m[t": 10310,
        "p]": 10311,
        "n,x,y=int": 10312,
        "myset=set": 10313,
        "levels=array": 10314,
        "x_level=int": 10315,
        "x_level": 10316,
        "levels[x_level-1]=true": 10317,
        "y_level=int": 10318,
        "y_level": 10319,
        "levels[y_level-1]=true": 10320,
        "levels[i]": 10321,
        "p,q": 10322,
        "lk": 10323,
        "a[lk": 10324,
        "st.size()": 10325,
        "3.14159265359": 10326,
        "levels=int": 10327,
        "p=int": 10328,
        "r=array": 10329,
        "u=array": 10330,
        "m=array": 10331,
        "i+j+1": 10332,
        "m[p]=r[p]": 10333,
        "t=p": 10334,
        "m[t+p]=u[p]": 10335,
        "p=1": 10336,
        "p+q": 10337,
        "guy": 10338,
        "myset.size()": 10339,
        "ar[k]": 10340,
        "yippee": 10341,
        "a[aa]": 10342,
        "vis[101]": 10343,
        "n*(n+1)/2": 10344,
        "and-": 10345,
        "keyboard\"": 10346,
        "mymap[0]": 10347,
        "\"O-|-OOOO\"": 10348,
        "mymap[1]": 10349,
        "\"O-|O-OOO\"": 10350,
        "mymap[2]": 10351,
        "\"O-|OO-OO\"": 10352,
        "mymap[3]": 10353,
        "\"O-|OOO-O\"": 10354,
        "mymap[4]": 10355,
        "\"O-|OOOO-\"": 10356,
        "mymap[5]": 10357,
        "\"-O|-OOOO\"": 10358,
        "mymap[6]": 10359,
        "\"-O|O-OOO\"": 10360,
        "mymap[7]": 10361,
        "\"-O|OO-OO\"": 10362,
        "mymap[8]": 10363,
        "\"-O|OOO-O\"": 10364,
        "mymap[9]": 10365,
        "\"-O|OOOO-\"": 10366,
        "mymap[s[i]": 10367,
        "'0']": 10368,
        "DisplayBoard": 10369,
        "DisplayBoard(remainder)": 10370,
        "\"O-\"": 10371,
        "\"-O\"": 10372,
        "\"|-OOOO\",": 10373,
        "\"|O-OOO\",": 10374,
        "\"|OO-OO\",": 10375,
        "\"|OOO-O\",": 10376,
        "\"|OOOO-\"": 10377,
        "left[(num[i]": 10378,
        "left[num[i]": 10379,
        "godama": 10380,
        "ichdama": 10381,
        "\"-O": 10382,
        "\"O-": 10383,
        "fun(0)": 10384,
        "digits[i]": 10385,
        "fun(digits[j])": 10386,
        "hash": 10387,
        "'2'": 10388,
        "'3'": 10389,
        "'4'": 10390,
        "'5'": 10391,
        "'6'": 10392,
        "'7'": 10393,
        "'8'": 10394,
        "\"O-|-OOOO\\n\"": 10395,
        "\"O-|O-OOO\\n\"": 10396,
        "\"O-|OO-OO\\n\"": 10397,
        "\"O-|OOO-O\\n\"": 10398,
        "\"O-|OOOO-\\n\"": 10399,
        "\"-O|-OOOO\\n\"": 10400,
        "\"-O|O-OOO\\n\"": 10401,
        "\"-O|OO-OO\\n\"": 10402,
        "\"-O|OOO-O\\n\"": 10403,
        "\"-O|OOOO-\\n\"": 10404,
        "O-|-OOOO": 10405,
        "-O|": 10406,
        "O-!": 10407,
        "ones": 10408,
        "\"-O|\"": 10409,
        "\"O-|\"": 10410,
        "\"-OOOO\"": 10411,
        "\"O-OOO\"": 10412,
        "\"OO-OO\"": 10413,
        "\"OOO-O\"": 10414,
        "\"OOOO-\"": 10415,
        "str.begin()": 10416,
        "str.end()": 10417,
        "O-|O-OOO": 10418,
        "O-|OO-OO": 10419,
        "O-|OOO-O": 10420,
        "O-|OOOO-": 10421,
        "-O|-OOOO": 10422,
        "-O|O-OOO": 10423,
        "-O|OO-OO": 10424,
        "-O|OOO-O": 10425,
        "-O|OOOO-": 10426,
        "(digit": 10427,
        "screen": 10428,
        "rec": 10429,
        "s[id]": 10430,
        "res[0]": 10431,
        "res[1]": 10432,
        "res[i+1]": 10433,
        "rec()": 10434,
        "map<int,string>soroban": 10435,
        "soroban.clear()": 10436,
        "soroban[0]": 10437,
        "soroban[1]": 10438,
        "soroban[2]": 10439,
        "soroban[3]": 10440,
        "soroban[4]": 10441,
        "soroban[5]": 10442,
        "soroban[6]": 10443,
        "soroban[7]": 10444,
        "soroban[8]": 10445,
        "soroban[9]": 10446,
        "soroban[s[i]": 10447,
        "ans=vector": 10448,
        "d=n": 10449,
        "O-|": 10450,
        "n=0,": 10451,
        "-OOOO": 10452,
        "print(0)": 10453,
        "print(n": 10454,
        "m[1]": 10455,
        "m[2]": 10456,
        "m[3]": 10457,
        "m[4]": 10458,
        "m[5]": 10459,
        "m[6]": 10460,
        "m[7]": 10461,
        "m[8]": 10462,
        "m[9]": 10463,
        "m[n": 10464,
        "10]": 10465,
        "getSoroban": 10466,
        "-OOOO\"": 10467,
        "getSoroban(n": 10468,
        "\"O-|OOO-O\",": 10469,
        "five": 10470,
        "six": 10471,
        "x[4]": 10472,
        "x[5]": 10473,
        "x[6]": 10474,
        "x[7]": 10475,
        "x[8]": 10476,
        "x[9]": 10477,
        "x[s[i]": 10478,
        "getNum": 10479,
        "getNum(0)": 10480,
        "getNum(r)": 10481,
        "ar[3": 10482,
        "print(int": 10483,
        "prints": 10484,
        "soroban": 10485,
        "ainteger": 10486,
        "accordingly": 10487,
        "(y,": 10488,
        "-gcd(a,": 10489,
        "-gcd(b,": 10490,
        "cnt.": 10491,
        "third": 10492,
        "stopped": 10493,
        "Subtract": 10494,
        "common": 10495,
        "Increment": 10496,
        "st_taken": 10497,
        "__gcd(a,": 10498,
        "_gcd": 10499,
        "_gcd(b,": 10500,
        "_gcd(a,": 10501,
        "gcd(y,": 10502,
        "l1,l2": 10503,
        "(the": 10504,
        "(l1": 10505,
        "gcd_s": 10506,
        "gcd_a": 10507,
        "lzl": 10508,
        "lzl(m,": 10509,
        "infinity,": 10510,
        "lzl(n,": 10511,
        "n,x,": 10512,
        "lol=": 10513,
        "lol,": 10514,
        "lol,2nd": 10515,
        "(__gcd(": 10516,
        "__gcd(": 10517,
        "1-x": 10518,
        "__gcd(b,": 10519,
        "simon,": 10520,
        "antisimon": 10521,
        "simon": 10522,
        "arguents": 10523,
        "Count": 10524,
        "when": 10525,
        "divisor": 10526,
        "he": 10527,
        "sh(a,": 10528,
        "pick": 10529,
        "A(a,": 10530,
        "A(b,": 10531,
        "a[i%2],": 10532,
        "gc,": 10533,
        "pq,": 10534,
        "discount": 10535,
        "min_require": 10536,
        "discount[i]": 10537,
        "price": 10538,
        "price[i]": 10539,
        "price,": 10540,
        "greater<integer>()": 10541,
        "OO": 10542,
        "freopen": 10543,
        "input.txt,": 10544,
        "output.txt,": 10545,
        "v.end()": 10546,
        "vv.rbegin()": 10547,
        "vv.rend()": 10548,
        "vv[j]": 10549,
        "V.begin(),": 10550,
        "V.end(),": 10551,
        "items[lo]": 10552,
        "samllest": 10553,
        "nmax=2000010": 10554,
        "x=q[1]": 10555,
        "s=0,": 10556,
        "j=n": 10557,
        "j>=1": 10558,
        "p=x": 10559,
        "p=2": 10560,
        "MINN": 10561,
        "b[it]": 10562,
        "m,n,q": 10563,
        "200000,a": 10564,
        ",ans": 10565,
        "file.txt": 10566,
        "v1.begin()": 10567,
        "v1.end()": 10568,
        "(b1": 10569,
        "(kol": 10570,
        "n,m,x,y,z,mn": 10571,
        "INT_MAX,ans": 10572,
        "v.end(": 10573,
        "d.begin()": 10574,
        "d.end()": 10575,
        "p.begin(),": 10576,
        "p.end()": 10577,
        "N,M=int": 10578,
        "discountQuantity=1000000007": 10579,
        "quantity=int": 10580,
        "quantity": 10581,
        "discountQuantity=min(discountQuantity,quantity)": 10582,
        "prices=vector": 10583,
        "price=int": 10584,
        "prices": 10585,
        "costToPay=0": 10586,
        "toPurchase=N-1": 10587,
        "toPurchase": 10588,
        "purchaseQuantity=discountQuantity": 10589,
        "purchaseQuantity": 10590,
        "prices[toPurchase]": 10591,
        "costToPay": 10592,
        "descending": 10593,
        "dis[0]": 10594,
        "coupons": 10595,
        "coupons[i]": 10596,
        "BestCoupon": 10597,
        "*min_element(coupons,": 10598,
        "C)": 10599,
        "resutl": 10600,
        "mpu": 10601,
        "s[1000006]": 10602,
        "q[1000006]": 10603,
        "a[1000006]": 10604,
        "Minv": 10605,
        "Minv),": 10606,
        "ar[n]": 10607,
        "arr[m]": 10608,
        "range": 10609,
        "arr+m": 10610,
        "0,md": 10611,
        "(md": 10612,
        "md-1": 10613,
        "discounts": 10614,
        "aTypes": 10615,
        "aPrices": 10616,
        "aTypes[i]": 10617,
        "aPrices[j]": 10618,
        "aTypes[0]": 10619,
        "m,n": 10620,
        "q[m]": 10621,
        "0,j": 10622,
        "away": 10623,
        "disc": 10624,
        "disc[i]": 10625,
        "disc.begin()": 10626,
        "disc.end()": 10627,
        "cost.begin()": 10628,
        "cost.end()": 10629,
        "max(0ll,": 10630,
        "disc[0]": 10631,
        "cost[j]": 10632,
        "b+n": 10633,
        "b[h]": 10634,
        "OO=10^9": 10635,
        "\"input.txt\"": 10636,
        "(read)": 10637,
        "\"output.txt\"": 10638,
        "(write)": 10639,
        "fast()": 10640,
        "vv=vector": 10641,
        "an=0": 10642,
        "c=0,": 10643,
        "an,": 10644,
        "Doaa": 10645,
        "des": 10646,
        "des[i]": 10647,
        "des[0]": 10648,
        ">=0,": 10649,
        "v[k": 10650,
        "sizeof(discounts)": 10651,
        "sizeof(items)": 10652,
        "items[i]": 10653,
        "discounts[0]": 10654,
        "lst": 10655,
        "lst,": 10656,
        "min_discount": 10657,
        "discounts[i]": 10658,
        "countt": 10659,
        "min_discount,": 10660,
        "shift)": 10661,
        "mn),": 10662,
        "dix": 10663,
        "diy": 10664,
        "v.rbegin()": 10665,
        "v.rend()": 10666,
        "R[65]": 10667,
        "r(long": 10668,
        "a,long": 10669,
        "modulo=": 10670,
        "power(x,": 10671,
        "predcompute": 10672,
        "POWER[0]": 10673,
        "63": 10674,
        "namespace": 10675,
        "std": 10676,
        "m,mi": 10677,
        "min(mi,": 10678,
        "0,num": 10679,
        "((long": 10680,
        "long)v.size())": 10681,
        "mycmp": 10682,
        "mq": 10683,
        "min(mq,": 10684,
        "(mq+2)": 10685,
        "mq,": 10686,
        "numbers2": 10687,
        "Yes": 10688,
        "numbers[i]": 10689,
        "numbers2[0]": 10690,
        "numbers[i": 10691,
        "1000-element": 10692,
        "fn.": 10693,
        "push,": 10694,
        "c[top]": 10695,
        "n-element": 10696,
        "k-element": 10697,
        "sort(b,": 10698,
        "greater<int>())": 10699,
        "push(b[j],": 10700,
        "push(a[i],": 10701,
        "\"No\\n\"": 10702,
        "\"Yes\\n\"": 10703,
        "b[pos]": 10704,
        "minb": 10705,
        "maxb": 10706,
        "minb,": 10707,
        "maxb,": 10708,
        "\"Yes\"": 10709,
        "\"No\"": 10710,
        "N,K=int": 10711,
        "K>1": 10712,
        "ind=0": 10713,
        "ind=i": 10714,
        "a[i-1],": 10715,
        "a[a": 10716,
        "arr3,": 10717,
        "arr4,": 10718,
        "arr3": 10719,
        "arr4": 10720,
        "arr3[j]": 10721,
        "arr3[0]": 10722,
        "arr3[k-1]": 10723,
        "arr2[0]": 10724,
        "arr4[i]": 10725,
        "integers:": 10726,
        "-1]": 10727,
        "(gcd": 10728,
        "-(getchar": 10729,
        "fast_io": 10730,
        "a[mark]": 10731,
        "h[i]": 10732,
        "k[0]": 10733,
        "h[i": 10734,
        "b[k": 10735,
        "!A[i]": 10736,
        "B[x": 10737,
        "e[j]": 10738,
        "momo": 10739,
        "lbel": 10740,
        "arr1=array": 10741,
        "arr[i]=arr1[c]": 10742,
        "arr1[i-1]": 10743,
        "arr[i+1]": 10744,
        "vector,": 10745,
        "ya": 10746,
        "fori": 10747,
        "truw": 10748,
        "bitch": 10749,
        "1,000": 10750,
        "maxn-size": 10751,
        "cmp,": 10752,
        "c[j,": 10753,
        "postincremented]": 10754,
        "sort(b": 10755,
        "cmp)": 10756,
        "b[j++]": 10757,
        "double,": 10758,
        "360": 10759,
        "(180": 10760,
        "180": 10761,
        "angleofpolygon": 10762,
        "floats": 10763,
        "angleofpolygon(a)": 10764,
        "angle": 10765,
        "no1": 10766,
        "360.0": 10767,
        "180.0": 10768,
        "YES\\n": 10769,
        "PI=3.14159265358": 10770,
        "alpha=int": 10771,
        "180-alpha": 10772,
        "3.0": 10773,
        "0.0": 10774,
        "180.0)": 10775,
        "(360.0": 10776,
        "(360": 10777,
        "t))": 10778,
        "ang": 10779,
        "curAng": 10780,
        "360/180-a": 10781,
        "is_integer": 10782,
        "is_integer(360.0": 10783,
        "(180.0": 10784,
        "side": 10785,
        "side1": 10786,
        "(180)": 10787,
        "angle)": 10788,
        "c[++k]": 10789,
        "!pp,": 10790,
        "i,j,n,a": 10791,
        "i-2": 10792,
        "a[q])": 10793,
        "mod1=10^9+7": 10794,
        "mod2=10^9+9": 10795,
        "maxN=200000": 10796,
        "INF=10^9+7": 10797,
        "LL_INF": 10798,
        "10^18+11": 10799,
        "a,b,c,x1,yy1,x2,yy2,n,x=long": 10800,
        "v=bool": 10801,
        "ggg=1": 10802,
        "v=false": 10803,
        "i=3": 10804,
        "99999": 10805,
        "(i-2)*180": 10806,
        "v=true": 10807,
        "NAO": 10808,
        "(fim": 10809,
        "((mid": 10810,
        "180)": 10811,
        "{cast": 10812,
        "double}": 10813,
        "((ini": 10814,
        "t,a": 10815,
        "180-a": 10816,
        ",a": 10817,
        "sizeof(v)": 10818,
        "360/(180-a)": 10819,
        "181": 10820,
        "arr[val]": 10821,
        "arr[angle]": 10822,
        "(360)": 10823,
        "factors": 10824,
        "printed": 10825,
        "printed,": 10826,
        "factors[j]": 10827,
        "180-angle": 10828,
        "nhap": 10829,
        "180-n": 10830,
        "angel=int": 10831,
        "angel": 10832,
        "180-angel": 10833,
        "c[f]": 10834,
        "179": 10835,
        "p,n": 10836,
        "arr[ele": 10837,
        "s[len-1-i],": 10838,
        "fas_io": 10839,
        "p,n,": 10840,
        "arr[temp": 10841,
        "visit[asd]": 10842,
        "p,n=int": 10843,
        "3e2": 10844,
        "333": 10845,
        "mdulo": 10846,
        "arr[x": 10847,
        "y[z]": 10848,
        "299,": 10849,
        "udah": 10850,
        "elements:": 10851,
        "vis[pos]": 10852,
        "biao[b]": 10853,
        "lengths": 10854,
        "a[m": 10855,
        "p][1]": 10856,
        "p][0]": 10857,
        "N=300": 10858,
        "N+5": 10859,
        "desperate_optimization(10)": 10860,
        "ans=500": 10861,
        "flag[x": 10862,
        "ans=min(ans,i)": 10863,
        "available": 10864,
        "store[x": 10865,
        "used(p,": 10866,
        "used[x": 10867,
        "s.count(temp[i]": 10868,
        "s.insert(temp[i]": 10869,
        "a[mod]": 10870,
        "st.find(x": 10871,
        "st.end()": 10872,
        "insert(x": 10873,
        "sizeof(arr)": 10874,
        "itself": 10875,
        "arr[x],": 10876,
        "longp,": 10877,
        "arr[100000]": 10878,
        "find(v.begin(),": 10879,
        "v.end(),": 10880,
        "vis[x": 10881,
        "n,m,i,j,q": 10882,
        "n,m)": 10883,
        "400,": 10884,
        "ar[k": 10885,
        "ada": 10886,
        "ada[x]": 10887,
        "307": 10888,
        "arr[inp": 10889,
        "sizeof(hash)": 10890,
        "pointerhash": 10891,
        "hash[x]": 10892,
        "N,M,K,H,W,L,R": 10893,
        "v[M": 10894,
        "N]": 10895,
        "bucket": 10896,
        "bucket[a": 10897,
        "m[x": 10898,
        "3001": 10899,
        "mp[x": 10900,
        "hash,": 10901,
        "++i": 10902,
        "c[k]": 10903,
        "m['[']": 10904,
        "m['(']": 10905,
        "[,": 10906,
        "m['8']": 10907,
        "m[s1[i]])": 10908,
        "m[s2[i]])": 10909,
        "TEAM": 10910,
        "WINS": 10911,
        "TIE": 10912,
        "check(s1[i],": 10913,
        "check(s2[i],": 10914,
        "win(c1,": 10915,
        "'['": 10916,
        "']'": 10917,
        "s1.length()": 10918,
        "\"TIE\\n\"": 10919,
        "\"TEAM": 10920,
        "WINS\\n\"": 10921,
        "first_team,": 10922,
        "second_team": 10923,
        "first_points,": 10924,
        "second_points": 10925,
        "first_points": 10926,
        "first_team": 10927,
        "first_team.length()": 10928,
        "(first_team[i]": 10929,
        "second_team[i]),": 10930,
        "first_team[i]": 10931,
        "second_team[i]": 10932,
        "(first_points": 10933,
        "second_points)": 10934,
        "second_points,": 10935,
        "TEAM,": 10936,
        "winner,WINS": 10937,
        "team2": 10938,
        "team1": 10939,
        "team1[a],": 10940,
        "team2[a]": 10941,
        "\"TIE\"": 10942,
        "WINS\"": 10943,
        "ashu": 10944,
        "bshu": 10945,
        "b[i+1]": 10946,
        "'<'": 10947,
        "']',": 10948,
        "'<',": 10949,
        "newlines": 10950,
        "{'(',": 10951,
        "'[',": 10952,
        "'8'},": 10953,
        "{'8',": 10954,
        "'['}": 10955,
        "p[\"8<\"]": 10956,
        "p[\"()\"]": 10957,
        "p[\"[]\"]": 10958,
        "p[a.substr(i,": 10959,
        "p[b.substr(i,": 10960,
        "check(s1[i])": 10961,
        "check(s2[i])": 10962,
        "scorea,": 10963,
        "scoreb": 10964,
        "scorea": 10965,
        "(scorea": 10966,
        "scoreb)": 10967,
        "scoreb),": 10968,
        "(a.substr(i,": 10969,
        "[]),": 10970,
        "8<),": 10971,
        "()),": 10972,
        "(b.substr(i,": 10973,
        "(ta": 10974,
        "tb),": 10975,
        "((ta": 10976,
        "(tb": 10977,
        "(as": 10978,
        "bs),": 10979,
        "RPS": 10980,
        "\"[]\"": 10981,
        "\"()\",": 10982,
        "\"()\"": 10983,
        "\"[]\",": 10984,
        "RPS(one,": 10985,
        "two)": 10986,
        "'8\"": 10987,
        "bpi]": 10988,
        "wb": 10989,
        "wa": 10990,
        "'['and": 10991,
        "'('and": 10992,
        "\"8<\"": 10993,
        "x.at(i)": 10994,
        "y.at(i)": 10995,
        "accept": 10996,
        "bla": 10997,
        "bla()": 10998,
        "t2=string": 10999,
        "c2=0": 11000,
        "c1>c2": 11001,
        "c2>c1": 11002,
        "(int)length": 11003,
        "win1": 11004,
        "win2": 11005,
        "prin": 11006,
        "rps": 11007,
        "t1,t2=string": 11008,
        "rps(t1,t2)": 11009,
        "tone,ttwo=0": 11010,
        "tone": 11011,
        "ttwo": 11012,
        "tone>ttwo": 11013,
        "tone<ttwo": 11014,
        "(counter1": 11015,
        "counter2)": 11016,
        "who_wins": 11017,
        "na,": 11018,
        "na": 11019,
        "a[cnt]": 11020,
        "(na": 11021,
        "nb),": 11022,
        "((s": 11023,
        "s/c": 11024,
        "x/a*b": 11025,
        "3.1415926535": 11026,
        "(h": 11027,
        "w/a": 11028,
        "v*b": 11029,
        "w+u": 11030,
        "n/a*b": 11031,
        "n+m": 11032,
        "s/": 11033,
        "(((s": 11034,
        "1e1": 11035,
        "a/d+a/d/b*c": 11036,
        "keyur": 11037,
        "mayur": 11038,
        "expo": 11039,
        "a),": 11040,
        "chocs": 11041,
        "d/a": 11042,
        "bonus": 11043,
        "get_free,": 11044,
        "get,": 11045,
        "get_free": 11046,
        "diff2": 11047,
        "(div/a)*b": 11048,
        "1000001,": 11049,
        "v[N]": 11050,
        "free": 11051,
        "(count": 11052,
        "offers": 11053,
        "(a*c)": 11054,
        "(offers": 11055,
        "(remaining": 11056,
        "(S": 11057,
        "C))": 11058,
        "son": 11059,
        "son[i]": 11060,
        "Number": 11061,
        "Answers": 11062,
        "int[Number]": 11063,
        "Answers[i]": 11064,
        "z[i][j]": 11065,
        "z[i][0]": 11066,
        "z[i][3]": 11067,
        "z[i][1]": 11068,
        "z[i][2]": 11069,
        "extra": 11070,
        "(choc": 11071,
        "E=1e9": 11072,
        "e/a*b": 11073,
        "(bt": 11074,
        "rest_money,": 11075,
        "i_ans": 11076,
        "f_ans": 11077,
        "rest_money": 11078,
        "(rest_money": 11079,
        "ans,k,a,b,c,d=long": 11080,
        "k=a/d": 11081,
        "k=a/(d*b)*c": 11082,
        "random": 11083,
        "generator": 11084,
        "n/c": 11085,
        "\"total": 11086,
        "total/a": 11087,
        "\"times": 11088,
        "buffer": 11089,
        "total[i]": 11090,
        "to(r": 11091,
        "(((r": 11092,
        "a[i][3]": 11093,
        "\"Ciel\"": 11094,
        "\"Hanako\"": 11095,
        "debug": 11096,
        "(220": 11097,
        "DX": 11098,
        "DY": 11099,
        "Ciel": 11100,
        "220": 11101,
        "Hanako": 11102,
        "Ciel()": 11103,
        "Hanako()": 11104,
        "turn": 11105,
        "\"Ciel\\n\"": 11106,
        "\"Hanako\\n\"": 11107,
        "ciel": 11108,
        "hanako": 11109,
        "ciel()": 11110,
        "hanako()": 11111,
        "players[0]": 11112,
        "\"empty\"": 11113,
        "players[index]": 11114,
        "\"win\"": 11115,
        "\"lose\"": 11116,
        "players[0].compare(\"lose\")": 11117,
        "players[1].compare(\"lose\")": 11118,
        "m-12": 11119,
        "m-22": 11120,
        "22)": 11121,
        "rAmount": 11122,
        "n,x1,x2,sum=int": 11123,
        "a[x1]": 11124,
        "b[x2]": 11125,
        "a[i]+b[i]": 11126,
        "a[i]<b[i]": 11127,
        "a[i]-(a[i]+b[i])/2": 11128,
        "sum/2": 11129,
        "arrx": 11130,
        "arx[i]": 11131,
        "arr[arx[i]]": 11132,
        "arrx[arx[i]]": 11133,
        "ary[i]": 11134,
        "arr[ary[i]]": 11135,
        "arrx[i]": 11136,
        "A[x]": 11137,
        "A[i]+B[i]": 11138,
        "(absolute": 11139,
        "A[i])": 11140,
        "numa": 11141,
        "numb": 11142,
        "numa[a[i]]": 11143,
        "numb[b[i]]": 11144,
        "(numa[i]": 11145,
        "numb[i])": 11146,
        "abs(numa[i]": 11147,
        "abs(sum": 11148,
        "y[b]": 11149,
        "y[i])": 11150,
        "abs(x[i]": 11151,
        "ap": 11152,
        "p[a[i]]": 11153,
        "ap[a[i]]": 11154,
        "p[b[i]]": 11155,
        "ap[i]": 11156,
        "200005,": 11157,
        "i,j,k,l,r,co": 11158,
        "n,m,t": 11159,
        "a[x[i]]++": 11160,
        "y[i],": 11161,
        "b[y[i]]++": 11162,
        "b[c]": 11163,
        "judge=1": 11164,
        "abs(a[i]-b[i])": 11165,
        "abs((a[i]-b[i])/2)": 11166,
        "judge=0": 11167,
        "cnt/2": 11168,
        "a[m]": 11169,
        "b[m]": 11170,
        "sizeofcnt": 11171,
        "cnt[arr1[i]]": 11172,
        "cnt[arr2[i]]": 11173,
        "(b)": 11174,
        "(c)": 11175,
        "abs(c[i]": 11176,
        "maxiimum": 11177,
        "gcd(b,a%b)": 11178,
        "v[c]": 11179,
        "t[c]": 11180,
        "t[b]": 11181,
        "a[q]": 11182,
        "c[q]": 11183,
        "b[q]": 11184,
        "\"-1\\n\",": 11185,
        "c1[a[i]]": 11186,
        "c2[b[i]]": 11187,
        "zong": 11188,
        "(c1[i]": 11189,
        "c2[i])": 11190,
        "abs((c1[i]": 11191,
        "c1[i])": 11192,
        "0,b1": 11193,
        "size6": 11194,
        "a1[a[i]]": 11195,
        "b1[b[i]]": 11196,
        "b1[i]": 11197,
        "(b1[i]": 11198,
        "a1[i])": 11199,
        "aexc,": 11200,
        "bexc,": 11201,
        "exc,": 11202,
        "bc": 11203,
        "ac[i]": 11204,
        "bc[i]": 11205,
        "ac[a[i]]": 11206,
        "bc[b[i]]": 11207,
        "exc": 11208,
        "aexc": 11209,
        "bexc": 11210,
        "inv": 11211,
        "inv(P": 11212,
        "(P": 11213,
        "f[a[i]]": 11214,
        "f[b[i]],": 11215,
        "ff[b[i]]": 11216,
        "\"-1\",": 11217,
        "ff[i]": 11218,
        "MAXX": 11219,
        "maxInt": 11220,
        "(tot": 11221,
        "ar[a[i]]": 11222,
        "ca[a[i]]": 11223,
        "ar[b[i]]": 11224,
        "ar[i],": 11225,
        "ca[i]": 11226,
        "2LL": 11227,
        "ambos": 11228,
        "a[num": 11229,
        "ambos[num": 11230,
        "b[num": 11231,
        "amobs[i]": 11232,
        "d[b[i]]": 11233,
        "(f[i]": 11234,
        "g[i])": 11235,
        "fA": 11236,
        "fB": 11237,
        "fA[A[i]]": 11238,
        "fB[B[i]]": 11239,
        "fA[i]": 11240,
        "fB[i]": 11241,
        "arra": 11242,
        "arrb": 11243,
        "sizeof(arra)": 11244,
        "sizeof(arrb)": 11245,
        "arra[a]": 11246,
        "arrb[b]": 11247,
        "(arra[x]": 11248,
        "arrb[x])": 11249,
        "(abs(arra[x]": 11250,
        "slogan": 11251,
        "PRINT": 11252,
        "RIGHT\\n": 11253,
        "downwards": 11254,
        "LEFT\\nt": 11255,
        "LEFT\\n": 11256,
        "s=\"": 11257,
        "\"+s": 11258,
        "n-k": 11259,
        "k>1": 11260,
        "\"LEFT\"": 11261,
        "k<i": 11262,
        "\"RIGHT\"": 11263,
        "\"PRINT": 11264,
        "k<n": 11265,
        "k>i": 11266,
        "\"LEFT\\n\"": 11267,
        "\"RIGHT\\n\"": 11268,
        "\"RIGHT\",": 11269,
        "\"LEFT\",": 11270,
        "s[n-1],": 11271,
        "LEFT": 11272,
        "decrment": 11273,
        "\"PRINT\"": 11274,
        "RIGHT": 11275,
        "toInt": 11276,
        "myString": 11277,
        "mySs": 11278,
        "myInt": 11279,
        "mySS": 11280,
        "parse": 11281,
        "substrings": 11282,
        "vec[1]": 11283,
        "slogan[k": 11284,
        "slogan[k-1]": 11285,
        "rf,": 11286,
        "lf,": 11287,
        "lf": 11288,
        "rf": 11289,
        "PI=acos(-1)": 11290,
        "LINF=INF*INF": 11291,
        "L=20": 11292,
        "MAX=5047": 11293,
        "MOD=998244353": 11294,
        "inside": 11295,
        "i>=0": 11296,
        "i<n": 11297,
        "d=-1": 11298,
        "k>=n": 11299,
        "k<n-1-k": 11300,
        "d=d*-1": 11301,
        "inside(k)": 11302,
        "printint": 11303,
        "LEFT,": 11304,
        "RIGHT,": 11305,
        "str-1": 11306,
        "2*k": 11307,
        "i=k": 11308,
        "PRINT,": 11309,
        "moveS": 11310,
        "dest,": 11311,
        "com,": 11312,
        "s[len-1],": 11313,
        "str[cnt]": 11314,
        "s[k": 11315,
        "l=\"LEFT\",": 11316,
        "r=\"RIGHT\",": 11317,
        "p=\"PRINT": 11318,
        "c=char": 11319,
        "abs(n-k)": 11320,
        "abs(k-1)": 11321,
        "s[n-1]": 11322,
        "exlcusive": 11323,
        ",s[i]": 11324,
        "slg[MAX": 11325,
        "slg[i]": 11326,
        "slg[start]": 11327,
        "\"RIGHT": 11328,
        "arr[a][b]": 11329,
        "{-2,": 11330,
        "-2},": 11331,
        "2}": 11332,
        "arr[y][x]": 11333,
        "step[i][0]": 11334,
        "step[i][1]": 11335,
        "arr[y1][x1]": 11336,
        "'K'": 11337,
        "srand": 11338,
        "10055": 11339,
        "modex(a,": 11340,
        "s[r": 11341,
        "(a[n": 11342,
        "DOWN": 11343,
        "UP": 11344,
        "15)": 11345,
        "m=15": 11346,
        "i=n-1,": 11347,
        "(a[b]": 11348,
        "a[b": 11349,
        "128": 11350,
        "a[n-2]": 11351,
        "a[609]": 11352,
        "a[n]=15": 11353,
        "\"DOWN\"": 11354,
        "\"UP\"": 11355,
        "x[n]": 11356,
        "x[n": 11357,
        "A[N": 11358,
        "B-2,": 11359,
        "A=15": 11360,
        "B=1": 11361,
        "moon[100]": 11362,
        "moon[i]": 11363,
        "moon[1]": 11364,
        "moon[n]": 11365,
        "moon[n-1]": 11366,
        "n=int,a=array": 11367,
        "609": 11368,
        "a[n]<a[n-1]": 11369,
        "\"DOWN\\n\"": 11370,
        "\"UP\\n\"": 11371,
        "A[N]": 11372,
        "up=0": 11373,
        "n>1": 11374,
        "a[n-2],": 11375,
        "up=1": 11376,
        "=16": 11377,
        "a[n-1]=0": 11378,
        "150005": 11379,
        "-2]": 11380,
        "(v[n": 11381,
        "amd": 11382,
        "mm,": 11383,
        "b=15": 11384,
        "b>a": 11385,
        "x[n-1]": 11386,
        "pum": 11387,
        "arra[i]": 11388,
        "\"chest\"": 11389,
        "\"biceps\"": 11390,
        "\"back\"": 11391,
        "plans": 11392,
        "plans[i]": 11393,
        "bi,": 11394,
        "ba": 11395,
        "chest": 11396,
        "biceps": 11397,
        "=2,": 11398,
        "sum3,": 11399,
        "tot4": 11400,
        "ZZ": 11401,
        "back,": 11402,
        "chest,": 11403,
        "back1": 11404,
        "c[(": 11405,
        ")]": 11406,
        "them,": 11407,
        "except": 11408,
        "being": 11409,
        "in()": 11410,
        "max(max(a,": 11411,
        "biceps,": 11412,
        "baack": 11413,
        "andnum": 11414,
        "sumb,": 11415,
        "sumc,": 11416,
        "sumback": 11417,
        "their": 11418,
        "named": 11419,
        "index==": 11420,
        "arr[index]": 11421,
        "max(max(sa,": 11422,
        "sb),": 11423,
        "sc)": 11424,
        "totals": 11425,
        "totals[i": 11426,
        "INF=3f3f3f3f": 11427,
        "n,chest,bic,back=int": 11428,
        "bic,": 11429,
        "back=0": 11430,
        "aux1,aux2,aux3=int": 11431,
        "aux2,": 11432,
        "aux3": 11433,
        "bic": 11434,
        "chest<bic": 11435,
        "chest<back": 11436,
        "back>bic": 11437,
        "back>chest": 11438,
        "<b": 11439,
        "contBi": 11440,
        "contCh": 11441,
        "contBa": 11442,
        "band": 11443,
        "contCh,": 11444,
        "contBa,": 11445,
        "contBi,": 11446,
        "cnt[i": 11447,
        "\"chest\\n\"": 11448,
        "\"biceps\\n\"": 11449,
        "\"back\\n\"": 11450,
        "exe": 11451,
        "0to": 11452,
        "exe[i": 11453,
        "exe[i]": 11454,
        "max2": 11455,
        "a,b,c,": 11456,
        "mark,max=int": 11457,
        "mark=1": 11458,
        "max=a": 11459,
        "max=b": 11460,
        "mark=2": 11461,
        "c>max": 11462,
        "mark=3": 11463,
        "n,l=int": 11464,
        "h=n/3": 11465,
        "h2=n": 11466,
        "lll=max2(x,y,z)": 11467,
        "lll": 11468,
        "Ex,": 11469,
        "Ex": 11470,
        "maxc": 11471,
        "maxbi": 11472,
        "maxba": 11473,
        "exe_A": 11474,
        "exe_B": 11475,
        "exe_C": 11476,
        "exe_B,": 11477,
        "max(max(A[0],": 11478,
        "A[1]),": 11479,
        "A[2])": 11480,
        "A[0])": 11481,
        "A[1])": 11482,
        "10001": 11483,
        "ches": 11484,
        "clo=array": 11485,
        "35": 11486,
        "clo[i][0]": 11487,
        "clo[i][1]": 11488,
        "clo[j][1]": 11489,
        "clo[j][0]": 11490,
        "arr[n][2]": 11491,
        "arr[i]0": 11492,
        "arr[j][1]": 11493,
        "y[j],": 11494,
        "a[j][1],": 11495,
        "H[i]": 11496,
        "A[j],": 11497,
        "Home": 11498,
        "Guest": 11499,
        "Home[i]": 11500,
        "Guest[i]": 11501,
        "Counter": 11502,
        "Guest[j],": 11503,
        "arr2[j],": 11504,
        "128,": 11505,
        "h[y]": 11506,
        "arr1[0]": 11507,
        "arr1[h": 11508,
        "arr2[a": 11509,
        "(arr1[i]": 11510,
        "arr2[i])": 11511,
        ".first": 11512,
        "p[g].second": 11513,
        "p[j][2]": 11514,
        "b[j]),": 11515,
        "away[i]": 11516,
        "home[i]": 11517,
        "away[j],": 11518,
        "ans=int": 11519,
        "num[0][h]": 11520,
        "num[1][a]": 11521,
        "num[0][i]": 11522,
        "num[1][i]": 11523,
        "v1[j],": 11524,
        "h[n],": 11525,
        "g[n]": 11526,
        "h[i],": 11527,
        "g[j],": 11528,
        "ar[j][1],": 11529,
        "31,": 11530,
        "G[i],": 11531,
        "G[i]": 11532,
        "G[j],": 11533,
        "(h[i]": 11534,
        "a[j])": 11535,
        "65,c,n": 11536,
        "numOfteam": 11537,
        "numOfteams": 11538,
        "arr[j][i],": 11539,
        "[n]": 11540,
        "int[2]": 11541,
        "p[j][1],": 11542,
        "guest": 11543,
        "guest[a]": 11544,
        "guest[home[i]]": 11545,
        "a[j]),": 11546,
        "h[j]),": 11547,
        "ar2[j],": 11548,
        "ar[i].first": 11549,
        "ar[i].second": 11550,
        "ar[j].second": 11551,
        "h[j],": 11552,
        "ar[j],": 11553,
        "p=pointer": 11554,
        "2*n": 11555,
        "j=i+3": 11556,
        "C[k][1]": 11557,
        "(c[i]": 11558,
        "d[j]),": 11559,
        "b[i][0]": 11560,
        "b[j][1]": 11561,
        "(a[i][0]": 11562,
        "a[j][1]),": 11563,
        "c[max_n],": 11564,
        "a[max_n]": 11565,
        "point,": 11566,
        "a[point]": 11567,
        "arr[m": 11568,
        "arr1[n": 11569,
        "p<=m": 11570,
        "arr[p]": 11571,
        "80005": 11572,
        "q2": 11573,
        "1010,": 11574,
        "neo": 11575,
        "c[neo],": 11576,
        "c[neo]": 11577,
        "am[j]": 11578,
        "a=vector": 11579,
        "b=vector": 11580,
        "cnt>=m": 11581,
        "b[cnt]": 11582,
        "games,": 11583,
        "bills": 11584,
        "bills_": 11585,
        "prices[i]": 11586,
        "bills_[0]": 11587,
        "wallet": 11588,
        "games[i]": 11589,
        "wallet[i]": 11590,
        "wallet[j]": 11591,
        "money": 11592,
        "gp": 11593,
        "g[gp]": 11594,
        "m[mp]": 11595,
        "(v[j]": 11596,
        "(-1))": 11597,
        "(-1)": 11598,
        "bill": 11599,
        "m--": 11600,
        "game.front()": 11601,
        "bill.front()": 11602,
        "a[1010],": 11603,
        "c[1010],": 11604,
        "d[top]": 11605,
        "x[t]": 11606,
        "cl": 11607,
        "cl<t": 11608,
        "x[cl]": 11609,
        "am[res]": 11610,
        "w=vector": 11611,
        "j,ans=0": 11612,
        "j<m": 11613,
        "w[j]": 11614,
        "ak,": 11615,
        "ak": 11616,
        "game[maxn": 11617,
        "10],": 11618,
        "wallet[maxn": 11619,
        "game[x]": 11620,
        "hc": 11621,
        "ha": 11622,
        "aha": 11623,
        "a[ha]": 11624,
        "c[hc]": 11625,
        "inf32": 11626,
        "inf64": 11627,
        "id0": 11628,
        "id1": 11629,
        "a[id1]": 11630,
        "c[id0]": 11631,
        "n,b=int": 11632,
        "n,b": 11633,
        "bill=array": 11634,
        "bill[j]": 11635,
        "j<b": 11636,
        "holds": 11637,
        "a[pos]": 11638,
        "b[cur])": 11639,
        "sn": 11640,
        "dy[]": 11641,
        "gcd(int": 11642,
        "c[100010],": 11643,
        "1e15": 11644,
        "q1.empty()": 11645,
        "q1.front()": 11646,
        "a[MAXN],": 11647,
        "c[MAXN]": 11648,
        "flag[MAXN]": 11649,
        "is_prime(i)": 11650,
        "nextprime": 11651,
        "indefintely": 11652,
        "isprime(1),": 11653,
        "prime(b),": 11654,
        "NO)": 11655,
        "actual_next": 11656,
        "(sqrt": 11657,
        "double)": 11658,
        "istrue": 11659,
        "istrue(n,": 11660,
        "isPrime(n)": 11661,
        "isPrime(m)": 11662,
        "\"colors.in\",": 11663,
        "\"r\"": 11664,
        "acos(0)": 11665,
        "i^2": 11666,
        "bound": 11667,
        "(res,": 11668,
        "prime(m)": 11669,
        "prime(i)": 11670,
        "s=sqrt(n)": 11671,
        "i=n+1,": 11672,
        "_sieve_size": 11673,
        "10000010": 11674,
        "upperbound": 11675,
        "flip": 11676,
        "(size_t)i": 11677,
        "_sieve_size,": 11678,
        "(size_t)j": 11679,
        "(int)i": 11680,
        "excl": 11681,
        "x,y,num=int": 11682,
        "i=x+1": 11683,
        "prim=true": 11684,
        "prim=false": 11685,
        "prim": 11686,
        "num=i": 11687,
        "13,": 11688,
        "17,": 11689,
        "19,": 11690,
        "23,": 11691,
        "29,": 11692,
        "37,": 11693,
        "41,": 11694,
        "43,": 11695,
        ",fl": 11696,
        "N0": 11697,
        "isPrime(b),": 11698,
        "isPrime(i),": 11699,
        "nextPrime(n,": 11700,
        "ellse": 11701,
        "j/2": 11702,
        "incl": 11703,
        "j/2+1": 11704,
        "wghile": 11705,
        "check[j": 11706,
        "(not(x": 11707,
        "(is_prime(i))": 11708,
        "(is_prime(m))": 11709,
        "isMNextPrime": 11710,
        "isMNextPrime(n+1,m)": 11711,
        "readig": 11712,
        "arr[b]": 11713,
        "sv": 11714,
        "prime[2]": 11715,
        "sv()": 11716,
        "_min": 11717,
        "_max": 11718,
        "a[i+1]-a[i-1]": 11719,
        "r[n],": 11720,
        "d[n": 11721,
        "a[1001],": 11722,
        "a[100]": 11723,
        "min=sum": 11724,
        "min2": 11725,
        "arr[a]": 11726,
        "max(dif,": 11727,
        "min(result,": 11728,
        "9999999,": 11729,
        "min_": 11730,
        "max_": 11731,
        "-0x3f3f3f3f": 11732,
        "abs(a[j]": 11733,
        "max_,": 11734,
        "min_,": 11735,
        "a[i+1]-a[i]": 11736,
        "mn1": 11737,
        "max(mn1,": 11738,
        "min(mn,": 11739,
        "mn1)": 11740,
        "recorrer": 11741,
        "m[j]=v[i]": 11742,
        "mostrar": 11743,
        "may=0,": 11744,
        "mini=100000": 11745,
        "recorrer(v,n,m)": 11746,
        "m[j+1]-m[j]": 11747,
        "may=m[j+1]-m[j]": 11748,
        "mini>may": 11749,
        "mini=may": 11750,
        "may=0": 11751,
        "list.size()": 11752,
        "list[i]": 11753,
        "numeric_limits": 11754,
        "factor": 11755,
        "(list[i]": 11756,
        "list[i": 11757,
        "(list[i": 11758,
        "list[i])": 11759,
        "erase(list.begin()": 11760,
        "ind)": 11761,
        "max),": 11762,
        "INF=2^30": 11763,
        "MAXN=1005": 11764,
        "myset=multiset": 11765,
        "res=INF": 11766,
        "a[i]-a[i-1]": 11767,
        "res=min(res,": 11768,
        "myset)": 11769,
        "a[j+2]-a[j]": 11770,
        "a[j+1]-a[j]": 11771,
        "minDif": 11772,
        "minDif()": 11773,
        "106": 11774,
        "arr[j+1]": 11775,
        "arr[j-1]": 11776,
        "arr[z]": 11777,
        "arr[z-1]": 11778,
        "difficulty": 11779,
        "level[1]": 11780,
        "level[0]": 11781,
        "level,": 11782,
        "level[i+1]": 11783,
        "level[i]": 11784,
        "levevl[i+1]-level[i]": 11785,
        "a[n-1],": 11786,
        "dif,": 11787,
        "arr[j+2]": 11788,
        "arr[j+1]-arr[j-1]": 11789,
        "arr[j+1]-arr[j]": 11790,
        "vec=array": 11791,
        "vec[2]": 11792,
        "m=vec[2]-vec[0]": 11793,
        "m=min(vec[i]-vec[i-2],": 11794,
        "m2=vec[1]-vec[0]": 11795,
        "m2=max(vec[i]-vec[i-1],": 11796,
        "m2)": 11797,
        "max(m,": 11798,
        "a[j-1]": 11799,
        "u=1": 11800,
        "mx[p]": 11801,
        "m[r]": 11802,
        "*min_element(l.begin(),": 11803,
        "l.end())": 11804,
        "diff=0": 11805,
        "d[i]+d[i-1]": 11806,
        "a[101]": 11807,
        "fr": 11808,
        "j-1=i,": 11809,
        "i=1,": 11810,
        "b[z]": 11811,
        "b[z-1]": 11812,
        "b[z-1],": 11813,
        "c[0],": 11814,
        "10000020": 11815,
        "max(min(m,": 11816,
        "s=int": 11817,
        "s=a[j+1]-a[j-1]": 11818,
        "s=a[j]-a[j-1]": 11819,
        "s>max": 11820,
        "max=s": 11821,
        "b[k]=mak": 11822,
        "min=10000": 11823,
        "min=b[i]": 11824,
        "maxx)": 11825,
        "9999999": 11826,
        "a[i+2]-a[i]": 11827,
        "ret,": 11828,
        "*board": 11829,
        "board[i]": 11830,
        "board[i][j]": 11831,
        "board[i][j": 11832,
        "input[j]": 11833,
        "input[j": 11834,
        "check()": 11835,
        "()": 11836,
        "num()": 11837,
        "a[x][0]": 11838,
        "a[x][7]": 11839,
        "WBWBWBWB": 11840,
        "BWBWBWBW": 11841,
        "8)": 11842,
        "ctr=0": 11843,
        "\"BWBWBWBW\"": 11844,
        "\"WBWBWBWB\"": 11845,
        "[i-1]": 11846,
        "(s[j]": 11847,
        "x=judge(i)": 11848,
        "S[10]": 11849,
        "check2": 11850,
        "rotate": 11851,
        "making": 11852,
        "S+1": 11853,
        "a[i+1],": 11854,
        "39": 11855,
        "40": 11856,
        "56": 11857,
        "'B'": 11858,
        "ch(x)": 11859,
        "str[k][i]": 11860,
        "str[k][i": 11861,
        "str[k][1]": 11862,
        "str[k][8],": 11863,
        "retruns": 11864,
        "(fg": 11865,
        "(fg)": 11866,
        "str[7],": 11867,
        "str[i+1],": 11868,
        "arr[10]": 11869,
        "(f),": 11870,
        "ch=array": 11871,
        "ch[j-1]": 11872,
        "s[8]": 11873,
        "reas": 11874,
        "xx[10][10]": 11875,
        "xx[i][j]": 11876,
        "xx[i][j": 11877,
        "m[line": 11878,
        "'W'": 11879,
        "str[8]": 11880,
        "\"WW\"": 11881,
        "\"BB\"": 11882,
        "m[line],": 11883,
        "dfs(line": 11884,
        "m[0][i]": 11885,
        "\"WW\")": 11886,
        "m[0],": 11887,
        "v[7]": 11888,
        "m[i][j": 11889,
        "8]": 11890,
        "booelan": 11891,
        "isAns": 11892,
        "\"BWBWBWBW\",": 11893,
        "i,j": 11894,
        "TESTS=1": 11895,
        "a[8][8]": 11896,
        "BWBWBWBW),": 11897,
        "s[i][j-1]": 11898,
        "c[10][10]": 11899,
        "gets(c[i])": 11900,
        "flag=0,": 11901,
        "diffent": 11902,
        "ara[i][1]": 11903,
        "ara[i][8]": 11904,
        "ara[i][j]": 11905,
        "ara[i][j+1]": 11906,
        "a[i][k+1],": 11907,
        "(flag": 11908,
        "chess": 11909,
        "chess[i]": 11910,
        "chess[i][j]": 11911,
        "chess[i][j+1]": 11912,
        "z[j][i]": 11913,
        "incerment": 11914,
        "[32][32]": 11915,
        "xx[s][t]": 11916,
        "a[i][k],": 11917,
        "mmp": 11918,
        "mmp[i][j]": 11919,
        "mmp[i][k]": 11920,
        "mmp[h][j]": 11921,
        "[34][34]": 11922,
        "ie[i]": 11923,
        "lie[i]": 11924,
        "lie[j]": 11925,
        "+a[k][j],": 11926,
        "sizeof(A)": 11927,
        "A[i][j],": 11928,
        "A[i][a]": 11929,
        "A[b][j]": 11930,
        "r[j],": 11931,
        "35x35": 11932,
        "cheak": 11933,
        "sumx": 11934,
        "sumy": 11935,
        "[k][i]": 11936,
        "sumr": 11937,
        "35,": 11938,
        "sumr[i]": 11939,
        "sumc[i]": 11940,
        "sumc[j]": 11941,
        "sumr[i],": 11942,
        "sum_row,": 11943,
        "sum_col": 11944,
        "35th": 11945,
        "sum_row": 11946,
        "sum_row[i]": 11947,
        "sum_col[j]": 11948,
        "32x32": 11949,
        "[maxn][maxn],": 11950,
        "[maxn]": 11951,
        "r[i][j]": 11952,
        "r[j][i]": 11953,
        "column[i]": 11954,
        "column[j],": 11955,
        "hen": 11956,
        "hen[i]": 11957,
        "con[i]": 11958,
        "hen[j],": 11959,
        "a[50][50],": 11960,
        "R[50],": 11961,
        "C[50]": 11962,
        "C[j]": 11963,
        "R[i],": 11964,
        "n,c=int,": 11965,
        "a[i][j]=row[i]": 11966,
        "b[i][j]=col[j]": 11967,
        "sr[i]": 11968,
        "sc[j]": 11969,
        "sr[i],": 11970,
        "d[r][c]": 11971,
        "d[r][i]": 11972,
        "d[i][c]": 11973,
        "sumr,": 11974,
        "j++": 11975,
        "clm": 11976,
        "clm[i]": 11977,
        "clm[j]": 11978,
        "row[j]": 11979,
        "b[i]=sum1": 11980,
        "c[j]=sum2": 11981,
        "c[i]>b[i]": 11982,
        "n,c": 11983,
        "columns,": 11984,
        "judge(i,": 11985,
        "N=35": 11986,
        "c[j]>r[i]": 11987,
        "win(0)": 11988,
        "arr[i][y]": 11989,
        "arr[i][q]": 11990,
        "arr[q][y]": 11991,
        "[35][35]": 11992,
        "a[i][t]": 11993,
        "s2[t]": 11994,
        "Counter=0": 11995,
        "row=0": 11996,
        "a[row][j]": 11997,
        "col=0": 11998,
        "a[i][col]": 11999,
        "sum1,sum2=int": 12000,
        "a[x][j]": 12001,
        "a[i][x]": 12002,
        "x=judge(i,j)": 12003,
        "50x50": 12004,
        "1e+5": 12005,
        "row[i],": 12006,
        "n,m,x,y=int": 12007,
        "n,m,x,y": 12008,
        "a=new": 12009,
        "b=new": 12010,
        "flag=int": 12011,
        "u,v,temp1,temp2": 12012,
        "dem=0": 12013,
        "a[k-1]-x": 12014,
        "b[r-1]": 12015,
        "a[k-1]+y": 12016,
        "ans=max(ans,": 12017,
        "temp1[i]": 12018,
        "temp2[i]": 12019,
        "soldier": 12020,
        "armor": 12021,
        "soldier[i]": 12022,
        "armor[i]": 12023,
        "callingf": 12024,
        "soldier[s]": 12025,
        "armor[a]": 12026,
        "ans1[i]": 12027,
        "ans2[i]": 12028,
        "'9'),": 12029,
        "write(x)": 12030,
        "z1,": 12031,
        "z2,": 12032,
        "b[d]": 12033,
        "z1[": 12034,
        "dd]": 12035,
        "z2[dd]=d": 12036,
        "z1[i],": 12037,
        "z2[i]": 12038,
        "max(integer": 12039,
        "a,integer": 12040,
        "*a,*b,n,m,x,y": 12041,
        "cnt[100001]": 12042,
        "int[n]": 12043,
        "int[m]": 12044,
        "0,ans": 12045,
        "1,r": 12046,
        "b[r": 12047,
        "max(ans,": 12048,
        "temp1.size()": 12049,
        "u.size()": 12050,
        "temp1.push_back": 12051,
        "temp2.push_back": 12052,
        "vest": 12053,
        "vest[i]": 12054,
        "vest[j]": 12055,
        "matching[0]": 12056,
        "matching[1]": 12057,
        "matching[0][i],": 12058,
        "matching[1][i]": 12059,
        "ia,": 12060,
        "ib": 12061,
        "ia": 12062,
        "a[ia]": 12063,
        "b[ib]": 12064,
        "cntb,": 12065,
        "ic": 12066,
        "cntb": 12067,
        "2000000": 12068,
        "(b[m]": 12069,
        "c[ic]": 12070,
        "(integer,": 12071,
        "a[k-1]": 12072,
        "result.size()": 12073,
        "100004": 12074,
        "per,": 12075,
        "cha": 12076,
        "per": 12077,
        "100004,": 12078,
        "per[i]": 12079,
        "cha[i]": 12080,
        "cha[j]": 12081,
        "pa[increment": 12082,
        "con]": 12083,
        "sd": 12084,
        "sdVest": 12085,
        "lastSoldier": 12086,
        "sd[lastSoldier]": 12087,
        "vest.size()": 12088,
        "sdVest[i]": 12089,
        "r[k]": 12090,
        "inserted": 12091,
        "carries": 12092,
        "mapping": 12093,
        "itm": 12094,
        "wholes": 12095,
        "maaping": 12096,
        "pointing": 12097,
        "dd,": 12098,
        "ans1[i],\"": 12099,
        "\",ans2[i]": 12100,
        "vest,": 12101,
        "match,": 12102,
        "vest[j],": 12103,
        "!check[j])": 12104,
        "match[i]": 12105,
        "i,\"": 12106,
        "\",match[i]": 12107,
        "bshead": 12108,
        "vest[mid]": 12109,
        "bsend": 12110,
        "L[i],": 12111,
        "minimun": 12112,
        "minimun)": 12113,
        "(a[i]-x)": 12114,
        "secs": 12115,
        "min)": 12116,
        "mn)": 12117,
        "bot,": 12118,
        "bot": 12119,
        "bot)": 12120,
        "terkecil": 12121,
        "inclusive)": 12122,
        "(terkecil": 12123,
        "((hitung": 12124,
        "(hitung": 12125,
        "minval": 12126,
        "100002": 12127,
        "min(A[i],": 12128,
        "minimum)": 12129,
        "Res": 12130,
        "sort(A,": 12131,
        "A[n-1]": 12132,
        "numbers[i],": 12133,
        "(numbers[i]": 12134,
        "z_function": 12135,
        "min(r": 12136,
        "z[i": 12137,
        "l])": 12138,
        "s[z[i]]": 12139,
        "z[i]]": 12140,
        "LL": 12141,
        "61)": 12142,
        "boostIO": 12143,
        "(a*b)/(": 12144,
        "120,": 12145,
        "vis[root]": 12146,
        "a[root]": 12147,
        "vis[a[root][i]],": 12148,
        "a[root][i]": 12149,
        "(a[i]-mi)": 12150,
        "mi)": 12151,
        "yu": 12152,
        "2000000000": 12153,
        "(a[i]-min)": 12154,
        "100010,": 12155,
        "9999999999": 12156,
        "dif[i]": 12157,
        "1e6+1000": 12158,
        "MAXB": 12159,
        "1e9+1000": 12160,
        "MAXB,": 12161,
        "a[i]/k": 12162,
        "num[1])": 12163,
        "decrease,": 12164,
        "x3f3f3f3f": 12165,
        "pri[i]": 12166,
        "(pri[i]": 12167,
        "kanan": 12168,
        "(price[kanan]": 12169,
        "price[kanan": 12170,
        "price[kanan--]": 12171,
        "price[0]": 12172,
        "10^17": 12173,
        "min(mm,": 12174,
        "arr[i]-mm": 12175,
        "diff/kk": 12176,
        "n,,": 12177,
        "rate,": 12178,
        "rate": 12179,
        "price[x]": 12180,
        "(price[x]": 12181,
        "try": 12182,
        "of(": 12183,
        "\"5/6\"": 12184,
        "\"2/3\"": 12185,
        "\"1/2\"": 12186,
        "\"1/3\"": 12187,
        "\"1/6\"": 12188,
        "\"1/1\"": 12189,
        "__gcd(y,": 12190,
        "(6": 12191,
        "big)": 12192,
        "\"1/1\\n\"": 12193,
        "\"1/6\",": 12194,
        "\"1/3\",": 12195,
        "\"1/2\",": 12196,
        "\"2/3\",": 12197,
        "\"5/6\",": 12198,
        "a[6": 12199,
        "h]": 12200,
        "{\"1/6\",": 12201,
        "\"1/1\"}": 12202,
        "a[6-h]": 12203,
        "Die_Roll": 12204,
        "Die_Roll[6": 12205,
        "chance": 12206,
        "pembagi": 12207,
        "chance,": 12208,
        "\"0/1\\n\"": 12209,
        "{\"\",": 12210,
        "\"1/1\",": 12211,
        "\"1/6\"}": 12212,
        "p[maximum": 12213,
        "w]": 12214,
        "p[max": 12215,
        "\"/6\"": 12216,
        "gcd_1": 12217,
        "(7": 12218,
        "answer,": 12219,
        "nom": 12220,
        "dom": 12221,
        "!(nom": 12222,
        "!(dom": 12223,
        "nom,": 12224,
        "\"5/6\\n\"": 12225,
        "\"2/3\\n\"": 12226,
        "\"1/2\\n\"": 12227,
        "\"1/3\\n\"": 12228,
        "\"1/6\\n\"": 12229,
        "\"0/6\\n\"": 12230,
        "(max(n,": 12231,
        "spf": 12232,
        "modexp": 12233,
        "getFactorization": 12234,
        "getZarr": 12235,
        "Z": 12236,
        "prefix_function": 12237,
        "virus": 12238,
        "3d": 12239,
        "prefix": 12240,
        "pi[j-1]": 12241,
        "dp[i][j][k]": 12242,
        "virus,": 12243,
        "6-x+1": 12244,
        "num/g": 12245,
        "den/g": 12246,
        "s[increment": 12247,
        "s[decrement": 12248,
        "h],": 12249,
        "b/2,": 12250,
        "(temp*temp)": 12251,
        "spf[1]": 12252,
        "spf[i]": 12253,
        "100001,": 12254,
        "spf[j]": 12255,
        "spf[x]": 12256,
        "str[R-L]": 12257,
        "str[R],": 12258,
        "Z[i]": 12259,
        "R-L": 12260,
        "Z[k]": 12261,
        "initilized": 12262,
        "pi[i-1]": 12263,
        "pi[i]": 12264,
        "gc": 12265,
        "gcd,": 12266,
        "1000000005": 12267,
        "ans[6": 12268,
        "ans[6-x]": 12269,
        "pro": 12270,
        "\"0/1\"": 12271,
        "die_roll": 12272,
        "die_roll[6": 12273,
        "die_roll[6-x]": 12274,
        "S[1],": 12275,
        "S[2],": 12276,
        "S[3],": 12277,
        "S[4],": 12278,
        "S[5],": 12279,
        "S[6]": 12280,
        "1/6,": 12281,
        "1/3,": 12282,
        "1/2,": 12283,
        "2/3,": 12284,
        "5/6,": 12285,
        "1/1": 12286,
        "S[6": 12287,
        "huruf": 12288,
        "huruf[i]": 12289,
        "nilai": 12290,
        "letter2": 12291,
        "huruf[k]": 12292,
        "huruf[k].count(letter1)": 12293,
        "huruf[k].count(letter2)": 12294,
        "x[k].length()": 12295,
        "huruf[k].size()": 12296,
        "huruf[k].count(letter)": 12297,
        "a[k].size()": 12298,
        "a[k][h]": 12299,
        "c[i][s[j]": 12300,
        "'a']": 12301,
        "ch[nn]": 12302,
        "ans[i][ch[0]]": 12303,
        "ans[ch[0]][i]": 12304,
        "ans[ch[0]][ch[1]]": 12305,
        "ans[ch[1]][ch[0]]": 12306,
        "among": 12307,
        "R.first": 12308,
        "R.second,": 12309,
        "('0',": 12310,
        "R.second": 12311,
        "dif()": 12312,
        "A[R.first": 12313,
        "'a'][j]": 12314,
        "'a',": 12315,
        "A[j][R.first": 12316,
        "'a'][R.second": 12317,
        "A[R.second": 12318,
        "'a'][R.first": 12319,
        "'a'])": 12320,
        "w[k]": 12321,
        "w[k][cnt]": 12322,
        "s[i].length": 12323,
        "hah": 12324,
        "404": 12325,
        "mp[flag1][flag2]": 12326,
        "mp[flag2][flag1]": 12327,
        "199": 12328,
        "mp[flag1][i]": 12329,
        "mp[i][flag1]": 12330,
        "(w[j]": 12331,
        "len[i]": 12332,
        "vis[u])": 12333,
        "len[u]": 12334,
        "'a'),": 12335,
        "w[k].size,": 12336,
        "w[k].size": 12337,
        "(int)s[k].size()": 12338,
        "s[k][z]": 12339,
        "num[200]": 12340,
        "har": 12341,
        "ss[k].size": 12342,
        "ss[k].count": 12343,
        "num[k]": 12344,
        "aea": 12345,
        "s[d],": 12346,
        "a[j][aea]": 12347,
        "a[aea][j]": 12348,
        "s[d]": 12349,
        "a[aea][lol]": 12350,
        "a[lol][aea]": 12351,
        "letters[j]": 12352,
        "worth": 12353,
        "letters[m]": 12354,
        "letters[m][i]": 12355,
        "kk,": 12356,
        "letters[d]": 12357,
        "numb,": 12358,
        "\\": 12359,
        "chara": 12360,
        "{'\\0'}": 12361,
        "chara[i]": 12362,
        "strlen(chara[b])": 12363,
        "chara[b][t]": 12364,
        "a[110][110]": 12365,
        "flag=1,": 12366,
        "m=m+len": 12367,
        "ans=max": 12368,
        "jwbn,": 12369,
        "nd,": 12370,
        "[26]": 12371,
        "[26][26]": 12372,
        "25,": 12373,
        "A[cast": 12374,
        "integer(s[j])": 12375,
        "97]": 12376,
        "(A[j]": 12377,
        "(coun": 12378,
        "C[st]": 12379,
        "B[st][nd]": 12380,
        "B[nd][st]": 12381,
        "C[i]": 12382,
        "(B[i][j]": 12383,
        "jwbn),": 12384,
        "jwbn": 12385,
        "l[k]": 12386,
        "l[k][m]": 12387,
        "s[k].size()": 12388,
        "(s[k][l]": 12389,
        "s[k][l]": 12390,
        "(flag),": 12391,
        "str(0)": 12392,
        "str.resize(size_n)": 12393,
        "cin.ignore()": 12394,
        "letters[ii]": 12395,
        "str[ii])": 12396,
        "(ii": 12397,
        "check(letters[ii],": 12398,
        "letters[jj])": 12399,
        "wordLen": 12400,
        "niceWord": 12401,
        "str[ii]": 12402,
        "(jj": 12403,
        "wordLen)": 12404,
        "str[ii][jj]": 12405,
        "lenp,": 12406,
        "maximo": 12407,
        "v[p]": 12408,
        "v[p][q]": 12409,
        "al": 12410,
        "unique(t,": 12411,
        "len)": 12412,
        "b=t[1]": 12413,
        "f[a": 12414,
        "1][b": 12415,
        "f[b": 12416,
        "1][a": 12417,
        "f[j][a": 12418,
        "got": 12419,
        "sol(i,j,v)": 12420,
        "69": 12421,
        "85": 12422,
        "jt": 12423,
        "str[it]": 12424,
        "str[it][jt]": 12425,
        "nor": 12426,
        "[150][1000]": 12427,
        "[150]": 12428,
        "strlen(a[i])": 12429,
        "unique(a[i],": 12430,
        "strlen(a[i]))": 12431,
        "v[a[i][0]": 12432,
        "a][j]": 12433,
        "v[j][a[i][0]": 12434,
        "a][a[i][1]": 12435,
        "122": 12436,
        "datt": 12437,
        "datt[i][j]": 12438,
        "j)&1": 12439,
        "b[j": 12440,
        "trash": 12441,
        "2000000000000000000LL": 12442,
        "10000007": 12443,
        "cell": 12444,
        "cell2": 12445,
        "cell[i][j]": 12446,
        "cell2[i][j]": 12447,
        "a[101][101]": 12448,
        "-,": 12449,
        "str[i][k]": 12450,
        "w[2]": 12451,
        "vis[x][y]": 12452,
        "searcg": 12453,
        "buf": 12454,
        "buf[i]": 12455,
        "buf[i][j]": 12456,
        "101,101": 12457,
        "b[j-1]": 12458,
        "Vector[i][j]": 12459,
        "arr[1000][1000]": 12460,
        "brr[]": 12461,
        "brr[p]": 12462,
        "a[111][111]": 12463,
        "b[n][m]": 12464,
        "files": 12465,
        "source": 12466,
        "ax[j]": 12467,
        "\"B\"": 12468,
        "\"W\"": 12469,
        "(i+j)": 12470,
        "(chess[i][j]": 12471,
        "board": 12472,
        "o[j]": 12473,
        "ad": 12474,
        "arr[n][m]": 12475,
        "c=char,": 12476,
        "colors=array": 12477,
        "colors[(i+j)": 12478,
        "(prev-b)/d": 12479,
        "prev-b": 12480,
        "(prev": 12481,
        "(((prev": 12482,
        "fp": 12483,
        "((": 12484,
        "1e9+7)": 12485,
        "+7))": 12486,
        "arr[i-1]": 12487,
        "arr[i-1],": 12488,
        "fp(n,": 12489,
        "(1e9": 12490,
        "7)": 12491,
        "((res": 12492,
        "int(1e9": 12493,
        "7))": 12494,
        "7)))": 12495,
        "v[i[": 12496,
        "(pre": 12497,
        "(pre/d)": 12498,
        "(b/d)": 12499,
        "stp": 12500,
        "(tm": 12501,
        "2007": 12502,
        "(a[i-1]-a[i]": 12503,
        "((a[i": 12504,
        "Max_N": 12505,
        "bord": 12506,
        "ant": 12507,
        "(abs(a[i]": 12508,
        "1]))": 12509,
        "((abs(a[i]": 12510,
        "(a[i]-a[i-1])": 12511,
        "a[i-1]))": 12512,
        "(str[i": 12513,
        "str[i])": 12514,
        "str[i-1]": 12515,
        "mov,": 12516,
        "mov": 12517,
        "(rem": 12518,
        "p[i])": 12519,
        "(last": 12520,
        "adder,": 12521,
        "adder": 12522,
        "b[i-1]-b[i]": 12523,
        "100000,": 12524,
        "c1+1": 12525,
        "(c1+1)": 12526,
        "15000": 12527,
        "100000;": 12528,
        "vis=": 12529,
        "26,": 12530,
        "now[str[j]": 12531,
        "now[j]": 12532,
        "vis[str[0]": 12533,
        "vis[str[j]": 12534,
        "mark1": 12535,
        "mark2": 12536,
        "mark1[i]": 12537,
        "much": 12538,
        "bytes,": 12539,
        "takes,": 12540,
        "Do()": 12541,
        "46": 12542,
        "mark1[s[0]": 12543,
        "ho": 12544,
        "'!'": 12545,
        "mark[s[i]": 12546,
        "mar[s[i]": 12547,
        "b[a[i]": 12548,
        "a[cnt2]": 12549,
        "now[s[i]": 12550,
        "now[a[i]": 12551,
        "b[s[i]": 12552,
        "b[s[0]": 12553,
        "posibles,": 12554,
        "usadas": 12555,
        "posibles": 12556,
        "posibles[i]": 12557,
        "usadas[s[j]]": 12558,
        "posibles[j]": 12559,
        "usadas[j]": 12560,
        "posibles[s[j]]": 12561,
        "posibles[s[2]]": 12562,
        "av": 12563,
        "au,": 12564,
        "au": 12565,
        "arr[u]": 12566,
        "temp[k]": 12567,
        "temp[u]": 12568,
        "sst": 12569,
        "st.count(s[i])": 12570,
        "sst.insert(s[i])": 12571,
        "iteratopn": 12572,
        "!": 12573,
        "nowsafe": 12574,
        "nowsafe[s[j]": 12575,
        "nowsafe[i]": 12576,
        "safe[i]": 12577,
        "safe[s[i]": 12578,
        "safe[s[0]": 12579,
        "exist[s[j]]": 12580,
        "exist[j]": 12581,
        "ok[s[0]]": 12582,
        "mark0": 12583,
        "everything": 12584,
        "122,": 12585,
        "!mark[s[i]]": 12586,
        "!no[s[i]]": 12587,
        "mark[s[i]]": 12588,
        "mark0[s[i]]": 12589,
        "!mark0[i]": 12590,
        "continute": 12591,
        "no[s[0]": 12592,
        "mark[s[0]]": 12593,
        "no[s[i]]": 12594,
        "bitsets": 12595,
        "1s": 12596,
        "tmp[s[i]": 12597,
        "~tmp": 12598,
        "se,": 12599,
        "st.length()": 12600,
        "ans.begin()": 12601,
        "ans.end()": 12602,
        "se.count(*j)": 12603,
        "ans.count(st[j]),": 12604,
        "ans.count(st[0]),": 12605,
        "change1": 12606,
        "vec[s[i]": 12607,
        "change2": 12608,
        "vec2": 12609,
        "initalized": 12610,
        "vec2[s[i]": 12611,
        "vec2[j]": 12612,
        "finished": 12613,
        "'?',": 12614,
        "vec[w[0]": 12615,
        "'!',": 12616,
        "cul": 12617,
        "alph": 12618,
        "alph[k]": 12619,
        "dian": 12620,
        "alph[tmp]": 12621,
        "alph[a[0]": 12622,
        "\"!\"": 12623,
        "tan(say)": 12624,
        "dian(say)": 12625,
        "wen(say)": 12626,
        "alph[i]": 12627,
        "mark[100],": 12628,
        "mark[i],": 12629,
        "i==": 12630,
        "indexes": 12631,
        "a[++cnt]": 12632,
        "a[++cnt2]": 12633,
        "cnt3++": 12634,
        "sizeof(exist)": 12635,
        "if,": 12636,
        "isFound": 12637,
        "lsh": 12638,
        "iter": 12639,
        "iter.second": 12640,
        "iter.first": 12641,
        "m[str[0]": 12642,
        "int]": 12643,
        "n0": 12644,
        "work[i]": 12645,
        "81": 12646,
        "a[I]": 12647,
        "I,": 12648,
        "pow(10,": 12649,
        "tsize": 12650,
        "9)": 12651,
        "sumofdigit": 12652,
        "min((long": 12653,
        "int)200,": 12654,
        "sumofdigit(a)": 12655,
        "st.begin()": 12656,
        "st.end(),": 12657,
        "check(i,": 12658,
        "a[j++]": 12659,
        "a[w]": 12660,
        "sod": 12661,
        "aaa": 12662,
        "a[increase": 12663,
        "si(n)": 12664,
        "count(i)": 12665,
        "len(integer": 12666,
        "ans,temp": 12667,
        "max(n": 12668,
        "len(n)": 12669,
        "10,0)": 12670,
        "v.push_back(i": 12671,
        "82": 12672,
        "0ll": 12673,
        "separated": 12674,
        "mb": 12675,
        "chai": 12676,
        "chai(i)": 12677,
        "ans[k]": 12678,
        "check(val)": 12679,
        "kq(i)": 12680,
        "s(x-1)": 12681,
        "995": 12682,
        "res[co]": 12683,
        "finala": 12684,
        "get(temp)": 12685,
        "81,": 12686,
        "a[h]": 12687,
        "max(1,": 12688,
        "ji(i)": 12689,
        "d,s": 12690,
        "a[100],": 12691,
        "0,i,c": 12692,
        "a[k++]": 12693,
        "jv": 12694,
        "jvb": 12695,
        "jv.begin()": 12696,
        "jv.end()": 12697,
        "jv.size()": 12698,
        "jv[i]": 12699,
        "LOVE": 12700,
        "LOVE(i)": 12701,
        "dfs(n-1)": 12702,
        ",j,n,k,l": 12703,
        "100,m,sum,a,cnt": 12704,
        "anses": 12705,
        "ansesand": 12706,
        "anses[i]": 12707,
        "c=-1": 12708,
        "xp": 12709,
        "yp": 12710,
        "selectionSort": 12711,
        "min_idx": 12712,
        "arr[min_idx],": 12713,
        "apply": 12714,
        "arr[min_idx]": 12715,
        "Ids": 12716,
        "Ids[i]": 12717,
        "Ids[i+2]": 12718,
        "Ids[i+1]": 12719,
        "*s.begin()": 12720,
        "mp[f]": 12721,
        "sec": 12722,
        "sec[0]": 12723,
        "sizeof(cnt)": 12724,
        "sec[i": 12725,
        "sec[i]": 12726,
        "cnt[cou]": 12727,
        "getNextGap": 12728,
        "combSort": 12729,
        "swapped": 12730,
        "getNextGap(gap)": 12731,
        "gap]": 12732,
        "numofelements": 12733,
        "combSort(arr,": 12734,
        "numofelements)": 12735,
        "merger": 12736,
        "l,m,r,": 12737,
        "i,j,k=int": 12738,
        "n1=m-l+1": 12739,
        "n2=r-m": 12740,
        "L=array": 12741,
        "R=array": 12742,
        "L[i]=arr[l+i]": 12743,
        "R[j]=arr[m+1+j]": 12744,
        "k=l": 12745,
        "i<n1": 12746,
        "j<n2": 12747,
        "R[j]": 12748,
        "arr[k]=L[i]": 12749,
        "arr[k]=R[j]": 12750,
        "mergeSort": 12751,
        "m=l+(r-l)/2": 12752,
        "mergeSort(arr,": 12753,
        "merger(arr,": 12754,
        "secretaryNum=int,": 12755,
        "chatSec": 12756,
        "zeroNum=0": 12757,
        "temp=int,": 12758,
        "tempSame=1": 12759,
        "check=true": 12760,
        "secretaryNum": 12761,
        "zeroNum": 12762,
        "mergeSort(id,": 12763,
        "secretaryNum-1)": 12764,
        "temp=id[zeroNum]": 12765,
        "i=zeroNum+1": 12766,
        "temp=id[i]": 12767,
        "tempSame": 12768,
        "tempSame>2": 12769,
        "check=false": 12770,
        "fix[A[i]]": 12771,
        "a[5000]": 12772,
        "m.count(a[i])": 12773,
        "m[a[i]]": 12774,
        "counts=": 12775,
        ">2,": 12776,
        "n,i=long": 12777,
        "c,cnt=0,": 12778,
        "10009": 12779,
        "a[i+1])": 12780,
        "cycleSort": 12781,
        "array,": 12782,
        "secretary_number": 12783,
        "leve": 12784,
        "spyke": 12785,
        "writes": 12786,
        "cycle_start": 12787,
        "arr[pos]": 12788,
        "totalSec": 12789,
        "chat": 12790,
        "peeps": 12791,
        "id[j]": 12792,
        "mp[num]": 12793,
        "funcion": 12794,
        "numberOfElements": 12795,
        "mp[a]": 12796,
        "map,": 12797,
        "print()": 12798,
        ">0,": 12799,
        "a=0,": 12800,
        "it.first": 12801,
        "it.second": 12802,
        "gnomeSort": 12803,
        "arr[index": 12804,
        "checkdouble": 12805,
        "id[i": 12806,
        "freq[100000]": 12807,
        "lol.begin": 12808,
        "lol.end": 12809,
        "lol[i]": 12810,
        "lol[i": 12811,
        "ans++": 12812,
        "arra[1000]": 12813,
        "co=1": 12814,
        "arra[p]": 12815,
        "co=0": 12816,
        "-1\\n": 12817,
        "id[i+1]": 12818,
        "id[i+2],": 12819,
        "p[j].first": 12820,
        "p[j].second": 12821,
        "theBrickShot": 12822,
        "sorted": 12823,
        "incrementig": 12824,
        "secnumbs,": 12825,
        "secnumbs": 12826,
        "spykeId": 12827,
        "mapOfRow": 12828,
        "mapOfColumn": 12829,
        "mapOfRow[i]": 12830,
        "mapOfColumn[j": 12831,
        "maxn=100": 12832,
        "x=*": 12833,
        "b[t++]": 12834,
        "b[2])": 12835,
        "(a[2]": 12836,
        "set<int>": 12837,
        "*)": 12838,
        "set<int>::iterator": 12839,
        "row.find(i)": 12840,
        "(it": 12841,
        "row.end())": 12842,
        "row.insert(i)": 12843,
        "row.erase(it)": 12844,
        "col.find(j)": 12845,
        "col.end())": 12846,
        "col.insert(j)": 12847,
        "col.erase(it)": 12848,
        "*row.begin()": 12849,
        "*col.begin()": 12850,
        "row[r]": 12851,
        "col[r]": 12852,
        "row[2]": 12853,
        "col[2]": 12854,
        "a[p].first": 12855,
        "a[p].second": 12856,
        "a[j].first": 12857,
        "a[j].second": 12858,
        "in[x1][y2]": 12859,
        "in[x2][y1]": 12860,
        "ke": 12861,
        "dari": 12862,
        "arr[ke][i]": 12863,
        "arr[dari][x]": 12864,
        "dari,": 12865,
        "p[x]": 12866,
        "pp[0]": 12867,
        "pp[1]": 12868,
        "pp[2]": 12869,
        "pp[3]": 12870,
        "withk": 12871,
        "ind[k][0]": 12872,
        "ind[k][1]": 12873,
        "ind[0][0]": 12874,
        "ind[1][0]": 12875,
        "ind[2][0]": 12876,
        "ind[0][1]": 12877,
        "ind[1][1]": 12878,
        "ind[2][1]": 12879,
        "^=": 12880,
        "x=0,": 12881,
        "x^i": 12882,
        "y^j": 12883,
        "++x,": 12884,
        "++y": 12885,
        "S[i][j]": 12886,
        "samey,": 12887,
        "samex": 12888,
        "x[op]": 12889,
        "x[(op": 12890,
        "y[op]": 12891,
        "y[(op": 12892,
        "samey": 12893,
        "(op": 12894,
        "x[samey]": 12895,
        "y[samex]": 12896,
        "ABS": 12897,
        "mas[i][j]": 12898,
        "mas[x[i]][y[j]]": 12899,
        "resL": 12900,
        "resC": 12901,
        "M[imin][jmin]": 12902,
        "M[imax][jmax]": 12903,
        "M[imin][jmax]": 12904,
        "M[imax][jmin]": 12905,
        "incluisve": 12906,
        "x[c]": 12907,
        "y[increment": 12908,
        "c[105][105]": 12909,
        "assignes": 12910,
        "(c[i][j]": 12911,
        "^is": 12912,
        "weequals": 12913,
        "printr": 12914,
        "if(": 12915,
        "iterator,": 12916,
        "ite": 12917,
        "x.begin()": 12918,
        "x.end()": 12919,
        "ite->second": 12920,
        "ite->first": 12921,
        "t.begin": 12922,
        "y.end()": 12923,
        "A[y][j]": 12924,
        "A[y1][j],": 12925,
        "k=0,": 12926,
        "row^i": 12927,
        "col^j": 12928,
        "x+1,": 12929,
        "y+1,": 12930,
        "Fast_Read_Out": 12931,
        "Random": 12932,
        "asm(\"rdtsc\"": 12933,
        "\"=A\"(seed))": 12934,
        "srand(seed)": 12935,
        "declared": 12936,
        "1000.00": 12937,
        "int(1e9)": 12938,
        "Random()": 12939,
        "Fast_Read_Out()": 12940,
        "a[i][j1]": 12941,
        "a[i1][j]": 12942,
        "y[a]": 12943,
        "diff(0,": 12944,
        "x[1],": 12945,
        "x[0],": 12946,
        "diff(1,": 12947,
        "x[2],": 12948,
        "mpp": 12949,
        "mpp[i]": 12950,
        "mpp[i][j]": 12951,
        "ansx,": 12952,
        "ansy,": 12953,
        "ansx": 12954,
        "anxy": 12955,
        "ansy": 12956,
        "Unset": 12957,
        "mask": 12958,
        "inverted": 12959,
        "collumn": 12960,
        "grid[A][B]": 12961,
        "opr": 12962,
        "menor,": 12963,
        "people": 12964,
        "people[i]": 12965,
        "total,tmp": 12966,
        "vec1": 12967,
        "vec1[i]": 12968,
        "parameter": 12969,
        "111111111": 12970,
        "15ll": 12971,
        "shit": 12972,
        "len[ii]": 12973,
        "el[ii]": 12974,
        "(len[ii]": 12975,
        "(len[mn]": 12976,
        "el[mn]": 12977,
        "5),": 12978,
        "len[mn]": 12979,
        "sumi": 12980,
        "2100000000": 12981,
        "*arr": 12982,
        "sumtime": 12983,
        "sum=2e9": 12984,
        "M[j]": 12985,
        "b[max]": 12986,
        "to1000000000000000000": 12987,
        "b[a[i]]": 12988,
        "item_time": 12989,
        "item_time)": 12990,
        "unitTime,": 12991,
        "checkoutTime": 12992,
        "unitTime": 12993,
        "customerTime": 12994,
        "units": 12995,
        "lineTime,": 12996,
        "minTime": 12997,
        "lineTime": 12998,
        "M6,": 12999,
        "M5": 13000,
        "M6": 13001,
        "=1e6": 13002,
        "(first,": 13003,
        "n2[j]": 13004,
        "min_time": 13005,
        "obj,": 13006,
        "obj": 13007,
        "wak": 13008,
        "interger": 13009,
        "(people[i])": 13010,
        "n=unsigned": 13011,
        "\"Tetrahedron\"": 13012,
        "\"Cube\"": 13013,
        "\"Octahedron\"": 13014,
        "\"Dodecahedron\"": 13015,
        "\"Tetrahedron\",": 13016,
        "\"Cube\",": 13017,
        "\"Octahedron\",": 13018,
        "\"Dodecahedron\",": 13019,
        "\"Icosahedron\",": 13020,
        "sum4": 13021,
        "sum5": 13022,
        "Tetrahedron": 13023,
        "Octahedron": 13024,
        "Cube": 13025,
        "Dodecahedron": 13026,
        "Icosahedron": 13027,
        "\"Icosahedron\"": 13028,
        "'C',": 13029,
        "'I',": 13030,
        "mp[\"Tetrahedron\"]": 13031,
        "mp[\"Cube\"]": 13032,
        "mp[\"Octahedron\"]": 13033,
        "mp[\"Dodecahedron\"]": 13034,
        "mp[\"Icosahedron\"]": 13035,
        "it)": 13036,
        "(second": 13037,
        "12)": 13038,
        "m[\"Tetrahedron\"]": 13039,
        "m[\"Cube\"]": 13040,
        "m[\"Octahedron\"]": 13041,
        "m[\"Dodecahedron\"]": 13042,
        "m[\"Icosahedron\"]": 13043,
        "'C'": 13044,
        "'I'": 13045,
        "m[curr]": 13046,
        "Sum=0": 13047,
        "Sum": 13048,
        "tetr,cube,dodec,icos,oct": 13049,
        "tetr": 13050,
        "cube": 13051,
        "oct": 13052,
        "dodec": 13053,
        "icos": 13054,
        "ans=tetr*4": 13055,
        "cube*6": 13056,
        "oct*8": 13057,
        "dodec*12": 13058,
        "icos*20": 13059,
        "face": 13060,
        "transform(tmp.begin(),": 13061,
        "tmp.end(),": 13062,
        "tmp.begin(),": 13063,
        "::tolower)": 13064,
        "tmp.compare(\"tetrahedron\")": 13065,
        "tmp.compare(\"cube\")": 13066,
        "tmp.compare(\"octahedron\")": 13067,
        "tmp.compare(\"dodecahedron\")": 13068,
        "tmp.compare(\"icosahedron\")": 13069,
        "faces": 13070,
        "poly[\"Tetrahedron\"]": 13071,
        "poly[\"Cube\"]": 13072,
        "poly[\"Octahedron\"]": 13073,
        "poly[\"Dodecahedron\"]": 13074,
        "poly[\"Icosahedron\"]": 13075,
        "poly[s]": 13076,
        "createMap": 13077,
        "shapes": 13078,
        "shapes[\"Tetrahedron\"]": 13079,
        "shapes[\"Cube\"]": 13080,
        "shapes[\"Octahedron\"]": 13081,
        "shapes[\"Dodecahedron\"]": 13082,
        "shapes[\"Icosahedron\"]": 13083,
        "createMap()": 13084,
        "numShapes": 13085,
        "shapes[input]": 13086,
        "ans>=": 13087,
        "105x105": 13088,
        "101x101": 13089,
        "s[u][j]": 13090,
        "s[i][v]": 13091,
        "str[n][n": 13092,
        "b[a": 13093,
        "b[i][u]": 13094,
        "b[u][i]": 13095,
        "str[101][101]": 13096,
        "row[101],": 13097,
        "col[101]": 13098,
        "C(int": 13099,
        "reastr[i][j]d": 13100,
        "C(row[i])": 13101,
        "C(col[i])": 13102,
        "ada[0][j]": 13103,
        "ada[i][0]": 13104,
        "ada[0][i]": 13105,
        "s[n][n][1]": 13106,
        "s[i][j][0]": 13107,
        "n,i,j=int": 13108,
        "s*(s-1)/2": 13109,
        "in_out_txt": 13110,
        "FillArray": 13111,
        "num;": 13112,
        "(arr[i][j]": 13113,
        "(arr[i][k]": 13114,
        "C),": 13115,
        "(arr[k][j]": 13116,
        "((cnt": 13117,
        "((cn": 13118,
        "(cn": 13119,
        "h[0][0]": 13120,
        "l[0][0]": 13121,
        "n*": 13122,
        "inlcuisve": 13123,
        "(row[i]": 13124,
        "(col[i]": 13125,
        "row[100]": 13126,
        "col[100]": 13127,
        "incrmeent": 13128,
        "n,sum": 13129,
        "pointerr": 13130,
        "=i": 13131,
        "mat[n": 13132,
        "mat[i]": 13133,
        "gcdf": 13134,
        "nth": 13135,
        "(((row[i]": 13136,
        "((col[i]": 13137,
        "a[105][105]": 13138,
        "k=i+1": 13139,
        "it1": 13140,
        "0,it2": 13141,
        "it2": 13142,
        "(it1": 13143,
        "(it2": 13144,
        "s[105][105]": 13145,
        "num[105]": 13146,
        "num[i": 13147,
        "num[cnt]": 13148,
        "h[j]": 13149,
        "p[j][i]": 13150,
        "cntr": 13151,
        "sizeof(cntc)": 13152,
        "sizeof(cntr)": 13153,
        "cntc[i]": 13154,
        "cntr[j]": 13155,
        "C(cntc[i])": 13156,
        "C(cntr[i])": 13157,
        "b[N]": 13158,
        "lin": 13159,
        "lin[i]": 13160,
        "lin[j]": 13161,
        "(lin[i]": 13162,
        "(y[i]": 13163,
        "l,r": 13164,
        "top,": 13165,
        "isTrue": 13166,
        "(7-a[i])": 13167,
        "(7-b[i])": 13168,
        "7-top": 13169,
        "possible(": 13170,
        ",then{": 13171,
        "false}": 13172,
        "(check": 13173,
        "(possible)": 13174,
        ",then": 13175,
        "a[s1]": 13176,
        "a[s2]": 13177,
        "re_top": 13178,
        "re_top,": 13179,
        "x,y,z": 13180,
        "7-x": 13181,
        "arr[2][6]": 13182,
        "arr[5][1]": 13183,
        "arr[6][5]": 13184,
        "arr[6][2]": 13185,
        "arr[1][5]": 13186,
        "arr[5][6]": 13187,
        "43": 13188,
        "arr[1][3]": 13189,
        "arr[3][6]": 13190,
        "arr[4][1]": 13191,
        "arr[6][4]": 13192,
        "arr[3][1]": 13193,
        "arr[6][3]": 13194,
        "arr[1][4]": 13195,
        "arr[4][6]": 13196,
        "arr[2][4]": 13197,
        "arr[3][2]": 13198,
        "arr[4][5]": 13199,
        "arr[5][3]": 13200,
        "61": 13201,
        "arr[4][2]": 13202,
        "arr[2][3]": 13203,
        "arr[5][4]": 13204,
        "arr[3][5]": 13205,
        "105;": 13206,
        "t1,l1,t2,l2,f1,f2": 13207,
        "7-t1": 13208,
        "7-f1": 13209,
        "7-f2": 13210,
        "7-g": 13211,
        "7-l1": 13212,
        "n>": 13213,
        "tape": 13214,
        "bottom,": 13215,
        "7-l": 13216,
        "7-r": 13217,
        "((7": 13218,
        "f)),": 13219,
        "right1,": 13220,
        "right2": 13221,
        "right1": 13222,
        "right1[i]": 13223,
        "right2[i]": 13224,
        "fillSides": 13225,
        "v.push_back(i)": 13226,
        "eraseN": 13227,
        "(v.begin()": 13228,
        "fillSides(v)": 13229,
        "eraseN(v,": 13230,
        "7-a)": 13231,
        "7-b)": 13232,
        "v[7": 13233,
        "get(a,": 13234,
        "lala": 13235,
        "haha": 13236,
        "logal": 13237,
        "isok": 13238,
        "vv,": 13239,
        ",sum": 13240,
        "stringstream(nn)": 13241,
        "stringstream(k)": 13242,
        "i<n-1": 13243,
        "my(s)": 13244,
        "vv)": 13245,
        ",increment": 13246,
        "arr[n1]": 13247,
        "arr[7-n1]": 13248,
        "arr[n2]": 13249,
        "arr[7-n2]": 13250,
        "arr[t]": 13251,
        "tmp[indx]": 13252,
        "tmp[1]": 13253,
        "returb": 13254,
        "z2": 13255,
        "ok(j)": 13256,
        "(26": 13257,
        "Str": 13258,
        "crunt_State": 13259,
        "Str.length()": 13260,
        "int)Str[i]": 13261,
        "(index": 13262,
        "crunt_State)": 13263,
        "min((crunt_State": 13264,
        "index),": 13265,
        "crunt_State))": 13266,
        "min((index": 13267,
        "crunt_State),": 13268,
        "(crunt_State": 13269,
        "index))": 13270,
        "96)": 13271,
        "q=s[i]": 13272,
        "r=j": 13273,
        "n-r": 13274,
        "(27": 13275,
        "abs(n": 13276,
        "r))": 13277,
        "abcdefghijklmnopqrstuvwxyz": 13278,
        "target,": 13279,
        "target": 13280,
        "s.find(s1[j])": 13281,
        "(target": 13282,
        "getstring": 13283,
        "13),": 13284,
        "rotations": 13285,
        "(cur": 13286,
        "26)": 13287,
        "target)": 13288,
        "abs(cur": 13289,
        "pointer),": 13290,
        "a1)": 13291,
        "min(p1,": 13292,
        "temp-str[i]": 13293,
        "ans,i,cw,ccw=int": 13294,
        "cw=s[i]-'a'": 13295,
        "ccw=abs(26-cw)": 13296,
        "min(cw,ccw)": 13297,
        "cw=abs(s[i-1]-s[i])": 13298,
        "3.1415926535897932384626433832": 13299,
        "gcd(": 13300,
        "13LL": 13301,
        "cal(s[i],": 13302,
        "26-t": 13303,
        "-ch": 13304,
        "returnAbs": 13305,
        "positive(a-b)": 13306,
        "positive(b-a)": 13307,
        "returnAbs(num[i": 13308,
        "returnAbs(97,": 13309,
        "num[0])": 13310,
        "(inp[i]": 13311,
        "x[0])": 13312,
        "(x[0]": 13313,
        "inp[i])": 13314,
        "walk": 13315,
        "26-n": 13316,
        "(min(abs(pointer": 13317,
        "str[i]),": 13318,
        "(abs(pointer": 13319,
        "str[i]))))": 13320,
        "((next": 13321,
        "97)": 13322,
        "97))": 13323,
        "name.size()": 13324,
        "abs(pointer": 13325,
        "name[i])": 13326,
        "(step": 13327,
        "13)": 13328,
        "word[i]": 13329,
        "abs(t": 13330,
        "p=t": 13331,
        "difference,": 13332,
        "difference1": 13333,
        "password": 13334,
        "password[0]": 13335,
        "password.size()": 13336,
        "difference": 13337,
        "password[i": 13338,
        "password[i]": 13339,
        "numOfAlphabets": 13340,
        "Ch": 13341,
        "min(abs(s[i]": 13342,
        "Ch),": 13343,
        "Ch))": 13344,
        "cur),": 13345,
        "abs(26": 13346,
        "abs((s[i]": 13347,
        "cur))))": 13348,
        "strt": 13349,
        "smoves": 13350,
        "abs(strt": 13351,
        "index)": 13352,
        "3.14159265358979323846": 13353,
        "80": 13354,
        "a[s[0]": 13355,
        "a[26]": 13356,
        "a[s1": 13357,
        "a[s2": 13358,
        "26]": 13359,
        "26-m": 13360,
        "min(s[i]": 13361,
        "min(s[i": 13362,
        "-t": 13363,
        "d.length()": 13364,
        "d.at(i)": 13365,
        "int(x)": 13366,
        "fl)": 13367,
        "(one": 13368,
        "current)": 13369,
        "(current": 13370,
        "abs(now": 13371,
        "'a'))": 13372,
        "name=string": 13373,
        "rots=0": 13374,
        "prev=0": 13375,
        "temp=name[i]-'a'": 13376,
        "min(abs(temp-prev),": 13377,
        "26-abs(temp-prev))": 13378,
        "rots": 13379,
        "prev=temp": 13380,
        "fabs(top": 13381,
        "min(temp,": 13382,
        "(n[i]": 13383,
        "curr)": 13384,
        "maxt": 13385,
        "city": 13386,
        "city[k]": 13387,
        "city[i]": 13388,
        "c[105]": 13389,
        "c[index": 13390,
        "w[max_element(a,": 13391,
        "win[205]": 13392,
        "win[ind]": 13393,
        "*max_element(win,": 13394,
        "205)": 13395,
        "win[i]": 13396,
        "a[maxi]": 13397,
        "[150][150],": 13398,
        "multiset": 13399,
        "ms.begin()": 13400,
        "ms.end()": 13401,
        "(ms.count(*it)": 13402,
        "ms.count(*it)": 13403,
        "winner[i]": 13404,
        "wincandidate": 13405,
        "maxvote": 13406,
        "winner[wincandidate]": 13407,
        "win,": 13408,
        "temp[win]": 13409,
        "m,n,i,j,x,t,in=int,": 13410,
        "t=-1": 13411,
        "t<x": 13412,
        "t=x": 13413,
        "in=j": 13414,
        "a[j]>y": 13415,
        "y=a[j]": 13416,
        "in+1": 13417,
        "8e18": 13418,
        "freq[n": 13419,
        "freq[ans]": 13420,
        "did": 13421,
        "maxx.second)": 13422,
        "did[maxx.first]": 13423,
        "(did[i]": 13424,
        "p.second)": 13425,
        "p.second": 13426,
        "did[i]": 13427,
        "p.first": 13428,
        "ps": 13429,
        "win[ps]": 13430,
        "arr[idx]": 13431,
        "v_c": 13432,
        "v_g": 13433,
        "max_v": 13434,
        "v_c[j]": 13435,
        "v_g[idx]": 13436,
        "v+g[i]": 13437,
        "v_g[i]": 13438,
        "mj": 13439,
        "gsd": 13440,
        "b[w]": 13441,
        "maxnn": 13442,
        "inindex": 13443,
        "win[index]": 13444,
        "find_winner": 13445,
        "best_candidate,": 13446,
        "max_votes": 13447,
        "best_candidate": 13448,
        "votes.size()": 13449,
        "(votes[i]": 13450,
        "max_votes)": 13451,
        "cities": 13452,
        "cities[find_winner(array)": 13453,
        "find_winner(cities)": 13454,
        "fastIo()": 13455,
        "mxv": 13456,
        "ans[mx]": 13457,
        "maxx.first": 13458,
        "maxx.second": 13459,
        "tem_max": 13460,
        "unchanged": 13461,
        "b[o]": 13462,
        "j[1000],": 13463,
        "l[1000],": 13464,
        "h[1000],": 13465,
        "j[y]": 13466,
        "h[l[i]]": 13467,
        "h[u]": 13468,
        "arr[110],": 13469,
        "brr[110]": 13470,
        "brr[ans]": 13471,
        "=-1": 13472,
        "c[ansx]": 13473,
        "a[100000]": 13474,
        "lessons=array": 13475,
        "lessons[i]": 13476,
        "numhours=0": 13477,
        "numhours": 13478,
        "lessons[i+1]": 13479,
        "lessons[i-1]": 13480,
        "s,b=0": 13481,
        "i<t": 13482,
        "(increment": 13483,
        "while)": 13484,
        "arr[e]": 13485,
        "zerocnt": 13486,
        "(e)": 13487,
        "lekcje[100],": 13488,
        "wynik": 13489,
        "lekcje[i]": 13490,
        "lekcje[i": 13491,
        "a=attay": 13492,
        "st=1": 13493,
        "ans=n-st+1,": 13494,
        "punkty": 13495,
        "guests": 13496,
        "30001": 13497,
        "checked": 13498,
        "lessons": 13499,
        "reversestack": 13500,
        "reversed": 13501,
        "athome": 13502,
        "final,": 13503,
        "solveTest": 13504,
        "schedule": 13505,
        "isLesson": 13506,
        "isAtHome": 13507,
        "hoursSpent": 13508,
        "schedule[i]": 13509,
        "schedules[i+1]": 13510,
        "hoursSpent,": 13511,
        "akmal": 13512,
        "stay": 13513,
        "number_of_lessons": 13514,
        "lessons[i": 13515,
        "stat,": 13516,
        "ai[i]": 13517,
        "ai[i+1]": 13518,
        "ai[i-1]": 13519,
        "idk": 13520,
        "idx2": 13521,
        "idx1": 13522,
        "__gcd(gcd,": 13523,
        "\"Alice\"": 13524,
        "\"Bob\"": 13525,
        "((ma": 13526,
        "Alice": 13527,
        "Bob": 13528,
        "M=0": 13529,
        "M=max(M,": 13530,
        "m=gcd(a[1],": 13531,
        "gcd(m,": 13532,
        "m=gdc(m,": 13533,
        "s=M/m-n": 13534,
        "gcd(a[1],": 13535,
        "gcd(temp,": 13536,
        "movetimes": 13537,
        "__gdc": 13538,
        "res=a[0]": 13539,
        "res=gcd(res,": 13540,
        "ans=a[n-1]/res-n": 13541,
        "__gcd(g,": 13542,
        "\"Alice\\n\"": 13543,
        "\"Bob\\n\"": 13544,
        "gcd(x,": 13545,
        "((mx": 13546,
        "\"Bob\");": 13547,
        "0x3fffffff": 13548,
        "contant": 13549,
        "quick_pow": 13550,
        "gcd(maxx,": 13551,
        "INF=2^45": 13552,
        "MAXLL=9223372036854775807": 13553,
        "MAXULL=18446744073709551615": 13554,
        "MOD=1000000007": 13555,
        "DELTA=0.000000001": 13556,
        "mpow": 13557,
        "ret=ret*x": 13558,
        "x=x*x": 13559,
        "inverse": 13560,
        "mpow(x,": 13561,
        "MOD-2)": 13562,
        "cnt=array": 13563,
        "n,gcd=long": 13564,
        "A=array": 13565,
        "mx1=A[0]": 13566,
        "gcd=A[0]": 13567,
        "mx1=max(mx1,": 13568,
        "gcd=_gcd(gcd,A[i])": 13569,
        "ans=mx1/gcd": 13570,
        "abs(ans-n)": 13571,
        "itneger": 13572,
        "gcd(result,": 13573,
        "gcd(a[i],result)": 13574,
        "max/result": 13575,
        "ans-n": 13576,
        "max_num": 13577,
        "max_num),": 13578,
        "((max_num": 13579,
        "gcd(g,b)": 13580,
        "(prime[p]": 13581,
        "10000000,": 13582,
        "int(n)": 13583,
        "(ma": 13584,
        "maxval": 13585,
        "(maxval": 13586,
        "euclides": 13587,
        "mcd,": 13588,
        "V.begin()": 13589,
        "V.end()": 13590,
        "mcd": 13591,
        "V[0]": 13592,
        "V[n": 13593,
        "(V[i]": 13594,
        "V[i": 13595,
        "arccosine": 13596,
        "gcd(a[i],": 13597,
        "a[n-1]/s-n": 13598,
        "palidrome": 13599,
        "functio": 13600,
        "mx-n": 13601,
        "b%a": 13602,
        "temp^2": 13603,
        "fucntion": 13604,
        "incremetn": 13605,
        "R-": 13606,
        "fpow": 13607,
        "fpow(a,p-2,p)": 13608,
        "__gcd(gg,": 13609,
        "gcd(g,a[i])": 13610,
        "\"Alice\",": 13611,
        "\"bob\",": 13612,
        "vis[b[j]": 13613,
        "a[i]]": 13614,
        "0.": 13615,
        "count(v.begin(),": 13616,
        "*max_element(v.begin(),": 13617,
        "v.end()))": 13618,
        "10002": 13619,
        "20002": 13620,
        "xx[d]": 13621,
        "xx[c]": 13622,
        "raed": 13623,
        "ratios": 13624,
        "gear": 13625,
        "ratios[i]": 13626,
        "BG": 13627,
        "max_ratio": 13628,
        "max_ratio,": 13629,
        "c[s]": 13630,
        "display_vector": 13631,
        "vector<int>": 13632,
        "max1,": 13633,
        "is_it_sorted": 13634,
        "speed()": 13635,
        "(with": 13636,
        "min_max(v2)": 13637,
        "200025": 13638,
        "ratio": 13639,
        "mp[ratio]": 13640,
        "mp[mx]": 13641,
        "a[MAXN]": 13642,
        "c[MAXN": 13643,
        "MAXN]": 13644,
        "c[cnt": 13645,
        "+1]": 13646,
        "a[10020],": 13647,
        "b[10020],": 13648,
        "freq[maxy]": 13649,
        "c[cnt]": 13650,
        "comparer": 13651,
        "ar2[i]": 13652,
        "ar2[j]": 13653,
        "(b[j]": 13654,
        "maxi)": 13655,
        "c[b[j]": 13656,
        "10004": 13657,
        "ppp": 13658,
        "ppp[maxn]": 13659,
        "kecil,": 13660,
        "besar,": 13661,
        "kecil": 13662,
        "besar": 13663,
        "10001,": 13664,
        "amazing": 13665,
        "a+i+1": 13666,
        "greaterthan": 13667,
        "NumberOfContests": 13668,
        "First,": 13669,
        "Min,": 13670,
        "Amaze": 13671,
        "First": 13672,
        "mxs": 13673,
        "mns": 13674,
        "anti": 13675,
        "makx,mini,n,x=int,": 13676,
        "jwb=0": 13677,
        "mini=maks": 13678,
        "x>maks": 13679,
        "jwb": 13680,
        "maks=x": 13681,
        "x<mini": 13682,
        "mini=x": 13683,
        "maxP": 13684,
        "minP": 13685,
        "ctMax": 13686,
        "ctMin": 13687,
        "0x7ffffff": 13688,
        "highest,": 13689,
        "lowest,": 13690,
        "123456,": 13691,
        "T[0]": 13692,
        "z[0]": 13693,
        "mina": 13694,
        "a^(b-1)": 13695,
        "minval,": 13696,
        "maxval,": 13697,
        "sizeof(win)": 13698,
        "sizeof(ans)": 13699,
        "ans[99]": 13700,
        "a[d]": 13701,
        "firs": 13702,
        "(maxx": 13703,
        "ans),": 13704,
        "num[i][j]": 13705,
        "value[index]": 13706,
        "value[i]": 13707,
        "value[i": 13708,
        "cons": 13709,
        "excusive": 13710,
        "max_cnt,": 13711,
        "max_cnt": 13712,
        "present[j],": 13713,
        "(present[j]": 13714,
        "greae": 13715,
        "isAbsent": 13716,
        "absent": 13717,
        "absent[i]": 13718,
        "consecutive,": 13719,
        "50+10": 13720,
        "all_present": 13721,
        "cdays": 13722,
        "echo": 13723,
        "nex,": 13724,
        "nex-pre": 13725,
        "pre=i+1": 13726,
        "ck_0,": 13727,
        "ck_0": 13728,
        "ck=0": 13729,
        "maxd": 13730,
        "bewteen": 13731,
        "(maxd": 13732,
        "max(maxd,": 13733,
        "maxd,": 13734,
        "long)s.length()": 13735,
        "z[i]],": 13736,
        "++z[i]": 13737,
        "i<": 13738,
        "n,k,x,i,temp=int,": 13739,
        "n,k,x": 13740,
        "a[i]=temp": 13741,
        "k*x": 13742,
        "a[1000],": 13743,
        "l[i],": 13744,
        "indices,": 13745,
        "sum(0)": 13746,
        "k*X": 13747,
        "L[0]": 13748,
        "a[n-i]": 13749,
        "b--": 13750,
        "2000001": 13751,
        "find_par": 13752,
        "par[x]": 13753,
        "uni": 13754,
        "par[find_par(y)]": 13755,
        "par[find_par(x)]": 13756,
        "n,k,x=int,": 13757,
        "i=n-k": 13758,
        "arr[i]=x": 13759,
        "n,k,x=int": 13760,
        "ara=array": 13761,
        "k>0": 13762,
        "entries": 13763,
        "below": 13764,
        "isvowel": 13765,
        "case": 13766,
        "c='a'": 13767,
        "c='e'": 13768,
        "c='i'": 13769,
        "c='o'": 13770,
        "c='u';": 13771,
        "\"\\n\",": 13772,
        "catur": 13773,
        "catur[i][j]": 13774,
        "(catur[i][j]": 13775,
        "'B')": 13776,
        "'B',": 13777,
        "\"8\"": 13778,
        "s[o][i]": 13779,
        "s[i][o]": 13780,
        "\"BBBBBBBB\",": 13781,
        "paint": 13782,
        "n=integer,": 13783,
        "a2=integer,": 13784,
        "f2=integer,": 13785,
        "mat[j][i]": 13786,
        "654": 13787,
        "ss[i][j]": 13788,
        "ss[j][i]": 13789,
        "16,": 13790,
        "excusive,": 13791,
        "ans1+": 13792,
        "board[j][i]": 13793,
        "(board[i][j]": 13794,
        "(board[j][i]": 13795,
        "(ch[j]": 13796,
        "(num,": 13797,
        "For": 13798,
        "s:": 13799,
        "b=integers": 13800,
        "b=100": 13801,
        "num=": 13802,
        "ans=a+b": 13803,
        "ans=8": 13804,
        "_b(8)": 13805,
        "_b": 13806,
        "a[q][j]": 13807,
        "a[i][q]": 13808,
        "(0),": 13809,
        "Chess": 13810,
        "Chess[0]": 13811,
        "Chess[i]": 13812,
        "Chess[i][j]": 13813,
        "Chess[j][i]": 13814,
        "Y,": 13815,
        "count2,": 13816,
        "a[i][y]": 13817,
        "s[i][y]": 13818,
        "b[x][i]": 13819,
        "s[x][i]": 13820,
        "fun(i,": 13821,
        "-8": 13822,
        "tedad": 13823,
        "proc": 13824,
        "i,j,n=int": 13825,
        "j=i+1,": 13826,
        "0,i": 13827,
        "str.length(": 13828,
        "@": 13829,
        "s[result]": 13830,
        "s[0]='C'": 13831,
        "s[0]='G'": 13832,
        "s[i]='C'": 13833,
        "s[i]='G'": 13834,
        "strlen(str)": 13835,
        "1and": 13836,
        "ev_no": 13837,
        "int)s.size()": 13838,
        "br,": 13839,
        "str.length(),": 13840,
        "dir[8][2]": 13841,
        "dir1": 13842,
        "-2,": 13843,
        "dir2": 13844,
        "[4][2]": 13845,
        "dir3": 13846,
        "sqrt(x": 13847,
        "sqr": 13848,
        "s[i-1],": 13849,
        "n,i,j,cnt": 13850,
        "j-i": 13851,
        "javab": 13852,
        "answer=int": 13853,
        "ln=int": 13854,
        "sn=char": 13855,
        "fn=int": 13856,
        "ss=array": 13857,
        "ln=length": 13858,
        "sn=first": 13859,
        "fn=1": 13860,
        "fn": 13861,
        "ss[i-1]": 13862,
        "ss[i-1]+(fn+1)": 13863,
        "sn=s[i]": 13864,
        "ss[ln]": 13865,
        "(gcd(a": 13866,
        "(gcd(b,": 13867,
        "int)1": 13868,
        "int)(s.length()": 13869,
        "len-1": 13870,
        "dna": 13871,
        "identical": 13872,
        "ncl": 13873,
        "dna[i]": 13874,
        "dna[i": 13875,
        "f[j][k]": 13876,
        "x,y,x2,y2": 13877,
        "j=r": 13878,
        "a[i][j]=0": 13879,
        "cnt[i][j]": 13880,
        "ar[j][k]": 13881,
        "a[101][101],": 13882,
        "ix,": 13883,
        "iy,": 13884,
        "ix": 13885,
        "iy": 13886,
        "(abs(xx": 13887,
        "(abs(yy": 13888,
        "gra": 13889,
        "gra,": 13890,
        "gra[i][j]": 13891,
        "x1,y1,x2,y2=int": 13892,
        "x1,y1,x2,y2": 13893,
        "(x2-x1+1)*(y2-y1+1)": 13894,
        "pairsort": 13895,
        "pairt": 13896,
        "pairt[i].first": 13897,
        "pairt[i].second": 13898,
        "rev": 13899,
        "cnt[r][c]": 13900,
        "(x2-x1+1)*(y2-y2+1)": 13901,
        "(abs(x1": 13902,
        "(abs(y1": 13903,
        "elong": 13904,
        "((x2": 13905,
        "[105][105]": 13906,
        "lons": 13907,
        "1000000000+7": 13908,
        "nc": 13909,
        "floatfield": 13910,
        "maxs=110": 13911,
        "table=array": 13912,
        "maxy=0": 13913,
        "maxx=max(maxx,max(x1,x2))": 13914,
        "maxy=max(maxy,max(y1,y2))": 13915,
        "table[x1][y2]": 13916,
        "table[x1][y1-1]": 13917,
        "table[x2+1][y2]": 13918,
        "table[x1+1][y1-1]": 13919,
        "y=maxy": 13920,
        "x=2": 13921,
        "table[x-1][y]": 13922,
        "table[x][y]": 13923,
        "table[x][y-1]": 13924,
        "sum,n,x1,x2,": 13925,
        "[n+1]": 13926,
        "(inclusive)": 13927,
        "((a[i][4]": 13928,
        "(a[i][3]": 13929,
        "arr[j][k]": 13930,
        "svr": 13931,
        "-b": 13932,
        "tb,": 13933,
        "abs(ta": 13934,
        "tb)": 13935,
        "abs(fa": 13936,
        "fb)": 13937,
        "(abs(b": 13938,
        "fa))": 13939,
        "(abs(fb": 13940,
        "(abs(a": 13941,
        "200100,": 13942,
        "x1-x2": 13943,
        "abs(x1-a)": 13944,
        "abs(x1-b)?": 13945,
        "(start": 13946,
        "start-x2": 13947,
        "f1-f2": 13948,
        "abs(t1-t2)": 13949,
        "2*b": 13950,
        "abs(t1": 13951,
        "abs(f1": 13952,
        "f2)": 13953,
        "min(abs(fa": 13954,
        "abs(current": 13955,
        "q[i],": 13956,
        "abs(p[i]": 13957,
        "r[i])": 13958,
        "n,h,a,b,k=int": 13959,
        "n,h,a,b,k": 13960,
        "ta,fa,tb,fb=int": 13961,
        "ta,fa,tb,fb": 13962,
        "abs(fa-fb)": 13963,
        "abs(ta-tb)": 13964,
        "fa>b": 13965,
        "fb>b": 13966,
        "2*(min(fa,fb)-b)": 13967,
        "fa<a": 13968,
        "fb<a": 13969,
        "2*(a-max(fa-fb))": 13970,
        "jarak": 13971,
        "jarak,": 13972,
        "(fa": 13973,
        "abs(fb": 13974,
        "max(fa,": 13975,
        "fb))": 13976,
        "(min(fa,": 13977,
        "(f1": 13978,
        "f1)": 13979,
        "cf": 13980,
        "max(t1": 13981,
        "max(cf": 13982,
        "cf)": 13983,
        "abs(f2": 13984,
        "TA,": 13985,
        "FA,": 13986,
        "TB,": 13987,
        "FB": 13988,
        "TA": 13989,
        "TB": 13990,
        "FA": 13991,
        "(TB-TA)": 13992,
        "FB,": 13993,
        "ha,": 13994,
        "hb": 13995,
        "(ha": 13996,
        "(hb": 13997,
        "ha)": 13998,
        "hb)": 13999,
        "abs(ha": 14000,
        "nearest": 14001,
        "hb,": 14002,
        "hb-ha": 14003,
        "x*10+ch-'0',": 14004,
        "t_a,": 14005,
        "f_a,": 14006,
        "t_b,": 14007,
        "f_b": 14008,
        "f_a": 14009,
        "abs(t_b": 14010,
        "t_a)": 14011,
        "abs(f_b": 14012,
        "f_a)": 14013,
        "min(abs(f_a": 14014,
        "abs(f_a": 14015,
        "(abs(f_b": 14016,
        "f_a))": 14017,
        "abs(y1": 14018,
        "ed)": 14019,
        "fabs(h2": 14020,
        "h1)": 14021,
        "fabs(t2": 14022,
        "k/(2*m)": 14023,
        "(2*m)": 14024,
        "b/2": 14025,
        "lane": 14026,
        "desk": 14027,
        "((lane": 14028,
        "(K": 14029,
        "(M": 14030,
        "buff": 14031,
        "L\"": 14032,
        "R\"": 14033,
        "buff=0": 14034,
        "i+1,": 14035,
        "j+1,": 14036,
        "buff=k": 14037,
        "x=x+1": 14038,
        "y=y+": 14039,
        "rit=": 14040,
        "z=": 14041,
        "y/2": 14042,
        "z=z+1": 14043,
        "rit=0": 14044,
        "rit": 14045,
        "(k-1)/2": 14046,
        "1,\"": 14047,
        "Function": 14048,
        "will": 14049,
        "f(p,": 14050,
        "f(lr,": 14051,
        "L\\n\"": 14052,
        "R\\n\"": 14053,
        "preprocess": 14054,
        "(desk": 14055,
        "lane,": 14056,
        "+(2": 14057,
        "/(2": 14058,
        "*(l": 14059,
        "t3,": 14060,
        "t4": 14061,
        "desks,": 14062,
        "desks": 14063,
        "((K": 14064,
        "desks)": 14065,
        "pl": 14066,
        "dsk": 14067,
        "(pl": 14068,
        "ln,": 14069,
        "dsk,": 14070,
        "k/a,": 14071,
        "(k/a)": 14072,
        "c/2,": 14073,
        "parta": 14074,
        "mesto": 14075,
        "rad,": 14076,
        "parta,": 14077,
        "(row": 14078,
        "(q*2*m)": 14079,
        "ano": 14080,
        "lanes,": 14081,
        "desk,": 14082,
        "lanes": 14083,
        ",k": 14084,
        "for(": 14085,
        "(buff": 14086,
        "n,m,": 14087,
        "r+1": 14088,
        "/(m": 14089,
        "*(2": 14090,
        "first)": 14091,
        "TESTS,": 14092,
        "getit": 14093,
        "wth": 14094,
        "not(left": 14095,
        "places)": 14096,
        "most_significant": 14097,
        "1ULL": 14098,
        "times)": 14099,
        "f(l": 14100,
        "times),": 14101,
        "times))": 14102,
        "(((left": 14103,
        "((left": 14104,
        "f(l,": 14105,
        "MAXA": 14106,
        "9e18": 14107,
        "testCnt": 14108,
        "__builtin_popcountll": 14109,
        "decrements": 14110,
        "<<=": 14111,
        "a[100010],": 14112,
        "b[10010],": 14113,
        "d[10010]": 14114,
        "a[++x1]": 14115,
        "b[++x2]": 14116,
        "equalt": 14117,
        "max(x1,": 14118,
        "k=k*2,": 14119,
        "((1LL": 14120,
        "i)))": 14121,
        "go1": 14122,
        "go2": 14123,
        "go1(x)": 14124,
        "go1(y)": 14125,
        "go1(a)": 14126,
        "go1(temp)": 14127,
        "go(x)": 14128,
        "go(y)": 14129,
        "long)left": 14130,
        "go2(x,": 14131,
        "bitiwse-or": 14132,
        "(!LL": 14133,
        "getB": 14134,
        "getB(r)": 14135,
        "raised": 14136,
        "solve(l": 14137,
        "solve(l,": 14138,
        "casted(i)": 14139,
        "casted(i))": 14140,
        "is_palindrome": 14141,
        "&s": 14142,
        "equal(s.begin(),": 14143,
        "s.end(),": 14144,
        "s.rbegin())": 14145,
        "(1ULL": 14146,
        "perform": 14147,
        "log2l": 14148,
        "count-1": 14149,
        "fun(l": 14150,
        "fun(l,": 14151,
        "mp[t]": 14152,
        "__builtin_popcount": 14153,
        "l,r=long": 14154,
        "x=r,": 14155,
        "b[i]=l": 14156,
        "a[i]=r": 14157,
        "c[j]=a[j]": 14158,
        "c[i]=0": 14159,
        "s=1": 14160,
        "c[j]=1": 14161,
        "s=2": 14162,
        "c[j]>b[j]": 14163,
        "cnt>ans": 14164,
        "ans=cnt": 14165,
        "j=59": 14166,
        "c[j]*t": 14167,
        "z<x": 14168,
        "x=z": 14169,
        "Lb,": 14170,
        "Rb": 14171,
        "Ln,": 14172,
        "Rn": 14173,
        "Ln": 14174,
        "Lb[Ln]": 14175,
        "Rb[Rn]": 14176,
        "p[Rn]": 14177,
        "p[Rn": 14178,
        "Lb[i]": 14179,
        "Rb[i]": 14180,
        "Rb[j]": 14181,
        "ziro": 14182,
        "ziro,": 14183,
        "\"file.txt\"": 14184,
        "iterators": 14185,
        "m1[s3]": 14186,
        "s3[0]": 14187,
        "'l'": 14188,
        "first[0]": 14189,
        "_,": 14190,
        "\"left\"": 14191,
        "max(l,": 14192,
        "r-l-1": 14193,
        "izq": 14194,
        "der": 14195,
        "paila": 14196,
        "buffer,": 14197,
        "dir,": 14198,
        "izq,": 14199,
        "executed": 14200,
        "str[7]": 14201,
        "str3[0]": 14202,
        "nomer": 14203,
        "s[q]": 14204,
        "multiplying": 14205,
        "(nomer[q]": 14206,
        "mas[q]": 14207,
        "c4": 14208,
        "\"right\"": 14209,
        "(0th": 14210,
        "ri)": 14211,
        "li),": 14212,
        "(abs(li": 14213,
        "ri),": 14214,
        "con)": 14215,
        "(ri": 14216,
        "(li": 14217,
        "s[7]": 14218,
        "s[15]": 14219,
        "s[16]": 14220,
        "high,low": 14221,
        "high-low-1": 14222,
        "0x7fffffff": 14223,
        "min(l,": 14224,
        "max(r,x)": 14225,
        "2000,": 14226,
        "temp[0]": 14227,
        "str[1],": 14228,
        "str[2],": 14229,
        "A[s3[0]]": 14230,
        "A['l']": 14231,
        "A['r']": 14232,
        "&x": 14233,
        "nc()": 14234,
        "digit,": 14235,
        "!(c": 14236,
        "'Z'),": 14237,
        "s[len]": 14238,
        "'z')": 14239,
        "putchar('-'": 14240,
        "wt,": 14241,
        "ss[wt]": 14242,
        "dividng": 14243,
        "(;": 14244,
        "wt;": 14245,
        "putchar(ss[wt]": 14246,
        "48),": 14247,
        "wt--": 14248,
        "wt--)": 14249,
        "read(s)": 14250,
        "print(r": 14251,
        "ceil2": 14252,
        "ceil2(n)": 14253,
        "0.5": 14254,
        "n,m,l": 14255,
        "input1": 14256,
        "input2": 14257,
        "while(input1": 14258,
        "entered)": 14259,
        "if(input2": 14260,
        "input1)": 14261,
        "(input1": 14262,
        "number)": 14263,
        "(output": 14264,
        "input2)": 14265,
        "consider": 14266,
        "(mn": 14267,
        "mmax,": 14268,
        "mmin,": 14269,
        "mmax": 14270,
        "mmin": 14271,
        "(mmin": 14272,
        "!n": 14273,
        "casted(": 14274,
        "1/2": 14275,
        "(int)((double)n": 14276,
        "0.5)": 14277,
        "re,": 14278,
        "steps1": 14279,
        "steps2": 14280,
        "(steps2": 14281,
        "steps1)": 14282,
        "((cn1+cn2)": 14283,
        "(cn1+cn2)": 14284,
        "cn1+cn2": 14285,
        "Defining": 14286,
        "numeric": 14287,
        "points.": 14288,
        "would": 14289,
        "k%": 14290,
        "!isdigit(ch))": 14291,
        "isdigit(ch))": 14292,
        "(X": 14293,
        "-X": 14294,
        "ch[num]": 14295,
        "putchar(ch[num--])": 14296,
        "read(),": 14297,
        "(k1": 14298,
        "k2)": 14299,
        "s1[size": 14300,
        "duplicates": 14301,
        "s.compare(i,": 14302,
        "String": 14303,
        "len/2+1": 14304,
        "must": 14305,
        "l+k": 14306,
        "s[l+j]": 14307,
        "ss[i+j]": 14308,
        "M[S]": 14309,
        "0,1": 14310,
        "{1000000009,": 14311,
        "1000000007}": 14312,
        "{37,43}": 14313,
        "p[0][0]": 14314,
        "p[0][1]": 14315,
        "(p[i": 14316,
        "base[0])": 14317,
        "MOD[0],": 14318,
        "MOD[0]": 14319,
        "base[1])": 14320,
        "MOD[1],": 14321,
        "MOD[1]": 14322,
        "Hash": 14323,
        "hash1,": 14324,
        "hash2,": 14325,
        "hash1": 14326,
        "hash2": 14327,
        "(p[i][1]": 14328,
        "(p[len": 14329,
        "MOD[0])": 14330,
        "p[1][0],": 14331,
        "(p[0][0]": 14332,
        "pash2": 14333,
        "MOD[1])": 14334,
        "p[1][1],": 14335,
        "(p[0][1]": 14336,
        "s.begin()": 14337,
        "inp.size()": 14338,
        "aspect": 14339,
        "inp.substr(0,": 14340,
        "inp.substr(1)": 14341,
        "sh[51]": 14342,
        "sh[i]": 14343,
        "sh[i][(j": 14344,
        "(integer(s.size()))]": 14345,
        "sh[j]": 14346,
        "S[i+1]": 14347,
        "S[len-1]": 14348,
        "arr[[j]": 14349,
        "merge": 14350,
        "str[size": 14351,
        "f+1": 14352,
        "s[s.length()": 14353,
        "s.substr(0,": 14354,
        "s[s.size()": 14355,
        "s[a": 14356,
        "st.size": 14357,
        "esto": 14358,
        "esto.back()": 14359,
        "pop_back": 14360,
        "push_front": 14361,
        "esto.size()": 14362,
        "0x3f3f3f3f3f3f3f3f": 14363,
        "a.size": 14364,
        "ss[j]": 14365,
        "word.end()": 14366,
        "word.size()": 14367,
        "word.length()": 14368,
        "word)": 14369,
        "ss[len": 14370,
        "temp[x++]": 14371,
        "given": 14372,
        "words": 14373,
        "t(s.begin()": 14374,
        "s.end())": 14375,
        "ss.size()": 14376,
        "second[i": 14377,
        "Dasha,": 14378,
        "Masha": 14379,
        "Equal": 14380,
        "(gets": 14381,
        "n=(b-a)/d+1": 14382,
        "((b+a)*n)/2": 14383,
        "a,b,ans1,ans2,ans3=int": 14384,
        "ans1=a*b/gcd(a,b)": 14385,
        "c1=a": 14386,
        "ans2=calc(c1,b,gcd(a,b))": 14387,
        "ans2>ans1-ans2": 14388,
        "Dasha": 14389,
        "ans2<ans1-ans2": 14390,
        "LCM": 14391,
        "LCM(a,": 14392,
        "\"Equal\"": 14393,
        "\"Dasha\"": 14394,
        "\"Masha\"": 14395,
        "(__gcd(a,": 14396,
        "(lcm": 14397,
        "__gcd(A,": 14398,
        "dasha": 14399,
        "masha": 14400,
        "masha)": 14401,
        "(dasha": 14402,
        "A.empty()": 14403,
        "B.empty()": 14404,
        "A.front()": 14405,
        "B.front()": 14406,
        "A.size()": 14407,
        "B.size()": 14408,
        "i*b": 14409,
        "nearest(cur,": 14410,
        "\"Masha\",": 14411,
        "b/": 14412,
        "definition": 14413,
        "nod": 14414,
        "nok(a,": 14415,
        "nod(x,": 14416,
        "td": 14417,
        "bef": 14418,
        "qq[1000006][2]": 14419,
        "visit[1000006]": 14420,
        "ct1,": 14421,
        "ct2,": 14422,
        "ct1": 14423,
        "ct2": 14424,
        "I00": 14425,
        "i=a1": 14426,
        "a1-0": 14427,
        "i=b1": 14428,
        "b1-0": 14429,
        "+b": 14430,
        "a1+a": 14431,
        "gcdd": 14432,
        "gcdd(a,": 14433,
        "\"Dasha\",": 14434,
        "Number1,": 14435,
        "Number2": 14436,
        "Number1": 14437,
        "Number2,": 14438,
        "(Number1": 14439,
        "Number2)": 14440,
        "FirstMulti": 14441,
        "LastCommom": 14442,
        "SecondMulti": 14443,
        "MashaCount": 14444,
        "DashaCount": 14445,
        "M=10010": 14446,
        "g=gcd(a,b)": 14447,
        "tmp=a": 14448,
        "b=tmp": 14449,
        "t=s[0]": 14450,
        "s[0]=s[1]": 14451,
        "s[1]=t": 14452,
        "start1=0": 14453,
        "ans1=0": 14454,
        "ans2=0": 14455,
        "num=1": 14456,
        "a/gcd(a,b)": 14457,
        "div=(b-start1)/a": 14458,
        "res=(b-start1)": 14459,
        "div*a": 14460,
        "b-start1-div*a": 14461,
        "(div+(res": 14462,
        "0))*a-b": 14463,
        "start1": 14464,
        "ans1>ans2": 14465,
        "ans1<ans2": 14466,
        "ba1": 14467,
        "strlen(ba1)": 14468,
        "bal[i]": 14469,
        "ba1[i]": 14470,
        "90,": 14471,
        "cntup": 14472,
        "cnt1w": 14473,
        "toupper(s[i])": 14474,
        "tolower(s[i])": 14475,
        "5e2": 14476,
        "fh": 14477,
        "'z',": 14478,
        "'Z',": 14479,
        "C=0": 14480,
        "s[i]>96": 14481,
        "c>=C": 14482,
        "transform": 14483,
        "texto": 14484,
        "caso1,": 14485,
        "caso2": 14486,
        "caso1": 14487,
        "verif": 14488,
        "cambio": 14489,
        "texto[i]": 14490,
        "isupper": 14491,
        "islower": 14492,
        "cas2": 14493,
        "tolower": 14494,
        "text[i]": 14495,
        "toupper": 14496,
        "isupper(s[i])": 14497,
        "small=0": 14498,
        "small": 14499,
        "a+32": 14500,
        "a>90,": 14501,
        "a-32": 14502,
        "islower(s[i])": 14503,
        "'A')": 14504,
        "int(s[i])": 14505,
        "chI": 14506,
        "ascii": 14507,
        "s1=string": 14508,
        "len=length": 14509,
        "upper,lower=0": 14510,
        "ch=s1[i]": 14511,
        "s1[i]=toupper(s1[i])": 14512,
        "s1[i]=tolower(s1[i])": 14513,
        "toupper(str[i])": 14514,
        "tolower(str[i])": 14515,
        "lowerCount": 14516,
        "upperCount": 14517,
        "(int)str[j]": 14518,
        "(int)'A'": 14519,
        "(int)'Z'": 14520,
        "(int)'a'": 14521,
        "(int)'z',": 14522,
        "(char)((int)str[j]": 14523,
        "32)": 14524,
        "(int)'Z',": 14525,
        "mayu": 14526,
        "minu": 14527,
        "lc,": 14528,
        "uc": 14529,
        "lc": 14530,
        "i,c1,c2": 14531,
        "upper(0),": 14532,
        "lower(0)": 14533,
        "toUpp": 14534,
        "toLow": 14535,
        "toLow(s)": 14536,
        "toUpp(s)": 14537,
        "{{0,": 14538,
        "0}}": 14539,
        "c1,c2=0": 14540,
        "c1>=c2": 14541,
        "tolower(x[i])": 14542,
        "toupper(x[i])": 14543,
        "Ma": 14544,
        "to_lower": 14545,
        "to_upper": 14546,
        "Z,": 14547,
        "another": 14548,
        "another[0]": 14549,
        "another[1]": 14550,
        "mp[a]=b": 14551,
        "mp[b]=a": 14552,
        "a=s[i]": 14553,
        "b=mp[s[i]]": 14554,
        "letter,": 14555,
        "min(x,y)": 14556,
        "fb[0]": 14557,
        "fb[1]": 14558,
        "fb[0],": 14559,
        "fb[1],": 14560,
        "mpu[p[0]]": 14561,
        "mpu[p[1]]": 14562,
        "mpu[s[i]]": 14563,
        "Min(x,": 14564,
        "enemy": 14565,
        "enemy1": 14566,
        "enemy2": 14567,
        "enemy[enemy1]": 14568,
        "enemy[enemy2]": 14569,
        "warOpen": 14570,
        "particpant1,": 14571,
        "particpant2": 14572,
        "army1,": 14573,
        "army2,": 14574,
        "army1": 14575,
        "army2": 14576,
        "enemy[s[i]]": 14577,
        "particpant1": 14578,
        "min(army1,": 14579,
        "army2)": 14580,
        "f[a[0]]": 14581,
        "f[a[1]]": 14582,
        "(count(s[i": 14583,
        "f[s[i": 14584,
        "1]])": 14585,
        "(!count)": 14586,
        "dp[ind][x]": 14587,
        "s[ind]-'a'": 14588,
        "g[x][s[ind]-'a']": 14589,
        "ind+1,": 14590,
        "(ind+1,": 14591,
        "(ind+1,x)": 14592,
        "g[x[0]": 14593,
        "'a'][x[1]": 14594,
        "g[x[1]": 14595,
        "'a'][x[0]": 14596,
        "forb": 14597,
        "forb[p[0]]": 14598,
        "forb[p[1]]": 14599,
        "counta,": 14600,
        "countb": 14601,
        "forb[s[i]]": 14602,
        "counta": 14603,
        "INF32": 14604,
        "INF64": 14605,
        "Try": 14606,
        "dp[i][pre]": 14607,
        "f[cc]": 14608,
        "Try(i": 14609,
        "f[t[0]]": 14610,
        "f[t[1]]": 14611,
        "Try(0,": 14612,
        "27)": 14613,
        "start_run": 14614,
        "f=true": 14615,
        "sec=true": 14616,
        "p=string": 14617,
        "start_run(s,j,p)": 14618,
        "min(a,b)": 14619,
        "1e-11": 14620,
        "requires": 14621,
        "int[M]": 14622,
        "slen": 14623,
        "id=0": 14624,
        "f[i][0]": 14625,
        "f[i][1],": 14626,
        "f[i][1]": 14627,
        "27x27": 14628,
        "cur[0]": 14629,
        "cur[1]": 14630,
        "bigmod(a,": 14631,
        "ss[x]": 14632,
        "dp[p[0]": 14633,
        "'a'][p[1]": 14634,
        "dp[p[1]": 14635,
        "'a'][p[0]": 14636,
        "g[0]": 14637,
        "g[1]": 14638,
        "summ>=m": 14639,
        "variablexx": 14640,
        "bs()": 14641,
        "lim,": 14642,
        "can(mid,v,m)": 14643,
        "107": 14644,
        "n*maxi-sum": 14645,
        "m-left": 14646,
        "parametric_search": 14647,
        "right)": 14648,
        "parametric_search(0,": 14649,
        "(en": 14650,
        "start)": 14651,
        "rand()": 14652,
        "(RAND_MAX": 14653,
        "pow(x,": 14654,
        "FF": 14655,
        "42": 14656,
        "MIN,": 14657,
        "kmin,": 14658,
        "kmax,": 14659,
        "kmin": 14660,
        "gap)": 14661,
        "kmax": 14662,
        "max,min=int,": 14663,
        "max=a[0]": 14664,
        "a[i]>max": 14665,
        "max=a[i]": 14666,
        "max-a[i]": 14667,
        "m<b": 14668,
        "min=max": 14669,
        "m-b": 14670,
        "min=max+(m-b)/n": 14671,
        "min=max+(m-b)/n+1": 14672,
        "max+m": 14673,
        "p+r": 14674,
        "vs.begin()": 14675,
        "vs.end()": 14676,
        "vs[0]": 14677,
        "vs[vs.size()": 14678,
        "1],\"": 14679,
        "\",u": 14680,
        "max_element(v.begin(),": 14681,
        "v.end())": 14682,
        "v.back(),\"": 14683,
        "\",mx": 14684,
        "m;": 14685,
        "sort(a,": 14686,
        "n);": 14687,
        "mink": 14688,
        "gcd(a": 14689,
        "thamn": 14690,
        "s[h--],": 14691,
        "modexp(a,": 14692,
        "reurn": 14693,
        "j,spf[j]": 14694,
        "fiunction": 14695,
        "str[R": 14696,
        "L]": 14697,
        "1],'": 14698,
        "',y": 14699,
        "x,'": 14700,
        "euqal": 14701,
        "a[man]": 14702,
        "maxm,": 14703,
        "max(maxm,": 14704,
        "int)ceil((long": 14705,
        "double)sum": 14706,
        "(total": 14707,
        "ay": 14708,
        "ay[i]": 14709,
        "ceil(((float)z": 14710,
        "n)),\"": 14711,
        "\",a[n": 14712,
        "*t": 14713,
        "argmini": 14714,
        "t[m]": 14715,
        "minim,": 14716,
        "maxim": 14717,
        "maxi(t,": 14718,
        "t[argmini(t,": 14719,
        "n)]": 14720,
        "kx": 14721,
        "ky": 14722,
        "\",k": 14723,
        "a[pos],": 14724,
        "assert": 14725,
        "abs(a[n": 14726,
        "a[id]": 14727,
        "mv": 14728,
        "add()": 14729,
        "A[n": 14730,
        "grid[r][j]": 14731,
        "grid[i][c]": 14732,
        "s[i].find(a[i][j]": 14733,
        "a[k][j])": 14734,
        "s[i].end()": 14735,
        "a[z][j]": 14736,
        "\"Yes\",": 14737,
        "\"No\",": 14738,
        "mnt,": 14739,
        "mnt": 14740,
        "arr[l][j]": 14741,
        "x[i][u]": 14742,
        "y[j][v]": 14743,
        "matr": 14744,
        "matr[i][j]": 14745,
        "kon": 14746,
        "tren": 14747,
        "matr[a][j]": 14748,
        "matr[i][b]": 14749,
        "matr[i][j],": 14750,
        "tren,": 14751,
        "a[x][j],": 14752,
        "after,": 14753,
        "a[k]kj]": 14754,
        "[i][j]=": 14755,
        "arr[i][j],": 14756,
        "arr[z][j]": 14757,
        "lab": 14758,
        "lab[i][j]": 14759,
        "lab[r][j]": 14760,
        "lab[i][c]": 14761,
        "[55][55]": 14762,
        "a[l][j]),": 14763,
        "res)": 14764,
        "dat[LIM][LIM]": 14765,
        "dat[i][j]": 14766,
        "w=0": 14767,
        "dat[i][k]": 14768,
        "dat[w][j]": 14769,
        "arr[n][n]": 14770,
        "FLAG": 14771,
        "arr[i][s]": 14772,
        "arr[t][j]": 14773,
        "flag==": 14774,
        "ar[n][n]": 14775,
        "ar[i][p]": 14776,
        "ar[q][j]": 14777,
        "arr[i][l]": 14778,
        "num[i][y]": 14779,
        "num[x][j]": 14780,
        "delare": 14781,
        "a[l][j]": 14782,
        "m[i][s]": 14783,
        "m[t][j]": 14784,
        "dx[4]": 14785,
        "dy[4]": 14786,
        "g[i][j]=1,": 14787,
        "g[i][r]": 14788,
        "g[c][j]": 14789,
        "g[i][j],": 14790,
        "G[MAXN][MAXN]": 14791,
        "k=j,": 14792,
        "kk=1": 14793,
        "kk=1,": 14794,
        "G[i][k]": 14795,
        "G[kk][j]": 14796,
        "flag2=0,": 14797,
        "arr[x][i]": 14798,
        "arr[j][y]": 14799,
        "val,": 14800,
        "arr[n+1][n+1]": 14801,
        "a[i][l]": 14802,
        "grid[x][y]": 14803,
        "grid[x][s]": 14804,
        "grid[t][y]": 14805,
        "grid[r][c]": 14806,
        "check(r,": 14807,
        "(j-i)+(n-1)": 14808,
        "gcd(integer": 14809,
        "mint": 14810,
        "mint)": 14811,
        "(mint": 14812,
        "999999)": 14813,
        "upd,": 14814,
        "cntone": 14815,
        "upd": 14816,
        "upd[now]": 14817,
        "upd[k]": 14818,
        "tmp[": 14819,
        "v[i])": 14820,
        "v[l]": 14821,
        "v[r])": 14822,
        "min(n": 14823,
        "seica_gcd": 14824,
        "isOne": 14825,
        "min(len,": 14826,
        "findstep": 14827,
        "2005,": 14828,
        "cnt_1": 14829,
        "num[j])": 14830,
        "minm,": 14831,
        "minm": 14832,
        "swap(a": 14833,
        "(g,": 14834,
        "nums[j])": 14835,
        "s=0x3f3f3f3f,": 14836,
        "n-c": 14837,
        "b=a[i]": 14838,
        "b=gcd(b,": 14839,
        "min(s,": 14840,
        "j-1)": 14841,
        "n-1+s": 14842,
        "pair1": 14843,
        "id,": 14844,
        "ar[i-1],": 14845,
        "ar[i-1]": 14846,
        "p[n],": 14847,
        "(p[i]": 14848,
        "to1)": 14849,
        "(count)": 14850,
        "endl;": 14851,
        "minmum": 14852,
        "INT_MAX;": 14853,
        "__gcd(p[j],": 14854,
        "p[i]))": 14855,
        "min(minmum,": 14856,
        "i);": 14857,
        "fastMax": 14858,
        "(((y": 14859,
        "(32": 14860,
        "fastMin": 14861,
        "[l]": 14862,
        "__gcd(x,": 14863,
        "a[r])": 14864,
        "\"-1\\n\",0": 14865,
        "\"\\n\",0": 14866,
        "output,": 14867,
        "always": 14868,
        "104": 14869,
        "hora": 14870,
        "ms[{u,": 14871,
        "ms[{i,": 14872,
        "j}]": 14873,
        "ms[{j,": 14874,
        "k}]": 14875,
        "arr[k])": 14876,
        "ntc": 14877,
        "ma[u][v]": 14878,
        "ma[v][u]": 14879,
        "ma[j][k]": 14880,
        "ma[i][k],": 14881,
        "ax[i]": 14882,
        "a[a1][a2]": 14883,
        "a[a2][a1]": 14884,
        "a[k][i]": 14885,
        "ax[k]": 14886,
        "b[1000],": 14887,
        "clo[105][105]": 14888,
        ",y": 14889,
        "b[n": 14890,
        "clo[y][x]": 14891,
        "clo[x][y]": 14892,
        "num_p": 14893,
        "clo[i][k]": 14894,
        "clo[i][j]": 14895,
        "clo[j][k]": 14896,
        "rel": 14897,
        "find_ans": 14898,
        "cur_ans": 14899,
        "rel[l][r]": 14900,
        "(cur_ans": 14901,
        "a[r][i],": 14902,
        "v[a[r][i]]": 14903,
        "rel[x][y]": 14904,
        "rel[y][x]": 14905,
        "a[min": 14906,
        "y]": 14907,
        "G[l][r]": 14908,
        "G[r][l]": 14909,
        "G[k][j]": 14910,
        "price[j]": 14911,
        "price[k]": 14912,
        "ck[u][v]": 14913,
        "ck[v][u]": 14914,
        "ck[i][j]": 14915,
        "ck[j][k]": 14916,
        "ck[k][i]": 14917,
        "b[y][x]": 14918,
        "b[j][k]": 14919,
        "b[i][k]": 14920,
        "const[i]": 14921,
        "mp[a]b[]": 14922,
        "ma[b][a]": 14923,
        "mp[j][k]": 14924,
        "mp[i][k]": 14925,
        "cost[k]": 14926,
        "sizeofa": 14927,
        "a[u][v]": 14928,
        "a[v][u]": 14929,
        "!=0": 14930,
        "q[k]": 14931,
        "matches": 14932,
        "matches[a][b]": 14933,
        "matches[b][a]": 14934,
        "matches[i][j]": 14935,
        "matches[i][j],": 14936,
        "matches[i][k]": 14937,
        "matches[j][k]": 14938,
        "prices[j]": 14939,
        "prices[k]": 14940,
        "3000001": 14941,
        "match[u][v]": 14942,
        "match[v][u]": 14943,
        "(match[i][j]": 14944,
        "(match[j][k]": 14945,
        "match[k][i]": 14946,
        "(MIN": 14947,
        "price[k])": 14948,
        "0x3f3f3f3f)": 14949,
        "a[u": 14950,
        "a[v": 14951,
        "1][u": 14952,
        "nowp,": 14953,
        "minp": 14954,
        "cprice": 14955,
        "cprice[t1][t2]": 14956,
        "price[t1]": 14957,
        "price[t2]": 14958,
        "cprice[t2][t1]": 14959,
        "cprice[i][j]": 14960,
        "cprice[j][k]": 14961,
        "cprice[i][k]": 14962,
        "(cprice[i][j]": 14963,
        "cprice[i][k])": 14964,
        "clo,": 14965,
        "clo": 14966,
        "(clo[i][k]": 14967,
        "(num_p": 14968,
        "price),": 14969,
        "edge[u][0]": 14970,
        "edge[u][edge[u][0]]": 14971,
        "edge[v][0]": 14972,
        "edge[v][edge[v][0]]": 14973,
        "edge[a][0]": 14974,
        "edge[a][j]": 14975,
        "edge[b][0]": 14976,
        "edge[b][k]": 14977,
        "edge[c][0]": 14978,
        "edge[c][p]": 14979,
        "num[a]": 14980,
        "num[b]": 14981,
        "num[c])": 14982,
        "they're": 14983,
        "match[i][j]": 14984,
        "match[j][k]": 14985,
        "price[k],": 14986,
        "b[u][v]": 14987,
        "b[v][u]": 14988,
        "match[f][t]": 14989,
        "match[t][f]": 14990,
        "contniue": 14991,
        "match[j][q]": 14992,
        "match[q][i]": 14993,
        "x[j][k]": 14994,
        "dp[k]": 14995,
        "mapp": 14996,
        "map[x][y]": 14997,
        "mapp[y][x]": 14998,
        "mapp[j][i],": 14999,
        "mapp[i][k],": 15000,
        "mapp[j][k]": 15001,
        "uu": 15002,
        "ma[uu][vv]": 15003,
        "ma[vv][uu]": 15004,
        "ma[i][t]": 15005,
        "ma[j][t]": 15006,
        "a[t])": 15007,
        "edge[x][y]": 15008,
        "edge[y][x]": 15009,
        "1E": 15010,
        "edge[i][j]": 15011,
        "edge[j][k]": 15012,
        "edge[k][i]": 15013,
        "1E+9": 15014,
        "judge[y][x]": 15015,
        "judge[x][y]": 15016,
        "judge[i][j]": 15017,
        "judge[i][k]": 15018,
        "judge[j][k]": 15019,
        "100x3": 15020,
        "dp[0][2]": 15021,
        "dp[0][1]": 15022,
        "1][0],": 15023,
        "1][1],": 15024,
        "1][2)": 15025,
        "{{0}}": 15026,
        "dp[i-1][0]": 15027,
        "dp[a": 15028,
        "tep": 15029,
        "X,w=0": 15030,
        "ch=getchar()": 15031,
        "X=8*X+2*X+ch^48,": 15032,
        "putchar('-'),": 15033,
        "x=-x": 15034,
        "x>9": 15035,
        "write(x/10)": 15036,
        "putchar(x": 15037,
        "maxn=1000010": 15038,
        "dp[0][0]=0": 15039,
        "dp[i][0]=min(min(dp[i-1][0],": 15040,
        "dp[i-1][1]),": 15041,
        "dp[i-1][2])+1": 15042,
        "dp[i][1]=min(dp[i-1][0],": 15043,
        "dp[i-1][2])": 15044,
        "dp[i][2]=min(dp[i-1][0],": 15045,
        "dp[i-1][1])": 15046,
        "min(min(dp[t][1],": 15047,
        "dp[t][2]),": 15048,
        "dp[t][0])": 15049,
        "100000000000000": 15050,
        "M1": 15051,
        "min(dp[0][0],": 15052,
        "min(dp[0][1],": 15053,
        "dp[0][2]))": 15054,
        "1][2]))": 15055,
        "1][2])": 15056,
        "min(dp[n": 15057,
        "dp[i][x]": 15058,
        "blocked": 15059,
        "Move": 15060,
        "multiplyed": 15061,
        "previousGym": 15062,
        "previousContest": 15063,
        "goRest": 15064,
        "previousContenst": 15065,
        "goGym": 15066,
        "goContest": 15067,
        "goEither": 15068,
        "min(dp[n][0],": 15069,
        "min(dp[n][1],": 15070,
        "dp[n][2]))": 15071,
        "act,": 15072,
        "dp[i][act]": 15073,
        "frest": 15074,
        "fres": 15075,
        "grest": 15076,
        "f(n,": 15077,
        "nad": 15078,
        "frest,": 15079,
        "grest,": 15080,
        "crest": 15081,
        "size[105][3]": 15082,
        "myFile": 15083,
        "task.in": 15084,
        "myFile.fail(),": 15085,
        "assert(freopen(\"task.in\",": 15086,
        "\"r\",": 15087,
        "stdin)": 15088,
        "max(max(dp[i": 15089,
        "1][1]),": 15090,
        "3),": 15091,
        "max(dp[i": 15092,
        "max(max(dp[n][0],": 15093,
        "dp[n][1]),": 15094,
        "dp[n][2])": 15095,
        "dp[index][prev]": 15096,
        "a[index]": 15097,
        "day[i]": 15098,
        "1][i],": 15099,
        "(t[i": 15100,
        "a,b,c,n,k,m": 15101,
        "l_r": 15102,
        "d1[i": 15103,
        "2[c]": 15104,
        "d2[n": 15105,
        "d1[l": 15106,
        "problem": 15107,
        "array[i]": 15108,
        "M>L": 15109,
        "M<R,": 15110,
        "a,b,c,cnt": 15111,
        "b,a,c": 15112,
        "a,b,c,n,temp": 15113,
        "0,x": 15114,
        "map[i]": 15115,
        "cc=0": 15116,
        "x>b": 15117,
        "x<c,": 15118,
        "aa,b,c,count": 15119,
        "aa,b,c": 15120,
        "a,b,c,n,i,j,g": 15121,
        "mon,": 15122,
        "mon": 15123,
        "ttem": 15124,
        "collect": 15125,
        "notes": 15126,
        "notes[i]": 15127,
        "1e5+10,": 15128,
        "Add": 15129,
        "X[i]": 15130,
        "tmp=int": 15131,
        "a=b=0": 15132,
        "tmp=1": 15133,
        "cost)": 15134,
        "max(min(a,": 15135,
        "un=0": 15136,
        "de": 15137,
        "un": 15138,
        "un>de": 15139,
        "(un": 15140,
        "de)/3": 15141,
        "sum=un": 15142,
        "mot": 15143,
        "mot,": 15144,
        "mot)": 15145,
        "=array": 15146,
        "ones,": 15147,
        "one=0": 15148,
        "one=one": 15149,
        "ans=ans+": 15150,
        "one/3": 15151,
        "br[k]": 15152,
        "br[1]": 15153,
        "br[2]": 15154,
        "n,k,": 15155,
        "br)": 15156,
        "-(": 15157,
        "+the": 15158,
        "(1st": 15159,
        "ada[2]": 15160,
        "ada[1]": 15161,
        "floor((s": 15162,
        "Sort": 15163,
        "than/equal": 15164,
        "c1's": 15165,
        "c2's": 15166,
        "c1/3": 15167,
        "200001,": 15168,
        "b_number": 15169,
        "c_number": 15170,
        "b[b_number]": 15171,
        "b[c_number]": 15172,
        "c_number,": 15173,
        "len_b": 15174,
        "(b_number": 15175,
        "c_number)": 15176,
        "mp[1]": 15177,
        "mp[2]": 15178,
        "tmpa,": 15179,
        "tmpb,": 15180,
        "tmpa": 15181,
        "tmpb": 15182,
        "(s1-s2)/3": 15183,
        "sum.": 15184,
        "While": 15185,
        "Decrement": 15186,
        "trone": 15187,
        "(sum1": 15188,
        "sum2)": 15189,
        "mp[r]": 15190,
        "so()": 15191,
        "n,k,c,x=int,": 15192,
        "405": 15193,
        "n,k,c": 15194,
        "t=k": 15195,
        "t=i+k,": 15196,
        "c[m": 15197,
        "(day[i]": 15198,
        "day[i": 15199,
        "(day[0]": 15200,
        "day[c": 15201,
        "(c[m": 15202,
        "c[m])": 15203,
        "dd[i]": 15204,
        "(dd[0]": 15205,
        "dd[c": 15206,
        "(dd[i]": 15207,
        "dd[i": 15208,
        "370": 15209,
        "atan(1)": 15210,
        "num[tt]": 15211,
        "n,k,c=int": 15212,
        "holidays=array": 15213,
        "tpresents=0": 15214,
        "holidays[i]": 15215,
        "n/k": 15216,
        "tpresents": 15217,
        "holidays[0]/k": 15218,
        "holidays[0]": 15219,
        "(holidays[i]-holidays[i-1])/k": 15220,
        "holidays[i]-olidays[i-1]": 15221,
        "(n-holidays[i-1])/k": 15222,
        "solve(a[i]": 15223,
        "a.back()": 15224,
        "kMaxN": 15225,
        "pt,": 15226,
        "pending,": 15227,
        "gifts": 15228,
        "pending": 15229,
        "a[pt]": 15230,
        "preincrement": 15231,
        "inf2": 15232,
        "545": 15233,
        "is[x]": 15234,
        "is[i]": 15235,
        "arr[c])": 15236,
        "c-1": 15237,
        "d+k": 15238,
        "1000+5": 15239,
        "ihash": 15240,
        "ihash[0]": 15241,
        "ihash[x]": 15242,
        "ians": 15243,
        "ihash[i]": 15244,
        "addint": 15245,
        "previous,": 15246,
        "previous)": 15247,
        "is[545]": 15248,
        "w[x]": 15249,
        "a[i+k]": 15250,
        "hari": 15251,
        "days,": 15252,
        "range,": 15253,
        "hari[input]": 15254,
        "hari[a]": 15255,
        "v[day]": 15256,
        "needPrezent": 15257,
        "v1[i": 15258,
        "(needPrezent": 15259,
        "v1[c]": 15260,
        "v1.size()": 15261,
        "365": 15262,
        "gift,": 15263,
        "gift": 15264,
        "a[f]": 15265,
        "j=l-1": 15266,
        "j=x": 15267,
        "str[j-1]": 15268,
        "ch1),": 15269,
        "1to": 15270,
        "thne": 15271,
        "l,r=int": 15272,
        "a,b=char": 15273,
        "s[i]=b": 15274,
        "from,": 15275,
        "c1[0],": 15276,
        "MOD1": 15277,
        "MOD2": 15278,
        "int=": 15279,
        "str=array": 15280,
        "str+1": 15281,
        "c1,c2=char": 15282,
        "l,r,c1,c2": 15283,
        "str[i]=c2": 15284,
        "c1[i]": 15285,
        "c2[i]": 15286,
        "c1[i],": 15287,
        "eps=1e-6": 15288,
        "inf=3f3f3f3f": 15289,
        "mod=1000000007": 15290,
        "MAXN=200005": 15291,
        "arg,": 15292,
        "f=-1": 15293,
        "c=c*10+ch-'0'": 15294,
        "c*f": 15295,
        "op1,op2=char": 15296,
        "l,r,op1,op2": 15297,
        "i=l-1": 15298,
        "s[i]=op2": 15299,
        "change_in,": 15300,
        "to_change": 15301,
        "to_change,": 15302,
        "change_in": 15303,
        "(s[l]": 15304,
        "c1),": 15305,
        "fro,": 15306,
        "bac": 15307,
        "fro": 15308,
        "int(m)": 15309,
        "int(l)": 15310,
        "int(r)": 15311,
        "exclsuvie": 15312,
        "Sheldon,": 15313,
        "Leonard,": 15314,
        "Penny,": 15315,
        "Rajesh,": 15316,
        "Howard": 15317,
        "\"Sheldon\",": 15318,
        "\"Leonard\",": 15319,
        "\"Penny\",": 15320,
        "\"Rajesh\",": 15321,
        "\"Howard\"": 15322,
        "name[(n": 15323,
        "r]": 15324,
        "900000000": 15325,
        "Penny": 15326,
        "stop,": 15327,
        "Names[ans": 15328,
        "t<n": 15329,
        "pow(2,l)*5": 15330,
        "pow(2,j)*5": 15331,
        "num=n-1": 15332,
        "n-m": 15333,
        "i*pow(2,cnt)": 15334,
        "(i+1)*pow(2,cnt)": 15335,
        "a[0]=\"Sheldon\"": 15336,
        "a[1]=\"Leonard\"": 15337,
        "a[2]=\"Penny\"": 15338,
        "a[3]=\"Rajesh\"": 15339,
        "a[4]=\"Howard\"": 15340,
        "\"Sheldon\"": 15341,
        "\"Leonard\"": 15342,
        "\"Penny\"": 15343,
        "\"Rajesh\"": 15344,
        "nam": 15345,
        "{\"Sheldon\",": 15346,
        "\"Howard\"}": 15347,
        "nam[n": 15348,
        "Sheldon": 15349,
        "Leonard": 15350,
        "Rajesh": 15351,
        "name[flag]": 15352,
        "(pow(2,": 15353,
        "g))": 15354,
        "(n-5)/2": 15355,
        "(2^c)": 15356,
        "2^c": 15357,
        "print\"Leonard\"": 15358,
        "names[(n": 15359,
        "log2((n": 15360,
        "qpow(a))": 15361,
        "qpow(a)": 15362,
        "name[x]": 15363,
        "name[n": 15364,
        "strs": 15365,
        "{\"Sheldon\\n\",": 15366,
        "\"Leonard\\n\",": 15367,
        "\"Penny\\n\",": 15368,
        "\"Rajesh\\n\",": 15369,
        "\"Howard\\n\"}": 15370,
        "strs[a-1]": 15371,
        "(n-1)/r": 15372,
        "=const": 15373,
        "siezs": 15374,
        "names[(n-1)/r],": 15375,
        "ww": 15376,
        "dp[i],": 15377,
        "str[cnt": 15378,
        "inpp": 15379,
        "names[(inpp": 15380,
        "(id": 15381,
        "rint": 15382,
        "m+1)": 15383,
        "*(": 15384,
        "power(2.0,": 15385,
        "tmp[i": 15386,
        "(long)power": 15387,
        "(2,": 15388,
        "nama[1]": 15389,
        "nama[2]": 15390,
        "nama[3]": 15391,
        "nama[4]": 15392,
        "nama[5]": 15393,
        "nama[n]": 15394,
        "nama[(n": 15395,
        "((1": 15396,
        "d<l": 15397,
        "d>r": 15398,
        "up)": 15399,
        "Result": 15400,
        "decremeting": 15401,
        "declara": 15402,
        "MXN": 15403,
        "1.5": 15404,
        "MNN": 15405,
        "yy=": 15406,
        "xx)": 15407,
        "+d": 15408,
        "r/d": 15409,
        "d*ind": 15410,
        "(r%d)": 15411,
        "l,r,d": 15412,
        "((b/c)+1)*c": 15413,
        "(r+d)-(r": 15414,
        "adj[a].size()": 15415,
        ",n": 15416,
        "b/c": 15417,
        "flags": 15418,
        "ios_base::fixed": 15419,
        "(float)c[j]": 15420,
        "(float)c[j": 15421,
        "(c[j": 15422,
        "d*(t+1)": 15423,
        "(r/d+1)*d": 15424,
        "l,r,d=int": 15425,
        "solve(l,r,d)": 15426,
        "10^18+7": 15427,
        "0.0000001": 15428,
        "m=(r+1)": 15429,
        "r+1+d-m": 15430,
        "int(1e6)": 15431,
        "1e3+5": 15432,
        "1000000007LL,": 15433,
        "GT": 15434,
        "esle": 15435,
        "GT(x": 15436,
        "tohop": 15437,
        "BSearch": 15438,
        "save[s[i]": 15439,
        "save[i],": 15440,
        "mp[s[i]": 15441,
        "(str[i]": 15442,
        "'{'": 15443,
        "'}'": 15444,
        "','),": 15445,
        "','": 15446,
        "arr[s[i]": 15447,
        "p[c-'a']": 15448,
        "',',": 15449,
        "'{',": 15450,
        "arr[s[i]-'a']": 15451,
        "'}',": 15452,
        "a[s[i]": 15453,
        "whole": 15454,
        "b[(c": 15455,
        "'a')]": 15456,
        "sset": 15457,
        "h[a-97]": 15458,
        "3005": 15459,
        "}": 15460,
        "122)": 15461,
        ",a[x": 15462,
        "tofor": 15463,
        "i<27": 15464,
        "isalpha(c)": 15465,
        "s[i+1],": 15466,
        "book[s[i]]": 15467,
        "fiiled": 15468,
        "(97": 15469,
        "b[integer": 15470,
        "a[t]]": 15471,
        "27000": 15472,
        "extract": 15473,
        "readed": 15474,
        "27,": 15475,
        "a[ch": 15476,
        "df": 15477,
        "isalpha(s[i]),": 15478,
        "abc": 15479,
        "abc[n]": 15480,
        "abc[i]": 15481,
        "a[s-'a']": 15482,
        "96]": 15483,
        "memset(mark,": 15484,
        "sizeof(mark))": 15485,
        "op)": 15486,
        "',')": 15487,
        "proceed(": 15488,
        "(notmark[op": 15489,
        "mark[op": 15490,
        "hash[s[i]": 15491,
        "hash[i]": 15492,
        "ara[s[i]]": 15493,
        "'}": 15494,
        "a[s[1]": 15495,
        "n,i,a[100],sum": 15496,
        "sum_a": 15497,
        "sum_b": 15498,
        "sum_a,": 15499,
        "mc,": 15500,
        "(sumb": 15501,
        "sumc)": 15502,
        "tmp<0": 15503,
        "(-1": 15504,
        "psum": 15505,
        "nsum": 15506,
        "int=1": 15507,
        "abs(a[i])": 15508,
        "sumPos": 15509,
        "sumNeg": 15510,
        "arr[4]": 15511,
        "arr[5]": 15512,
        "arr[6]": 15513,
        "arr[7]": 15514,
        "arr[8]": 15515,
        "arr[9]": 15516,
        "(arr[s[0]": 15517,
        "0])": 15518,
        "(arr[s[1]": 15519,
        "whose": 15520,
        "ar[l]": 15521,
        "ar[r]": 15522,
        "a[10],": 15523,
        "a[10]": 15524,
        "num[10]": 15525,
        "num[n]": 15526,
        "num[n": 15527,
        "tenth": 15528,
        "unit": 15529,
        "list[tenth]": 15530,
        "list[unit]": 15531,
        "Q[w]": 15532,
        "w/10": 15533,
        "Q[e]": 15534,
        "Q[r]": 15535,
        "counter(n[i])": 15536,
        "d1=n/10": 15537,
        "d2=n": 15538,
        "d1+d2+1+d1*d2": 15539,
        "n,r,p=int,": 15540,
        "v=2": 15541,
        "v=7": 15542,
        "v=3": 15543,
        "v=4": 15544,
        "v=5": 15545,
        "v=1": 15546,
        "r=n": 15547,
        "p=v[r]*v[n]": 15548,
        "digit1": 15549,
        "a[digit1]": 15550,
        "a[val]": 15551,
        "freq[d1]": 15552,
        "freq[x]": 15553,
        "stick": 15554,
        "stick[n1]": 15555,
        "stick[n2]": 15556,
        "d1,": 15557,
        "ref": 15558,
        "ref[d1]": 15559,
        "ref[d2]": 15560,
        "ref[10]": 15561,
        "getGood": 15562,
        "arr[n%10]": 15563,
        "arr[n/10],": 15564,
        "good[n": 15565,
        "x,a,b=int": 15566,
        "num1,num2=int": 15567,
        "num1=x": 15568,
        "num2=x/10": 15569,
        "a=7": 15570,
        "a=4": 15571,
        "a=5": 15572,
        "b=7": 15573,
        "b=4": 15574,
        "b=5": 15575,
        "getPossibilities": 15576,
        "getPossibilities(n": 15577,
        "10),": 15578,
        "A[n1]": 15579,
        "A[n2]": 15580,
        "arr[str[i]]": 15581,
        "(ar[l]": 15582,
        "(ar[r]": 15583,
        "q[t]": 15584,
        "q[tt]": 15585,
        "_x": 15586,
        "_y": 15587,
        "(_x": 15588,
        "(_y": 15589,
        "num[]": 15590,
        "num[y]": 15591,
        "x3f": 15592,
        "ip,": 15593,
        "ip": 15594,
        "(ip": 15595,
        "noth": 15596,
        "r[d]": 15597,
        "arr_i": 15598,
        "abs(m": 15599,
        "en,": 15600,
        "a[en": 15601,
        "v(n": 15602,
        "v[m": 15603,
        "(m-j)": 15604,
        "(ans,": 15605,
        "absolut": 15606,
        "of(i": 15607,
        "i*10": 15608,
        "a,b,k=int,": 15609,
        "i=b": 15610,
        "c1=i-b": 15611,
        "c2=b-i": 15612,
        "c2*10": 15613,
        "c1*10": 15614,
        "l=m": 15615,
        "r=m": 15616,
        "r-m": 15617,
        "dis*10": 15618,
        "(sizeof": 15619,
        "0x3c3c3c": 15620,
        "a[m+i]": 15621,
        "a[m-i]": 15622,
        "distl": 15623,
        "distr.": 15624,
        "Exit": 15625,
        "n.": 15626,
        "distr": 15627,
        "MIN1,": 15628,
        "MIN2,": 15629,
        "MIN1": 15630,
        "0x3f3f3f,": 15631,
        "MIN2": 15632,
        "0x3f3f3f": 15633,
        "las": 15634,
        "dis,": 15635,
        "house": 15636,
        "house[i]": 15637,
        "house[m": 15638,
        "READ(INPUT": 15639,
        "permission": 15640,
        "ouput": 15641,
        "Divs": 15642,
        "ans[--k]": 15643,
        "(ret[counts": 15644,
        "ret[counts": 15645,
        "N=40000000": 15646,
        "index=0": 15647,
        "p[incremented": 15648,
        "index]=i": 15649,
        "is_square": 15650,
        "p[index]*p[index]": 15651,
        "cnt=index*2-is_square": 15652,
        "n/p[2*index-k": 15653,
        "is_square]": 15654,
        "faktor": 15655,
        "faktor[k-1]": 15656,
        "divi": 15657,
        "divi[a]": 15658,
        "has.empty()": 15659,
        "has.top()": 15660,
        "divi[k]": 15661,
        "a[y": 15662,
        "square_root": 15663,
        "num)": 15664,
        "bisa[k": 15665,
        "4e7": 15666,
        "p[index]": 15667,
        "(p[index]": 15668,
        "p[2": 15669,
        "!is_square]": 15670,
        "index]": 15671,
        "p[2*index-k": 15672,
        "intever": 15673,
        "v[k-1]": 15674,
        "ans[k": 15675,
        "a[y-1]": 15676,
        "v1[k": 15677,
        "v2[v2": 15678,
        "V[K-1]": 15679,
        "divisores": 15680,
        "divisores[k-1]": 15681,
        "divs": 15682,
        "i^2<=n": 15683,
        "pushed": 15684,
        "thenthe": 15685,
        "k>the": 15686,
        "divs[k": 15687,
        "cek,": 15688,
        "divosir": 15689,
        "divisor[k": 15690,
        "divs[k-1]": 15691,
        "div[k": 15692,
        "j2": 15693,
        "b[j1]": 15694,
        "incrementin": 15695,
        "cet": 15696,
        "c[j2]": 15697,
        "j2)": 15698,
        "c[k": 15699,
        "(i/n)": 15700,
        "divisor2": 15701,
        "divisor[k-1]": 15702,
        "divisor2[size": 15703,
        "glag": 15704,
        "double)n)": 15705,
        "a[10000000]": 15706,
        "c[10000000]": 15707,
        "j2=0,": 15708,
        "\"0": 15709,
        "0\\n\"": 15710,
        "(1)": 15711,
        "(N)": 15712,
        "dif(A[1].first,": 15713,
        "A[1].second)": 15714,
        "lasth": 15715,
        "lastm": 15716,
        "(A[i].second": 15717,
        "A[i].first": 15718,
        "dif(lasth,": 15719,
        "lastm)": 15720,
        "dif(A[i": 15721,
        "1].first,": 15722,
        "(A[N].second": 15723,
        "A[N].first": 15724,
        "times[i]": 15725,
        "times[0]": 15726,
        "0\"": 15727,
        "times[i": 15728,
        "times[n": 15729,
        "setprecision(8)": 15730,
        "(m[0]": 15731,
        "(m[i]": 15732,
        "int)x": 15733,
        "1600": 15734,
        "tab": 15735,
        "h*60+m": 15736,
        "max(t": 15737,
        "t+s+1": 15738,
        "tab[i]": 15739,
        "tab[i-1]": 15740,
        "r1=-1,": 15741,
        "r2=-1": 15742,
        "res=": 15743,
        "h-a": 15744,
        "h1*60": 15745,
        "h1-b+m": 15746,
        "(s)": 15747,
        "(2*s)": 15748,
        "b+s+1": 15749,
        "59": 15750,
        "b+s+1-60": 15751,
        "h*60": 15752,
        "i/60": 15753,
        "MAXT": 15754,
        "takeoffHour": 15755,
        "takeoffMin": 15756,
        "splitTime": 15757,
        "exlusive,": 15758,
        "h[0]": 15759,
        "h[i-1]": 15760,
        "m[i-1]": 15761,
        "h[n": 15762,
        "(now": 15763,
        "max(c,": 15764,
        "(v[0]": 15765,
        "ans,\"": 15766,
        "\",ans1": 15767,
        "ans/60,": 15768,
        "sizeof(ok)": 15769,
        "hh,": 15770,
        "hh": 15771,
        "tt/60": 15772,
        "time[i]": 15773,
        "time.front()": 15774,
        "(right": 15775,
        "time.size()": 15776,
        "time[i": 15777,
        "60,\"": 15778,
        "\",ret": 15779,
        "time.back()": 15780,
        "batas": 15781,
        "t[i][0]": 15782,
        "t[i][1]": 15783,
        "t[0][0]": 15784,
        "t[0][1]": 15785,
        "t[n": 15786,
        "ah": 15787,
        "t[i][1])": 15788,
        "t[i][0])": 15789,
        "ah,": 15790,
        "f(i,j)": 15791,
        "f(h[k],m[k])": 15792,
        "ok[MAXT": 15793,
        "t+s": 15794,
        "gh,": 15795,
        "gm,": 15796,
        "gh": 15797,
        "gm": 15798,
        "(gh": 15799,
        "60)": 15800,
        "i01": 15801,
        "n-p": 15802,
        "23333": 15803,
        "Main": 15804,
        "vec[n": 15805,
        "a[200][3]": 15806,
        "b[200]": 15807,
        "abs(b[j]": 15808,
        "i/60,": 15809,
        "ansh": 15810,
        "ansm": 15811,
        "hh[0]": 15812,
        "mm[0]": 15813,
        "hh[1]": 15814,
        "mm[1]": 15815,
        "(hh[i]": 15816,
        "hh[i": 15817,
        "mm[i]": 15818,
        "mm[i": 15819,
        "hh[n]": 15820,
        "mm[n]": 15821,
        "ansh,": 15822,
        "x[1]*60+y[1]": 15823,
        "p=x[i]*60+y[i]": 15824,
        "q=x[i+1]*60+y[i+1]": 15825,
        "abs(p-q)": 15826,
        "m*2+1": 15827,
        "res1=(p+m)/60": 15828,
        "res2=(p+m)": 15829,
        "res1+(res2+1)/60,": 15830,
        "(res2+1)": 15831,
        "x[n]+(y[n]+m+1)/60,": 15832,
        "(y[n]+m+1)": 15833,
        "modPower": 15834,
        "dims": 15835,
        "dp[i][l]": 15836,
        "fun(i+1,": 15837,
        "fun(i+2,": 15838,
        "l+1)": 15839,
        "p[s[i]": 15840,
        "fun(0,": 15841,
        "used[111]": 15842,
        "(inp[0]": 15843,
        "inp[s]": 15844,
        "thorugh": 15845,
        "m[a]": 15846,
        "rmp": 15847,
        "m[s[i]]": 15848,
        "155": 15849,
        "a[tmp": 15850,
        "A[10],": 15851,
        "M>0": 15852,
        "M>0,": 15853,
        "Maxn": 15854,
        "c[10000]": 15855,
        "c+n+1": 15856,
        "gs=m,": 15857,
        "mymap[c]": 15858,
        "_c": 15859,
        "mymap[i]": 15860,
        "(rec": 15861,
        "Last,": 15862,
        "Tot": 15863,
        "Last": 15864,
        "mp[200]": 15865,
        "mp[a[i]]": 15866,
        "i=97": 15867,
        "j=k,": 15868,
        "j=k": 15869,
        "i,j,k,l,m,n=int": 15870,
        "a[s[i]-'a'+1]=1": 15871,
        "flag,ans=0": 15872,
        "cnt>=k": 15873,
        "ult=90": 15874,
        "tam=0": 15875,
        "v[i]>=ult+2": 15876,
        "ult=v[i]": 15877,
        "v[i]-96": 15878,
        "tam>=k": 15879,
        "chars[26]": 15880,
        "chars[i]": 15881,
        "chars[c-a]": 15882,
        "-3,": 15883,
        "curr+1": 15884,
        "valori[1000],": 15885,
        "sel[1000],": 15886,
        "nrsel,": 15887,
        "valfin,": 15888,
        "ultsel": 15889,
        "valori[i]": 15890,
        "valori": 15891,
        "nrsel": 15892,
        "valfin": 15893,
        "cur,prev=string,rec": 15894,
        "store=\"\"": 15895,
        "rec=cur": 15896,
        "prev[j]": 15897,
        "rec[j]": 15898,
        "rec=store": 15899,
        "30005": 15900,
        "3e4": 15901,
        "a[1].length()": 15902,
        "a[1][j]": 15903,
        "(a[k][j]": 15904,
        "c),": 15905,
        "int(N)": 15906,
        "S.size())": 15907,
        "rip": 15908,
        "V.size": 15909,
        "V[j][i]": 15910,
        "V[j": 15911,
        "300000": 15912,
        "str[0].size()": 15913,
        "str[0].at(i)": 15914,
        "(str[j].at(i)": 15915,
        "ch),": 15916,
        "size_n=int": 15917,
        "result=0": 15918,
        "letter=vector": 15919,
        "used=vector": 15920,
        "ii,jj=int": 15921,
        "len=int": 15922,
        "ii=0": 15923,
        "len=size": 15924,
        "jj=0": 15925,
        "used[jj]": 15926,
        "used[jj]=1": 15927,
        "letter[jj]=str[jj]": 15928,
        "str[jj]": 15929,
        "letter[jj]": 15930,
        "used[jj]=2": 15931,
        "used[ii]": 15932,
        "lcp": 15933,
        "lcp.length()": 15934,
        "lcp[j]": 15935,
        "30003": 15936,
        "s[i][i]": 15937,
        "phnum": 15938,
        "phnum[0]": 15939,
        "phnum[ii][p]": 15940,
        "phnum[ii": 15941,
        "1][p]": 15942,
        "build": 15943,
        "Init": 15944,
        "store[0]": 15945,
        "store[i][j]": 15946,
        "cmp[j]": 15947,
        "Init()": 15948,
        "chk_all": 15949,
        "str[j]),": 15950,
        "common_prefix": 15951,
        "(high": 15952,
        "low)": 15953,
        "(chk_all(s,": 15954,
        "mid))": 15955,
        "s[0].substr(low,": 15956,
        "(s[i].size()": 15957,
        "s[i].size()": 15958,
        "common_prefix(s,": 15959,
        "res.size()": 15960,
        "30005,25": 15961,
        "str[1][i]": 15962,
        "long)INF": 15963,
        "((int)": 15964,
        "good(j)": 15965,
        "minMatch": 15966,
        "cpy[j]": 15967,
        "txt[j]": 15968,
        "30010": 15969,
        "largest=200,": 15970,
        "j<length": 15971,
        "arr[0][j]": 15972,
        "s[0][j]": 15973,
        "ves": 15974,
        "(int)": 15975,
        "vec[j][i]": 15976,
        "vec[0][i]": 15977,
        "marker": 15978,
        "number[30000][21]": 15979,
        "number[i]": 15980,
        "number[0]": 15981,
        "number[0][i]": 15982,
        "number[j][i]": 15983,
        "ProduceCode": 15984,
        "Solution": 15985,
        "PhoneArray": 15986,
        "NULL,": 15987,
        "CityCode=\"X\"": 15988,
        "PhoneArray[0],": 15989,
        "PhoneArray[1]": 15990,
        "CityCode": 15991,
        "ProduceCode(PhoneArray[0],": 15992,
        "PhoneArray[1])": 15993,
        "PhoneArray[V]": 15994,
        "PhoneArray[v]": 15995,
        "CityCode,": 15996,
        "A[X]": 15997,
        "B[X],": 15998,
        "str[30005][25]": 15999,
        "V[0][i]": 16000,
        "h(s[0],": 16001,
        "s[1])": 16002,
        "h(answer,": 16003,
        "xk": 16004,
        "check(a[i],k)": 16005,
        "lucky": 16006,
        "lucky(x)": 16007,
        "nod,": 16008,
        "v.push_back": 16009,
        "res++;": 16010,
        "countLuckyNum": 16011,
        "countLuckyNum(tmp)": 16012,
        "f(xx)": 16013,
        "digit(t)": 16014,
        "numero": 16015,
        "turimi": 16016,
        "appears": 16017,
        "digit(a[i])": 16018,
        "number_lucky_digit": 16019,
        "count(s.begin(),": 16020,
        "tempCount": 16021,
        "lucky_digits": 16022,
        "numberOfLucky,": 16023,
        "numberOfLucky": 16024,
        "fcounter": 16025,
        "eger": 16026,
        "check(integer)": 16027,
        "str2[n-i-1]": 16028,
        "str2[n": 16029,
        "reverseStr": 16030,
        "symbols": 16031,
        "str[n": 16032,
        "str[n-i-1]": 16033,
        "s1[length": 16034,
        "str[len": 16035,
        "tl": 16036,
        "c2[tl]": 16037,
        "t[length": 16038,
        "lens,": 16039,
        "lent,": 16040,
        "judg": 16041,
        "lent": 16042,
        "t[lens": 16043,
        "jugd": 16044,
        "tempo": 16045,
        "tempo[j]": 16046,
        "tempo[m]": 16047,
        "lena": 16048,
        "b[lena": 16049,
        "Reverse": 16050,
        "b[size": 16051,
        "reveverse": 16052,
        "t.begin()": 16053,
        "t.end()": 16054,
        "s2[b": 16055,
        "input_1,": 16056,
        "input_2": 16057,
        "input_1": 16058,
        "alphabetical": 16059,
        "year": 16060,
        "ny,": 16061,
        "continuous": 16062,
        "b,c,d": 16063,
        "ny": 16064,
        "sudah": 16065,
        "angka": 16066,
        "thn": 16067,
        "arr[thn": 16068,
        "temu": 16069,
        "cek(y)": 16070,
        "split": 16071,
        "flg=0": 16072,
        "ar[t]=x": 16073,
        "u=t+1": 16074,
        "ar[t]": 16075,
        "ar[u]": 16076,
        "flg=1": 16077,
        "p=false": 16078,
        "p=split(n)": 16079,
        "9020": 16080,
        "isDt": 16081,
        "dig=array": 16082,
        "i=y,": 16083,
        "i>0": 16084,
        "dig[i": 16085,
        "10]=true": 16086,
        "y+1": 16087,
        "isDt(ans)": 16088,
        "cnt[y": 16089,
        "9000000000000000000000000000000": 16090,
        "isDistinct": 16091,
        "a,m=int": 16092,
        "n>10": 16093,
        "a=n": 16094,
        "m=n": 16095,
        "nextBYear": 16096,
        "c=m+1": 16097,
        "isDistinct(c)": 16098,
        "nextBYear(a)": 16099,
        "check(v)": 16100,
        "y,z": 16101,
        "9999": 16102,
        "a[top++]": 16103,
        "AppEnd": 16104,
        "a=y/1000": 16105,
        "b=y/100": 16106,
        "c=y/10": 16107,
        "d=y": 16108,
        "y=int,": 16109,
        "ye=int": 16110,
        "ye": 16111,
        "r=int": 16112,
        "r=y": 16113,
        "ar[i]=r": 16114,
        "y=ye": 16115,
        "j=k+1": 16116,
        "ve": 16117,
        "mark[n": 16118,
        "distinct": 16119,
        "(d.size()": 16120,
        "(true)": 16121,
        "(distinct(i)": 16122,
        "8000": 16123,
        "somebodytrue": 16124,
        "q,w,e,r=int": 16125,
        "x<=1022": 16126,
        "1023": 16127,
        "9876": 16128,
        "q=i": 16129,
        "w=i/10": 16130,
        "e=i/100": 16131,
        "r=i/1000": 16132,
        "somebodytrue(n)": 16133,
        "test(i)": 16134,
        "9012": 16135,
        "a1,a2,a3,a4=0": 16136,
        "n=y": 16137,
        "a1=n": 16138,
        "a2=n/10": 16139,
        "a3=n/100": 16140,
        "a4=n/1000": 16141,
        "arr[ans++]": 16142,
        "loop[": 16143,
        "count_0": 16144,
        "count_1": 16145,
        "c0": 16146,
        "2c0": 16147,
        "y=0,j,x=0": 16148,
        "positions": 16149,
        "\"10\"": 16150,
        "\"01\"": 16151,
        "min(tot,": 16152,
        "mm)": 16153,
        "pushing": 16154,
        "tes": 16155,
        "tes[i]": 16156,
        "abs(n0": 16157,
        "n1)": 16158,
        "s0": 16159,
        "count0,": 16160,
        "count0": 16161,
        "count0-count1": 16162,
        "-r": 16163,
        "stck": 16164,
        "cnt1)": 16165,
        "ef": 16166,
        "getchar())": 16167,
        "ef[ch": 16168,
        "ef[0]": 16169,
        "ef[1]": 16170,
        "201000": 16171,
        "newest": 16172,
        "abs(z-o)": 16173,
        "n_ZerosOnes": 16174,
        "N_ZerosOnes": 16175,
        "len_s": 16176,
        "n,c0": 16177,
        "c0-c1": 16178,
        "s.erase(s.begin()": 16179,
        "s.empty()": 16180,
        "C(sum[i]": 16181,
        "N=1005": 16182,
        "c,s=array": 16183,
        "DP=array": 16184,
        "X=1000000007": 16185,
        "DP[i][0]": 16186,
        "DP[i][1]": 16187,
        "DP[i][j]": 16188,
        "(DP[i-1][j]": 16189,
        "DP[i-1][j-1])": 16190,
        "dp[1]=1": 16191,
        "sum=c[1]": 16192,
        "(DP[sum-1][c[i]-1]*dp[i-1])": 16193,
        "a[num][c])": 16194,
        "c[0][0]": 16195,
        "(C[i": 16196,
        "C[i": 16197,
        "C[s[i]": 16198,
        "1][c[i]": 16199,
        "data=array": 16200,
        "power_mod": 16201,
        "a,b,mod": 16202,
        "i=a-b+1": 16203,
        "ans=(ans": 16204,
        "1000000007)*(i": 16205,
        "sum=1": 16206,
        "sum=(sum": 16207,
        "c=power_mod(sum,": 16208,
        "1000000007-2,": 16209,
        "1000000007)*(c": 16210,
        "i=N": 16211,
        "t=C(sum-1,": 16212,
        "data[i]-1)": 16213,
        "1000000007)*(t": 16214,
        "dp[sum": 16215,
        "1][h[i]": 16216,
        "a[maxN],": 16217,
        "c[maxN]": 16218,
        "[maxN],": 16219,
        "(c[i": 16220,
        "c[sum": 16221,
        "1][a[i]": 16222,
        "tol": 16223,
        "cal[1][1]": 16224,
        "cal[i][j]": 16225,
        "cal[i-1][j-1]": 16226,
        "cal[i-1][j]": 16227,
        "cal[tol][c[i]])": 16228,
        "power(N,": 16229,
        "(((fact[N]": 16230,
        "inverse(fact[N": 16231,
        "R]))": 16232,
        "MOD)": 16233,
        "inverse(fact[R]))": 16234,
        "fact[0]": 16235,
        "fact[i]": 16236,
        "(fact[i": 16237,
        "prev_sum": 16238,
        "nCr(C[i]": 16239,
        "nCr[0][0]": 16240,
        "nCr[i][0]": 16241,
        "(nCr[i": 16242,
        "nCr[i": 16243,
        "nCr[i][j]": 16244,
        "nCr[sum": 16245,
        "inv[1]": 16246,
        "inv[i]": 16247,
        "inv[MOD": 16248,
        "(MOD": 16249,
        "dp[s[n]][n]": 16250,
        "inv[j]": 16251,
        "((ans": 16252,
        "(c[sum": 16253,
        "mod))": 16254,
        "C[0][0]": 16255,
        "ncr=array": 16256,
        "k,tot=int": 16257,
        "ct=array": 16258,
        "args)": 16259,
        "ncr[i][0]=1": 16260,
        "ncr[i][1]=i": 16261,
        "ncr[i][j]=((ncr[i-1][j])": 16262,
        "mod+(ncr[i-1][j-1])": 16263,
        "dp[x]": 16264,
        "dp[x]=1": 16265,
        "n=ct[c]": 16266,
        "r=ct[x]-ct[x-1]": 16267,
        "ans=(ncr[n-1][r-1]*(calc(x-1))": 16268,
        "ct[i]": 16269,
        "ct[i-1]": 16270,
        "calc(k)": 16271,
        "f[0][0]": 16272,
        "(f[i": 16273,
        "f[sum": 16274,
        "reducing": 16275,
        "b[q][r])": 16276,
        "1000100,": 16277,
        "1008": 16278,
        "(dp[i][j": 16279,
        "dp[x][a[i]": 16280,
        "ncr": 16281,
        "ncr[i][0]": 16282,
        "ncr[i][1]": 16283,
        "ncr[i][j]": 16284,
        "((ncr[i": 16285,
        "(ncr[i": 16286,
        "ct[x]": 16287,
        "ct[x": 16288,
        "(ncr[n": 16289,
        "1][r": 16290,
        "(calc(x": 16291,
        "ct[i": 16292,
        "lastans": 16293,
        "elements;": 16294,
        "C(sum[i": 16295,
        "=mod": 16296,
        "fact,": 16297,
        "arary": 16298,
        "binPow": 16299,
        "(mul": 16300,
        "inv[0]": 16301,
        "inv[a]": 16302,
        "pascal": 16303,
        "pascal[i][j]": 16304,
        "((pascal[i": 16305,
        "(pascal[i": 16306,
        "MOD))": 16307,
        "(pascal[sum][arr[i]": 16308,
        "_n": 16309,
        "_n,": 16310,
        "1001x1001": 16311,
        "n,r": 16312,
        "dp[n][r]": 16313,
        "(mod)": 16314,
        "C(n": 16315,
        "(mod))": 16316,
        "k,i,j": 16317,
        "n1,n2": 16318,
        "cal[i": 16319,
        "call[i][j]": 16320,
        "posiciones": 16321,
        "cant": 16322,
        "cant[posiciones[i]": 16323,
        "posiciones[i": 16324,
        "cant,": 16325,
        "200000000008,": 16326,
        "fabs(a[i": 16327,
        "mp.begin()": 16328,
        "iter->first,": 16329,
        "iter->second": 16330,
        "v1[end": 16331,
        "v1[i+1]-v1[i]": 16332,
        "9223372036854775807": 16333,
        "arr=vector": 16334,
        "res=1000000000000": 16335,
        "mymap[arr[0]]": 16336,
        "mymap[arr[i]]": 16337,
        "abs(arr[i]-arr[i-1]))": 16338,
        "aux=0": 16339,
        "k=arr[i]": 16340,
        "a=k+res": 16341,
        "b=k-res": 16342,
        "mymap[k]*mymap[a]": 16343,
        "mymap[k]*mymap[b]": 16344,
        "aux/2": 16345,
        "vec[i+1]": 16346,
        "(v[i+1]": 16347,
        "20000000": 16348,
        "arr[n+1]": 16349,
        "mindis": 16350,
        "100000000000": 16351,
        "mindis,": 16352,
        "*min_element(diff.begin(),": 16353,
        "diff.end())": 16354,
        "diff.size()": 16355,
        "diff[i]": 16356,
        "a*(b/gcd(a,b))": 16357,
        "q=1000000007": 16358,
        "n,best=long": 16359,
        "200009": 16360,
        "ans=2000000007,": 16361,
        "a[n]=0": 16362,
        "a[n+1]=0": 16363,
        "k=abs(a[i]-a[i-1])": 16364,
        "k<ans": 16365,
        "ans=min(ans,k)": 16366,
        "1e5+7": 16367,
        "99999999999,": 16368,
        "a[200005]": 16369,
        "dist1": 16370,
        "1000000001;": 16371,
        "bye": 16372,
        "g[i-1]": 16373,
        "ara2": 16374,
        "ara2[i]": 16375,
        "ara[i": 16376,
        "ara2+1": 16377,
        "ara2+n": 16378,
        "result[1]": 16379,
        "result[i+1]-result[i]": 16380,
        "cha,": 16381,
        "2000000009": 16382,
        "2000000009,": 16383,
        "entire": 16384,
        "locale": 16385,
        "\"Russian\"": 16386,
        "array[i+1]": 16387,
        "pcount": 16388,
        "pcount,": 16389,
        "min_dist": 16390,
        "2e9+10,": 16391,
        "occurances": 16392,
        "min_dist,": 16393,
        "occurances,": 16394,
        "a[i-1])": 16395,
        "*min_element(ara2": 16396,
        "2000000005": 16397,
        "f[mn]": 16398,
        "f[mn],": 16399,
        "abs(a[i": 16400,
        "1e18,": 16401,
        "valoe": 16402,
        "(v[i": 16403,
        "a[200200],": 16404,
        "mp[a[i]": 16405,
        "mp[ans]": 16406,
        "cities[i]": 16407,
        "m[cities[i]": 16408,
        "cities[i": 16409,
        "m.begin()->first,": 16410,
        "m.begin()->second": 16411,
        "temp[1]": 16412,
        "temp[3]": 16413,
        "temp[5]": 16414,
        "abajo": 16415,
        "temp[i": 16416,
        "izq(c)": 16417,
        "abajo(c)": 16418,
        "last(color)": 16419,
        "next_permutation(color.begin(),": 16420,
        "color.end())": 16421,
        "rotatex": 16422,
        "rotatey": 16423,
        "rotatez": 16424,
        "find(matches.begin(),": 16425,
        "matches.end(),": 16426,
        "rotatez()": 16427,
        "rotatey()": 16428,
        "rotatex()": 16429,
        "!next_permutation(s.begin(),": 16430,
        "bst": 16431,
        "rl": 16432,
        "st[1]": 16433,
        "st[2]": 16434,
        "st[3]": 16435,
        "st[4]": 16436,
        "st[5]": 16437,
        "rl(temp)": 16438,
        "ru(temp)": 16439,
        "next_permutation": 16440,
        "rotate1": 16441,
        "&t": 16442,
        "rotate2": 16443,
        "t[4]": 16444,
        "t[5]": 16445,
        "rotate3": 16446,
        "norm": 16447,
        "rotate1(s)": 16448,
        "normalized": 16449,
        "rot": 16450,
        "rotate(s.begin()": 16451,
        "s[2],": 16452,
        "s[4],": 16453,
        "rot(s)": 16454,
        "tmp.size()": 16455,
        "tmp[j]": 16456,
        "(v.end(),": 16457,
        "tmp.end())": 16458,
        "next_permutation(s.begin(),": 16459,
        "mM": 16460,
        "fpwo": 16461,
        "(first": 16462,
        "modmul": 16463,
        "((first": 16464,
        "modadd": 16465,
        "s[1],": 16466,
        "s[3],": 16467,
        "s[5],": 16468,
        "[4]": 16469,
        "rotate3(s)": 16470,
        "norm(s)": 16471,
        "rearrange": 16472,
        "lexicographically": 16473,
        "rot1": 16474,
        "rot2": 16475,
        "normalize": 16476,
        "_n(2),": 16477,
        "k(0),": 16478,
        "=set": 16479,
        "normalize(s)": 16480,
        "permutation": 16481,
        "rot3": 16482,
        "all_rot": 16483,
        "minstring": 16484,
        "rot2(s)": 16485,
        "rot3(s)": 16486,
        "all_rot(s)": 16487,
        "tmp[2]": 16488,
        "x,res=int": 16489,
        "t=map": 16490,
        "s,r=string": 16491,
        "t[s]": 16492,
        "r=s[0]": 16493,
        "t[r]=true": 16494,
        "r=s[5]": 16495,
        "r=s[1]": 16496,
        "r=s[3]": 16497,
        "r=s[2]": 16498,
        "r=s[4]": 16499,
        "'Y',": 16500,
        "'V'": 16501,
        "tedad[s[i]]": 16502,
        "tedad[color[i]]": 16503,
        "close": 16504,
        "A[a[i]]": 16505,
        "B[b[i]]": 16506,
        "B[it->first]": 16507,
        "cnt[a[i].size()][a[i]]": 16508,
        "cnt[b[i]][b[i]]": 16509,
        "cnt[b[i].size()][b[i]]": 16510,
        "n-ans": 16511,
        "m1[s]": 16512,
        "m2[s]": 16513,
        "m1[\"M\"]": 16514,
        "m2[\"M\"]": 16515,
        "m1[\"S\"]": 16516,
        "m2[\"S\"]": 16517,
        "m1[\"L\"]": 16518,
        "m2[\"L\"]": 16519,
        "m1[\"XL\"]": 16520,
        "m2[\"XL\"]": 16521,
        "m1[\"XS\"]": 16522,
        "m2[\"XS\"]": 16523,
        "m1[\"XXL\"]": 16524,
        "m2[\"XXL\"]": 16525,
        "m1[\"XXS\"]": 16526,
        "m2[\"XXS\"]": 16527,
        "m2[\"XXXL\"]": 16528,
        "m1[\"XXXL\"]": 16529,
        "m1[\"XXXS\"]": 16530,
        "m2[\"XXXS\"]": 16531,
        "str[s]": 16532,
        "increment[s[i]]": 16533,
        "mpis[i]": 16534,
        "mp2s[i]": 16535,
        "mp2[s[i]]": 16536,
        "mp1[s[i]]": 16537,
        "mp1[s[i]],": 16538,
        "abs(ans)": 16539,
        "1110": 16540,
        "2e18": 16541,
        "magic": 16542,
        "d1[size": 16543,
        "s][s[size": 16544,
        "d2[size": 16545,
        "d2[i][j]": 16546,
        "d1[i][j]": 16547,
        "mtest": 16548,
        "TE": 16549,
        "trie,": 16550,
        "Map": 16551,
        "Map[s]": 16552,
        "mp[b],": 16553,
        "mp[b]": 16554,
        "m[b[i]]": 16555,
        "check[s]": 16556,
        "201x201": 16557,
        "2n": 16558,
        "a[i][strlen(a[i])]": 16559,
        "'/0'": 16560,
        "exl": 16561,
        "a[n+1]": 16562,
        "a[n+1][0]": 16563,
        "a[A[i]]": 16564,
        "b[B[i]]": 16565,
        "b[it->first]": 16566,
        "Hash[s]": 16567,
        "n,res=long": 16568,
        "Ca=0": 16569,
        "Cb=0": 16570,
        "Ca": 16571,
        "Cb": 16572,
        "f[1]=max(Ca,Cb)-min(Ca,Cb)": 16573,
        "S=\"S\"": 16574,
        "L=\"L\"": 16575,
        "S=\"X\"+S": 16576,
        "L=\"X\"+L": 16577,
        "max(Ca,Cb)-min(Ca,Cb)": 16578,
        "f[length": 16579,
        "S]": 16580,
        "res/2": 16581,
        "ca[t]": 16582,
        "cb[t]": 16583,
        "min(it->second,": 16584,
        "cb[it->first])": 16585,
        "mp1,": 16586,
        "ap1": 16587,
        "XS": 16588,
        "XXS": 16589,
        "XXXS": 16590,
        "XL": 16591,
        "XXL": 16592,
        "XXXL": 16593,
        "getDis": 16594,
        "flag_b": 16595,
        "sizeof(flag_a)": 16596,
        "sizeof(flag_b)": 16597,
        "Dis": 16598,
        "getDis(a[i],": 16599,
        "b[j])": 16600,
        "Dis[i][j]": 16601,
        "minid_a": 16602,
        "minid_b": 16603,
        "flag_a[i]": 16604,
        "flag_b[j]": 16605,
        "flag_a[minid_a]": 16606,
        "flag_b[minid_b]": 16607,
        "a[it]": 16608,
        "a[it][i]": 16609,
        "b[it][j]": 16610,
        "cnt[s[i]": 16611,
        "unique(s.begin(),": 16612,
        "end)": 16613,
        "int(unique(a,": 16614,
        "strlen(a))": 16615,
        "a[len]": 16616,
        "1E-7": 16617,
        "stt": 16618,
        "mp[s1[j]]": 16619,
        "stt,": 16620,
        "cosnt": 16621,
        "blank": 16622,
        "check.begin(),": 16623,
        "check.end(),": 16624,
        "after;": 16625,
        "SS": 16626,
        "cand": 16627,
        "s[i].size(),": 16628,
        "ss.begin()": 16629,
        "ss.end(),": 16630,
        "(*it)": 16631,
        "removed": 16632,
        "store[i]": 16633,
        "(store[i][j]": 16634,
        "cannot": 16635,
        "unique(beginning": 16636,
        "s.end()),": 16637,
        "s.end()": 16638,
        "aramic": 16639,
        "*(in.begin())": 16640,
        "in.begin()": 16641,
        "in.end()": 16642,
        "*ite": 16643,
        "*(ite": 16644,
        "az": 16645,
        "az,": 16646,
        "az[str.at(i)": 16647,
        "az[i]": 16648,
        "(char)(97": 16649,
        "mp[sub]": 16650,
        "mp1[vec[i]]": 16651,
        "den=1": 16652,
        "n-i": 16653,
        "i=5": 16654,
        "sortDes": 16655,
        "i,j,k,n=long": 16656,
        "t=set": 16657,
        "h=set": 16658,
        "s1=v[i]": 16659,
        "s2=\"\"": 16660,
        "v[i]=s2": 16661,
        "words[i]": 16662,
        "letters[i]": 16663,
        "letter[words[i][j]": 16664,
        "stuff": 16665,
        "alpha[s[j]": 16666,
        "sumthing": 16667,
        "alpha[j]": 16668,
        "A[26],": 16669,
        "A[S[j]": 16670,
        "(A[S[j]": 16671,
        "M[T]": 16672,
        "yo": 16673,
        "m[yo]": 16674,
        "raiz": 16675,
        "abs[0]": 16676,
        "abc[c[i]-'a']": 16677,
        "(26)": 16678,
        "(i+'a')": 16679,
        "raices": 16680,
        "no_encont": 16681,
        "raices[k]": 16682,
        "n_encont": 16683,
        "26th": 16684,
        "letter[s[j]": 16685,
        "letter[j]": 16686,
        "removeDuplicate": 16687,
        "char)": 16688,
        "str[index]=str[i],": 16689,
        "n,i,j,k,x,t,f=long": 16690,
        "s2=string": 16691,
        "p=sizeof(str)/sizeof(str[0])": 16692,
        "removeDuplicate(str,": 16693,
        "d=sizeof(str)/sizeof(str[0])": 16694,
        "s[i]=str": 16695,
        "s2=s[i]": 16696,
        "a[j]=i": 16697,
        "f=count(a,a+n,i)": 16698,
        "f(s)": 16699,
        ",return": 16700,
        "set<char>::iterator": 16701,
        "(abs(x": 16702,
        "val1": 16703,
        "val2": 16704,
        "min(val1,": 16705,
        "val2))": 16706,
        "y-x)": 16707,
        "y-1)": 16708,
        "y-n)": 16709,
        "cnt1=0,": 16710,
        "cnt2=0,": 16711,
        "x1=x,": 16712,
        "x2=x": 16713,
        "y-n)/d": 16714,
        "y-1)/d": 16715,
        "ceil((n": 16716,
        "doesn't": 16717,
        "-x)": 16718,
        "min(solve(x,": 16719,
        "solve(1LL,": 16720,
        "fractional": 16721,
        "e[i],": 16722,
        "res),": 16723,
        "min(sa": 16724,
        "=long": 16725,
        "putit": 16726,
        "('0'": 16727,
        "q1,": 16728,
        "qn": 16729,
        "logn": 16730,
        "diff1": 16731,
        "1e10,": 16732,
        "abs((x": 16733,
        "kc": 16734,
        "xu_ly": 16735,
        "sb1,": 16736,
        "sb2": 16737,
        "sb1": 16738,
        "ceil(abs(n": 16739,
        "ceil(abs(x": 16740,
        "min(ans1,": 16741,
        "ans2)": 16742,
        "max(ans1,": 16743,
        "value=": 16744,
        "dist(x,": 16745,
        "(dist(x,": 16746,
        "dist(1,": 16747,
        "dist(n,": 16748,
        "INF,": 16749,
        "a2[1000009],": 16750,
        "b2[1000009]": 16751,
        "lenb": 16752,
        "biaoji1": 16753,
        "biaoji2": 16754,
        "a2[0]": 16755,
        "b2[0]": 16756,
        "b2[k]": 16757,
        "m<k": 16758,
        "m>k": 16759,
        "a2[j]": 16760,
        "b2[j]": 16761,
        "j=m,": 16762,
        "\">\"": 16763,
        "\"=\"": 16764,
        "\"<\"": 16765,
        "casted(length": 16766,
        "insert(0,l,'0')": 16767,
        "s2[i],": 16768,
        "S1": 16769,
        "s!": 16770,
        "'\\0',": 16771,
        "c[increment": 16772,
        "d[increment": 16773,
        "lenc": 16774,
        "lend": 16775,
        "solve(x,y)": 16776,
        "l1=length": 16777,
        "l2=length": 16778,
        "c1,c2=int": 16779,
        "l=l1,": 16780,
        "ll=l2": 16781,
        "c1=i": 16782,
        "l1-1": 16783,
        "l1=1": 16784,
        "c1=0": 16785,
        "s1=\"0\"": 16786,
        "c2=i": 16787,
        "l2-1": 16788,
        "l2=1": 16789,
        "s2=\"0\"": 16790,
        "l1>l2": 16791,
        "l1<l2": 16792,
        "i+c1>=1": 16793,
        "i+c2>=ll": 16794,
        "s1[i+c1]>s2[i+c2]": 16795,
        "s1[i+c1]<s2[i+c2]": 16796,
        "a[numa]": 16797,
        "b[numb]": 16798,
        "\">\\n\"": 16799,
        "\"<\\n\"": 16800,
        "\"=\\n\"": 16801,
        "flagA": 16802,
        "flagB": 16803,
        "(except": 16804,
        "idx=long": 16805,
        "a=substring": 16806,
        "idx=0": 16807,
        "b=substring": 16808,
        "'>'": 16809,
        "'='": 16810,
        "a[N],": 16811,
        "a[numa++]": 16812,
        "b[numb++]": 16813,
        "s11": 16814,
        "s22": 16815,
        "s11[i]": 16816,
        "ind2": 16817,
        "s22[i]": 16818,
        "INF=10^18,": 16819,
        "MAX_N=1000000": 16820,
        "EPS=0.0000001": 16821,
        "s,b=string": 16822,
        "string(MAX_N-size": 16823,
        "i=MAX_N-1": 16824,
        "a[i]>b[i]": 16825,
        "exclusive,,": 16826,
        "lenb]": 16827,
        "exclusive,b[i]": 16828,
        "lena,": 16829,
        "a[i+1]-tmp": 16830,
        "s[j+1]": 16831,
        "hotels": 16832,
        "arr[n-2]": 16833,
        "arr[i+1]-d,": 16834,
        "arr[i-1]+d,": 16835,
        "hotels[0]": 16836,
        "hotels[i]": 16837,
        "(hotels[i]": 16838,
        "hotels[i": 16839,
        "n,d=long": 16840,
        "nums=vector": 16841,
        "nums[i]-d": 16842,
        "nums[i-1]+d": 16843,
        "cnt+2": 16844,
        "saida": 16845,
        "(vet[i": 16846,
        "vet[i])": 16847,
        "line[i": 16848,
        "(2*d)": 16849,
        "Inf": 16850,
        "(i=": 16851,
        "([i+1]th": 16852,
        "arr)": 16853,
        "abs(p": 16854,
        "([i": 16855,
        "1]th": 16856,
        "(abs((a[i": 16857,
        "(p1))": 16858,
        "abs((a[i": 16859,
        "(p2))": 16860,
        "a[i-1]+d": 16861,
        "seq[i": 16862,
        "n,t,k,d": 16863,
        "time1,": 16864,
        "time2": 16865,
        "time1": 16866,
        "oven1,": 16867,
        "oven2": 16868,
        "oven1": 16869,
        "ceiling": 16870,
        "((float)n": 16871,
        "(((n": 16872,
        "o>=": 16873,
        "t,k,": 16874,
        "doubles,": 16875,
        "fristOven": 16876,
        "o1": 16877,
        "o2": 16878,
        "secOventime": 16879,
        "maxV,": 16880,
        "LG,": 16881,
        "3e3": 16882,
        "LG": 16883,
        "max(o1,": 16884,
        "o2)": 16885,
        "reuse": 16886,
        "\"colors.in\"": 16887,
        "t01": 16888,
        "float(n)": 16889,
        "float(k)": 16890,
        "(int(t01)": 16891,
        "t02": 16892,
        "(((t1": 16893,
        "k1)": 16894,
        "ee": 16895,
        "printv": 16896,
        "tSinOven,": 16897,
        "tConOven,": 16898,
        "tConOven": 16899,
        "tSinOven": 16900,
        "(tt": 16901,
        "nown": 16902,
        "floating-point": 16903,
        "bakes,": 16904,
        "(oven1": 16905,
        "oven2)": 16906,
        "(time": 16907,
        "inf=1000000005": 16908,
        "M=100005": 16909,
        "n,t,k,d=int": 16910,
        "m1=n/k": 16911,
        "m2=0": 16912,
        "nown=0": 16913,
        "m2=d+(n/(2*k)": 16914,
        "(0": 16915,
        "(2*k)": 16916,
        "1))*t": 16917,
        "m1<=m2": 16918,
        "num_of_cakes,": 16919,
        "num_of_cakes": 16920,
        "d/t": 16921,
        "timer,": 16922,
        "group": 16923,
        "(group": 16924,
        "x=true": 16925,
        "x=false": 16926,
        "arr[i][j]=": 16927,
        "arr[i][j]='0'": 16928,
        "y=true": 16929,
        "y=false": 16930,
        "letters[i][j]": 16931,
        "diagonal_char": 16932,
        "letters[0][0]": 16933,
        "non_diagonal_char": 16934,
        "letters[0][1]": 16935,
        "A[i][i]": 16936,
        "A[0][0],": 16937,
        "A[i][n-i-1]": 16938,
        "U[i][i]": 16939,
        "U[i][n-i-1]": 16940,
        "U[i][j]": 16941,
        "A[0][1],": 16942,
        "A[0][0]": 16943,
        "solve(n)": 16944,
        "(x.size()": 16945,
        "y.size()": 16946,
        "*x.begin()": 16947,
        "*y.begin())": 16948,
        "diag,": 16949,
        "m[0][0],": 16950,
        "m[0][1]": 16951,
        "a[0][0],": 16952,
        "*y.begin()": 16953,
        "grid_size": 16954,
        "x_char": 16955,
        "grid[0]": 16956,
        "y_char": 16957,
        "y_char,": 16958,
        "grid[i]": 16959,
        "MAX=512": 16960,
        "MAX2=10": 16961,
        "BASE=1000000000": 16962,
        "S=array": 16963,
        "S[i][i]": 16964,
        "S[0][0]": 16965,
        "S[i][n-i-1]": 16966,
        "S[0][1]": 16967,
        "i+": 16968,
        "a[c[i][j]": 16969,
        "c[0][1]": 16970,
        "[301][301]": 16971,
        "g[i][y]": 16972,
        "g[u][e]": 16973,
        "acc),": 16974,
        "(acc)": 16975,
        "letterx,": 16976,
        "letterx1": 16977,
        "square[i][j]": 16978,
        "letterx": 16979,
        "square[0][0]": 16980,
        "square[0][1]": 16981,
        "arr[i][t]": 16982,
        "arr[0][0],": 16983,
        "arr[i][p1]": 16984,
        "arr[i][p2]": 16985,
        "a[MAX]": 16986,
        "601": 16987,
        "arreglo": 16988,
        "arreglo[i]": 16989,
        "issquare": 16990,
        "(trunc": 16991,
        "a,b,c,d,e=int": 16992,
        "S=set": 16993,
        "3333": 16994,
        "b[605],": 16995,
        "interator": 16996,
        "700": 16997,
        "aa[a]": 16998,
        "605": 16999,
        "n,x=int,": 17000,
        "k,max,ans=0": 17001,
        "a[x]=1": 17002,
        "x>max": 17003,
        "max=x": 17004,
        "k<=max": 17005,
        "1000002": 17006,
        "nextz": 17007,
        "slen,": 17008,
        "tlen": 17009,
        "getNext": 17010,
        "KMP_Index": 17011,
        "getNext()": 17012,
        "T[j]": 17013,
        "KMP_Count": 17014,
        "T[j],": 17015,
        "nextz[j]": 17016,
        "n,ans=int": 17017,
        "s=set": 17018,
        "ans=size": 17019,
        "scores": 17020,
        "scores.size()": 17021,
        "data=set": 17022,
        "input=int": 17023,
        "s.find(0)": 17024,
        "data.size()": 17025,
        "s[a]": 17026,
        "603": 17027,
        "made": 17028,
        "v[m]": 17029,
        "130": 17030,
        "change,": 17031,
        "carry": 17032,
        "cop": 17033,
        "cop=s": 17034,
        "sum=2": 17035,
        "cop[i]": 17036,
        "s[i].": 17037,
        "sii": 17038,
        "sii.empty())": 17039,
        "str2=str": 17040,
        "(a[count]": 17041,
        "ss[i],": 17042,
        "(read": 17043,
        "oldstr": 17044,
        "oldstr[i],": 17045,
        "temp=0,": 17046,
        "d[now]": 17047,
        "count=1": 17048,
        "jw": 17049,
        "jw)": 17050,
        "s[i]is": 17051,
        "orgStr": 17052,
        "revStr": 17053,
        "orgStr[i]": 17054,
        "=ch": 17055,
        "orgStr[i],": 17056,
        "initial[0]": 17057,
        "initial[i]": 17058,
        "bv,": 17059,
        "gv,": 17060,
        "bv": 17061,
        "gv": 17062,
        "bv[i]": 17063,
        "gv[i]": 17064,
        "gv[j]": 17065,
        "pairt[i]": 17066,
        "v2[0]": 17067,
        "v1[1]": 17068,
        "v2[1]": 17069,
        "func1": 17070,
        "1,'": 17071,
        "',i": 17072,
        "i,'": 17073,
        "',1": 17074,
        "n-1+m": 17075,
        "m+(n-1)": 17076,
        "n+m-1": 17077,
        "m+d-1": 17078,
        "\"1": 17079,
        "1\"": 17080,
        "dl": 17081,
        "10069": 17082,
        "bib()": 17083,
        "(int)10": 17084,
        "\\a": 17085,
        "(i=2": 17086,
        "m+n-1": 17087,
        "r=2": 17088,
        "integer=n,m": 17089,
        "1\\n\"": 17090,
        "boy,": 17091,
        "girl": 17092,
        "boy": 17093,
        "1\",": 17094,
        "bp": 17095,
        "boy[i]": 17096,
        "girl[j]": 17097,
        "bp[ans]": 17098,
        "gp[ans]": 17099,
        "gp[i]": 17100,
        "pwr": 17101,
        "(base*base)": 17102,
        "C[j-1]": 17103,
        "C[r]": 17104,
        "isPowerOfTwo": 17105,
        "pint": 17106,
        "\",i": 17107,
        "\",1": 17108,
        "h,w": 17109,
        "h-1": 17110,
        "acef,": 17111,
        "Checking": 17112,
        "Pic": 17113,
        "'f'": 17114,
        "Pic[i][j]": 17115,
        "A[1]": 17116,
        "Pic[i][j": 17117,
        "A[2]": 17118,
        "Pic[i": 17119,
        "A[3]": 17120,
        "Checking(arr,": 17121,
        "mp[s[i][j]]": 17122,
        "mp[s[i": 17123,
        "1][j]]": 17124,
        "mp[s[i][j": 17125,
        "mp[f],": 17126,
        "mp[a],": 17127,
        "mp[c]": 17128,
        "mp[e]": 17129,
        "isInn": 17130,
        "isFace": 17131,
        "'f',": 17132,
        "isInn(i,": 17133,
        "isInn(i": 17134,
        "isFace(a[i][j],": 17135,
        "1][j],": 17136,
        "tttt": 17137,
        "q[j": 17138,
        "s.end(": 17139,
        "acef": 17140,
        "fc,": 17141,
        "fe,": 17142,
        "fc": 17143,
        "fe": 17144,
        "cot,": 17145,
        "'c',": 17146,
        "'e',": 17147,
        "A[x][y]": 17148,
        "\"acef\"": 17149,
        "2333": 17150,
        "judge[s[i][j]]": 17151,
        "judge[s[i][j": 17152,
        "judge[s[i": 17153,
        "judge['f']": 17154,
        "judge['a']": 17155,
        "judge['c']": 17156,
        "judge['e']": 17157,
        "\"####\"": 17158,
        "board[i+1][j]": 17159,
        "board[i][j+1]": 17160,
        "board[i+1][j+1]": 17161,
        "\"acef\",": 17162,
        "grid[k][l]": 17163,
        "M[a]": 17164,
        "M[b]": 17165,
        "M[c]": 17166,
        "M[d]": 17167,
        "M['f]": 17168,
        "M['a]": 17169,
        "M['c']": 17170,
        "M['e']": 17171,
        "vec[i][j]": 17172,
        "vec[i][j],": 17173,
        "vec[i][j": 17174,
        "arr[i][j+1]": 17175,
        "arr[i+1][j]": 17176,
        "arr[i+1][j+1]": 17177,
        "m['f']": 17178,
        "m['a']": 17179,
        "m['c']": 17180,
        "m['e']": 17181,
        "m['x']": 17182,
        "reqd": 17183,
        "m[a[i][j]]": 17184,
        "m[a[i": 17185,
        "m[a[i][j": 17186,
        "i,j,": 17187,
        "dick": 17188,
        "dhurr": 17189,
        "hush,": 17190,
        "fuck": 17191,
        "inserts": 17192,
        "dhurr[i]": 17193,
        "dhurr[i][j]": 17194,
        "dhurr[i][j+1]": 17195,
        "dhurr[i+1][j]": 17196,
        "dhurr[i+1][j+1]": 17197,
        "hush": 17198,
        "[1000][1000]": 17199,
        "A[C[i][j]": 17200,
        "A[C[i": 17201,
        "A[C[i][j": 17202,
        "A[5]": 17203,
        "A[4]": 17204,
        "Pow": 17205,
        "vis[m[x": 17206,
        "i][y": 17207,
        "j]]": 17208,
        "vis[f]": 17209,
        "vis[c]": 17210,
        "vis[e]": 17211,
        "k][j": 17212,
        "s[i+1][j]": 17213,
        "s[i+1][j+1]": 17214,
        "cr[i][j]": 17215,
        "mp[cr[i][j]]": 17216,
        "mp[cr[i": 17217,
        "mp[cr[i][j": 17218,
        "mp['f']": 17219,
        "mp['a']": 17220,
        "mp['c']": 17221,
        "mp['e']": 17222,
        "m[f]": 17223,
        "m[c]": 17224,
        "m[e]": 17225,
        "m[s[p][j]],": 17226,
        "m[s[p": 17227,
        "1][j]],": 17228,
        "m[s[p][j": 17229,
        "1]],": 17230,
        "(cin,": 17231,
        "temp.begin()": 17232,
        "temp.end()": 17233,
        "mark[a[i][j]": 17234,
        "mark[a[i": 17235,
        "mark[a[i][j": 17236,
        "mark['f'": 17237,
        "mark['a'": 17238,
        "mark['c'": 17239,
        "mark['e'": 17240,
        "{'f',": 17241,
        "'e'}": 17242,
        "ar[p]": 17243,
        "t=n/5": 17244,
        "t+1": 17245,
        "5.0": 17246,
        "distanc": 17247,
        "(distance": 17248,
        "n3,": 17249,
        "n4": 17250,
        "Steps": 17251,
        "s[i+": 17252,
        "x<=5": 17253,
        "5=0": 17254,
        "Y=x/5": 17255,
        "x/5": 17256,
        "5.0)": 17257,
        "steps,": 17258,
        "minspet": 17259,
        "hm": 17260,
        "letter[27]": 17261,
        "CHAT": 17262,
        "WITH": 17263,
        "HER!": 17264,
        "IGNORE": 17265,
        "HIM!": 17266,
        "\"CHAT": 17267,
        "HER!\"": 17268,
        "\"IGNORE": 17269,
        "HIM!\"": 17270,
        "ctr=1": 17271,
        "HIM": 17272,
        "HER": 17273,
        "Is_here": 17274,
        "Is_here(input[i],": 17275,
        "HER!\\n\"": 17276,
        "HIM!\\n\"": 17277,
        "unique(s.begin()": 17278,
        "1+1": 17279,
        "charArray": 17280,
        "charArray[(S[i])": 17281,
        "inta": 17282,
        "rray": 17283,
        "username": 17284,
        "alph[(int)username[i]": 17285,
        "Remove": 17286,
        "adjacent": 17287,
        "past": 17288,
        "Otherwiase": 17289,
        "a[x[i]": 17290,
        "(remove": 17291,
        "user_num": 17292,
        "arr[cont]": 17293,
        "integer,set": 17294,
        "uniqueCharacters": 17295,
        "used.end(": 17296,
        "a=i+1": 17297,
        "name[a]": 17298,
        "arr[i+1],": 17299,
        "n[i-1]": 17300,
        "count+1": 17301,
        "srt": 17302,
        "srt[i]": 17303,
        "srt[i": 17304,
        "already(character": 17305,
        "vis[cnt]": 17306,
        "already": 17307,
        "a.find": 17308,
        "a.erase": 17309,
        "HER\"": 17310,
        "HIM\"": 17311,
        "freq[str[i]-'a']": 17312,
        "cnt[name[i]": 17313,
        "salir": 17314,
        "salir:": 17315,
        "swap(x,": 17316,
        "(-x)": 17317,
        "a,b,m": 17318,
        "(-a)": 17319,
        "k*b": 17320,
        "cnt*y": 17321,
        "Get()": 17322,
        "Flag": 17323,
        ">=0": 17324,
        "Output(integer": 17325,
        "X)": 17326,
        "Len": 17327,
        "0,Data[10]": 17328,
        "Data[Len++]": 17329,
        "!Len": 17330,
        "X,Y,M": 17331,
        "swap(X,": 17332,
        "-Y": 17333,
        "(diff)": 17334,
        "tha": 17335,
        "-x*": 17336,
        "fabs(y)": 17337,
        "fabs(x)": 17338,
        "x,y,m=long": 17339,
        "int,count=0": 17340,
        "x,y,m": 17341,
        "swap(x,y)": 17342,
        "y<0": 17343,
        "x<m": 17344,
        "(x-y)/x": 17345,
        "((x-y)/x)*x": 17346,
        "y<m": 17347,
        "62)": 17348,
        "4e18": 17349,
        "res[j]": 17350,
        "lower_bound(res,res": 17351,
        "j,m)": 17352,
        "fib": 17353,
        "(abs(x)": 17354,
        "fib[0]": 17355,
        "fib[1]": 17356,
        "fib[i]": 17357,
        "fib[i": 17358,
        "divied": 17359,
        "temp_a": 17360,
        "temp_ab": 17361,
        "temp_b": 17362,
        "(-x": 17363,
        "-min": 17364,
        ">y,": 17365,
        "x/": 17366,
        "s[b]": 17367,
        "s[b][0],": 17368,
        "s[b][c": 17369,
        "str.length": 17370,
        "str[str.length()": 17371,
        "p[i]=s": 17372,
        "s=p[i]": 17373,
        "s-2,": 17374,
        "s-1]": 17375,
        "k[h": 17376,
        "s[p": 17377,
        "(s.size()": 17378,
        "q/w": 17379,
        "q/w+1": 17380,
        "Null": 17381,
        "(word.length()": 17382,
        "word[0],": 17383,
        "word[word.length()": 17384,
        "chr": 17385,
        "chr[0],": 17386,
        "chr[size": 17387,
        "(str[increment": 17388,
        "str[decrement": 17389,
        "h]),": 17390,
        "(prime[p]),": 17391,
        "str[0],n": 17392,
        "2,str[n": 17393,
        "(s.length()": 17394,
        "s[l-1]": 17395,
        "a[a.size()": 17396,
        "r.size()": 17397,
        "r[r.size()": 17398,
        "word,": 17399,
        "s[i][s[i].size()": 17400,
        "(name[i].size()": 17401,
        "name[i].size()": 17402,
        "name[i][0],": 17403,
        "name[i][name[i].size()": 17404,
        "mt,": 17405,
        "s[0],s.length()": 17406,
        "2,s[s.length()": 17407,
        "a[j][0],": 17408,
        "a[j][a[j].length()": 17409,
        "NumOfWords": 17410,
        "intToString": 17411,
        "intToString(a[i].size()": 17412,
        "a[i][a[i].size()": 17413,
        "str[b": 17414,
        "(status": 17415,
        "state": 17416,
        "64_t": 17417,
        "maxer": 17418,
        "biaozhi": 17419,
        "H-1": 17420,
        "G+1": 17421,
        "n-G": 17422,
        "arr[l]": 17423,
        "arr[l+1]": 17424,
        "arr[r]": 17425,
        "arr[r-1]": 17426,
        "500010": 17427,
        "-0x7f7f7f7f": 17428,
        "a[p": 17429,
        "ara[i-1]": 17430,
        "m[i+1]": 17431,
        "cls": 17432,
        "ml,": 17433,
        "phase": 17434,
        "a[p-1]": 17435,
        "a[p-1],": 17436,
        "dat": 17437,
        "(!i": 17438,
        "dat[i]": 17439,
        "dat[i": 17440,
        "ok1": 17441,
        "differento": 17442,
        "cast": 17443,
        "error,": 17444,
        "int(0)": 17445,
        "r4,": 17446,
        "r7,": 17447,
        "l4,": 17448,
        "l7": 17449,
        "r4": 17450,
        "r7": 17451,
        "l4": 17452,
        "int(n": 17453,
        "s/2": 17454,
        "s[i]=4": 17455,
        "=7": 17456,
        "-48": 17457,
        "=cont2": 17458,
        "atoi(s2.c_str())": 17459,
        "sym": 17460,
        "suml": 17461,
        "sum0": 17462,
        "48=4": 17463,
        "s)/2": 17464,
        "only_7_4": 17465,
        "correct": 17466,
        "counter_left": 17467,
        "counter_right": 17468,
        "(s[j]-'0')": 17469,
        "freopen(\"colors.in\",": 17470,
        "acos(0.0)": 17471,
        "imp": 17472,
        "\"01235689\"": 17473,
        "a.find(imp.at(i))": 17474,
        "hs": 17475,
        "i3,": 17476,
        "n,h1,h2=int,": 17477,
        "sum0,sum1=0": 17478,
        "n,str": 17479,
        "h1=n/2": 17480,
        "sum0=str[i]-'0'+sum0": 17481,
        "i=h1": 17482,
        "sum1=str[i]-'0'+sum1": 17483,
        "right=0": 17484,
        "A[S[i]": 17485,
        "(S[i]": 17486,
        "(A[4]": 17487,
        "A[7]": 17488,
        "N)": 17489,
        "int)s[q]": 17490,
        "u1,": 17491,
        "u2,": 17492,
        "u1": 17493,
        "u2": 17494,
        "(d1": 17495,
        "(d2": 17496,
        "a,b,u1,v1,u2,v2=int,": 17497,
        "rta=0": 17498,
        "u1,v1": 17499,
        "u2,v2": 17500,
        "rta=a": 17501,
        "rta=max(0,": 17502,
        "rta-ul)": 17503,
        "rta-u2)": 17504,
        "i=h": 17505,
        "i=d1,": 17506,
        "w-=v1": 17507,
        "i=d2,": 17508,
        "w-=v2": 17509,
        "w<0,": 17510,
        "w2,": 17511,
        "ans=w": 17512,
        "w,h=int": 17513,
        "u1,d1=int": 17514,
        "u2,d2=int": 17515,
        "w,h,u1,d1.u2,d2": 17516,
        "w=max(0": 17517,
        "w-u1)": 17518,
        "w=max(0,w-u2)": 17519,
        "h>0": 17520,
        "w+h": 17521,
        "h=d1,": 17522,
        "w-w1": 17523,
        "h=d2,": 17524,
        "h,w,u1,d1,u2,d2=int": 17525,
        "w,h": 17526,
        "u1,d1": 17527,
        "u2,d2": 17528,
        "w=max(w-u1,": 17529,
        "w=max(w-u2,": 17530,
        "b=d,": 17531,
        "a-c": 17532,
        "a-e": 17533,
        "a<=0,": 17534,
        "w+i": 17535,
        "i=d1": 17536,
        "i=d2": 17537,
        "w-u2": 17538,
        "w<=0": 17539,
        "w,h,w1,h1,w2,h2=int": 17540,
        "w,h,w1,h1,w2,h2": 17541,
        "u_1,": 17542,
        "d_1,": 17543,
        "u_2,": 17544,
        "d_2": 17545,
        "d_1": 17546,
        "u_1": 17547,
        "u_2": 17548,
        "score,": 17549,
        "rta,": 17550,
        "rta-u1": 17551,
        "rta-u2": 17552,
        "w,h,w2,h1,w2,h2=int": 17553,
        "w<0": 17554,
        "weight": 17555,
        "weight,": 17556,
        "sw1,": 17557,
        "sh1,": 17558,
        "sw2,": 17559,
        "sh2": 17560,
        "sh1": 17561,
        "sw1": 17562,
        "sw2": 17563,
        "Blue,": 17564,
        "Green,": 17565,
        "Red": 17566,
        "Blue": 17567,
        "Green": 17568,
        "Blue+Red+Green": 17569,
        "decremeny": 17570,
        "t,z,x": 17571,
        "z=a[1]+a[2]+a[3]": 17572,
        "a[i]=0": 17573,
        "ans+29": 17574,
        "color[i": 17575,
        "color[i%3]": 17576,
        "look": 17577,
        "time,": 17578,
        "((r+1)/2)-3": 17579,
        "((b+1)/2)-2": 17580,
        "((g+1)/2)-1": 17581,
        "endapp": 17582,
        "!a": 17583,
        "!c": 17584,
        "rs,": 17585,
        "(r+1)/2": 17586,
        "(c+1)": 17587,
        "m=map": 17588,
        "v1,v2,v3=long": 17589,
        "flg,": 17590,
        "v1,v2,v3": 17591,
        "m['r']=v1": 17592,
        "m['g']=v2": 17593,
        "m['b']=v3": 17594,
        "m['r']<1": 17595,
        "m['g']<1": 17596,
        "m['b']<1": 17597,
        "m[d[i": 17598,
        "((g": 17599,
        "bb)": 17600,
        "i,j,k": 17601,
        "i+30": 17602,
        "timeOfEnding": 17603,
        "ch[i][0]": 17604,
        "ch[i][1]": 17605,
        "ch[i][2]": 17606,
        "xsum,": 17607,
        "ysum,": 17608,
        "zsum": 17609,
        "xsum": 17610,
        "ysum": 17611,
        "sumx,": 17612,
        "sumy,": 17613,
        ",sumz": 17614,
        "sumz": 17615,
        "(sumx": 17616,
        "x1,x2": 17617,
        "x1=x1+x": 17618,
        "x2+y": 17619,
        "x3+z": 17620,
        "x3=0": 17621,
        "s3=": 17622,
        "s3+c": 17623,
        "xsum(0),": 17624,
        "ysum(0),": 17625,
        "zsum(0)": 17626,
        "z=0,": 17627,
        "x0,": 17628,
        "z0": 17629,
        "(sum2": 17630,
        ",sum2": 17631,
        "a[n][3]": 17632,
        "arr[i][2]": 17633,
        "s1=0,s2=0": 17634,
        "s3=0": 17635,
        "t1,t2": 17636,
        "0and": 17637,
        "xcost,": 17638,
        "ycost,": 17639,
        "zcost": 17640,
        "xcost": 17641,
        "ycost": 17642,
        "c+": 17643,
        "sum[1]": 17644,
        "sum[2]": 17645,
        "sum[0],": 17646,
        "selection_insert": 17647,
        "a[imin],": 17648,
        "a[imin]": 17649,
        "xay": 17650,
        "b[i][1]": 17651,
        "b[i][2]": 17652,
        "\"5\"": 17653,
        "f=": 17654,
        "i+2),": 17655,
        "i+2)": 17656,
        "f[i+1]": 17657,
        "61,": 17658,
        "85,": 17659,
        "113}": 17660,
        "15}": 17661,
        "pos[p]": 17662,
        "xinc": 17663,
        "yinc": 17664,
        "3.141592653589793": 17665,
        "1e14": 17666,
        "first1": 17667,
        "second1": 17668,
        "\"5\\n\"": 17669,
        "start[j]": 17670,
        "start[n]": 17671,
        "n/4": 17672,
        "b2,": 17673,
        "b3,": 17674,
        "(a1": 17675,
        "(a[3]": 17676,
        "cups,": 17677,
        "medals,": 17678,
        "cups": 17679,
        "medals": 17680,
        "5.00)": 17681,
        "10.00)": 17682,
        "sumB,": 17683,
        "vA": 17684,
        "vB": 17685,
        "a3)": 17686,
        "b3)": 17687,
        "cup": 17688,
        "medal": 17689,
        "shelves=0": 17690,
        "+b3": 17691,
        "shelves=": 17692,
        "shelves": 17693,
        "sum1/5": 17694,
        "total_shelf_cup": 17695,
        "total_shelf_medal": 17696,
        "prize": 17697,
        "ceil(medals": 17698,
        "ceil(cups": 17699,
        "med": 17700,
        "n,a,b,i=int,": 17701,
        "shela,shelb": 17702,
        "shela": 17703,
        "shelb": 17704,
        "ceil(shela/5)": 17705,
        "ceil(shelb/10)": 17706,
        "b=shela+shelb": 17707,
        "sumC,": 17708,
        "sumM,": 17709,
        "sumC": 17710,
        "sumM": 17711,
        "cup1,": 17712,
        "cup2,": 17713,
        "cup3,": 17714,
        "med1,": 17715,
        "med2,": 17716,
        "med3,": 17717,
        "selves,": 17718,
        "selves": 17719,
        "of((cup1": 17720,
        "cup2": 17721,
        "cup3)": 17722,
        "((med1": 17723,
        "med2": 17724,
        "med3)": 17725,
        "selves)": 17726,
        "((ceiling": 17727,
        "(1.0": 17728,
        "numCap,": 17729,
        "numMedal": 17730,
        "numCap": 17731,
        "10.0,": 17732,
        "a+b+c": 17733,
        "sa/5": 17734,
        "sb/10": 17735,
        "total_cup": 17736,
        "a1+a2+a3": 17737,
        "total_med": 17738,
        "b1+b2+b3": 17739,
        "(double)a1": 17740,
        "(double)a2": 17741,
        "(double)a3": 17742,
        "(double)b1": 17743,
        "(double)b2": 17744,
        "(double)b3": 17745,
        "ceil(cup": 17746,
        "(double)5.00)": 17747,
        "ceil(med": 17748,
        "(double)10.00)": 17749,
        "min(min(2": 17750,
        "min(min(3": 17751,
        "LONG_LONG_MAX": 17752,
        "data1,": 17753,
        "data2,": 17754,
        "data3": 17755,
        "x=4": 17756,
        "data1": 17757,
        "data1>": 17758,
        "3*c,": 17759,
        "data1=3*c": 17760,
        "2*c": 17761,
        "data2=2*c": 17762,
        "data2": 17763,
        "data2>": 17764,
        "2*a,": 17765,
        "data2=2*a": 17766,
        "c+3*a,": 17767,
        "c+3*a": 17768,
        "x=3": 17769,
        "c<a+b": 17770,
        "data3=c": 17771,
        "data3=a+b": 17772,
        "data3>3*a,": 17773,
        "3*a": 17774,
        "3e10": 17775,
        "n,a,b,c=long": 17776,
        "x=n": 17777,
        "m=min(3*a,": 17778,
        "m=min(a+b,": 17779,
        "m=min(2*a,": 17780,
        "m=min(2*c,": 17781,
        "m=min(3*c,": 17782,
        "m=min(b+c,": 17783,
        "mn[0]": 17784,
        "mn[1]": 17785,
        "mn[2]": 17786,
        "(nd": 17787,
        "mn[nd": 17788,
        "(4-temp)": 17789,
        "3*c": 17790,
        "2*a": 17791,
        "references": 17792,
        "int_gcd": 17793,
        "a<=": 17794,
        "+c": 17795,
        "tf": 17796,
        "c*3)": 17797,
        "(a*2,": 17798,
        "c*2)": 17799,
        "(3*a,": 17800,
        "cost,": 17801,
        "=bool": 17802,
        "cost=0": 17803,
        "min_cost=": 17804,
        "min_cost": 17805,
        "c[f])": 17806,
        "c[l])": 17807,
        "[0],": 17808,
        "[1]": 17809,
        "a[arr[i]]": 17810,
        "a[arr[j]]": 17811,
        "p[n-i-1]": 17812,
        "p[n/2]": 17813,
        "deflt": 17814,
        "arr[left]": 17815,
        "arr[right]": 17816,
        "c[n+1-i]": 17817,
        "c[n": 17818,
        "i,n,a,b": 17819,
        "arr[n],": 17820,
        "arr[n-1-i]": 17821,
        "mitad,": 17822,
        "mitad": 17823,
        "v[n-i-1]": 17824,
        "(arr[j]": 17825,
        "blanco": 17826,
        "negro": 17827,
        "array[j]": 17828,
        "negro,": 17829,
        "array[j],": 17830,
        "ara1": 17831,
        "ara2[j]": 17832,
        "ara1[i]": 17833,
        "K[N-i+1]": 17834,
        "K[N": 17835,
        "1020": 17836,
        "flas": 17837,
        "j--,": 17838,
        "i++": 17839,
        "((s[i]": 17840,
        "is'-',": 17841,
        "100050": 17842,
        "a[r],": 17843,
        "v[n-1-i]": 17844,
        "v[n/2]": 17845,
        "switch": 17846,
        "failbit": 17847,
        "throw": 17848,
        "exception": 17849,
        "abs(i-2)+abs(j-2)": 17850,
        "(abs(3": 17851,
        "abs(3": 17852,
        "j))": 17853,
        "tempr": 17854,
        "tempc": 17855,
        "ch.first": 17856,
        "ch.first)": 17857,
        "(ch.first": 17858,
        "ch.second": 17859,
        "ch.second)": 17860,
        "(ch.second": 17861,
        "n,count,i,x,y,j,ans=long": 17862,
        "x=i+1": 17863,
        "y=j+1": 17864,
        "ans=abs(3-x)+abs(3-y)": 17865,
        "abs(2": 17866,
        "X[i][j]": 17867,
        "a[5][5]": 17868,
        "j==": 17869,
        "2-i": 17870,
        "2-j": 17871,
        "moves=0": 17872,
        "moves=abs(j-2)+abs(i-2)": 17873,
        "numberOfMove,": 17874,
        "numberOfMove": 17875,
        "abs(3-i)+abs(3-j)": 17876,
        "diff1,": 17877,
        "array[i][j]": 17878,
        "mabs": 17879,
        "mabs(a": 17880,
        "mabs(b": 17881,
        "abs(i-3)+abs(j-3)": 17882,
        "sideMoves": 17883,
        "verticalMoves": 17884,
        "totalMoves": 17885,
        "-verticalMoves": 17886,
        "-sideMoves": 17887,
        "matrex": 17888,
        "(3-i1)": 17889,
        "(3-j1)": 17890,
        "indx1,": 17891,
        "indx2,": 17892,
        "indx1": 17893,
        "indx2": 17894,
        "digits[next]": 17895,
        "ios::fixed": 17896,
        "ios::showpoint": 17897,
        "kg": 17898,
        "num[a[i]": 17899,
        "strlen(xx)": 17900,
        "dp[m%10]": 17901,
        "dp[j],": 17902,
        "ai,": 17903,
        "ada[i]": 17904,
        "ada[x": 17905,
        "valid(ai)": 17906,
        "fr[a": 17907,
        "fr[k]": 17908,
        "g[x": 17909,
        "count_dig": 17910,
        "count_num": 17911,
        "0123456789": 17912,
        "\"0123456789\"": 17913,
        "s2[x]": 17914,
        "nmk": 17915,
        "valid=true": 17916,
        "arr[str[i]-'0']=true": 17917,
        "valid=false": 17918,
        "s=\"0123456789\"": 17919,
        "SumOfK": 17920,
        "resetArr": 17921,
        "Arr[a": 17922,
        "funciton": 17923,
        "erase(unique(x.begin(),": 17924,
        "x.end()),": 17925,
        "x.end())": 17926,
        "istrue(x,": 17927,
        "vis[10]": 17928,
        "arr[number": 17929,
        "a[s[j]": 17930,
        "0]": 17931,
        "counter=0": 17932,
        "fit(arr[i],k)": 17933,
        "arr[x%10]": 17934,
        "k+1,": 17935,
        "can=true": 17936,
        "v[s[j]-'0']=1": 17937,
        "can=false": 17938,
        "numFour": 17939,
        "\"4\"": 17940,
        "\"7\"": 17941,
        "fourcount": 17942,
        "sevenCount": 17943,
        "fourcount,": 17944,
        "sevenCount,": 17945,
        "dp[4]": 17946,
        "dp[7]": 17947,
        "4]": 17948,
        "7]": 17949,
        "fors": 17950,
        "fors),": 17951,
        "n4,": 17952,
        "n7": 17953,
        "(n4": 17954,
        "4))": 17955,
        "(n-i)": 17956,
        "min_xy": 17957,
        "million": 17958,
        "four_sum": 17959,
        "seven_sum": 17960,
        "N4,": 17961,
        "N7": 17962,
        "N4": 17963,
        "sete,": 17964,
        "quatro": 17965,
        "sete": 17966,
        "tmo": 17967,
        "ans(\"\")": 17968,
        "Cmp(\"\")": 17969,
        "Cmp": 17970,
        "!tmp": 17971,
        "!tmo": 17972,
        "Cmb": 17973,
        "\"7\",": 17974,
        "-7": 17975,
        "empat": 17976,
        "tujuh": 17977,
        "sisa": 17978,
        "seven": 17979,
        "cursum": 17980,
        "successfully": 17981,
        "-1000000000000": 17982,
        "-1000000000": 17983,
        "joy)": 17984,
        "-999999999": 17985,
        "n,k,a,b,mx,kt=long": 17986,
        "mx=a-(b-k)": 17987,
        "b>k": 17988,
        "kt=a-(b-k)": 17989,
        "kt>mx": 17990,
        "mx=kt": 17991,
        "-2147483648": 17992,
        "-9999999999": 17993,
        "prob": 17994,
        "m[i][0]": 17995,
        "(m[i][1]": 17996,
        "prob,": 17997,
        "max_joy": 17998,
        "max_joy,": 17999,
        "LONG_LONG_MIN": 18000,
        "duck": 18001,
        "max(maxx,": 18002,
        "duck[i])": 18003,
        "k,f,t,joy,temp=long": 18004,
        "f,t": 18005,
        "t>k": 18006,
        "joy=f-(t-k)": 18007,
        "joy=f": 18008,
        "temp=f-(t-k)": 18009,
        "temp=f": 18010,
        "temp>joy": 18011,
        "joy=temp": 18012,
        "large,": 18013,
        "f-d": 18014,
        "maxJ,": 18015,
        "maxJ": 18016,
        "joy,": 18017,
        "t[n]": 18018,
        "(t[i]": 18019,
        "Arr[100000][2]": 18020,
        "-100000000": 18021,
        "Arr[i][j]": 18022,
        "Arr[0][0]": 18023,
        "Arr[0][1]": 18024,
        "Arr[i][1]": 18025,
        "Arr[i][0]": 18026,
        "numberOfRestaurants,": 18027,
        "lunchBreakTime,": 18028,
        "maxJoy": 18029,
        "lunchBreakTime": 18030,
        "restaurantsJoys": 18031,
        "restaurantsLunchTimes": 18032,
        "numberOfRestaurants": 18033,
        "restaurantsJoys[0],": 18034,
        "restaurantsLunchTimes[0]": 18035,
        "restaurantsJoys[0]": 18036,
        "(restaurantsLunchTimes[0]": 18037,
        "lunchBreakTime)": 18038,
        "restaurantsJoys[i],": 18039,
        "restaurantsLunchTimes[i]": 18040,
        "currentJoy": 18041,
        "restaurantsJoys[i]": 18042,
        "(restaurantsLunchTimes[i]": 18043,
        "maxJoy,": 18044,
        "n,k,f,t,m,j=int": 18045,
        "n,k,f,t": 18046,
        "m=f-(t-k)": 18047,
        "m=f": 18048,
        "j=f-(t-k)": 18049,
        "j=f": 18050,
        "j>m": 18051,
        "m=j": 18052,
        "j[i]": 18053,
        "j[0]": 18054,
        "j[n]": 18055,
        "j[n": 18056,
        "fs": 18057,
        "fs[i],": 18058,
        "ts[i]": 18059,
        "fs[i]": 18060,
        "(ti": 18061,
        "-1e18,": 18062,
        "((0": 18063,
        "(bo),": 18064,
        "xr": 18065,
        "(xr": 18066,
        "((xr": 18067,
        "b.count()": 18068,
        "assert(0)": 18069,
        "xorr,": 18070,
        "andd": 18071,
        "xorr": 18072,
        "bit1": 18073,
        "bit2": 18074,
        "func(xorr,": 18075,
        "andd))": 18076,
        "andd)": 18077,
        "putchar('": 18078,
        "print(k": 18079,
        "println": 18080,
        "print(k)": 18081,
        "printsp": 18082,
        "print(ans)": 18083,
        "modularExponentiation": 18084,
        "charactrer": 18085,
        "println(0)": 18086,
        "dp0,": 18087,
        "dp1,": 18088,
        "dp0": 18089,
        "x),": 18090,
        "dp0)": 18091,
        "ans,dp1=0,": 18092,
        "dp0=1,": 18093,
        "x,s,a,b=int": 18094,
        "s,x": 18095,
        "x>s": 18096,
        "dp0=dp0": 18097,
        "dp1=dp0": 18098,
        "dp0=2*dp0": 18099,
        "dp1=0": 18100,
        "dp0=dp1": 18101,
        "dp1=dp1": 18102,
        "dp0=0": 18103,
        "dp1=2*dp1": 18104,
        "ans+dp0": 18105,
        "printspwith": 18106,
        "println(ans)": 18107,
        "nonzero,": 18108,
        "41": 18109,
        "dfs((s": 18110,
        "dfs(s": 18111,
        "dfs(ss,": 18112,
        "(ret": 18113,
        "ways": 18114,
        "setbit": 18115,
        "pow(2": 18116,
        "1LL)": 18117,
        "setbit),": 18118,
        "r),": 18119,
        "z[i]]),": 18120,
        "place))": 18121,
        "((aa": 18122,
        "incremnet": 18123,
        "bitewise": 18124,
        "place))))": 18125,
        "wline": 18126,
        "x_p": 18127,
        "x_n": 18128,
        "y_p": 18129,
        "y_n": 18130,
        "arr[a][2]": 18131,
        "fot": 18132,
        "(count1": 18133,
        "lcnt,": 18134,
        "rcnt": 18135,
        "lcnt": 18136,
        "immediately": 18137,
        "cntx": 18138,
        "cnty": 18139,
        "esq": 18140,
        "getint()": 18141,
        "kir,": 18142,
        "kan": 18143,
        "kir": 18144,
        "(kir": 18145,
        "x_1": 18146,
        "inutil": 18147,
        "contador": 18148,
        "b[i+1],": 18149,
        "leg": 18150,
        "introduce": 18151,
        "stre": 18152,
        "setr": 18153,
        "str[i+1]": 18154,
        "ara[i+1]": 18155,
        "p[i+1],": 18156,
        "word[i-1],": 18157,
        "stone_color": 18158,
        "stone_color[i]": 18159,
        "stone_color[i+1],": 18160,
        "takeStones": 18161,
        "(take": 18162,
        "chars,": 18163,
        "smallAns": 18164,
        "takeStones(arr+1)": 18165,
        "1+smallAns": 18166,
        "takeStones(str)": 18167,
        "input[i+1],": 18168,
        "(exclusive": 18169,
        "x++": 18170,
        "Numberofstones": 18171,
        "Input[i]": 18172,
        "Input[i": 18173,
        "+s[0]": 18174,
        "res[res.size()": 18175,
        "a>b,return": 18176,
        "a<b,return": 18177,
        "a=a*-1": 18178,
        "(i-1)th": 18179,
        "i-1th": 18180,
        "[i+1]": 18181,
        "lon": 18182,
        "stone[i]": 18183,
        "stone[i-1],": 18184,
        "S[i": 18185,
        "xay[i]": 18186,
        "ce,": 18187,
        "ce2,": 18188,
        "cs2,": 18189,
        "ce2": 18190,
        "cs2": 18191,
        "m[1],": 18192,
        "m[-1]": 18193,
        "mm[-1]": 18194,
        "j+k,": 18195,
        "mm[a[j]]": 18196,
        "type,": 18197,
        "del[i]": 18198,
        "del[i],": 18199,
        "tables": 18200,
        "book[-1]": 18201,
        "tables[i]": 18202,
        "book[tables[i]]": 18203,
        "maxSol": 18204,
        "cnt[tables[i]]": 18205,
        "fabs(cnt[-1]": 18206,
        "cnt[1]),": 18207,
        "cnt[1])": 18208,
        "numOfInfo,": 18209,
        "numOfNet": 18210,
        "numOfInfo": 18211,
        "q=numOfNet": 18212,
        "INT_MIN,l,": 18213,
        "a[i]=-1": 18214,
        "j=j+m": 18215,
        "ns=s": 18216,
        "t[b": 18217,
        "abs(ne": 18218,
        "ns)": 18219,
        "abs(cc)": 18220,
        "allA": 18221,
        "(A,": 18222,
        "assigns": 18223,
        "allB": 18224,
        "fill(B,": 18225,
        "A[k]": 18226,
        "B[k]": 18227,
        "(allA": 18228,
        "A[k])": 18229,
        "(allB": 18230,
        "B[k])": 18231,
        "fff1,": 18232,
        "fff2": 18233,
        "fff1": 18234,
        "!vis[j]": 18235,
        "te,": 18236,
        "net": 18237,
        "fabs(x": 18238,
        "study": 18239,
        "social": 18240,
        "tstudy,": 18241,
        "tsocial": 18242,
        "tstudy": 18243,
        "cpr": 18244,
        "'$'": 18245,
        "v[increment": 18246,
        "returing": 18247,
        "borne": 18248,
        "oc1,": 18249,
        "oc2": 18250,
        "oc1": 18251,
        "(-(n+2))": 18252,
        "max(maxs,": 18253,
        "-2147483647,": 18254,
        "-1000": 18255,
        "abs(mm[1]": 18256,
        "mm[": 18257,
        "mm[-1])": 18258,
        "107,": 18259,
        "abso": 18260,
        "brr[j]": 18261,
        "ModPow": 18262,
        "ModPow(a,": 18263,
        "ModPow((1ll": 18264,
        "w=integer": 18265,
        "v[x-1]=1": 18266,
        "c[b-1]": 18267,
        "ep[i-1]": 18268,
        "ar[x]": 18269,
        "arr[MAX]": 18270,
        "bum": 18271,
        "num[m]": 18272,
        "arr[num]": 18273,
        "mark[x]": 18274,
        "V[k-1]": 18275,
        "f[a]": 18276,
        "epi": 18277,
        "number_list": 18278,
        "number_list[i]": 18279,
        "((((n)": 18280,
        "miss,": 18281,
        "watched": 18282,
        "watched,": 18283,
        "watched[i]": 18284,
        "miss": 18285,
        "v[n-2]": 18286,
        "a[x-1]": 18287,
        "yth": 18288,
        "a[buf]": 18289,
        "n,id,a": 18290,
        "nInputs": 18291,
        "rTotal": 18292,
        "fTtoal": 18293,
        "yolo": 18294,
        "fTotal": 18295,
        "ans,i,": 18296,
        "cz": 18297,
        "leftnum,": 18298,
        "leavekid": 18299,
        "leftnum": 18300,
        "add,": 18301,
        "x;": 18302,
        "(biggest": 18303,
        "N=100010": 18304,
        "PI=3.14159": 18305,
        "n,x,a,x=long": 18306,
        "a>x": 18307,
        "x+a": 18308,
        "x-a": 18309,
        "kids": 18310,
        "n,m,x,dis": 18311,
        "c,x": 18312,
        "demand": 18313,
        "supply": 18314,
        "upset": 18315,
        "spicifier": 18316,
        "supply,": 18317,
        "q,in_amt,cur_amt,left_cn=long": 18318,
        "dist_ch=0": 18319,
        "sg=char": 18320,
        "in_amt": 18321,
        "left_cn=in_amt": 18322,
        "sg,": 18323,
        "cur_amt": 18324,
        "sg": 18325,
        "left_cn": 18326,
        "left_cn-cur_amt": 18327,
        "dist_ch": 18328,
        "left_cn,": 18329,
        "n,total": 18330,
        "distressed": 18331,
        "sign,x": 18332,
        "sign,": 18333,
        "spc": 18334,
        "sad": 18335,
        "\",sad": 18336,
        "s=\"Null\"": 18337,
        "n,k,m,dis": 18338,
        "0,sum": 18339,
        "c,m": 18340,
        "childs": 18341,
        "packs": 18342,
        "packsis": 18343,
        "+),": 18344,
        "sum,\"": 18345,
        "\",l": 18346,
        "-d": 18347,
        "distress": 18348,
        "succeeded": 18349,
        "exist,": 18350,
        "divN": 18351,
        "esPrimo(i),": 18352,
        "d[p]": 18353,
        "(d.size())": 18354,
        "(r.size())": 18355,
        "integer(r.size(),": 18356,
        "shai": 18357,
        "temp[sum]": 18358,
        "temp[i],": 18359,
        "fac": 18360,
        "fac,": 18361,
        "fac[j]": 18362,
        "ivmind": 18363,
        "fff": 18364,
        "ES": 18365,
        "ivmind[i],": 18366,
        "ivmind[i]": 18367,
        "ivmind[i*prime[j]]": 18368,
        "!ivmind[i]": 18369,
        "prime[++p]": 18370,
        "ivmind[i": 18371,
        "a[++num]": 18372,
        "faktori": 18373,
        "faktori.size()": 18374,
        "faktori[i]": 18375,
        "faktori.size(),": 18376,
        "123457": 18377,
        "sizeof(isprime)": 18378,
        "prifac": 18379,
        "pri(123456)": 18380,
        "prifac(n)": 18381,
        "factors[i]": 18382,
        "criba": 18383,
        "crearCriba": 18384,
        "criba[0]": 18385,
        "criba[1]": 18386,
        "criba[i]": 18387,
        "criba[j]": 18388,
        "d[p])": 18389,
        "then\"": 18390,
        "sizeof(criba)": 18391,
        "crearCriba(n)": 18392,
        "resp,": 18393,
        "resp[i],": 18394,
        "\\n\"[i": 18395,
        "spaces": 18396,
        "a[ans]": 18397,
        "c[10000],": 18398,
        "del,": 18399,
        "c[d]": 18400,
        "n/del": 18401,
        "k>d": 18402,
        "pp=1": 18403,
        "primeFactors": 18404,
        "primeFactors(n)": 18405,
        "1000007": 18406,
        "prim[1]": 18407,
        "prim[i]": 18408,
        "sqrt(1000007)": 18409,
        "prim[j]": 18410,
        "q.size()": 18411,
        "fj": 18412,
        "ans/2": 18413,
        "k[temp]": 18414,
        "stable_sort(answer.begin(),": 18415,
        "answer.end())": 18416,
        "answer[0]": 18417,
        "direcciones": 18418,
        "hayColision": 18419,
        "direcciones[i": 18420,
        "direcciones[i]": 18421,
        "posiciones[i]": 18422,
        "nowR": 18423,
        "1000000000000000000LL": 18424,
        "nowR)": 18425,
        "c[i+1]": 18426,
        "greater,": 18427,
        "existing": 18428,
        "abs(*x": 18429,
        "8x2": 18430,
        "INF=2^60-1": 18431,
        "MAX=2000000000000": 18432,
        "p=map": 18433,
        "p2=map": 18434,
        "p3=map": 18435,
        "freq=array": 18436,
        "exp>0": 18437,
        "res=(res*base)": 18438,
        "base=(base*base)": 18439,
        "right=-1,": 18440,
        "ans=MAX": 18441,
        "x=array": 18442,
        "left=x[i+1]": 18443,
        "right=-1": 18444,
        "left>=0": 18445,
        "right=x[i+1]": 18446,
        "time=(right-left)/2": 18447,
        "time)": 18448,
        "left=-1": 18449,
        "arr1[i": 18450,
        "(arr2[i": 18451,
        "(smallest": 18452,
        "smallest),": 18453,
        "ch[i": 18454,
        "nf": 18455,
        "(nf": 18456,
        "mn/2": 18457,
        "LLONG_MAX": 18458,
        "2000100": 18459,
        "cmd[i]": 18460,
        "cmd[i": 18461,
        "dist[cnt]": 18462,
        "pos[i": 18463,
        "(s[i-1]": 18464,
        "-v[i-1]": 18465,
        "((V[i]": 18466,
        "1000000001,": 18467,
        "cordinates[n]": 18468,
        "movei[n]": 18469,
        "movei[i]": 18470,
        "coordinates[i]": 18471,
        "flag1=1": 18472,
        "(cordinates[l]": 18473,
        "cordinates[r])": 18474,
        "\"hi\"": 18475,
        "ans=integer,set": 18476,
        "mpow(i)": 18477,
        "logarithm": 18478,
        "(1.500)": 18479,
        "upward": 18480,
        "limak,": 18481,
        "bob": 18482,
        "limak": 18483,
        "years": 18484,
        "(bob": 18485,
        "limak)": 18486,
        "bob*2": 18487,
        "limak*3": 18488,
        "a*3": 18489,
        "b*2": 18490,
        "n*3": 18491,
        "m*2": 18492,
        "triple": 18493,
        "Limak": 18494,
        "year_limake": 18495,
        "snack": 18496,
        "bro,": 18497,
        "bro": 18498,
        "(log": 18499,
        "dirx": 18500,
        "diry": 18501,
        "x[i-1]*3": 18502,
        "y[i-1]*2": 18503,
        "1234": 18504,
        "log(b": 18505,
        "log(1.5)": 18506,
        "year,": 18507,
        "respectively.": 18508,
        "er": 18509,
        "er)": 18510,
        "f[n": 18511,
        "power(x": 18512,
        "'1'),": 18513,
        "power(2": 18514,
        "btcd": 18515,
        "power[len": 18516,
        "power[0]": 18517,
        "power[i]": 18518,
        "power[i": 18519,
        "(btdc": 18520,
        "modpow(2,": 18521,
        "len))": 18522,
        "left-shifted": 18523,
        "x*x": 18524,
        "7LL": 18525,
        "addm": 18526,
        "prodm": 18527,
        "powm": 18528,
        "occur,": 18529,
        "ionteger": 18530,
        "pow2": 18531,
        "i.": 18532,
        "2.": 18533,
        "Now": 18534,
        "those": 18535,
        "Finally": 18536,
        "reulst": 18537,
        "ans.": 18538,
        "n2[0]": 18539,
        "n2[i": 18540,
        "(n2[i]": 18541,
        "n2[i]": 18542,
        "n2[2": 18543,
        "(X.size()": 18544,
        "stab": 18545,
        "st2": 18546,
        "st2[0]": 18547,
        "st2[i]": 18548,
        "st2[i": 18549,
        "st2[n": 18550,
        "(2LL": 18551,
        "(power[i]": 18552,
        "'0'))": 18553,
        "second[second": 18554,
        "power(2,": 18555,
        "30)": 18556,
        "twoPower": 18557,
        "twoPower(x": 18558,
        "rec(i": 18559,
        "twoPower(2": 18560,
        "rec(0)": 18561,
        "(Power(p)": 18562,
        "INFl": 18563,
        "myPow": 18564,
        "myPow(2,": 18565,
        "power)": 18566,
        "mo,": 18567,
        "pot[i]": 18568,
        "pot[i-1])": 18569,
        "A-1": 18570,
        "((pot[2*(size": 18571,
        "pot[i])": 18572,
        "'1')": 18573,
        "arr[length": 18574,
        "r[2": 18575,
        "i)]": 18576,
        "tp[0]": 18577,
        "tp[i]": 18578,
        "mul(tp[i": 18579,
        "add(ans,": 18580,
        "mul(tp[i],": 18581,
        "mul(tp[len],": 18582,
        "tp[len])))": 18583,
        "dos_a_la": 18584,
        "f(n": 18585,
        "dos_a_la[2": 18586,
        "dos_a_la[0]": 18587,
        "dos_a_la[i]": 18588,
        "dos_a_la[i": 18589,
        "f(length": 18590,
        "MAXN)": 18591,
        "dos_a_la[i-1]": 18592,
        "dos_a_la[n-1]": 18593,
        "power,": 18594,
        "halve": 18595,
        "(((2": 18596,
        ".BW": 18597,
        "arrary": 18598,
        "min(up,": 18599,
        "min(down,": 18600,
        "Bstep": 18601,
        "Wstep": 18602,
        "isboundary": 18603,
        "countstep": 18604,
        "colour": 18605,
        "board[i][c]": 18606,
        "board[r][c]": 18607,
        "firstw": 18608,
        "firstb": 18609,
        "'W',": 18610,
        "\"A\"": 18611,
        "andaw": 18612,
        "tab[i][c]": 18613,
        "andab": 18614,
        "tab[i][j]": 18615,
        "miniw": 18616,
        "minib": 18617,
        "andaw(i,": 18618,
        "andab(i,": 18619,
        "\"A\\n\"": 18620,
        "polje": 18621,
        "polje[y][x]": 18622,
        "polje[x][y]": 18623,
        "polje[x][7-y]": 18624,
        "*1000": 18625,
        "gcd(b,a": 18626,
        "\"B\\n\"": 18627,
        "blocka": 18628,
        "blockb": 18629,
        "blocka[j]": 18630,
        "bocka[j]": 18631,
        "blockb[j],": 18632,
        "blockb[j]": 18633,
        "blocka[0]": 18634,
        "blockb[7]": 18635,
        "bf,": 18636,
        "Au,": 18637,
        "Ad,": 18638,
        "Bu,": 18639,
        "Bd": 18640,
        "Bu[j]": 18641,
        "Bd[j]": 18642,
        "Au[j]": 18643,
        "Ad[j]": 18644,
        "ansA,": 18645,
        "ansB": 18646,
        "ansA": 18647,
        "ansB,": 18648,
        "Mina": 18649,
        "Minb": 18650,
        "bestw": 18651,
        "bestb": 18652,
        "movesA": 18653,
        "movesB": 18654,
        "chess[j][i]": 18655,
        "[8][8]": 18656,
        "Awin,": 18657,
        "Bwin": 18658,
        "Awin": 18659,
        "(s[j][i]": 18660,
        "B),": 18661,
        "W),": 18662,
        "(Awin": 18663,
        "Bwin)": 18664,
        "s[0": 18665,
        "s[7": 18666,
        "menorW": 18667,
        "9,menorB": 18668,
        "testeW(integer": 18669,
        "tabuleiro[i][j]": 18670,
        "testeB(integer": 18671,
        "menorB": 18672,
        "tabuleiro": 18673,
        "testeW(i,": 18674,
        "testeB(i,": 18675,
        "v[k][j]": 18676,
        "minw": 18677,
        "vs[k][j]": 18678,
        "minB": 18679,
        "(minw": 18680,
        "minB)": 18681,
        "str[k][j]": 18682,
        "n,l,r,ql,qr=int": 18683,
        "right,left=false": 18684,
        "n,l,r,ql,qr": 18685,
        "w[0]=0": 18686,
        "w[n+1]=0": 18687,
        "minr=INT_MAX": 18688,
        "w[i]=x+w[i-1]": 18689,
        "wl=w[i]": 18690,
        "wr=w[n]-w[i]": 18691,
        "nl=i": 18692,
        "nr=n-i": 18693,
        "p=wl*l+wr*r": 18694,
        "d=nl-nr": 18695,
        "ad=absolute": 18696,
        "pen=int": 18697,
        "pen=n-1": 18698,
        "pen=ad-1": 18699,
        "pen=0": 18700,
        "d>0": 18701,
        "pen*ql": 18702,
        "pen*qr": 18703,
        "minr=min(minr,": 18704,
        "minr": 18705,
        "ql,": 18706,
        "qr,": 18707,
        "ql": 18708,
        "qr": 18709,
        "sum[i+1]": 18710,
        "(sum[n]": 18711,
        "w[0]": 18712,
        "w[n": 18713,
        "d[en]": 18714,
        "sum[en": 18715,
        "(l)": 18716,
        "d[st]": 18717,
        "(sum[n": 18718,
        "w[i": 18719,
        "sum[en]": 18720,
        "sum[st])": 18721,
        "(st": 18722,
        "n,l,r,ql,qr=long": 18723,
        "wt=vector": 18724,
        "sums=vector": 18725,
        "wt[1]": 18726,
        "sums[1]=wt[1]": 18727,
        "wt[i]": 18728,
        "sums[i]=wt[i]+sums[i-1]": 18729,
        "ans=LONG_MAX": 18730,
        "curr=l*sums[x]+r*(sums[n]-sums[x])": 18731,
        "x>n-x": 18732,
        "pen=ql*(2*x-n-1)": 18733,
        "x<n-x": 18734,
        "pen=qr*(n-2*x-1)": 18735,
        "pen": 18736,
        "righ": 18737,
        "lef[0]": 18738,
        "lef[i]": 18739,
        "lef[i": 18740,
        "cost[i": 18741,
        "righ[n": 18742,
        "righ[i]": 18743,
        "righ[i": 18744,
        "10000000000000": 18745,
        "235034914": 18746,
        "Ql,": 18747,
        "Qr": 18748,
        "Ql": 18749,
        "smL,": 18750,
        "smR": 18751,
        "smL": 18752,
        "w[L": 18753,
        "w[R": 18754,
        "w[R-1]": 18755,
        "lft,": 18756,
        "rht": 18757,
        "lft[i]": 18758,
        "rht[i]": 18759,
        "lft[i": 18760,
        "rht[i": 18761,
        "150000": 18762,
        "sizeof(suml)": 18763,
        "sizeof(sumr)": 18764,
        "suml[0]": 18765,
        "sumr[0]": 18766,
        "suml[i": 18767,
        "suml[i]": 18768,
        "sumr[i": 18769,
        "2147483640": 18770,
        "sumr[n": 18771,
        "leftPreSum,": 18772,
        "rightPreSum": 18773,
        "leftPreSum": 18774,
        "leftPreSum[0]": 18775,
        "rightPreSum[n+1]": 18776,
        "leftPreSum[i]": 18777,
        "leftPreSum[i-1]": 18778,
        "rightPreSum[i]": 18779,
        "rightPreSum[i+1]": 18780,
        "currentans": 18781,
        "weights": 18782,
        "weights[i]": 18783,
        "firstSum": 18784,
        "lastSum": 18785,
        "firstSum[0]": 18786,
        "lastSum[0]": 18787,
        "firstSum[i]": 18788,
        "firstSum[i": 18789,
        "weights[i": 18790,
        "lastSum[i]": 18791,
        "lastSum[i": 18792,
        "weights[n": 18793,
        "total_cost": 18794,
        "lastSum[n": 18795,
        "elseif(i<n-i)": 18796,
        "countersum,": 18797,
        "ci,": 18798,
        "countersum": 18799,
        "ci": 18800,
        "(ci": 18801,
        "w[i-1]": 18802,
        "w[left]": 18803,
        "rumr": 18804,
        "w[n]": 18805,
        "curans": 18806,
        "sumw": 18807,
        "sumw[i]": 18808,
        "sumw[i-1]": 18809,
        "mine": 18810,
        "sumw[n]": 18811,
        "wheniEndFromLeft": 18812,
        "(sumw[i]": 18813,
        "sumw[0])": 18814,
        "(sumw[n]": 18815,
        "sumw[i])": 18816,
        "cans": 18817,
        "(w[n]": 18818,
        "w[i])": 18819,
        "100002,": 18820,
        "Qr,": 18821,
        "ore,": 18822,
        "ended": 18823,
        "dq[i]": 18824,
        "dq[i-1]": 18825,
        "(dq[i])": 18826,
        "(dq[n": 18827,
        "dq[i])": 18828,
        "(((i": 18829,
        "dq[n": 18830,
        "abs(abs(2": 18831,
        "newM": 18832,
        "rc,": 18833,
        "rp,": 18834,
        "rp": 18835,
        "rc": 18836,
        "abs((n": 18837,
        "tempsum": 18838,
        "tempsum)": 18839,
        "x+1": 18840,
        "(q2": 18841,
        "(q1": 18842,
        "(p[n]": 18843,
        "puts(\"YES\")": 18844,
        "cardOnTable": 18845,
        "myCards": 18846,
        "cardOnTable[0]": 18847,
        "myCards[i][0]": 18848,
        "cardOnTable[1]": 18849,
        "myCards[i][1]": 18850,
        "card": 18851,
        "suit": 18852,
        "card[i]": 18853,
        "OK": 18854,
        "OK(he,": 18855,
        "me[i])": 18856,
        "ss[1]": 18857,
        "his": 18858,
        "his[i]": 18859,
        "his[i][0]": 18860,
        "my[0]": 18861,
        "his[i][1]": 18862,
        "my[1]": 18863,
        "strig": 18864,
        "card1": 18865,
        "card2": 18866,
        "card1[0]": 18867,
        "card2[0]": 18868,
        "card1[1]": 18869,
        "card2[1],": 18870,
        "respuesta": 18871,
        "aux[0]": 18872,
        "aux[1]": 18873,
        "puts(\"YES\"),": 18874,
        "puts(\"NO\"),": 18875,
        "cards(5)": 18876,
        "cards[i]": 18877,
        "cards[i][0]": 18878,
        "ref[0]": 18879,
        "cards[i][1]": 18880,
        "ref[1]": 18881,
        "e[0]": 18882,
        "e[1]": 18883,
        "s280]": 18884,
        "ss[i][0]": 18885,
        "ss[i][1]": 18886,
        "tem[0]": 18887,
        "tem[1]": 18888,
        "pre[0]": 18889,
        "pre[1]": 18890,
        "pre[2]": 18891,
        "rpe[3]": 18892,
        "pre[4]": 18893,
        "pre[i][0]": 18894,
        "pre[i][1]": 18895,
        "map<char,int>m": 18896,
        "m[s1[i]]": 18897,
        "m[s2[i]]": 18898,
        "m[s3[i]]": 18899,
        "m[s4[i]]": 18900,
        "m[s5[i]]": 18901,
        "n[6]": 18902,
        "the_same(s1,": 18903,
        "s2),": 18904,
        "in[i][0]": 18905,
        "in[i][1]": 18906,
        "falg": 18907,
        "s80]": 18908,
        "exp,": 18909,
        "min2,": 18910,
        "arr[a[i]]": 18911,
        "arr[b[i]]": 18912,
        "sam": 18913,
        "visit1": 18914,
        "visit2": 18915,
        "visit1[temp]": 18916,
        "visit2[temp]": 18917,
        "visit1[temp2]": 18918,
        "visit2[temp2]": 18919,
        "firstOn": 18920,
        "function,": 18921,
        "respectivwly": 18922,
        "min1),": 18923,
        "min2),": 18924,
        "store),": 18925,
        "(store": 18926,
        "(min1": 18927,
        "min2)": 18928,
        "t1[0]": 18929,
        "t2[0]": 18930,
        "t2[j]": 18931,
        "t1[i],": 18932,
        "crea": 18933,
        "vn": 18934,
        "vn[i]": 18935,
        "vm[i]": 18936,
        "vm[j]": 18937,
        "(b,": 18938,
        "100500": 18939,
        "arr2[g]": 18940,
        "arr2[i],": 18941,
        "x[a[i]]": 18942,
        "y[b[i]]": 18943,
        "x[i]=": 18944,
        "done,": 18945,
        "mp[b[i]]": 18946,
        "(b[0]": 18947,
        "x[b[i]]": 18948,
        "vn,": 18949,
        "vn[0]": 18950,
        "vm[0]": 18951,
        "mna": 18952,
        "mnb": 18953,
        "ada_dia": 18954,
        "ada_dib": 18955,
        "ada_dia[ai]": 18956,
        "ada_dib[bi]": 18957,
        "ada_dia[i]": 18958,
        "ada_dib[i]": 18959,
        "mnb,": 18960,
        "dirx[0]:": 18961,
        "diry[0]:": 18962,
        "dx[0]:": 18963,
        "dy[0]:": 18964,
        "d(n,": 18965,
        "recursively": 18966,
        "h((t": 18967,
        "h(a,": 18968,
        "+div": 18969,
        "great": 18970,
        "n,m,i": 18971,
        "turn,": 18972,
        "couting": 18973,
        "n,m,i,j": 18974,
        "n,m,day=0": 18975,
        "small_letter": 18976,
        "97,": 18977,
        "pow(m,": 18978,
        "hari,": 18979,
        "\"Akshat\"": 18980,
        "\"Malvika\"": 18981,
        "Malvika": 18982,
        "Akshat": 18983,
        "\"Malvika\\n\"": 18984,
        "\"Akshat\\n\"": 18985,
        "pring": 18986,
        "100000th": 18987,
        "Noofintersectionsleft": 18988,
        "Noofintersectionsleft(a": 18989,
        "ccc": 18990,
        "m<n": 18991,
        "swap(n,m)": 18992,
        "vales": 18993,
        "do:": 18994,
        "-(getchar()": 18995,
        "122220": 18996,
        "x=s": 18997,
        "t-1": 18998,
        "x>=s,": 18999,
        "s=s+d": 19000,
        "a=a+b": 19001,
        "assing": 19002,
        "a[w],": 19003,
        "1e3+10": 19004,
        "a[sum])": 19005,
        "b[sum]": 19006,
        "ch[now][0]": 19007,
        "ch[now][0])": 19008,
        "ch[now][1]": 19009,
        "300009": 19010,
        "(maxi": 19011,
        "s[maxn]": 19012,
        "d[maxn]": 19013,
        "s[i]+d[i]": 19014,
        "Make": 19015,
        "1e6+10": 19016,
        "(((x1": 19017,
        "gidit": 19018,
        "ans=a": 19019,
        "curDay": 19020,
        "((curDay": 19021,
        "((days": 19022,
        "day,": 19023,
        "Next": 19024,
        "Next,": 19025,
        "int/int": 19026,
        "seconds": 19027,
        "doc[i]": 19028,
        "v[doc[i].first]": 19029,
        "doc[i].first,": 19030,
        "doc[i].second": 19031,
        "doc[i].first": 19032,
        "day=": 19033,
        "day+q": 19034,
        "s<": 19035,
        "q+s": 19036,
        "s+q": 19037,
        "\"hello\"": 19038,
        "'h'": 19039,
        "l_": 19040,
        "str.at(i)": 19041,
        "hello": 19042,
        "'h',": 19043,
        "'l',": 19044,
        "i,j,k,banyak=int": 19045,
        "t=\"hello\"": 19046,
        "k<length": 19047,
        "i<length": 19048,
        "banyak=0": 19049,
        "banyak>=2": 19050,
        "n=5": 19051,
        "type.length()": 19052,
        "word[a]": 19053,
        "boolen": 19054,
        "temp3,": 19055,
        "temp4": 19056,
        "temp3": 19057,
        "greeting": 19058,
        "line[b++]": 19059,
        "greeting[a],": 19060,
        "greeting.size()": 19061,
        "ll,": 19062,
        "charcter": 19063,
        "S[2]": 19064,
        "S[3]": 19065,
        "S[4]": 19066,
        "fourth": 19067,
        "fifth": 19068,
        "s.erase(5.100)": 19069,
        "ch[]": 19070,
        "ch[i],": 19071,
        "i=5,": 19072,
        "108": 19073,
        "i=long": 19074,
        "ch,cn,j,d=0": 19075,
        "j=d": 19076,
        "d=j": 19077,
        "doesIt": 19078,
        "token": 19079,
        "token[j],": 19080,
        "doesIt(a)": 19081,
        "p[x],": 19082,
        "361": 19083,
        "parity": 19084,
        "is2": 19085,
        "abs(180": 19086,
        "reverse=": 19087,
        "(360-2*s)": 19088,
        "n,i,j,sum_a,sum_b,diff": 19089,
        "min=360": 19090,
        "730": 19091,
        "b[i*n+j]": 19092,
        "i+n": 19093,
        "sum_a=0": 19094,
        "k=i": 19095,
        "sum_b=360-sum_a": 19096,
        "diff=absolute": 19097,
        "sum_b-sum_a": 19098,
        "v[curr]": 19099,
        "360)": 19100,
        "sum[i-1]": 19101,
        "sum[j": 19102,
        "b[maxn]": 19103,
        "b[cnt++]": 19104,
        "180,": 19105,
        "a[i+n]": 19106,
        "a[i+j]": 19107,
        "360-sum": 19108,
        "((abs(180": 19109,
        "sum1))": 19110,
        "365,": 19111,
        "c[360]": 19112,
        "129605": 19113,
        "360))": 19114,
        "800": 19115,
        "a[i-n]": 19116,
        "of((a[i": 19117,
        "a[begin])": 19118,
        "(a[end]": 19119,
        "in=array": 19120,
        "in,integer=n": 19121,
        "ans=100000": 19122,
        "i=o": 19123,
        "doing": 19124,
        "calculation": 19125,
        "j=i+`": 19126,
        "calculating": 19127,
        "[i+n]th": 19128,
        "of(ans,": 19129,
        "arr[ke]": 19130,
        "tot)": 19131,
        "abs((s[j]": 19132,
        "1]))))": 19133,
        "of((360": 19134,
        "sum)))": 19135,
        "1000000010": 19136,
        "10000000000010LL": 19137,
        "A[i]))": 19138,
        "anstemp": 19139,
        "clockwise": 19140,
        "deg[start]": 19141,
        "cclockwise": 19142,
        "cstart": 19143,
        "cval": 19144,
        "deg[cstart]": 19145,
        "V,": 19146,
        "sumclock,": 19147,
        "sumcclock,": 19148,
        "sumclock2,": 19149,
        "sumclock": 19150,
        "sumcclock": 19151,
        "sumclock2": 19152,
        "deg[i]": 19153,
        "clockwise(i)": 19154,
        "cclockwise(i)": 19155,
        "ar[1000]": 19156,
        "ar)": 19157,
        "of(s": 19158,
        "ar))": 19159,
        "361,": 19160,
        "x))": 19161,
        "minD": 19162,
        "722,": 19163,
        "(minD": 19164,
        "esp": 19165,
        "here": 19166,
        "[j-n]th": 19167,
        "180))": 19168,
        "pre_sum": 19169,
        "pre_sum,": 19170,
        "sizeof(pre_sum)": 19171,
        "pre_sum[i]": 19172,
        "pre_sum[i": 19173,
        "pre_sum[j]": 19174,
        "tmp)": 19175,
        "mina)": 19176,
        "ooi": 19177,
        "1000th": 19178,
        "mn=the": 19179,
        "mn=min(mn,k/input)": 19180,
        "k/a[i]": 19181,
        "a[300]": 19182,
        "n,k,i,l,Min": 19183,
        "m/arr[i]": 19184,
        "largerst": 19185,
        "cmp(integer": 19186,
        "1],i": 19187,
        "N=array": 19188,
        "n,l": 19189,
        "tue": 19190,
        "n[i,": 19191,
        "l/N[i-1]": 19192,
        "big,": 19193,
        "mi_n": 19194,
        "1234567890,": 19195,
        "exist[a[i]]": 19196,
        "such": 19197,
        "exist[k/i]": 19198,
        "k/i": 19199,
        "custom": 19200,
        "k*1.0": 19201,
        "1000000007,": 19202,
        "prep": 19203,
        "fixed,": 19204,
        "lowering": 19205,
        "INPUT.c_str(),": 19206,
        "OUTPUT.c_str(),": 19207,
        "\"w\",": 19208,
        "\"144\"": 19209,
        "\"14\"": 19210,
        "x?": 19211,
        "good(i)": 19212,
        "s[i+2]": 19213,
        "z=n": 19214,
        "144": 19215,
        "pat": 19216,
        "\"444\"": 19217,
        "pat[j]": 19218,
        "\"14\",": 19219,
        "=\"144\"": 19220,
        "m3[0]": 19221,
        "m3[1]": 19222,
        "m3[2]": 19223,
        "m2[0]": 19224,
        "m2[1]": 19225,
        "m1[0]": 19226,
        "strlen(n)": 19227,
        "(n[i-1]": 19228,
        "n[i-2]": 19229,
        "yay": 19230,
        "is_magical": 19231,
        "number.npos": 19232,
        "is_magical(number)": 19233,
        "sai": 19234,
        "then,": 19235,
        "n[len]": 19236,
        "num[in]": 19237,
        "14)": 19238,
        "144)": 19239,
        "14,": 19240,
        "pushback": 19241,
        "gen": 19242,
        "rs[i],": 19243,
        "str[i+2]": 19244,
        "(mm": 19245,
        "p*2": 19246,
        "Genawy": 19247,
        "Genawy()": 19248,
        "mod=1000000009": 19249,
        "p=(p*2)": 19250,
        "ans=(ans*((p-i+mod)": 19251,
        "MOD=1000000009": 19252,
        "n,m,t,ans=long": 19253,
        "t=t*2": 19254,
        "ans=t": 19255,
        "t<=0": 19256,
        "pot=array": 19257,
        "p>n": 19258,
        "test()": 19259,
        "pot[0]=1": 19260,
        "pot[i]=(pot[i-1]*2)": 19261,
        "add=(pot[m]-i+mod)": 19262,
        "ans=(ans*add)": 19263,
        "1000LL": 19264,
        "ans(int,": 19265,
        "power(int)": 19266,
        "norm(long": 19267,
        "ans(n,": 19268,
        "power(m)": 19269,
        "coe": 19270,
        "norm(coe)": 19271,
        "norm(res)": 19272,
        "long)ans": 19273,
        "(pm": 19274,
        "pm,": 19275,
        "pm)": 19276,
        "1000000009LL)": 19277,
        "mod),": 19278,
        "mpow(2,m)": 19279,
        "ppow": 19280,
        "ppow(a": 19281,
        "1000000009LL,": 19282,
        "ppow(2,": 19283,
        "pw": 19284,
        "(pw": 19285,
        "MODULO": 19286,
        "tavan": 19287,
        "((tavan": 19288,
        "MODULO)": 19289,
        "5e4": 19290,
        "sta": 19291,
        "(pw(2,": 19292,
        "a+b-mod": 19293,
        "a-b+mod": 19294,
        "ret=mul(ret,": 19295,
        "a=mul(a,": 19296,
        "k=fpow(2,m),": 19297,
        "k=sub(k,1)": 19298,
        "ans=mul(ans,k)": 19299,
        "reuslt": 19300,
        "mod(ans": 19301,
        "pw)": 19302,
        "mod(pw-1)": 19303,
        "power(a,": 19304,
        "((result": 19305,
        "t[i-1]": 19306,
        "r[m]": 19307,
        "(pow": 19308,
        "(ac": 19309,
        "num3": 19310,
        "maxcnt": 19311,
        "num3,": 19312,
        "n-a-b": 19313,
        "dip,": 19314,
        "cer,": 19315,
        "nw,": 19316,
        "dip": 19317,
        "cer": 19318,
        "nw": 19319,
        "(dip": 19320,
        "cer)": 19321,
        "M=1000000010": 19322,
        "N=1000000010": 19323,
        "n,k=unsigned": 19324,
        "x,c,d=unsigned": 19325,
        "x=n/2/(1+k)": 19326,
        "k*x,": 19327,
        "n-x-k*x": 19328,
        "half,": 19329,
        "n/(2*(k+1))": 19330,
        "d*k": 19331,
        "n-d-c": 19332,
        "(1+k)": 19333,
        "k*c": 19334,
        "k)))": 19335,
        ",\"": 19336,
        "\",a": 19337,
        "k,\"": 19338,
        "\",n": 19339,
        "llMax": 19340,
        "llMin": 19341,
        "r1=": 19342,
        "r1*k": 19343,
        "r3": 19344,
        "ling": 19345,
        "valid(mid)": 19346,
        "di": 19347,
        "num,\"": 19348,
        "\",num": 19349,
        "n,k,p,x=int,": 19350,
        "a,b,r=0": 19351,
        "x=n/2": 19352,
        "p=x/(k+1)": 19353,
        "(k+1)*p": 19354,
        "a=p": 19355,
        "b=k*p": 19356,
        "r=n-(b+a)": 19357,
        "x*k": 19358,
        "(x)": 19359,
        "ans*k": 19360,
        "d,\"": 19361,
        "d,'": 19362,
        "',n": 19363,
        "p/(k+1)": 19364,
        "varible": 19365,
        "k*d,": 19366,
        "arr[100005]": 19367,
        "(k+1)": 19368,
        "res*k,": 19369,
        "0,\"": 19370,
        "\",0,\"": 19371,
        "y,\"": 19372,
        "\",z,\"": 19373,
        "\",(n": 19374,
        "100000001": 19375,
        "clock_t": 19376,
        "execution_time": 19377,
        "(n+1)/2": 19378,
        "n%k": 19379,
        "n/k*(k-1)": 19380,
        "'J',": 19381,
        "'K',": 19382,
        "p1[1]": 19383,
        "p1[0]": 19384,
        "consisting": 19385,
        "AKQJT9876": 19386,
        "tramp": 19387,
        "occurs": 19388,
        "ranki": 19389,
        "ranki(str1)": 19390,
        "ranki(str2)": 19391,
        "J,": 19392,
        "B[1]": 19393,
        "ch1[i]": 19394,
        "B[0]": 19395,
        "ch1[i],": 19396,
        "basic_string": 19397,
        "\"SHDC\"": 19398,
        "levl": 19399,
        "\"6789TJQKA\"": 19400,
        "{'6',": 19401,
        "'A'}": 19402,
        "a_pos": 19403,
        "b_pos": 19404,
        "big(a[0],": 19405,
        "isgreater": 19406,
        "isgreater(p1[0],": 19407,
        "p2[0])": 19408,
        "strng": 19409,
        "pos1,": 19410,
        "pos3": 19411,
        "6789TJQKA": 19412,
        "pos=int": 19413,
        "pos=i": 19414,
        "x=char": 19415,
        "busca(a[0],v)": 19416,
        "busca(b[0],v)": 19417,
        "st1,": 19418,
        "st2,": 19419,
        "tp2,": 19420,
        "kt3,": 19421,
        "SPACE": 19422,
        "st1": 19423,
        "dcrement": 19424,
        "strng[i]": 19425,
        "ste": 19426,
        "kt3": 19427,
        "\"YES": 19428,
        "mp['6']": 19429,
        "mp['7']": 19430,
        "mp['8']": 19431,
        "mp['9']": 19432,
        "mp['T']": 19433,
        "mp['J']": 19434,
        "mp['Q']": 19435,
        "mp['K']": 19436,
        "mp['A']": 19437,
        "mp[str1p[0]]": 19438,
        "mp[str2[0]]": 19439,
        "mp[str1[0]]": 19440,
        "endl)": 19441,
        "cout.setf(ios::fixed)": 19442,
        "cout.setf(ios::showpoint)": 19443,
        "cout.precision(precision)": 19444,
        "ms[6]": 19445,
        "ms[7]": 19446,
        "ms[8]": 19447,
        "ms[9]": 19448,
        "ms[T]": 19449,
        "ms[J]": 19450,
        "ms[Q]": 19451,
        "ms[K]": 19452,
        "ms[A]": 19453,
        "ms[s1[0]]": 19454,
        "ms[s2[0]]": 19455,
        "hora(tc)": 19456,
        "a[('0'": 19457,
        "a['T']": 19458,
        "a['J']": 19459,
        "a['Q']": 19460,
        "a['K']": 19461,
        "a['A']": 19462,
        "cas": 19463,
        "a[str[0]]": 19464,
        "ap[str2[0]]": 19465,
        "a[str1[0]]": 19466,
        "a[str2[0]]": 19467,
        "trump": 19468,
        "trump,": 19469,
        "cmp(f1,": 19470,
        "valuf": 19471,
        "mp[f[0]]": 19472,
        "100+5": 19473,
        "\"8\",": 19474,
        "\"9\",": 19475,
        "\"T\",": 19476,
        "\"J\",": 19477,
        "\"Q\",": 19478,
        "\"K\",": 19479,
        "joined": 19480,
        "LoL": 19481,
        "'J'": 19482,
        "LoL(s1[0])": 19483,
        "LoL(s2[0])": 19484,
        "-10000000000000000": 19485,
        "h[i].first,": 19486,
        "((p": 19487,
        "50)": 19488,
        "h[i].second": 19489,
        "h[i].first": 19490,
        "plus,": 19491,
        "maxName": 19492,
        "con,": 19493,
        "sc,": 19494,
        "un,": 19495,
        "wnr,": 19496,
        "wnr": 19497,
        "v3,": 19498,
        "term,": 19499,
        "intefer": 19500,
        "v4[0],": 19501,
        "v4.size()": 19502,
        "v4[i]": 19503,
        "v2[y]": 19504,
        "-2501": 19505,
        "h[x]": 19506,
        "hd": 19507,
        "hd[i]": 19508,
        "score[i]": 19509,
        "score[0]": 19510,
        "hd[0]": 19511,
        "score[j]": 19512,
        "hd[j]": 19513,
        "-100000": 19514,
        "-99999999": 19515,
        "e,s1": 19516,
        "integrs": 19517,
        "phack,": 19518,
        "nhack": 19519,
        "points[i]": 19520,
        "(phack": 19521,
        "max_points": 19522,
        "points[0]": 19523,
        "name[index]": 19524,
        "-30000": 19525,
        "h[sum]": 19526,
        "h[m]": 19527,
        "p[n]": 19528,
        "{sum,": 19529,
        "name}": 19530,
        "p[n": 19531,
        "plus,minus,a,b,c,d,e=int": 19532,
        "minus,": 19533,
        "score=100*plus-50*minus+a+b+c+d+e": 19534,
        "best_name=name": 19535,
        "best_score=score": 19536,
        "plus,minus,a,b,c,d,e": 19537,
        "best_name": 19538,
        "plus1,": 19539,
        "minus1": 19540,
        "-1000000000,": 19541,
        "handels,": 19542,
        "handels": 19543,
        "minus1,": 19544,
        "(plus1": 19545,
        "(minus1": 19546,
        "ee,": 19547,
        "hack,": 19548,
        "unhack,": 19549,
        "hack": 19550,
        "unhack": 19551,
        "handle_max": 19552,
        "score_max": 19553,
        "minus)": 19554,
        "2000005": 19555,
        "m[count]": 19556,
        "-99999": 19557,
        "(50": 19558,
        "tempName": 19559,
        "reading[0]": 19560,
        "(atoi(reading[1].c_str()))": 19561,
        "(atoi(reading[2].c_str()))": 19562,
        "atoi(reading[k].c_str())": 19563,
        "-10000000": 19564,
        "hr,": 19565,
        "hn,": 19566,
        "hr": 19567,
        "hn": 19568,
        "pct": 19569,
        "mius,": 19570,
        "mius": 19571,
        "mius1": 19572,
        "plu1,": 19573,
        "mius1,": 19574,
        "plus1": 19575,
        "debu": 19576,
        "-3000": 19577,
        "x,y,a,b,c,d,e": 19578,
        "name,x,y,a,b,c,d,e": 19579,
        "pre[j]": 19580,
        "pre[j-1]": 19581,
        "pre[t+1]": 19582,
        "s1[ans]": 19583,
        "input[j],": 19584,
        "input[i],": 19585,
        "input[k]": 19586,
        "ans[cnt]": 19587,
        "s[right]": 19588,
        "s[left]": 19589,
        "a[left]": 19590,
        "a[right]": 19591,
        "a[begin]": 19592,
        "decrypt": 19593,
        "encrypt,": 19594,
        "encrypt": 19595,
        "decrypt[last]": 19596,
        "decrypt[first]": 19597,
        "nowl": 19598,
        "delimiter": 19599,
        "s[(size": 19600,
        "s[(s.size()": 19601,
        "i,j,mid": 19602,
        "len/2-1": 19603,
        "shu[k]": 19604,
        "str[mid]": 19605,
        "str[mid+i]": 19606,
        "srt[mid-i]": 19607,
        "s_size": 19608,
        "temp[pos]": 19609,
        "ori[0]": 19610,
        "ori[2": 19611,
        "s[a+b]": 19612,
        "s[a-f]": 19613,
        "s[start]": 19614,
        "rth": 19615,
        "lth": 19616,
        "ans[decrement": 19617,
        "s[index]": 19618,
        "ans.push_back(str[k])": 19619,
        "ans.push_back(str[k": 19620,
        "((s.size()": 19621,
        "s.size()),": 19622,
        "nuts,": 19623,
        "divis,": 19624,
        "maxsec,": 19625,
        "capacity,": 19626,
        "boxees": 19627,
        "divis": 19628,
        "capacity": 19629,
        "nuts": 19630,
        "(min(maxsec,": 19631,
        "maxSections,": 19632,
        "nut2sec": 19633,
        "boxes": 19634,
        "maxSections": 19635,
        "a/v": 19636,
        "100000000001": 19637,
        "k*i": 19638,
        "b+i": 19639,
        "c*n": 19640,
        "10007": 19641,
        "c-se-1": 19642,
        "b-se*d": 19643,
        "----": 19644,
        "remnut": 19645,
        "remdiv": 19646,
        "newnut": 19647,
        "min(b": 19648,
        "min(k,": 19649,
        "setmin": 19650,
        "&x,": 19651,
        "setmax": 19652,
        "long)1e18": 19653,
        "239": 19654,
        "atan2(0,": 19655,
        "ABC": 19656,
        "cout.precision(20)": 19657,
        "int(1)": 19658,
        "int(a": 19659,
        "maxsecction": 19660,
        "lel": 19661,
        "b/(k-1)": 19662,
        "kvbox": 19663,
        "k*v*box": 19664,
        "onemore": 19665,
        "remn": 19666,
        "remd": 19667,
        "(mininum": 19668,
        "remd+1": 19669,
        "subract": 19670,
        "r*c": 19671,
        "taka": 19672,
        "(taka": 19673,
        "section=1": 19674,
        "section": 19675,
        "section=k": 19676,
        "section*v": 19677,
        "b+1": 19678,
        "v*c": 19679,
        "maxsec": 19680,
        "whiel": 19681,
        "x=b": 19682,
        "a-": 19683,
        "v*k": 19684,
        "(kk": 19685,
        "whil": 19686,
        "se*d": 19687,
        "b-x": 19688,
        "a-k*v": 19689,
        "(x+1)*v": 19690,
        "a-v": 19691,
        "shuwei,": 19692,
        "shuwei": 19693,
        "Num": 19694,
        "shu[increment": 19695,
        "shuwei]": 19696,
        "shu[i]": 19697,
        "p10,": 19698,
        "p9": 19699,
        "p10": 19700,
        "(p9": 19701,
        "p9,": 19702,
        "get_ref": 19703,
        "reflection": 19704,
        "argham": 19705,
        "(ref": 19706,
        "refrence": 19707,
        "get_ref(r)": 19708,
        "reflection(r)": 19709,
        "reflection(refrence)": 19710,
        "reflection(l)": 19711,
        "inicio,": 19712,
        "inicio": 19713,
        "(aux": 19714,
        "((int)(s).size()": 19715,
        "(9)": 19716,
        "phi(l),": 19717,
        "pr=": 19718,
        "phi(r)": 19719,
        "pl)": 19720,
        "5e6": 19721,
        "mirror(long": 19722,
        "v.push_back(v.back()": 19723,
        "max(l": 19724,
        "mirror(l),": 19725,
        "mirror(r))": 19726,
        "upper_bound(v.begin(),": 19727,
        "mirror(v[i]))": 19728,
        "nol,": 19729,
        "nor,": 19730,
        "nol": 19731,
        "sifr,": 19732,
        "maxr": 19733,
        "new_": 19734,
        "sifr": 19735,
        "(maxr": 19736,
        "length_r": 19737,
        "length_l": 19738,
        "1e": 19739,
        "ppow[0]": 19740,
        "ppow[i]": 19741,
        "ppow[i": 19742,
        "ppow[n]": 19743,
        "fun(t)": 19744,
        "max(javab,": 19745,
        "dd()": 19746,
        "g(l)": 19747,
        "g(r)": 19748,
        "g(t)": 19749,
        "bt(mid)": 19750,
        "bt(mid": 19751,
        "ch)": 19752,
        "max(k,": 19753,
        "long)5)": 19754,
        "long)5": 19755,
        "long)10": 19756,
        "long)1": 19757,
        "destroy": 19758,
        "check(mid": 19759,
        "l,r,temp,ans": 19760,
        "(99": 19761,
        "(999": 19762,
        "(9999": 19763,
        "(99999": 19764,
        "(999999": 19765,
        "(9999999": 19766,
        "(99999999": 19767,
        "(999999999": 19768,
        "(9999999999": 19769,
        "kpk": 19770,
        "__gcd(n,": 19771,
        "vec[a": 19772,
        "c/b": 19773,
        "vec[b": 19774,
        "k/s": 19775,
        "my_gcd": 19776,
        "my_gcd(y": 19777,
        "my_gcd(n,": 19778,
        "m=0,": 19779,
        "tempn,": 19780,
        "tempm": 19781,
        "tempn": 19782,
        "memset(a,": 19783,
        "sizeof(a))": 19784,
        "search_NOK": 19785,
        "search_NOK(first,": 19786,
        "second)": 19787,
        "chaning": 19788,
        "d3,": 19789,
        "d3": 19790,
        "a[d1": 19791,
        "a[d2": 19792,
        "gcs": 19793,
        "=x": 19794,
        "z/lcm": 19795,
        "minute": 19796,
        "(temp)": 19797,
        "j=b": 19798,
        "n,m,z,i=int,": 19799,
        "n,m,z": 19800,
        "x=n*m": 19801,
        "i*n": 19802,
        "a[i*n]=1,": 19803,
        "i*m": 19804,
        "a[i*m]": 19805,
        "int=0": 19806,
        "unfortunate": 19807,
        "banknotes": 19808,
        "scan": 19809,
        "powermod": 19810,
        "_a,": 19811,
        "_b,": 19812,
        "_m": 19813,
        "_r": 19814,
        "(_r": 19815,
        "_a)": 19816,
        "_a^2": 19817,
        "string_to_number": 19818,
        "convert(s)": 19819,
        "(a+b)": 19820,
        "x*y": 19821,
        "neg": 19822,
        "57)": 19823,
        "58": 19824,
        "shif": 19825,
        "left)": 19826,
        "n,t,flag=int": 19827,
        "vet[n]": 19828,
        "lista": 19829,
        "lista[0]": 19830,
        "lista[1]": 19831,
        ".1": 19832,
        "a1+b1+c1": 19833,
        "a1+n-min": 19834,
        "n-min-a3": 19835,
        "b1+n-min-a3": 19836,
        "c1+n-min-a3-b3": 19837,
        "n,array": 19838,
        "max1,max2,max3": 19839,
        "min(b[0],": 19840,
        "min(b[1],": 19841,
        "max2,": 19842,
        "min3,": 19843,
        "max3,": 19844,
        "given1,": 19845,
        "given2,": 19846,
        "given3": 19847,
        "min3": 19848,
        "given1": 19849,
        "given2": 19850,
        "S1,": 19851,
        "S2,": 19852,
        "S3": 19853,
        "S2": 19854,
        "max2)": 19855,
        "n,min1,max1,min2,max2,min3,max3": 19856,
        "min1,b": 19857,
        "min2,c": 19858,
        "min3,t": 19859,
        "mn1,": 19860,
        "mx1,": 19861,
        "mn2,": 19862,
        "mx2,": 19863,
        "mn3": 19864,
        "mx3": 19865,
        "mn2": 19866,
        "a(min1),b(min2),c(min3),t(min1": 19867,
        "min3)": 19868,
        "mn3,": 19869,
        "a[4][2]": 19870,
        "a[0][1],": 19871,
        "a[1][0],": 19872,
        "a[1][1],": 19873,
        "minn1,": 19874,
        "minn2,": 19875,
        "minn3,": 19876,
        "maxx1,": 19877,
        "maxx2,": 19878,
        "maxx3": 19879,
        "minn1": 19880,
        "maxx1": 19881,
        "minn2": 19882,
        "maxx2": 19883,
        "minn3": 19884,
        "a[10],s[10],t": 19885,
        "0,c": 19886,
        "s[i],a[i]": 19887,
        "p1,q1,p2,q2,p3,q3": 19888,
        "p1,b": 19889,
        "p2,c": 19890,
        "q3": 19891,
        "min1,min2,min3,max1,max2,max3": 19892,
        "S1,S2,S3": 19893,
        ",S2,": 19894,
        ",S3": 19895,
        "S!": 19896,
        "m3,": 19897,
        "(r2": 19898,
        "r3)": 19899,
        "ex1": 19900,
        "a1,a2,b1,b2,c1,c2": 19901,
        "mi[i]": 19902,
        "ma[i]": 19903,
        "whine": 19904,
        "a[5],": 19905,
        "b[5],": 19906,
        "min[i]": 19907,
        "max[i]": 19908,
        "min[1]": 19909,
        "min[2]": 19910,
        "max[0]": 19911,
        "max[1]": 19912,
        "mine1": 19913,
        "n,a1,a2,a3,b1,b2,b3": 19914,
        "a1,b1": 19915,
        "a2,b2": 19916,
        "a3,b3": 19917,
        "c1,c2,c3": 19918,
        "mi1,": 19919,
        "ma1,": 19920,
        "mi2,": 19921,
        "ma2,": 19922,
        "mi3,": 19923,
        "ma3": 19924,
        "mi1": 19925,
        "ma1": 19926,
        "ma2": 19927,
        "mi3": 19928,
        "mi2": 19929,
        "a[0][0],a[0][1],a[1][0],a[1][1],a[2][0],a[2][1]": 19930,
        "n,ad": 19931,
        "a[0][0],b": 19932,
        "a[1][0],c": 19933,
        "instruction": 19934,
        "n,i,min1,min2,min3,max1,max2,max3,s1": 19935,
        "0,s2": 19936,
        "0,s3": 19937,
        "min1,max1": 19938,
        "min2,max2": 19939,
        "min3,max3": 19940,
        "mas[1]": 19941,
        "mas[2]": 19942,
        "mas[3]": 19943,
        "max[2]": 19944,
        "(mas[2]": 19945,
        "(mas[3]": 19946,
        "mas[flag]": 19947,
        "x[3],": 19948,
        "x+3": 19949,
        "final[3]": 19950,
        "k/3": 19951,
        "lass": 19952,
        "(y[1]": 19953,
        "(y[2]": 19954,
        "(y[0]": 19955,
        "dim[0]": 19956,
        "dim[1]": 19957,
        "dim[2]": 19958,
        "salida": 19959,
        "side[0],": 19960,
        "side[1],": 19961,
        "side[2]": 19962,
        "(side[0]": 19963,
        "(side[1]": 19964,
        "(side[2]": 19965,
        "side[i]": 19966,
        "side[1]": 19967,
        "(arr[2]": 19968,
        "min(a[2]": 19969,
        "m[2];": 19970,
        "b[2": 19971,
        "(b[1]": 19972,
        "(b[2]": 19973,
        "template": 19974,
        "rk": 19975,
        "y[0],": 19976,
        "rm": 19977,
        "x*y*z": 19978,
        "a+3": 19979,
        "ave": 19980,
        "x[j": 19981,
        "(cnt2": 19982,
        "(cnt3": 19983,
        "cz,": 19984,
        "reutnrs": 19985,
        "(cx)": 19986,
        "(cy)": 19987,
        "(cz)": 19988,
        "n[1000],": 19989,
        "t*gcd": 19990,
        "seleccion": 19991,
        "v[m],": 19992,
        "x[i+1]": 19993,
        "rerurn": 19994,
        "__gcd(num[0],": 19995,
        "999999,": 19996,
        "immediate": 19997,
        "currgcd,": 19998,
        "currgcd": 19999,
        "gcd(arr[0],": 20000,
        "arr[1])": 20001,
        "gcd(t,": 20002,
        "derementing": 20003,
        "a[f],": 20004,
        "a[l],": 20005,
        "mgcd": 20006,
        "mgcd,": 20007,
        "hcf": 20008,
        "hcf(r,x[i])": 20009,
        "__gcd(gcd,n[i])": 20010,
        "array[0]": 20011,
        "__gcd(mini,": 20012,
        "array[i])": 20013,
        "a[maxn": 20014,
        "ans*": 20015,
        "__gcd(a[0],": 20016,
        "B[i]=1": 20017,
        "B[G[i][j]]": 20018,
        "dfs(G[i][j],": 20019,
        "B[x]=2": 20020,
        "B[y+1000]=2": 20021,
        "y+1000": 20022,
        "G[x]": 20023,
        "G[y+1000]": 20024,
        "connected=0": 20025,
        "dfs(i,G,B)": 20026,
        "connected-1": 20027,
        "adj[u][i]": 20028,
        "flag[v]": 20029,
        "passing": 20030,
        "led": 20031,
        "px": 20032,
        "py": 20033,
        "dx[i]": 20034,
        "dy[i]": 20035,
        "vis[px][py]": 20036,
        "dfs(px,": 20037,
        "py)": 20038,
        "posx": 20039,
        "posy": 20040,
        "from[x]": 20041,
        "from[i]": 20042,
        "(posx[x]": 20043,
        "posx[i]": 20044,
        "posy[x]": 20045,
        "posy[i])": 20046,
        "cot)": 20047,
        "posx[i],": 20048,
        "posy[i]": 20049,
        "q.push(i)": 20050,
        "visit[index]": 20051,
        "(x[index]": 20052,
        "y[index]": 20053,
        "y[j])": 20054,
        "!visit[j]": 20055,
        "q.push(j)": 20056,
        "q.pop()": 20057,
        "150,": 20058,
        "(x[s]": 20059,
        "y[s]": 20060,
        "p[k].first": 20061,
        "p[k].second)": 20062,
        "y[a])": 20063,
        "!v[i]),": 20064,
        "arr[103][103]": 20065,
        "dfs(long": 20066,
        "visited[],": 20067,
        "v[])": 20068,
        "v[i].size()": 20069,
        "(visited[v[i][j]]": 20070,
        "dfs(v[i][j],": 20071,
        "arr[j][0]": 20072,
        "dfs(int": 20073,
        "ath": 20074,
        "((x[i]": 20075,
        "notvis[i]),": 20076,
        "vis[i])": 20077,
        "dfs(i),": 20078,
        "posx[x]": 20079,
        "pox[i]": 20080,
        "posy[i],": 20081,
        "posxpi]": 20082,
        "visited[j]": 20083,
        "dfs(j)": 20084,
        "!visited[i]": 20085,
        "x[N],": 20086,
        "y[N],": 20087,
        "par[N]": 20088,
        "Find": 20089,
        "Find(par[i])": 20090,
        "Find(a)": 20091,
        "Find(b)": 20092,
        "par[a]": 20093,
        "Union(i,": 20094,
        "vst": 20095,
        "vst[u]": 20096,
        "vst[v]": 20097,
        "vst[i]": 20098,
        "INPUT,": 20099,
        "OUTPUT,": 20100,
        "c-string": 20101,
        "vis[node]": 20102,
        "a[node][0]": 20103,
        "a[node][1]": 20104,
        "a[i][1],": 20105,
        "iff": 20106,
        "cn[i]": 20107,
        "cn[j]": 20108,
        "(xs[i]": 20109,
        "xs[j]": 20110,
        "ys[i]": 20111,
        "ys[j])": 20112,
        "xs[i]": 20113,
        "posy[i]),": 20114,
        "a[a[i]]": 20115,
        "unio": 20116,
        "a[root(a,": 20117,
        "x)]": 20118,
        "root(a,": 20119,
        "parent[i]": 20120,
        "par(parent[i])": 20121,
        "unin": 20122,
        "ipar": 20123,
        "par(i)": 20124,
        "jpar": 20125,
        "par(j)": 20126,
        "parent[ipar]": 20127,
        "arr[j].first": 20128,
        "arr[j].second,": 20129,
        "mypow": 20130,
        "in(\"puteri6.in\")": 20131,
        "out(\"puteri6.out\")": 20132,
        "dfs(v[x][i])": 20133,
        "dr[i]": 20134,
        "dr[j]": 20135,
        "idx[i]": 20136,
        "idx[a]": 20137,
        "idx[fa]": 20138,
        "n+n/2": 20139,
        "soldier,": 20140,
        "st=stack": 20141,
        "n+(n2)": 20142,
        "inttostr": 20143,
        "file()": 20144,
        "dead": 20145,
        "item,": 20146,
        "n,item,temp": 20147,
        "m=(n*3)/2": 20148,
        "n*2-n/2": 20149,
        "(n/2)*3": 20150,
        "x+y,": 20151,
        "y-x,": 20152,
        "x-y,": 20153,
        "<0": 20154,
        "y,u": 20155,
        "j,f": 20156,
        "-u": 20157,
        "b,\"": 20158,
        "\",0": 20159,
        ",0": 20160,
        "\",(-1": 20161,
        "retrun": 20162,
        "+2)": 20163,
        "-(-y+x)": 20164,
        "-(x": 20165,
        "\",x2,\"": 20166,
        "\",x2,0": 20167,
        "\",-x2,\"": 20168,
        "-x2,\"": 20169,
        "\",x2": 20170,
        "\",-x2": 20171,
        ",(n": 20172,
        "-,(a": 20173,
        ",(m": 20174,
        "-,(n": 20175,
        "-,(abs(n)": 20176,
        "abs(m)),": 20177,
        "abs(m))": 20178,
        "-sum": 20179,
        "-sum,": 20180,
        ",x": 20181,
        ",0,endl": 20182,
        ",0,": 20183,
        ",-1": 20184,
        "y),endl": 20185,
        "y,endl": 20186,
        "-r,": 20187,
        "i,j,k=long": 20188,
        "n,m,x,y=long": 20189,
        "n=abs(x)": 20190,
        "m=abs(y)": 20191,
        "-n,": 20192,
        "-a,": 20193,
        "\",x": 20194,
        "-,-x": 20195,
        "-(-x": 20196,
        "(-y)),": 20197,
        "(y))": 20198,
        "(-y))": 20199,
        "-A": 20200,
        "abs(x1)": 20201,
        ",y1,": 20202,
        ",x2,": 20203,
        ",y2": 20204,
        "x,a": 20205,
        "mirrorup": 20206,
        "mirrorright": 20207,
        "ax,": 20208,
        "bj": 20209,
        "ck1": 20210,
        "to=": 20211,
        "aj,": 20212,
        "x+": 20213,
        "00": 20214,
        "-ans,": 20215,
        "-ans": 20216,
        "0,'": 20217,
        "',x": 20218,
        "y,'": 20219,
        "',0": 20220,
        "',-x": 20221,
        "y),'": 20222,
        "',0,'": 20223,
        "',-(x": 20224,
        "-tmp,": 20225,
        "-tmp": 20226,
        "10,maxm": 20227,
        "casn,n,m,k": 20228,
        "num[maxn]": 20229,
        "isPerfectSquare": 20230,
        "((sr": 20231,
        "floor(sr))": 20232,
        "floorSqrt": 20233,
        "isPerfectSquare(n)": 20234,
        "foo": 20235,
        "floorSqrt(n)": 20236,
        "b,a,i": 20237,
        "0,b": 20238,
        "num/ans": 20239,
        "156544555": 20240,
        "(div": 20241,
        "floor(sqrt(n))": 20242,
        "gcd(n)": 20243,
        "column,": 20244,
        "kiri": 20245,
        "kiri,": 20246,
        "n,i": 20247,
        "(t,": 20248,
        "5e5+5": 20249,
        "/ans": 20250,
        "x,a,b=int,": 20251,
        "hasil=10000": 20252,
        "sqrt(x)": 20253,
        "b=x/i": 20254,
        "hasil=b-a": 20255,
        "\"Danil\",": 20256,
        "\"Olya\",": 20257,
        "\"Slava\",": 20258,
        "\"Ann\",": 20259,
        "\"Nikita\"": 20260,
        "{\"Danil\",": 20261,
        "\"Nikita\"}": 20262,
        "nPos": 20263,
        "tab[_i]": 20264,
        "(set": 20265,
        "\"Danil\"": 20266,
        "NULL": 20267,
        "\"Olya\"": 20268,
        "\"Slava\"": 20269,
        "\"Ann\"": 20270,
        "str1[0][k]": 20271,
        "str1[1][k]": 20272,
        "str1[2][k]": 20273,
        "str1[3][k]": 20274,
        "'N'": 20275,
        "str1[4][k]": 20276,
        "d.find(\"Danil\")": 20277,
        "d.size()": 20278,
        "d[x": 20279,
        "d.find(\"Olya\")": 20280,
        "d.find(\"Slava\")": 20281,
        "d.find(\"Ann\")": 20282,
        "d.find(\"Nikita\")": 20283,
        "stings": 20284,
        "a[o]": 20285,
        "q(i,": 20286,
        "amigos": 20287,
        "amigos[i]": 20288,
        "Danil": 20289,
        "Olya": 20290,
        "Slava": 20291,
        "Ann": 20292,
        "Nikita": 20293,
        "s.find(a,": 20294,
        "s.find(b,": 20295,
        "s.find(c,": 20296,
        "s.find(d,": 20297,
        "s.find(e,": 20298,
        "str.find(s[i])": 20299,
        "str.npos": 20300,
        "(str.rfind(s[i])": 20301,
        "str.find(s[i]))": 20302,
        "Danil5,": 20303,
        "Olya4,": 20304,
        "Salva5,": 20305,
        "Ann3,": 20306,
        "Nikita6": 20307,
        "MAX_LEN": 20308,
        "buf[0],": 20309,
        "buf[1],": 20310,
        "buf[3],": 20311,
        "buf[2],": 20312,
        "buf[4],": 20313,
        "sum_mod": 20314,
        "subtract_mod": 20315,
        "multiply_mod": 20316,
        "modInverse": 20317,
        "divide_mod": 20318,
        "\"Nikita\",": 20319,
        "\"..............\"": 20320,
        "\"NO\\n\",": 20321,
        "GetNext": 20322,
        "Next[0]": 20323,
        "s1[k": 20324,
        "Next[k]": 20325,
        "s1[k+1]": 20326,
        "Next[i]": 20327,
        "kmp": 20328,
        "s2[k+1]": 20329,
        "len2-1": 20330,
        "friend_of_Alex": 20331,
        "friend_of_Alex[k],": 20332,
        "getInt(int": 20333,
        "*p)": 20334,
        "digit),": 20335,
        "mx_a": 20336,
        "mn_a": 20337,
        "mn_b": 20338,
        "mx_a,": 20339,
        "mx_": 20340,
        "12345678": 20341,
        "x[n-1],": 20342,
        "t,l,": 20343,
        "maxl": 20344,
        "ar1[0]": 20345,
        "ar1[i],": 20346,
        "INT_MIN,": 20347,
        "2*": 20348,
        "tra": 20349,
        "tra[j]": 20350,
        "ara[n": 20351,
        "tra[0],": 20352,
        "tra[0]": 20353,
        "5],": 20354,
        "b[m": 20355,
        "6]": 20356,
        "2*mn": 20357,
        "mmi": 20358,
        "wrong": 20359,
        "right[i]": 20360,
        "wrong[i]": 20361,
        "right[0]": 20362,
        "right[n-1],": 20363,
        "right[n-1]": 20364,
        "wrong[0]": 20365,
        "min_element": 20366,
        "Mina,": 20367,
        "Maxa,": 20368,
        "Maxa": 20369,
        "br[i]": 20370,
        "ar[n-1]": 20371,
        "br[0]-1": 20372,
        "insercion": 20373,
        "insercion(v,": 20374,
        "insercion(v2,": 20375,
        "-1],": 20376,
        "max(2": 20377,
        "va,": 20378,
        "min_n,": 20379,
        "min_m": 20380,
        "min_n": 20381,
        "2*min_n": 20382,
        "wong": 20383,
        "right[n": 20384,
        "wong[0]": 20385,
        "passed=vector": 20386,
        "failed=vector": 20387,
        "min1=99999999": 20388,
        "max1=-1": 20389,
        "min2=99999999": 20390,
        "x<min1": 20391,
        "min1=x": 20392,
        "x>max1": 20393,
        "max1=x": 20394,
        "failed": 20395,
        "x<min2": 20396,
        "min2=x": 20397,
        "answers=vector": 20398,
        "i=max1": 20399,
        "min1*2": 20400,
        "case,": 20401,
        "tolower(a[i])": 20402,
        "tolower(b[i])": 20403,
        "tolower(s1[i])": 20404,
        "tolower(s2[i])": 20405,
        "int(s1[i])": 20406,
        "int(s2[i])": 20407,
        "n,s=string": 20408,
        "n<s": 20409,
        "b=string": 20410,
        "strcmp(a,": 20411,
        "ac,": 20412,
        "capital": 20413,
        "n2s": 20414,
        "(n1[i]": 20415,
        "\\0)": 20416,
        "n1[i],": 20417,
        "Z)": 20418,
        "n1.size()": 20419,
        "n2[i])": 20420,
        "x.size": 20421,
        "a[97]": 20422,
        "str1,str2=string": 20423,
        "str1[i]>str2[i]": 20424,
        "str1[i]<str2[i]": 20425,
        "n.length()": 20426,
        "tolower(n[i])": 20427,
        "s1.size": 20428,
        "92,": 20429,
        "91": 20430,
        "y2-y1": 20431,
        "(x3": 20432,
        "(y3": 20433,
        "X1,": 20434,
        "X2,": 20435,
        "Y1,": 20436,
        "Y2,": 20437,
        "abs(X2": 20438,
        "X1)": 20439,
        "abs(Y2": 20440,
        "Y1)": 20441,
        "(X2": 20442,
        "(Y2": 20443,
        "ready": 20444,
        "((x2-x1)": 20445,
        "(y2-y1)": 20446,
        "y)%2": 20447,
        "num1)": 20448,
        "solveequal": 20449,
        "abs(x2-x1),": 20450,
        "abs(y2-y1)": 20451,
        "dx/x": 20452,
        "dy/y": 20453,
        "xa,": 20454,
        "ya,": 20455,
        "xb,": 20456,
        "yb,": 20457,
        "xa": 20458,
        "xb": 20459,
        "yb": 20460,
        "(xb": 20461,
        "yb)": 20462,
        "dfs(x": 20463,
        "my)": 20464,
        "(ny": 20465,
        "nx)": 20466,
        "((y2": 20467,
        "xa-xb": 20468,
        "(xa-xb)": 20469,
        "(ya-yb)": 20470,
        "y11,": 20471,
        "y11": 20472,
        "module": 20473,
        "i-j": 20474,
        "step1,": 20475,
        "step2": 20476,
        "raznstep": 20477,
        "isint": 20478,
        "(w*1.0/b)": 20479,
        "ae": 20480,
        "(val1": 20481,
        "(val2": 20482,
        "(x[1]": 20483,
        "(f2": 20484,
        "x1)/x": 20485,
        "y1)/y": 20486,
        "x2-x1": 20487,
        "num-num1": 20488,
        "xabs": 20489,
        "yabs": 20490,
        "xmoves": 20491,
        "ymoves": 20492,
        "tmpx": 20493,
        "abs(c": 20494,
        "tmpy": 20495,
        "abs(d": 20496,
        "(x2-x1)": 20497,
        "dx2": 20498,
        "(x2-x1)/x": 20499,
        "dy2": 20500,
        "(y2-y1)/y": 20501,
        "dy2*-1": 20502,
        "((x1": 20503,
        "(xx": 20504,
        "((xx": 20505,
        "(yy": 20506,
        "a,b,c,d,x,y": 20507,
        "(a/x)": 20508,
        "(b/y)": 20509,
        "(x1-x2)": 20510,
        "((the": 20511,
        "yy)": 20512,
        "strcmp(S1,": 20513,
        "S2)": 20514,
        "1.0e-5": 20515,
        "a,b,t=string,": 20516,
        "t1=\"1\"": 20517,
        "t=a": 20518,
        "maxn=200005": 20519,
        "inf=3fffffff": 20520,
        "MAX=2000000007": 20521,
        "cnk": 20522,
        "intgers": 20523,
        "weather": 20524,
        "number1,": 20525,
        "number2": 20526,
        "number1": 20527,
        "\"#Color\"": 20528,
        "\"#Black&White\"": 20529,
        "'Y'": 20530,
        "#Color": 20531,
        "#Black&White": 20532,
        "'C')": 20533,
        "'M')": 20534,
        "'Y')": 20535,
        "\"#Color\\n\"": 20536,
        "\"#Black&White\\n\"": 20537,
        "(ct": 20538,
        "M),": 20539,
        "(color)": 20540,
        "of:": 20541,
        "'W')": 20542,
        "rea": 20543,
        "nelse": 20544,
        "251": 20545,
        "clr": 20546,
        "Y)": 20547,
        "Map[i][j]": 20548,
        "upper_bound(a,": 20549,
        "cnt[idx]": 20550,
        "200500": 20551,
        "h[hh]": 20552,
        "sz]": 20553,
        "choose(n": 20554,
        "(int)y.size()": 20555,
        "can_do": 20556,
        "mid2,": 20557,
        "mid2": 20558,
        "h[mid]": 20559,
        "(n2": 20560,
        "h[iter]": 20561,
        "upper_bound(h": 20562,
        "book[temp]": 20563,
        "blocks": 20564,
        "vert": 20565,
        "horiz": 20566,
        "m[x2]": 20567,
        "m)->first": 20568,
        "blocks[i]": 20569,
        "INFTY": 20570,
        "V[N]": 20571,
        "H[j]": 20572,
        "x[++n]": 20573,
        "x2[i]": 20574,
        "lower_bound(v.begin(),": 20575,
        "x[i])": 20576,
        "hor[p[": 20577,
        "ver[i],": 20578,
        "Index": 20579,
        "flag[Index]": 20580,
        "vis[k],": 20581,
        "-j": 20582,
        "hang[increment": 20583,
        "hang[i]": 20584,
        "1e5+50": 20585,
        "upper_bound(u,": 20586,
        "b[k++]": 20587,
        "(ans)": 20588,
        "v[maxn]": 20589,
        "h[maxn]": 20590,
        "v+n": 20591,
        "hn=0": 20592,
        "x1=1,": 20593,
        "h[hn++]": 20594,
        "h+hn": 20595,
        "1e5+10": 20596,
        "k1[t]": 20597,
        "k1[j]": 20598,
        "\"First\"": 20599,
        "\"Second\"": 20600,
        "\"Second\\n\"": 20601,
        "\"First\\n\"": 20602,
        "\"Second\",": 20603,
        "=n1,n2,k1,k2": 20604,
        "n1,n2,k1,k2": 20605,
        "Second": 20606,
        "First.": 20607,
        "&ret": 20608,
        "dp[n1][n2][turn]": 20609,
        "~ret": 20610,
        "max(ret,": 20611,
        "rec(n1": 20612,
        "rec(n1,": 20613,
        "n1,n2,k1": 20614,
        "sor": 20615,
        "ar[a-1]": 20616,
        "ar[b-1]": 20617,
        "like=array": 20618,
        "33399": 20619,
        "like[i]": 20620,
        "like[like[like[i]]]": 20621,
        "a[a[a[i]]]": 20622,
        "a[a[a[a[i]]]]": 20623,
        "x[x[x[i]]]": 20624,
        "seq=array": 20625,
        "ans=false": 20626,
        "seq[seq[seq[i]]]": 20627,
        "ans=true": 20628,
        "f[f[f[i]]]": 20629,
        "5011": 20630,
        "checkTriangle": 20631,
        "f[tmp]": 20632,
        "5555": 20633,
        "input[i": 20634,
        "ng": 20635,
        "input[input[input[i]]]": 20636,
        "int[n": 20637,
        "GCD(b,": 20638,
        "(a*b)/GCD(a,b)": 20639,
        "intlog": 20640,
        "log(x)/log(base)": 20641,
        "slope": 20642,
        "(y2-y1)/(x2-x1)": 20643,
        "x1,y1,x2,y2,": 20644,
        "sqrt(pow(x2-x1,": 20645,
        "2)+pow(y2-y1,": 20646,
        "2)*1.0)": 20647,
        "dot_por": 20648,
        "v1*first": 20649,
        "v1*second": 20650,
        "length_of_vector": 20651,
        "sqrt(first": 20652,
        "v^2": 20653,
        "v^2)": 20654,
        "c[indx]": 20655,
        "c[indx]=true": 20656,
        "calc(a[indx]-1,": 20657,
        "t+1)": 20658,
        "a[a[a[a[i]-1]-1]-1]": 20659,
        "normally": 20660,
        "arr[arr[arr[i]]]": 20661,
        "f[f[i]]": 20662,
        "5100": 20663,
        "l[5100]": 20664,
        "l[l[l[l[i]]]]": 20665,
        "(a[y]": 20666,
        "5518": 20667,
        "(arr[arr[arr[i]]]": 20668,
        "v[v[v[i]-1]-1]-1": 20669,
        "'^',": 20670,
        "'>',": 20671,
        "'v',": 20672,
        "\"undefined\"": 20673,
        "pos1-pos2": 20674,
        "\"cw\"": 20675,
        "\"ccw\"": 20676,
        "{'^',": 20677,
        "'v'}": 20678,
        "'^'": 20679,
        "C[0": 20680,
        "4)]": 20681,
        "D[0": 20682,
        "\"undefined\\n\"": 20683,
        "\"cw\\n\"": 20684,
        "\"ccw\\n\"": 20685,
        "C[1": 20686,
        "D[3": 20687,
        "'v'": 20688,
        "C[2": 20689,
        "D[2": 20690,
        "C[3": 20691,
        "D[1": 20692,
        "cw": 20693,
        "ccw": 20694,
        "To": 20695,
        "To(s)": 20696,
        "To(e))": 20697,
        "To(e),": 20698,
        "firstLine=string": 20699,
        "firstLine": 20700,
        "end=first": 20701,
        "sum=start+end": 20702,
        "212": 20703,
        "n=n": 20704,
        "pos1,pos2=int": 20705,
        "pos1=0": 20706,
        "pos1=1": 20707,
        "pos1=2": 20708,
        "pos1=3": 20709,
        "pos2=0": 20710,
        "pos2=1": 20711,
        "pos2=2": 20712,
        "pos2=3": 20713,
        "(pos1+n)": 20714,
        "oka": 20715,
        "mp['v']": 20716,
        "mp['<']": 20717,
        "mp['^']": 20718,
        "mp['>']": 20719,
        "<,": 20720,
        "idxa,": 20721,
        "idxb": 20722,
        "idxa": 20723,
        "v[(idxa": 20724,
        "v[idxb": 20725,
        "^,": 20726,
        ">,": 20727,
        "C[i]),": 20728,
        "Go": 20729,
        "Go(A)": 20730,
        "Go(B)": 20731,
        "MOD(aa": 20732,
        "char_to_angle": 20733,
        "270": 20734,
        "char_to_angle(c2)": 20735,
        "-90": 20736,
        "-270": 20737,
        "i,p,q,d,k=long": 20738,
        "ky=\"v>^<\"": 20739,
        "ky[p]": 20740,
        "ky[q]": 20741,
        "d=(p+4-q)": 20742,
        "f(c1)": 20743,
        "f(c2)": 20744,
        "cek1": 20745,
        "cek2": 20746,
        "\"v<^>\"": 20747,
        "f4": 20748,
        "((f": 20749,
        "s1[f3]": 20750,
        "s1[f4]": 20751,
        "tep1": 20752,
        "tep2": 20753,
        "a1[i": 20754,
        "a2[i": 20755,
        "cw,": 20756,
        "number[u]": 20757,
        "number[v]": 20758,
        "number[w]": 20759,
        "number[x]": 20760,
        "number[oo]": 20761,
        "number[pp],": 20762,
        "[pp],": 20763,
        "readin": 20764,
        "of(b,": 20765,
        "a/1,": 20766,
        "t3=": 20767,
        "c/4": 20768,
        "banyaklemon": 20769,
        "banyakapel": 20770,
        "banyakpear": 20771,
        "/4": 20772,
        "+3": 20773,
        "n2;": 20774,
        "b-2": 20775,
        "c-4": 20776,
        "c/4))": 20777,
        "(b/2": 20778,
        "c/4)": 20779,
        "integer=a,b,c,mina,minb,minc,minn": 20780,
        "allocating": 20781,
        "bit)": 20782,
        "minc": 20783,
        "b/4": 20784,
        "7*": 20785,
        "aa*sum": 20786,
        "bb*sum": 20787,
        "cc*sum": 20788,
        "absi": 20789,
        "absl": 20790,
        "min(p2": 20791,
        "(mini": 20792,
        "tempa,": 20793,
        "tempb,": 20794,
        "tempb)": 20795,
        "s*7": 20796,
        "compote": 20797,
        "compote(a": 20798,
        "thenh": 20799,
        "compote(a,": 20800,
        "2*1": 20801,
        "*1": 20802,
        "Or": 20803,
        "n3)": 20804,
        "min(b/2,": 20805,
        "c/4),": 20806,
        "to(": 20807,
        "(7)": 20808,
        "a/1": 20809,
        "8888888890": 20810,
        "temp.str()": 20811,
        "mulMod": 20812,
        "addMod": 20813,
        "fast(a,b": 20814,
        "mulMod(tmp,": 20815,
        "mulMOd": 20816,
        "check(x+i)": 20817,
        "contain8": 20818,
        "\"8\\n\"": 20819,
        "nelwine": 20820,
        "10000000050": 20821,
        "eight": 20822,
        "eight(a": 20823,
        "checkDigit": 20824,
        "true;": 20825,
        "flr": 20826,
        "check(num)": 20827,
        "check(tmp),": 20828,
        "des,": 20829,
        "ex,": 20830,
        "-0)": 20831,
        "((des": 20832,
        "-8)": 20833,
        "isluck": 20834,
        "c8": 20835,
        "isluck(n)": 20836,
        "floorNum,": 20837,
        "floorToGo,": 20838,
        "floorNum": 20839,
        "floorToGo": 20840,
        "shouldContinue": 20841,
        "isLucky": 20842,
        "IN": 20843,
        "Number,": 20844,
        "Temp": 20845,
        "IN(Number": 20846,
        "tostr": 20847,
        "check_lucky": 20848,
        "check_lucky(": 20849,
        "!lucky": 20850,
        "array_size": 20851,
        "array_value": 20852,
        "array_positivo": 20853,
        "array_negativo": 20854,
        "array_positivo[array_value]": 20855,
        "array_negativo[array_value]": 20856,
        "count.insert(pair<int,": 20857,
        "int>(a[i],": 20858,
        "arr[100010],": 20859,
        "shile": 20860,
        "sun": 20861,
        "segundos": 20862,
        "mapa[a]": 20863,
        "einteger": 20864,
        "d[100010],": 20865,
        "strictly": 20866,
        "c[b]": 20867,
        "stricly": 20868,
        "(x),": 20869,
        "100010th": 20870,
        "z[a]": 20871,
        "f[-a]": 20872,
        "a+add": 20873,
        "f[a+add]": 20874,
        "arr[maxn],": 20875,
        "ar[maxn]": 20876,
        "ar[temp]": 20877,
        "arr[-temp]": 20878,
        "(unique": 20879,
        "2*100005": 20880,
        "Ai": 20881,
        "N-1": 20882,
        "vis[Ai]": 20883,
        "cont[a]": 20884,
        "a[100001]": 20885,
        "m1[a[i]]": 20886,
        "b[-x]": 20887,
        "v=set": 20888,
        "mark[s[p]": 20889,
        "f[s[i]": 20890,
        "(f[s[i]": 20891,
        "(f[i]),": 20892,
        "pos.size()": 20893,
        "s.length(),": 20894,
        "pos[j],": 20895,
        "long)8e18": 20896,
        "freq[c": 20897,
        "freq[q[i]": 20898,
        "q.substr(prev,": 20899,
        "prev)": 20900,
        "q.substr(i,": 20901,
        "(int)v.size()": 20902,
        "second[increment": 20903,
        "a.find('a'": 20904,
        "y[i": 20905,
        "m[s[j]]": 20906,
        "s[u]": 20907,
        "(cnt[s[i]": 20908,
        "\"\"),": 20909,
        "stdou": 20910,
        "F[s[p]": 20911,
        "F[s[c]": 20912,
        "a[length": 20913,
        "vis[s[i]": 20914,
        "concatenation": 20915,
        "a[q[i]": 20916,
        "arr.back()": 20917,
        "vii": 20918,
        "viii": 20919,
        "arr[s[0]": 20920,
        "ans(l,": 20921,
        "viii[i],": 20922,
        "viii[i]": 20923,
        "intger": 20924,
        "stored": 20925,
        "iss": 20926,
        "f[temp]": 20927,
        "vsz": 20928,
        "v[s[i]]": 20929,
        "w[i+1]-w[i],": 20930,
        "w[k-1],": 20931,
        "k,j": 20932,
        "k,s": 20933,
        "v.push_back(x": 20934,
        "v.size": 20935,
        "allAreSame": 20936,
        "printString": 20937,
        "S.length()": 20938,
        "allAreSame(S)": 20939,
        "printString(S)": 20940,
        "S1[i]": 20941,
        "S2[i]": 20942,
        "S1[0]": 20943,
        "S3[i]": 20944,
        "S2[0]": 20945,
        "\"+\"and": 20946,
        "size2": 20947,
        "final2": 20948,
        "op.length()": 20949,
        "(op[i]": 20950,
        "final.begin()": 20951,
        "final.end()": 20952,
        "final.insert((j": 20953,
        "totalc": 20954,
        "printC": 20955,
        "(printC": 20956,
        "totalc),": 20957,
        "(c3": 20958,
        "isalnum(name[i])": 20959,
        "isalnum(name[i": 20960,
        "name[j": 20961,
        "sizeof(arr[0])": 20962,
        "a=\"\"": 20963,
        "p=length": 20964,
        "arr[i]=a[i]-'0'": 20965,
        "i=p-1": 20966,
        "s.insert(i,": 20967,
        "\"+\")": 20968,
        "result1": 20969,
        "result2": 20970,
        "result3": 20971,
        "xay.length())": 20972,
        "(xay[i]": 20973,
        "insert(result1.length(),": 20974,
        "\"1\")": 20975,
        "insert(result2.length(),": 20976,
        "\"2\")": 20977,
        "insert(result3.length(),": 20978,
        "\"3\")": 20979,
        "result.length()": 20980,
        "result[i],": 20981,
        "satu,": 20982,
        "S[x]": 20983,
        "l-i-2": 20984,
        "j=j+2": 20985,
        "v[": 20986,
        "i+2,": 20987,
        "S=string,": 20988,
        "S1,S2,S3=\"\"": 20989,
        "\"+\",": 20990,
        "nums[0]": 20991,
        "a[t++]": 20992,
        "arr[o]": 20993,
        "k[i])": 20994,
        "t[i])": 20995,
        "abs(data[i]": 20996,
        "abs(i*2-1-a[i])": 20997,
        "abs(i*2-a[i])": 20998,
        "sum_black": 20999,
        "sum_white": 21000,
        "2));": 21001,
        "Black": 21002,
        "White": 21003,
        "blackAns": 21004,
        "whiteAns": 21005,
        "White(arr,": 21006,
        "whiteAns,": 21007,
        "qsort": 21008,
        "void)": 21009,
        "i,j,x=int": 21010,
        "x=a[(s+t)/2]": 21011,
        "i=s-1": 21012,
        "j=t+1": 21013,
        "a[i]<x": 21014,
        "a[j]>x": 21015,
        "i<j": 21016,
        "temp=a[i]": 21017,
        "a[i]=a[j]": 21018,
        "a[j]=temp": 21019,
        "(end": 21020,
        "if)": 21021,
        "i<=j": 21022,
        "qsort(a,i,t)": 21023,
        "s<j": 21024,
        "qsort(a,s,j)": 21025,
        "qsort(a,1,n/2)": 21026,
        "i=n/2": 21027,
        "abs(2*i-a[i])": 21028,
        "abs(2*i-1-a[i])": 21029,
        "ansj": 21030,
        "anso": 21031,
        "anso,": 21032,
        "abs(0": 21033,
        "abs(p[i])": 21034,
        "tab=array": 21035,
        "wynb": 21036,
        "wynw=0": 21037,
        "abs(tab[i]-(2*i-1))": 21038,
        "abs(tab[i]-2*i)": 21039,
        "wynw": 21040,
        "min(wynb,wynw)": 21041,
        "answ": 21042,
        "jb": 21043,
        "w[jw]": 21044,
        "jw++": 21045,
        "mov1": 21046,
        "mov2": 21047,
        "mov1,": 21048,
        "chess[x]": 21049,
        "abs(i*2+1-a[i])": 21050,
        "test_odd": 21051,
        "pos[(i": 21052,
        "test_even": 21053,
        "res_odd": 21054,
        "test_odd()": 21055,
        "res_even": 21056,
        "test_even()": 21057,
        "x:": 21058,
        "wait": 21059,
        "a,b,c,x=int,": 21060,
        "x=a*c": 21061,
        "cal=b+cal": 21062,
        "count-c": 21063,
        "data,": 21064,
        "mbs,": 21065,
        "vid": 21066,
        "mbs": 21067,
        "((data": 21068,
        "mbs)": 21069,
        "double)(ceil(c": 21070,
        "binarySearch": 21071,
        "med,": 21072,
        "ok(med)": 21073,
        "binarySearch()": 21074,
        "a.b.c=int,": 21075,
        "count=(a*c)/b-c": 21076,
        "count=(a*c)/b-c+1": 21077,
        "1e6,": 21078,
        "binary()": 21079,
        "cur=0": 21080,
        "mk=0,": 21081,
        "(ok(med))": 21082,
        "(a*c)-(b*c)": 21083,
        "ceil(x": 21084,
        "a,b,c,t=double": 21085,
        "t=(a*c-b*c)/b": 21086,
        "rounds": 21087,
        "((a-b)*c*1.0)/b": 21088,
        "n/b": 21089,
        "(n/b)": 21090,
        "((n/b)": 21091,
        "+1)": 21092,
        "a*c": 21093,
        "b*c": 21094,
        "sum/b": 21095,
        "sum/b+1": 21096,
        "(ceil": 21097,
        "a*b/b-c)": 21098,
        "up(": 21099,
        "a,b,c=int": 21100,
        "ans=((a-b)*c+b-1)/b": 21101,
        "((((a": 21102,
        "int)t": 21103,
        "0.000001),": 21104,
        "(req": 21105,
        "(a-b)*c": 21106,
        "needed": 21107,
        "selectionSorting": 21108,
        "numberofm": 21109,
        "numberofm(a,": 21110,
        "a[min]),": 21111,
        "a[min]": 21112,
        "12),": 21113,
        "a[indx]": 21114,
        "i[f": 21115,
        "i[f]": 21116,
        "i[a]": 21117,
        "merge_sort": 21118,
        "merge_sort(a,": 21119,
        "merge(a,": 21120,
        "fom": 21121,
        "a[low": 21122,
        "a[mid": 21123,
        "a[11": 21124,
        "total;": 21125,
        "month": 21126,
        "a[month]": 21127,
        "i,j,n=int,": 21128,
        "j=11": 21129,
        "truth": 21130,
        "month[i]": 21131,
        "arr[y": 21132,
        "pref[i][0]": 21133,
        "'A'))": 21134,
        "pref[i][j]": 21135,
        "pref[i][j": 21136,
        "int(s[j]": 21137,
        "pref[0][n": 21138,
        "pref[i][n": 21139,
        "'A']": 21140,
        "hash[0]": 21141,
        "m[s[i]": 21142,
        "char(y+65)": 21143,
        "throu": 21144,
        "arr[0]*k": 21145,
        "ap[int(s[i])": 21146,
        "64]": 21147,
        "inclusivem": 21148,
        "arr[x[i]": 21149,
        "minim": 21150,
        "father[x],": 21151,
        "count[i]": 21152,
        "count[s[j]": 21153,
        "atangent": 21154,
        "(b/result": 21155,
        "arguments)": 21156,
        "(truncated": 21157,
        "to_mod,": 21158,
        "to_mod": 21159,
        "moduloMultiplication": 21160,
        "(res+a)": 21161,
        "(2*a)": 21162,
        "tab[ch[i]": 21163,
        "arr[(int)s[i]": 21164,
        "65]": 21165,
        "a[x-64]": 21166,
        "letter[str[i]": 21167,
        "letter[1]": 21168,
        "arrOccur": 21169,
        "arrOccur[c-'a']": 21170,
        "arrOccur+k": 21171,
        "A]": 21172,
        "of(m,": 21173,
        "bk[s[i]": 21174,
        "bk[i]": 21175,
        "count[s[i]": 21176,
        "count[mini]": 21177,
        "count[i],": 21178,
        "make_pair(s[i],": 21179,
        "outside": 21180,
        "(mn)": 21181,
        "(len)": 21182,
        "('A')": 21183,
        "boox": 21184,
        "book[s[i]": 21185,
        "boox[s[i]": 21186,
        "miax": 21187,
        "boox[i]": 21188,
        "huruf[integer": 21189,
        "casted(s[i])]": 21190,
        "t[s[i]": 21191,
        "n_end": 21192,
        "311": 21193,
        "a[s[i]]": 21194,
        "sizeof(book)": 21195,
        "-3": 21196,
        "-4": 21197,
        "sets.size()": 21198,
        "d[i+1],": 21199,
        "Arr[i+1],": 21200,
        "q[x]": 21201,
        "kuda": 21202,
        "integesr": 21203,
        "m.size()": 21204,
        "shoes": 21205,
        "shoes[i]": 21206,
        "shoes[j]": 21207,
        "s++": 21208,
        "S[0],": 21209,
        "[0to3]": 21210,
        "=sum": 21211,
        "arr[j+1],": 21212,
        "arr[1+i],": 21213,
        "s;": 21214,
        "map[arr[i]]": 21215,
        "mp[ch]": 21216,
        "\"Incorrect\"": 21217,
        "\"Correct\"": 21218,
        "minr,": 21219,
        "maxr,": 21220,
        "reqrec": 21221,
        "\"Correct\",": 21222,
        "mnm": 21223,
        "mxm": 21224,
        "Correct": 21225,
        "Incorrect": 21226,
        "\"Incorrect\\n\"": 21227,
        "temps2add": 21228,
        "\"Correct\\n\"": 21229,
        "mark,": 21230,
        "mark)": 21231,
        "maxi=-2^30,": 21232,
        "mini=2^30,": 21233,
        "mx,mn,n,m,x=int": 21234,
        "n,m,mn,mx": 21235,
        "maxi=max(maxi,x),": 21236,
        "mini=min(mini,x)": 21237,
        "p=2-(1": 21238,
        "maxi>mx": 21239,
        "mini<mn": 21240,
        "Incorrect,": 21241,
        "n>=p": 21242,
        "minTemp": 21243,
        "maxTemp": 21244,
        "(minTempormaxTemp)": 21245,
        "f[v[i]]": 21246,
        "accumulate(f": 21247,
        "f[mx]": 21248,
        "assistantTemps": 21249,
        "assistantTemps[i]": 21250,
        "missingTemps": 21251,
        "tempRange": 21252,
        "a[m-1]": 21253,
        "simmin": 21254,
        "summax": 21255,
        "of.begin(),": 21256,
        "of.end()": 21257,
        "of[0]": 21258,
        "of[m": 21259,
        "max(t,": 21260,
        "ma),": 21261,
        "min(t,": 21262,
        "li=0": 21263,
        "cmn": 21264,
        "cmx": 21265,
        "(cmx": 21266,
        "(cmn": 21267,
        "n-m=1": 21268,
        "gmin,": 21269,
        "gmax": 21270,
        "gmin": 21271,
        "<gmin": 21272,
        "MI,": 21273,
        "Mi": 21274,
        "cnm=": 21275,
        "cmn,": 21276,
        "cmx,": 21277,
        "hmr": 21278,
        "hmn": 21279,
        "min(mnm,": 21280,
        "les": 21281,
        "cor": 21282,
        "tring": 21283,
        "a8i]": 21284,
        "b[1]))": 21285,
        "cmin": 21286,
        "cmax": 21287,
        "try-catch": 21288,
        "cmax,": 21289,
        "maxt,": 21290,
        "catch": 21291,
        "erorr": 21292,
        "cur_min": 21293,
        "cur_max": 21294,
        "vis_min": 21295,
        "vis_max": 21296,
        "record[m": 21297,
        "x-temp": 21298,
        "a-now>c": 21299,
        "sta1": 21300,
        "ofsta1": 21301,
        "only": 21302,
        "a[1000000]": 21303,
        "cur-x": 21304,
        "world": 21305,
        "sizeof(t)": 21306,
        "words[i": 21307,
        "words,": 21308,
        "c,n=int,": 21309,
        "N=1": 21310,
        "t[i]-t[i-1]": 21311,
        "data[0]": 21312,
        "data[i": 21313,
        "A[i]-A[i-1]": 21314,
        "a=t": 21315,
        "t-a": 21316,
        "n,c=long": 21317,
        "arr[i]-arr[i-1]": 21318,
        "\"zzzzzzzzzzzz\"": 21319,
        "s1[x]": 21320,
        "zzzzzzzzzzzz": 21321,
        "ss.substr(0,": 21322,
        "ss.length()": 21323,
        "zzzzzzzzzz": 21324,
        "fi.size()": 21325,
        "la.size()": 21326,
        "res2,": 21327,
        "\"zzzzzzzzzz\"": 21328,
        "zzzzzzzzzzz": 21329,
        "s1len": 21330,
        "s1.substr(0,": 21331,
        "f_name,": 21332,
        "l_name,": 21333,
        "f_name": 21334,
        "l_name": 21335,
        "f_name[0]": 21336,
        "f_name[i]": 21337,
        "l_name[0]": 21338,
        "fir,": 21339,
        "fir[0]": 21340,
        "la[0]": 21341,
        "fir.size()": 21342,
        "fir[i]": 21343,
        "\"zzzzzzzzzzzzzzzzzzzz\"": 21344,
        "yeet": 21345,
        "b[next]": 21346,
        "s2[0],": 21347,
        "ss[flag]": 21348,
        "mp[tmp1]": 21349,
        "s1[increment": 21350,
        "\"z\"": 21351,
        "in[100]": 21352,
        "k[]": 21353,
        "qwertyuiopasdfghjkl;zxcvbnm,./": 21354,
        "c=L": 21355,
        "k[j": 21356,
        "left_rigth": 21357,
        "\"qwertyuiop\"": 21358,
        "\"asdfghjkl;\"": 21359,
        "\"zxcvbnm,./\"": 21360,
        "u[j": 21361,
        "m[j]": 21362,
        "m[j": 21363,
        "\"qwertyuiop\",": 21364,
        "s1[j][a": 21365,
        "\"qwertyuiopasdfghjkl;zxcvbnm,./\"": 21366,
        "s1[find": 21367,
        "order[i]": 21368,
        "pos(a[i],": 21369,
        "order[p]": 21370,
        "putR": 21371,
        "putL": 21372,
        "putR(s1,": 21373,
        "putL(s1,": 21374,
        "n=\"qwertyuiopasdfghjkl;zxcvbnm,./\"": 21375,
        "t,s=string,": 21376,
        "r=\"\"": 21377,
        "t,s": 21378,
        "n[j-1]": 21379,
        "n[j+1]": 21380,
        "\"qwertyuiopasdfghjkl;zxcvbnm,.": 21381,
        "str=string,": 21382,
        "s=\"qwertyuiopasdfghjkl;zxcvbnm,./\",": 21383,
        "newS=\"\"": 21384,
        "ind=int,": 21385,
        "j=-1": 21386,
        "ind=pos": 21387,
        "s[ind+j]": 21388,
        "newS": 21389,
        "{\"qwertyuiop\",": 21390,
        "\"asdfghjkl;\",": 21391,
        "\"zxcvbnm,./\"}": 21392,
        "ss[j][k],": 21393,
        "ss[j][k-1]": 21394,
        "ss[j][k+1]": 21395,
        "x[35]": 21396,
        "s1[105]": 21397,
        "excluvie": 21398,
        "x[l]),": 21399,
        "x[l": 21400,
        "x[l]": 21401,
        "x[l+1]": 21402,
        "way,": 21403,
        "way[0]": 21404,
        "[i],": 21405,
        "ss[j+x]": 21406,
        "z[j": 21407,
        "aset": 21408,
        "mole": 21409,
        "lim2": 21410,
        "mole[i]": 21411,
        "'q',": 21412,
        "aset[j],": 21413,
        "aset[j": 21414,
        "';'": 21415,
        "check[(index": 21416,
        "check)": 21417,
        "check]": 21418,
        "s[]": 21419,
        "a[111]": 21420,
        "n[j": 21421,
        "s,c=string": 21422,
        "s1=\"qwertyuiopasdfghjkl;zxcvbnm,./\"": 21423,
        "s1[j-1]": 21424,
        "s1[j+1]": 21425,
        "5][n": 21426,
        "o),": 21427,
        "mp[j": 21428,
        "mp[j][i": 21429,
        "a[nx][ny]": 21430,
        "(1,": 21431,
        "sizeof(mp)": 21432,
        "mp[j-1][i]": 21433,
        "mp[j+1][i]": 21434,
        "mp[j][i-1]": 21435,
        "mp[j][i+1]": 21436,
        "c[x": 21437,
        "c[x][y": 21438,
        "charcters": 21439,
        "nx,": 21440,
        "dx[k],": 21441,
        "(nx": 21442,
        "data[i][j": 21443,
        "}();": 21444,
        "(s[j": 21445,
        "s,s1,s2=string": 21446,
        "s2=s1": 21447,
        "string1": 21448,
        "string2": 21449,
        "string1[i]": 21450,
        "string2[i]": 21451,
        ",l2": 21452,
        "l1[i]": 21453,
        "l2[i]": 21454,
        "addBinary": 21455,
        "st1[i]": 21456,
        "ch[0][0]": 21457,
        "ch[0][i]": 21458,
        "ch[1][i]": 21459,
        "share": 21460,
        "chal": 21461,
        "*arr2": 21462,
        "*res": 21463,
        "sq[i]": 21464,
        ",p2": 21465,
        "p1[x]": 21466,
        "p2[x]": 21467,
        "sL": 21468,
        "s2L": 21469,
        "avai": 21470,
        "sup[sup.size()": 21471,
        "n,m,k,p,i=int,": 21472,
        "p=k": 21473,
        "p<m": 21474,
        "v[n-1]": 21475,
        "getmax": 21476,
        "f.size()": 21477,
        "f.begin()": 21478,
        "getmax()": 21479,
        "greater<int>": 21480,
        "a[50]": 21481,
        "n-j": 21482,
        "n,m,k=int,a=array": 21483,
        "sum,i=0": 21484,
        "n,m,k,": 21485,
        "sum+(k-n)<m": 21486,
        "k<m": 21487,
        "x=m-k+1,": 21488,
        "sum+a[i]>=x": 21489,
        "arr[51]": 21490,
        "a[i-1]-1": 21491,
        "vis[i": 21492,
        "(int)s.size()": 21493,
        "VK": 21494,
        "-135": 21495,
        "sum()": 21496,
        "state[i]": 21497,
        "state[i": 21498,
        "jud": 21499,
        "ans+flag": 21500,
        "pow_base,": 21501,
        "pow_base": 21502,
        "\"VK\"": 21503,
        "ihash[i": 21504,
        "flag[i": 21505,
        "6e2": 21506,
        "t[p]": 21507,
        "'V',": 21508,
        "1'": 21509,
        "str[t]": 21510,
        "str[t": 21511,
        "vis[t]": 21512,
        "vis[t": 21513,
        "10050": 21514,
        "cin.get())": 21515,
        "len]": 21516,
        "vis[len": 21517,
        "\"VV\"": 21518,
        "\"KK\"": 21519,
        "bit[j]": 21520,
        "bit[1]": 21521,
        "\"X++\"": 21522,
        "\"++X\"": 21523,
        "\"--X\"": 21524,
        "\"X--\"": 21525,
        "X++": 21526,
        "++X": 21527,
        "x(0)": 21528,
        "'+')": 21529,
        "Check_operation": 21530,
        "statement[i]": 21531,
        "Run_Statements": 21532,
        "statmnts,": 21533,
        "Statement": 21534,
        "statmnts[itr]": 21535,
        "Operation": 21536,
        "Operations": 21537,
        "statements": 21538,
        "statements[itr]": 21539,
        "statements,": 21540,
        "etween": 21541,
        "\"++X\",": 21542,
        "\"--X\",": 21543,
        "op[1]": 21544,
        "enc": 21545,
        "(enc[i])": 21546,
        "t[10]": 21547,
        "enc[k],": 21548,
        "m[d]": 21549,
        "digit[0]": 21550,
        "digit[i]": 21551,
        "steal": 21552,
        "*10)": 21553,
        "digit[j]": 21554,
        "dg[i]": 21555,
        "dg[j][k]": 21556,
        "sol[i]": 21557,
        "password,": 21558,
        "rope": 21559,
        "S1[10]": 21560,
        "S1[10": 21561,
        "binarycoding": 21562,
        "binarycoding[i]": 21563,
        "c.substr(i": 21564,
        "sizeof(digit)": 21565,
        "sizeof(digit[0])": 21566,
        "M[words]": 21567,
        "b[j][x++]": 21568,
        "h[l++]": 21569,
        "mp[p]": 21570,
        "79": 21571,
        "mp[s.substr(i,": 21572,
        "10)]": 21573,
        "a.substr(i": 21574,
        "yy[10]": 21575,
        "zz[j],": 21576,
        "yy[a]": 21577,
        "bincode": 21578,
        "codes": 21579,
        "codes[i]": 21580,
        "sub[c++]": 21581,
        "bincode.substr(i,": 21582,
        "sub[i]": 21583,
        "codes[f]": 21584,
        "exclusisve,": 21585,
        "s2[j])": 21586,
        "insert(0,": 21587,
        "sizeof(digit[0]),": 21588,
        "starts": 21589,
        "charactes": 21590,
        "m[temp]": 21591,
        "pass[i*10]": 21592,
        "pass[i*10": 21593,
        "comb[j],": 21594,
        "n=array": 21595,
        "sp=0": 21596,
        "c=substring": 21597,
        "str.size(),": 21598,
        "Incremetn": 21599,
        "char(m[str.substr(i,": 21600,
        "encoded": 21601,
        "code[s]": 21602,
        "encoded.substr(i": 21603,
        "'h')": 21604,
        "a8": 21605,
        "h8": 21606,
        "pos[1]": 21607,
        "(pos[0]": 21608,
        "(S[0]": 21609,
        "(S[1]": 21610,
        "'8')": 21611,
        "dc[i]": 21612,
        "Found": 21613,
        "Found(x": 21614,
        "Found(x,": 21615,
        "\"a1\"": 21616,
        "\"a8\"": 21617,
        "\"h1\"": 21618,
        "\"h8\"": 21619,
        "<'h')": 21620,
        "h),": 21621,
        "8),": 21622,
        "\"3\\n\"": 21623,
        "a7": 21624,
        "a6": 21625,
        "a5": 21626,
        "h7": 21627,
        "h6": 21628,
        "h5": 21629,
        "h4": 21630,
        "h3": 21631,
        "b8": 21632,
        "d8": 21633,
        "e8": 21634,
        "f8": 21635,
        "g8": 21636,
        "\"a8\",": 21637,
        "\"a1\",": 21638,
        "{8,": 21639,
        "3}": 21640,
        "(int)s[1]": 21641,
        "(maxnum": 21642,
        "num))": 21643,
        "(l,": 21644,
        "l,r,a": 21645,
        "a/2": 21646,
        "r+": 21647,
        "1+a/2": 21648,
        "l+a": 21649,
        "ex2": 21650,
        "r.": 21651,
        "Otherwise,": 21652,
        "x*2": 21653,
        "*2": 21654,
        "(min(l,": 21655,
        "v[b[i]]": 21656,
        "v[a[i]]": 21657,
        "a[i1]": 21658,
        "a[i1": 21659,
        "BIT,": 21660,
        "arr[s2[i]]": 21661,
        "arr[s1[i]]": 21662,
        "arr[s1[i": 21663,
        "3.141592653589793238L": 21664,
        "0.57721566490153286060651209": 21665,
        "position[b[i]]": 21666,
        "position[a[i]]": 21667,
        "position[a[i": 21668,
        "max)": 21669,
        "OO=": 21670,
        "bith": 21671,
        "200010,": 21672,
        "pos[A[i]]": 21673,
        "A[pos[B[i]]]": 21674,
        "A[top": 21675,
        "mark[i-1]": 21676,
        "ans[cur]": 21677,
        "mark[cur]": 21678,
        "A[ans]": 21679,
        "510": 21680,
        "pos[v2[i]]": 21681,
        "pos[v1[i]]": 21682,
        "pos[v1[i": 21683,
        "p2[j]": 21684,
        "arr1[j]": 21685,
        "ve1,": 21686,
        "ve2": 21687,
        "ve1": 21688,
        "ve2[x]": 21689,
        "ve1[i]": 21690,
        "ve2[ve1[i]]": 21691,
        "B[i],": 21692,
        "BIT": 21693,
        "updt": 21694,
        "BIT[idx]": 21695,
        "(idx": 21696,
        "-idx": 21697,
        "qry": 21698,
        "BIT[idx],": 21699,
        "-idx)": 21700,
        "pos[arr[i]]": 21701,
        "pos[brr[i]]": 21702,
        "idx_b,": 21703,
        "idx_a": 21704,
        "idx_b": 21705,
        "idx_b[b[i]]": 21706,
        "idx_b[a[i]]": 21707,
        "c[b[i]]": 21708,
        "c[a[i": 21709,
        "s[1][i]": 21710,
        "mxd": 21711,
        "s[0][qi]": 21712,
        "s[1][ci],": 21713,
        "q[s[1][i]]": 21714,
        "q[s[0][j]]": 21715,
        "max(3": 21716,
        "\"Misha\"": 21717,
        "\"Vasya\"": 21718,
        "\"Tie\"": 21719,
        "250.": 21720,
        "\"Misha\",": 21721,
        "\"Tie\",": 21722,
        "misha,": 21723,
        "vasya": 21724,
        "misha": 21725,
        "3*a/10": 21726,
        "Misha": 21727,
        "Vasya": 21728,
        "Tie": 21729,
        "3*b/10": 21730,
        "find_max": 21731,
        "max(((3": 21732,
        "250)": 21733,
        "t)))": 21734,
        "find_max(a,": 21735,
        "find_max(b,": 21736,
        "vashya": 21737,
        "a,b,c,d,m,v=int": 21738,
        "m=max((3*a)/10,": 21739,
        "a-(a/250)*c)": 21740,
        "v=max((3*b)/10,": 21741,
        "b-(b/250)*d)": 21742,
        "m>v": 21743,
        "MAX=200001": 21744,
        "mmin=c0c0c0c0": 21745,
        "mmax=3f3f3f3f": 21746,
        "An=array": 21747,
        "a,b,c,d=int": 21748,
        "t1=max(3*a/10,": 21749,
        "a-a*c/250)": 21750,
        "t2=max(3*b/10,": 21751,
        "b-b*d/250)": 21752,
        "t1>t2": 21753,
        "contV": 21754,
        "contM": 21755,
        "a,b,c,d,sm,sv": 21756,
        "max((3": 21757,
        "((3": 21758,
        "250))": 21759,
        "mpoints": 21760,
        "vpoints": 21761,
        "\"Misha\\n\"": 21762,
        "\"Vasya\\n\"": 21763,
        "\"Tie\\n\"": 21764,
        "c)))": 21765,
        "d)))": 21766,
        "(3.0": 21767,
        "10.0": 21768,
        "250.0": 21769,
        "Mcost,": 21770,
        "Vcost,": 21771,
        "Mtime,": 21772,
        "Vtime": 21773,
        "Mcost)": 21774,
        "Mcost": 21775,
        "(Mcost": 21776,
        "Mtime)": 21777,
        "Vcost)": 21778,
        "Vcost": 21779,
        "(Vcost": 21780,
        "Vtime)": 21781,
        "p1,p2,m1,m2=double": 21782,
        "p1,p2,m1,m2": 21783,
        "ans2=int": 21784,
        "ans1=max(((3*p1)": 21785,
        "m1))": 21786,
        "ans=max(((3*p2)": 21787,
        "(p2": 21788,
        "(3*a)/10": 21789,
        "(3*b)/10": 21790,
        "mymap[a[i]]": 21791,
        "a[_min]),": 21792,
        "(mymap[a[_min]]": 21793,
        "Still": 21794,
        "Rozdil": 21795,
        "pow(10.0,": 21796,
        "9.0)": 21797,
        "more_than1": 21798,
        "\"Still": 21799,
        "Rozdil\"": 21800,
        "100007,": 21801,
        "m=min": 21802,
        "searching": 21803,
        "it+1": 21804,
        "b.second,": 21805,
        "area": 21806,
        "abs((x1": 21807,
        "y3)": 21808,
        "mnind": 21809,
        "mp[mn]": 21810,
        "p[b]": 21811,
        "min_value": 21812,
        "min_pas": 21813,
        "min_pos": 21814,
        "*min_element(vec.begin(),": 21815,
        "vec.end())": 21816,
        "cityNo": 21817,
        "1000000005,": 21818,
        "flage": 21819,
        "fmod(b,": 21820,
        "heap": 21821,
        "Freq,": 21822,
        "Min=A[0],": 21823,
        "Freq": 21824,
        "28,": 21825,
        "a[13]": 21826,
        "0,31,28,31,30,31,30,31,31,30,31,30,31": 21827,
        "(a[m]": 21828,
        "hari[n]": 21829,
        "set_month": 21830,
        "month[1]": 21831,
        "month[2]": 21832,
        "month[3]": 21833,
        "month[4]": 21834,
        "month[5]": 21835,
        "month[6]": 21836,
        "month[7]": 21837,
        "month[8]": 21838,
        "month[9]": 21839,
        "month[10]": 21840,
        "month[11]": 21841,
        "month[12]": 21842,
        "month[m]": 21843,
        "months=array": 21844,
        "x=months[a-1]+b-1": 21845,
        "x/7+1": 21846,
        "x/7": 21847,
        "31}": 21848,
        "month[m]/7": 21849,
        "x+2": 21850,
        "total[m]": 21851,
        "m31": 21852,
        "12}": 21853,
        "m30": 21854,
        "11}": 21855,
        "m28": 21856,
        "m31[i]": 21857,
        "thenset": 21858,
        "double(31": 21859,
        "double(30": 21860,
        "double(28": 21861,
        "(res)": 21862,
        "(31": 21863,
        "(28": 21864,
        "(30": 21865,
        "((31": 21866,
        "((30": 21867,
        "months": 21868,
        "firstDay": 21869,
        "dayAmount": 21870,
        "months[month": 21871,
        "mnth": 21872,
        "totalday": 21873,
        "arr[mnth]": 21874,
        "otherday": 21875,
        "\"6\"": 21876,
        "month[m": 21877,
        "lonr": 21878,
        "!!(K": 21879,
        "day[n]": 21880,
        "mequals": 21881,
        "1,3,5,7,8,10,": 21882,
        "a[0][m]": 21883,
        "{31,": 21884,
        "(a[m": 21885,
        "elapsed": 21886,
        "a=x[a]-1": 21887,
        "m,w": 21888,
        "daysPerMonth[13]": 21889,
        "daysPerMonth[m]": 21890,
        "(w": 21891,
        "dres": 21892,
        "(double)days": 21893,
        "res++": 21894,
        "day[m": 21895,
        "week": 21896,
        "time=240-k": 21897,
        "sum+(count+1)*5": 21898,
        "count*5": 21899,
        "sub=240-k": 21900,
        "res=k+5*i": 21901,
        "240": 21902,
        "5*i": 21903,
        "sum+i*5": 21904,
        "+i*5": 21905,
        "n,k,i=int,": 21906,
        "ar[0]=5*1": 21907,
        "ar[1]=5*2": 21908,
        "ar[2]=5*3": 21909,
        "ar[3]=5*4": 21910,
        "ar[4]=5*5": 21911,
        "ar[5]=5*6": 21912,
        "ar[6]=5*7": 21913,
        "ar[7]=5*8": 21914,
        "ar[8]=5*9": 21915,
        "ar[9]=5*10": 21916,
        "k=4*60-k": 21917,
        "temp<k": 21918,
        "Tim": 21919,
        "Rem": 21920,
        "lonts": 21921,
        "n_problems": 21922,
        "time_left": 21923,
        "(240": 21924,
        "check(k,": 21925,
        "res(n,": 21926,
        "241": 21927,
        "time[0]": 21928,
        "mnts": 21929,
        "integerssum": 21930,
        "mnts,": 21931,
        "60*4": 21932,
        "i*5": 21933,
        "(-2": 21934,
        ")/10": 21935,
        "(((5": 21936,
        "floor((-1": 21937,
        "sqrt(1": 21938,
        "problems,": 21939,
        "travel,": 21940,
        "mean": 21941,
        "problems": 21942,
        "travel": 21943,
        "240-k": 21944,
        "solve-1": 21945,
        "(24": 21946,
        "(h)": 21947,
        "7),": 21948,
        "(judge(i))": 21949,
        "m-x": 21950,
        "x1,x0=char,": 21951,
        "x=int,": 21952,
        "t[3],": 21953,
        "x0=x": 21954,
        "x1=x/10": 21955,
        "t[0]<'0'": 21956,
        "t[1]<'0'": 21957,
        "t[2]<'0'": 21958,
        "t[3]<'0'": 21959,
        "t[3]='3',": 21960,
        "(check(h)": 21961,
        "check(m))": 21962,
        "judge(i)": 21963,
        "functino": 21964,
        "ju7": 21965,
        "ag": 21966,
        "(ju7(h,": 21967,
        "C7": 21968,
        "C7(hh)": 21969,
        "C7(mm)": 21970,
        "!(C7(hh)": 21971,
        "C7(mm))": 21972,
        "modulor": 21973,
        "f(h)": 21974,
        "f(m)": 21975,
        "digsum": 21976,
        "n>0": 21977,
        "x,h,m,ans=int": 21978,
        "x,h,m": 21979,
        "ok(h)": 21980,
        "m<0": 21981,
        "h<0": 21982,
        "m<=": 21983,
        "h<0,": 21984,
        "ins't": 21985,
        "hby": 21986,
        "lucky(h)": 21987,
        "lucky(m))": 21988,
        "24)": 21989,
        "CalTime": 21990,
        "(tag": 21991,
        "(hh": 21992,
        "95": 21993,
        "1006": 21994,
        "push_back(cur": 21995,
        "word[0]": 21996,
        "word[i+1]": 21997,
        "word[n-1]": 21998,
        "max.": 21999,
        "dynamic": 22000,
        "v's": 22001,
        "a[100005]": 22002,
        "b[100005]": 22003,
        "ns[i]": 22004,
        "ns[i": 22005,
        "maxLen,": 22006,
        "maxLen": 22007,
        "amx": 22008,
        "[j": 22009,
        "maxSize": 22010,
        "N=int,": 22011,
        "int,days=1,b=1": 22012,
        "days=1": 22013,
        "days>b": 22014,
        "b=days": 22015,
        "maxcount": 22016,
        "l(1),": 22017,
        "ml(1)": 22018,
        "profits[n]": 22019,
        "profits[i]": 22020,
        "profits[i-1]": 22021,
        "y=x": 22022,
        "lenght[1000]": 22023,
        "money[n]": 22024,
        "money[i]": 22025,
        "money[i": 22026,
        "max=1": 22027,
        "(counter": 22028,
        "siize": 22029,
        "n+": 22030,
        "maxle": 22031,
        "buf,": 22032,
        "mret": 22033,
        "otherwise;": 22034,
        "solve(0)": 22035,
        "a[curr]": 22036,
        "n,t,a,temp": 22037,
        "1,i": 22038,
        "emp": 22039,
        "v[temp": 22040,
        "num[start]": 22041,
        "n,d=int64_t": 22042,
        "-2}": 22043,
        "s[now]": 22044,
        "i<m": 22045,
        "port": 22046,
        "visit[now]": 22047,
        "dfs(now": 22048,
        "port[now],": 22049,
        "sizeof(visit)": 22050,
        "dfs(0,": 22051,
        "num[i-1]": 22052,
        "a[n],": 22053,
        "llega": 22054,
        "n,t,i,k": 22055,
        "(int)1e5": 22056,
        "que.front()": 22057,
        "adj[cur]": 22058,
        "que.push(adj[cur][i])": 22059,
        "solve(k)": 22060,
        "reach": 22061,
        "check(A)": 22062,
        "adj=array": 22063,
        "100006": 22064,
        "que=queue": 22065,
        "cur=first": 22066,
        "adj[cur][i]": 22067,
        "i+arr[i]": 22068,
        "ans=solve(k)": 22069,
        "g[a]": 22070,
        "k<=m": 22071,
        "cell,": 22072,
        "line[g]": 22073,
        "integeer": 22074,
        "nPr": 22075,
        "lonng": 22076,
        "letting": 22077,
        "cell[i]": 22078,
        "DFS(i": 22079,
        "cell[i])": 22080,
        "n,t)": 22081,
        "DFS(1)": 22082,
        "vec.size()": 22083,
        "'R')": 22084,
        "'U')": 22085,
        "\"UR\"": 22086,
        "ch[i+1]": 22087,
        "n-res": 22088,
        "l[in]": 22089,
        "r[in]": 22090,
        "accumulate(a.begin(),": 22091,
        "a.end(),": 22092,
        "s_pro": 22093,
        "pro[i]": 22094,
        "pro[a]": 22095,
        "ggg": 22096,
        "longarray": 22097,
        "szie": 22098,
        "l[j],": 22099,
        "r[t": 22100,
        "a[1005],": 22101,
        "a[1100],": 22102,
        "b[1100][2],": 22103,
        "b[j][0]": 22104,
        "siz=200010": 22105,
        "m,li,ri=long": 22106,
        "ans=-1": 22107,
        "li,ri": 22108,
        "ans=max(sum,": 22109,
        "li)": 22110,
        "auxl,": 22111,
        "auxr": 22112,
        "sinoutput": 22113,
        "auxl": 22114,
        "+ai": 22115,
        "fast_in_out": 22116,
        "pause": 22117,
        "squared,": 22118,
        "fast_in_out()": 22119,
        "pause()": 22120,
        "l,r=int,": 22121,
        "s[index],": 22122,
        "index_s": 22123,
        "s[index_s]": 22124,
        "t=string": 22125,
        "d=1": 22126,
        "s1[++k]": 22127,
        "s1[q]": 22128,
        "j=x,": 22129,
        "x=j": 22130,
        "indefinitely,": 22131,
        "isl": 22132,
        "isu": 22133,
        "isa": 22134,
        "isl(c)": 22135,
        "isu(c)": 22136,
        "isn": 22137,
        "isan": 22138,
        "isa(c)": 22139,
        "isn(c)": 22140,
        "isv": 22141,
        "c='u'": 22142,
        "tolow": 22143,
        "isu(s[i])": 22144,
        "toup": 22145,
        "isl(s[i])": 22146,
        "t.size()": 22147,
        "s[iter]": 22148,
        "x1[ans]": 22149,
        "x2[i],": 22150,
        "s[ans]": 22151,
        "inst": 22152,
        "cha[pos]": 22153,
        "inst[i],": 22154,
        "lastPos": 22155,
        "s[ctr": 22156,
        "s1[k],": 22157,
        "++pos": 22158,
        "instr": 22159,
        "path[pos": 22160,
        "instr[i],": 22161,
        "couner": 22162,
        "S[couner]": 22163,
        "a[52],": 22164,
        "b[52]": 22165,
        "lenb,": 22166,
        "s[ans": 22167,
        "move[i]": 22168,
        "line[l]": 22169,
        "s[str],": 22170,
        "abs(s)": 22171,
        "!sum": 22172,
        "abs(sum)": 22173,
        "(int)(abs(sum)": 22174,
        "abs(t)/x": 22175,
        "abs(t)": 22176,
        "cards": 22177,
        "(sum)": 22178,
        "i,val": 22179,
        "ceil(sum": 22180,
        "n,x,s": 22181,
        "v(n)": 22182,
        "sum,cont=0": 22183,
        "baad=x": 22184,
        "sum=abs(sum)": 22185,
        "ceil(double(abs(sum))": 22186,
        "n,x,sum": 22187,
        "sf": 22188,
        "sf[i]": 22189,
        "(sum),count": 22190,
        "baad": 22191,
        "b[c+1]": 22192,
        "b[c+2]": 22193,
        "ulong": 22194,
        "\"***\"": 22195,
        "len=length(s)-2": 22196,
        "\"ogo\"": 22197,
        "\"go\"": 22198,
        "cek=0": 22199,
        "cek=1": 22200,
        "a[a+1]": 22201,
        "is'o'": 22202,
        "b[i+2]": 22203,
        "(ch[i]": 22204,
        "'o')": 22205,
        "(ch[i": 22206,
        "'g')": 22207,
        "'***'": 22208,
        "myMap": 22209,
        "***": 22210,
        "x[i]=o": 22211,
        "x[i+2]=o": 22212,
        "x[i+1]=g": 22213,
        "1+2": 22214,
        "y+***": 22215,
        "i=stop": 22216,
        "cek=true": 22217,
        "y=y+x[i]": 22218,
        "sizeof(flag)": 22219,
        "flag[j]": 22220,
        "flag[j": 22221,
        "flag[n": 22222,
        "(from": 22223,
        "\"***\",": 22224,
        "found,": 22225,
        "a[fin+1]": 22226,
        "a[fin+2]": 22227,
        "x=size": 22228,
        "y=26*(x+1)-x": 22229,
        "((26": 22230,
        "((len": 22231,
        "sum=25*n+26": 22232,
        "25)": 22233,
        "(str.size()": 22234,
        "((a.size()": 22235,
        "A[i+1]": 22236,
        "((a1": 22237,
        "strlen(arr)": 22238,
        "c=51": 22239,
        "25*len": 22240,
        "ch[100]": 22241,
        "stum": 22242,
        "s[21]": 22243,
        "I%d,": 22244,
        "i%l,": 22245,
        "i%m": 22246,
        "tick": 22247,
        "!(i": 22248,
        "k,l,m,n,d=int": 22249,
        "k,l,m,n,d": 22250,
        "i%k=0": 22251,
        "i%1=0": 22252,
        "i%m=0": 22253,
        "i%n=0,": 22254,
        "k,l,m,n,d=int,": 22255,
        "x=1,": 22256,
        "count=0,": 22257,
        "ar[z]=x": 22258,
        "dragon": 22259,
        "d+1": 22260,
        "==,": 22261,
        "site": 22262,
        "count=d": 22263,
        "d1[i]": 22264,
        "leat": 22265,
        "modl,": 22266,
        "a[i*k]": 22267,
        "a[i*l]": 22268,
        "a[i*n]": 22269,
        "not(i": 22270,
        "a[3]),": 22271,
        "d/k": 22272,
        "d/l": 22273,
        "l*i": 22274,
        "d/m": 22275,
        "m*i": 22276,
        "d/n": 22277,
        "n*i": 22278,
        "readonly": 22279,
        "101000": 22280,
        "memcpy": 22281,
        "arr[N],": 22282,
        "arr2[N],": 22283,
        "(arr2,": 22284,
        "arr2),": 22285,
        "brr[i],": 22286,
        "arrSorted": 22287,
        "arrSorted[i]": 22288,
        "maxSwaps": 22289,
        "sarr": 22290,
        "sarr[i]": 22291,
        "sorted=array": 22292,
        "sorted[i]=arr[i]": 22293,
        "sorted[i]": 22294,
        "adj[]": 22295,
        "A[diff[0]]": 22296,
        "B[diff[1]]": 22297,
        "B[diff[0]]": 22298,
        "A[diff[1]]": 22299,
        "cnt<=1": 22300,
        "a[v[0]]": 22301,
        "a[v[1]]": 22302,
        "(86400": 22303,
        "86400": 22304,
        "busy": 22305,
        "val+1": 22306,
        "n,t,a=int": 22307,
        "86400-a": 22308,
        "86400-a[i]": 22309,
        "86400-t": 22310,
        "b+imp[i]": 22311,
        "i2+1": 22312,
        "};": 22313,
        "M=86400": 22314,
        "n,t=long": 22315,
        "M-a[i]": 22316,
        "spare,": 22317,
        "belum": 22318,
        "spare": 22319,
        "t-": 22320,
        "tab[j])": 22321,
        "moudlo": 22322,
        "lets": 22323,
        "pangkat": 22324,
        "scale": 22325,
        "2^n": 22326,
        "100000000,": 22327,
        "n>m": 22328,
        "n>29": 22329,
        "a=pow(2,n)": 22330,
        "n^2": 22331,
        "bilangan": 22332,
        "hasilPangkat": 22333,
        "basis": 22334,
        "modula": 22335,
        "reallyans": 22336,
        "((1ll": 22337,
        "turn(m)": 22338,
        "lont": 22339,
        "longif": 22340,
        "grater": 22341,
        "fun(n)": 22342,
        ",M": 22343,
        "sqrt2": 22344,
        "pkt": 22345,
        "start_func": 22346,
        "start_func()": 22347,
        "n>log2(100000000)": 22348,
        "num=pow(2,n)": 22349,
        "n=pow(2,n)": 22350,
        "x3)": 22351,
        "s[x1]": 22352,
        "e-f": 22353,
        "d=vector": 22354,
        "i=a[0]": 22355,
        "abs(a[2]": 22356,
        "X3,": 22357,
        "X3": 22358,
        "of(X1": 22359,
        "of(X2": 22360,
        "X3))": 22361,
        "semi": 22362,
        "INT64M": 22363,
        "0X3F3F3F3F3F3F3F3F": 22364,
        "INT32M": 22365,
        "0x3F3F3F3F": 22366,
        "(v[1]": 22367,
        "v[0])": 22368,
        "(v[2]": 22369,
        "v[1])": 22370,
        "maxima": 22371,
        "minima": 22372,
        "maxima(x1,": 22373,
        "middlePoint": 22374,
        "t+3": 22375,
        "[3]": 22376,
        "a,b,c,k": 22377,
        "m=a[1]-a[0]+a[2]-a[1]": 22378,
        "distance(n1,": 22379,
        "c)),": 22380,
        "b)),": 22381,
        "(n3": 22382,
        "*max_element(x,": 22383,
        "*min_element(x,": 22384,
        "meet": 22385,
        "distance[2]": 22386,
        "distance[1]": 22387,
        "distance[0]": 22388,
        "finds": 22389,
        "a[1]-a[0]": 22390,
        "a[2]-a[1]": 22391,
        "sizeof(a[0])": 22392,
        "(max1": 22393,
        "min1)": 22394,
        "arr[2]-arr[0]": 22395,
        "n,i,a,b,c": 22396,
        "-mi": 22397,
        "x1,x2,x3=long": 22398,
        "x1,x2,x3": 22399,
        "x1<=x2": 22400,
        "x1<=x3": 22401,
        "x2<=x3": 22402,
        "sum=(x3-x2)+(x2-x1)": 22403,
        "x3<=x2": 22404,
        "sum=(x2-x3)+(x3-x1)": 22405,
        "x2<=x1": 22406,
        "sum=(x3-x1)+(x1-x2)": 22407,
        "x3<=x1": 22408,
        "sum=(x1-x3)+(x3-x2)": 22409,
        "sum=(x1-x3)+(x2-x1)": 22410,
        "sum=(x1-x2)+(x2-x3)": 22411,
        "closing": 22412,
        "bracket": 22413,
        "result[i": 22414,
        "\"Karen\"": 22415,
        "Karen": 22416,
        "\"Karen\",": 22417,
        "\"Koyomi\",": 22418,
        "5000005": 22419,
        "mark[x[i]]": 22420,
        "mark[y[i]]": 22421,
        "mark[temp],": 22422,
        "2.001e3": 22423,
        "st.find(a[i]": 22424,
        "\"Koyomi\"": 22425,
        "\"Karen\")": 22426,
        "Koyomi": 22427,
        "4e6": 22428,
        "x[2005],": 22429,
        "y[2005],": 22430,
        "mark[maxn]": 22431,
        "mark[x[i]": 22432,
        "y[j]],": 22433,
        "b[j]]": 22434,
        "4000005": 22435,
        "{\"Karen\\n\",": 22436,
        "\"Koyomi\\n\"}": 22437,
        "y[j]]": 22438,
        "s[cnt": 22439,
        "x*f": 22440,
        "m[t]": 22441,
        "4010": 22442,
        "cherk": 22443,
        "t3[mid]": 22444,
        "t3[increment": 22445,
        "t2[j],": 22446,
        "\"Karen\\n\"": 22447,
        "\"Koyomi\\n\"": 22448,
        "isPresent": 22449,
        "xor1": 22450,
        "30000000": 22451,
        "v[i][n-1]": 22452,
        "v[0][i]": 22453,
        "v[m-1][i]": 22454,
        "[i][1]": 22455,
        "[i][m]": 22456,
        "[1][i]": 22457,
        "[n][i]": 22458,
        "\"4\",": 22459,
        "int_gcd(b,": 22460,
        "goodCell": 22461,
        "goodCell[i][j]": 22462,
        "men1": 22463,
        "produce": 22464,
        "v[m][n]": 22465,
        "v[i][n": 22466,
        "arena": 22467,
        "arena[i][j]": 22468,
        "arena[i][0]": 22469,
        "arena[i][m-1]": 22470,
        "arena[0][i]": 22471,
        "arena[n-1][i]": 22472,
        "isTwo": 22473,
        "a[s[i]-'a']": 22474,
        "casenum,": 22475,
        "alp": 22476,
        "alp[str[i]": 22477,
        "alp[i]": 22478,
        "ans[s[i]": 22479,
        "arr[xx]": 22480,
        "n[k": 22481,
        "n[s]": 22482,
        "a[128]": 22483,
        "num[a[i]]": 22484,
        "n,k,cnt[26]": 22485,
        "::": 22486,
        "m.begin(),": 22487,
        "m.end(),": 22488,
        "freq[s[i]": 22489,
        "260": 22490,
        "num[str[i]": 22491,
        "num[al": 22492,
        "p[c": 22493,
        "t[s[i]]": 22494,
        "pirnt": 22495,
        "aint": 22496,
        "(int)str[i]": 22497,
        "ans[one]": 22498,
        "ans[now]": 22499,
        "s[c": 22500,
        "mods": 22501,
        "spent": 22502,
        "integer=1,": 22503,
        "integer=0": 22504,
        "w*x": 22505,
        "(l[0]": 22506,
        "-9": 22507,
        "(l[1]": 22508,
        "now+": 22509,
        "act)": 22510,
        "(act": 22511,
        "aend": 22512,
        "start[i]": 22513,
        "aend[i]": 22514,
        "start[i+1]": 22515,
        "aend[n]": 22516,
        "(l[i]-k)": 22517,
        "-o": 22518,
        "d=0": 22519,
        "strt_time": 22520,
        "end_time": 22521,
        "strt_time[i]": 22522,
        "end_time[i]": 22523,
        "mintime": 22524,
        "(strt_time[i]": 22525,
        "(pr": 22526,
        "(tem": 22527,
        "palin(b)": 22528,
        "greater<string>()": 22529,
        "toascii(n[i])": 22530,
        "ss[(1": 22531,
        "esPalindromo": 22532,
        "resolver": 22533,
        "esPalindromo(str)": 22534,
        "resolver(str": 22535,
        "s[p],": 22536,
        "resolver(str,": 22537,
        "resolver(\"\",": 22538,
        "arr[S[i]": 22539,
        "s[k-1]": 22540,
        "i=k-1": 22541,
        "ans=\"\"": 22542,
        "wei": 22543,
        "map=1": 22544,
        "qingkuang": 22545,
        "o=int": 22546,
        "huiwen=bool": 22547,
        "wei)": 22548,
        "ai[o]": 22549,
        "a[wei-1-i],": 22550,
        "huiwen=true": 22551,
        "huiwen": 22552,
        "(ai[i]": 22553,
        "ai[o-1-i])": 22554,
        "ck(temp)": 22555,
        "ok()": 22556,
        "c[s[i]": 22557,
        "-99": 22558,
        "alph[a]": 22559,
        "alph[mx],": 22560,
        "cadena": 22561,
        "extreme": 22562,
        "veces": 22563,
        "cadeno": 22564,
        "aux2.begin(),": 22565,
        "aux2.end()": 22566,
        "*max_element(s.begin(),": 22567,
        "char(mx)": 22568,
        "execution": 22569,
        "moving": 22570,
        "represent": 22571,
        "you": 22572,
        "operator": 22573,
        "isPalindrome(t)": 22574,
        "outcome": 22575,
        "v[size": 22576,
        "o_o": 22577,
        "numeric_limits<double>::epsilon()": 22578,
        "palinoal": 22579,
        "x[r],": 22580,
        "palinoal(x)": 22581,
        "s[dep]": 22582,
        "vaa": 22583,
        "perm": 22584,
        "perm(n": 22585,
        "tem)": 22586,
        "k[length": 22587,
        "perm(0,": 22588,
        "\"\")": 22589,
        "pal(vaa[i]": 22590,
        "vaa[i]": 22591,
        "vct": 22592,
        "vct[i]": 22593,
        "vct[k]": 22594,
        "one_loop": 22595,
        "Execute": 22596,
        "sum=n*(n+1)/2": 22597,
        "kle=m": 22598,
        "kle<i": 22599,
        "kle": 22600,
        "reamainder": 22601,
        "wl": 22602,
        "-wl": 22603,
        "((temp1": 22604,
        "absolutw": 22605,
        "map<int,": 22606,
        "(mp[a[i]]": 22607,
        "=k": 22608,
        "=tmp": 22609,
        "=nex": 22610,
        "a[o": 22611,
        "lste": 22612,
        "(lst": 22613,
        "lste)": 22614,
        "aux.size()": 22615,
        "aux[j": 22616,
        "(aux.size()": 22617,
        "answ,": 22618,
        "needToUnion": 22619,
        "(s-p-1)": 22620,
        "casted(mx": 22621,
        "tira": 22622,
        "certos": 22623,
        "m[p])": 22624,
        "(a[j": 22625,
        "cut": 22626,
        "one)": 22627,
        "players,": 22628,
        "cleaner": 22629,
        "fingers,": 22630,
        "tfingers": 22631,
        "fingers": 22632,
        "(tfingers": 22633,
        "friends,": 22634,
        "friends": 22635,
        "players,cleaner": 22636,
        "(tfingers+i)": 22637,
        "possible_sum": 22638,
        "fingers_ways": 22639,
        "entry,": 22640,
        "sum_fingers": 22641,
        "entry": 22642,
        "i=sum": 22643,
        "temp=integer": 22644,
        "sum=sum+tempo": 22645,
        "sum+1": 22646,
        "sum+2": 22647,
        "sum+5": 22648,
        "sum+a": 22649,
        "\"GOTO": 22650,
        "Vasilisa.\\n\"": 22651,
        "mRead": 22652,
        "Vasilisa.\"": 22653,
        "solve(mRead())": 22654,
        "n=position": 22655,
        "'.0": 22656,
        "GOTO": 22657,
        "Vasilisa.": 22658,
        "s[n+1]": 22659,
        "s.find": 22660,
        "(s[pos": 22661,
        "Vasilisa.\",": 22662,
        "a[pos": 22663,
        "fromthe": 22664,
        "dot_at=1": 22665,
        "dot_at=i": 22666,
        "s[dot_at-1]": 22667,
        "Vasilisa": 22668,
        "carry=0": 22669,
        "i=dot_at+1": 22670,
        "s[dot_at+1]-'0'": 22671,
        "carry=1": 22672,
        "i=dot_at-1": 22673,
        "s[i]+1": 22674,
        "s[0]-'0'": 22675,
        "'1']": 22676,
        "str[a1]": 22677,
        "str[a1": 22678,
        "str[a2]": 22679,
        "appending": 22680,
        "si[": 22681,
        "num.length()": 22682,
        "(num[i": 22683,
        "substr(0,": 22684,
        "Vasilia": 22685,
        "dot": 22686,
        "integer)s.length()": 22687,
        ".),": 22688,
        "(s[dot": 22689,
        "integer)(s[dot": 22690,
        "character)(s[dot": 22691,
        "s[dot": 22692,
        "Vasilisa\"": 22693,
        "wtf": 22694,
        "z.size()": 22695,
        "(z[q]": 22696,
        "z[q]": 22697,
        "(cek": 22698,
        "true),": 22699,
        "asd.size()": 22700,
        "asd[s": 22701,
        "wtf[1]": 22702,
        "(dsa": 22703,
        "asd[q]": 22704,
        "asd[asd.size()": 22705,
        "dotted": 22706,
        "istringstream": 22707,
        "frap": 22708,
        "intlen": 22709,
        "intp[intlen": 22710,
        "frap[0]": 22711,
        "S[a]": 22712,
        "S[a": 22713,
        "S[z]": 22714,
        "=9": 22715,
        "x[g]": 22716,
        "3.141592653589793238462": 22717,
        "b[f]": 22718,
        "fix[0]": 22719,
        "fix[(k+1)": 22720,
        "fix[(k+i)": 22721,
        "*(m": 22722,
        "ihash[x": 22723,
        "32,": 22724,
        "64,": 22725,
        "512": 22726,
        "minute_,": 22727,
        "minute_": 22728,
        "bo[now]": 22729,
        "used[a]": 22730,
        "fix[t]": 22731,
        "{1}": 22732,
        "vis[p]": 22733,
        "f[(i": 22734,
        "256,": 22735,
        "fix[x][y]": 22736,
        "fix[i][j]": 22737,
        "used[pos]": 22738,
        "print\"NO\"": 22739,
        "a[now]": 22740,
        "visited[last],": 22741,
        "visited[last]": 22742,
        "(y1-y2)": 22743,
        "max(x2,": 22744,
        "abs(z": 22745,
        "x1-y1": 22746,
        "x2-y2": 22747,
        "f2(": 22748,
        "Y2": 22749,
        "X1": 22750,
        "Y1": 22751,
        "X2": 22752,
        "Roz1": 22753,
        "Roz2": 22754,
        "Wsp": 22755,
        "Oddz": 22756,
        "x1,y1,x2,y2,sub1,sub2": 22757,
        "c=int": 22758,
        "sub1": 22759,
        "sub2": 22760,
        "max(sub1,": 22761,
        "sub2)": 22762,
        "x_1,": 22763,
        "y_1,": 22764,
        "x_2,": 22765,
        "y_2": 22766,
        "y_1": 22767,
        "x_2": 22768,
        "abs(N": 22769,
        "abs(M": 22770,
        "ans=max(absolute": 22771,
        "(x1-x2),": 22772,
        "(y1-y2))": 22773,
        "min(x2,y2)": 22774,
        "(x2-y2)": 22775,
        "max(abs(x1": 22776,
        "abs(b-d)": 22777,
        "max(c,d)": 22778,
        "j,k": 22779,
        "b-d": 22780,
        "swaps": 22781,
        "x,y,z,w": 22782,
        "x-z": 22783,
        "y-w": 22784,
        "3e7": 22785,
        "xx1,": 22786,
        "yy1,": 22787,
        "xx2": 22788,
        "yy2": 22789,
        "abs(xx1": 22790,
        "xx2)": 22791,
        "abs(yy1": 22792,
        "yy2)": 22793,
        "nl,": 22794,
        "drink": 22795,
        "slice": 22796,
        "salt": 22797,
        "drinks": 22798,
        "limes": 22799,
        "min(drinks": 22800,
        "limes)": 22801,
        "np)": 22802,
        "vect": 22803,
        "total1": 22804,
        "total2": 22805,
        "min(total,": 22806,
        "total2)": 22807,
        "min(c": 22808,
        "np))": 22809,
        "kl,": 22810,
        "nnl,": 22811,
        "nslice,": 22812,
        "nnp": 22813,
        "l,,": 22814,
        "kl": 22815,
        "nnl": 22816,
        "nslice": 22817,
        "k*l": 22818,
        "l/nl": 22819,
        "c*d": 22820,
        "p/np": 22821,
        "OverAllFirendsOfMili,": 22822,
        "Toats,": 22823,
        "En,": 22824,
        "Sa,": 22825,
        "OverAllFirendsOfMili": 22826,
        "Toats": 22827,
        "Arr[1]": 22828,
        "Arr[2]": 22829,
        "Arr[6]": 22830,
        "En": 22831,
        "Arr[3]": 22832,
        "Arr[4]": 22833,
        "Sa": 22834,
        "Arr[5]": 22835,
        "Arr[7]": 22836,
        "Arr[0]": 22837,
        "ovarall": 22838,
        "enough": 22839,
        "toast": 22840,
        "min(toast,": 22841,
        "salt)": 22842,
        "(nl)": 22843,
        "NP": 22844,
        "l*k": 22845,
        "d*c": 22846,
        "MIN/n": 22847,
        "min(k": 22848,
        "minGas": 22849,
        "minLimon": 22850,
        "minSal": 22851,
        "canGas": 22852,
        "canLim": 22853,
        "casiresp1": 22854,
        "casiresp2": 22855,
        "total_drink": 22856,
        "lime_slices": 22857,
        "1/n": 22858,
        "min(min((k": 22859,
        "np),": 22860,
        "nl)": 22861,
        "totalMili": 22862,
        "totalLimon": 22863,
        "totalSalt": 22864,
        "Gdrink": 22865,
        "lime": 22866,
        "min(min(k": 22867,
        "drink,": 22868,
        "slice,": 22869,
        "salt,": 22870,
        "resultado,": 22871,
        "mltotal,": 22872,
        "lemoes,": 22873,
        "sal,": 22874,
        "resultadofinal": 22875,
        "mltotal": 22876,
        "lemoes": 22877,
        "sal": 22878,
        "resultado": 22879,
        "min(y,": 22880,
        "vol": 22881,
        "toastFromBottle": 22882,
        "toastDueToSalt": 22883,
        "lime,": 22884,
        "toast,": 22885,
        "quant": 22886,
        "tml,": 22887,
        "tsd,": 22888,
        "slt": 22889,
        "tml": 22890,
        "tsd": 22891,
        "slt)": 22892,
        "amigos,": 22893,
        "garrafas,": 22894,
        "militros,": 22895,
        "limoes,": 22896,
        "fatias,": 22897,
        "garrafas": 22898,
        "militros": 22899,
        "limoes": 22900,
        "fatias": 22901,
        "n>9": 22902,
        "num,k": 22903,
        "cnt=n": 22904,
        "last_digit": 22905,
        "a[++i]": 22906,
        "a[--j]": 22907,
        "q_sort": 22908,
        "pt(a,": 22909,
        "q_sort(a,": 22910,
        "readint": 22911,
        "number,order=long": 22912,
        "number,order": 22913,
        "c=number": 22914,
        "n,l=long": 22915,
        "n[n.size()": 22916,
        "portion": 22917,
        "n.size()": 22918,
        "codechef": 22919,
        "ck1,": 22920,
        "ck2,": 22921,
        "ck3,": 22922,
        "ck4": 22923,
        "ck2": 22924,
        "ck3": 22925,
        "sortby": 22926,
        "arr[i][0],": 22927,
        "arr[i][1],": 22928,
        "arr[i][2],": 22929,
        "arr[j][3]": 22930,
        "arr[i][3],": 22931,
        "arr[j][2]": 22932,
        "-10005": 22933,
        "a[x[i]][y[i]]": 22934,
        "c0,": 22935,
        "a[j][y[i]]": 22936,
        "a[x[i]][j]": 22937,
        "ri,": 22938,
        "le,": 22939,
        "upt": 22940,
        "size,n": 22941,
        "2001,r,c,count": 22942,
        "0,j,t": 22943,
        "pts[size][2]": 22944,
        "pts[i][0],pts[i][1]": 22945,
        "a[pts[i][1]": 22946,
        "t][pts[i][0]": 22947,
        "t]": 22948,
        "pts[i][1]": 22949,
        "a[r][j]": 22950,
        "a[j][c]": 22951,
        "!up": 22952,
        "p[j].second,": 22953,
        "p[j].first,": 22954,
        "Y[i]": 22955,
        "X[j]": 22956,
        "Y[j]": 22957,
        "arr[y][0],": 22958,
        "arr[y][1]": 22959,
        "arr[l][0]": 22960,
        "arr[y][0]": 22961,
        "arr[l][1]": 22962,
        "arr[q][1]": 22963,
        "arr[q][0]": 22964,
        "a[M][2]": 22965,
        "(num1=4)": 22966,
        "ctf": 22967,
        "ct3,": 22968,
        "ct4": 22969,
        "ct3": 22970,
        "y[k],": 22971,
        "aray": 22972,
        "my[i].first": 22973,
        "my[i].second": 22974,
        "my[j].first": 22975,
        "my[j].second,": 22976,
        "my[j].second": 22977,
        "B[j],": 22978,
        "supercentral": 22979,
        "(15": 22980,
        "sumt": 22981,
        "CountOfMoney,": 22982,
        "Sum,": 22983,
        "Hand,": 22984,
        "Hand": 22985,
        "CountOfMoney": 22986,
        "list[j]": 22987,
        "list[j": 22988,
        "(Hand": 22989,
        "Sum)": 22990,
        "(Sum": 22991,
        "insertion": 22992,
        "hole": 22993,
        "A[hole": 22994,
        "A[hole]": 22995,
        "Ncoins": 22996,
        "tSum": 22997,
        "minCoinValue": 22998,
        "minusSum": 22999,
        "coin": 23000,
        "a[103],": 23001,
        "s+a[i]": 23002,
        "a\u00e8i]": 23003,
        "2*sum": 23004,
        "mys,": 23005,
        "cpt": 23006,
        "mys": 23007,
        "totSum": 23008,
        "minCoinsToWin": 23009,
        "mySum": 23010,
        "mySum,": 23011,
        "minCoinsToWin()": 23012,
        "temp_sum": 23013,
        "coins": 23014,
        "minisum": 23015,
        "sid": 23016,
        "eid": 23017,
        "j=25": 23018,
        "i=sid": 23019,
        "ans[id++]": 23020,
        "maxxnd": 23021,
        "a[maxx]": 23022,
        "str[j-i-1]": 23023,
        "b[l": 23024,
        "lexMaxSubseq": 23025,
        "s[next[i": 23026,
        "next[i]": 23027,
        "next[i": 23028,
        "next[0]": 23029,
        "s[curr]": 23030,
        "next[curr]": 23031,
        "sequence": 23032,
        "sequence[i],": 23033,
        "sequence[i]": 23034,
        "maxsuff": 23035,
        "maxsuff[N-1]": 23036,
        "s[N-1]": 23037,
        "maxsuff[i]": 23038,
        "maxsuff[i+1]": 23039,
        "maxsuff[i],": 23040,
        "s[arr[i]]": 23041,
        "max_chars": 23042,
        "input[input": 23043,
        "max_chars[i]": 23044,
        "max_chars[i": 23045,
        "input[input.size()": 23046,
        "ie": 23047,
        "solve(it+1,": 23048,
        "ie,": 23049,
        "solve(ib,": 23050,
        "max-1)": 23051,
        "solve(begin": 23052,
        "find_subsequence": 23053,
        "last_visited_index": 23054,
        "s,ans": 23055,
        "(ans.begin()": 23056,
        "ans.end())": 23057,
        "mp[z]": 23058,
        "rs[increment": 23059,
        "rs[k]": 23060,
        "ss[increment": 23061,
        "rs[i]": 23062,
        "ss[p]": 23063,
        "m.end()": 23064,
        "(it->second)": 23065,
        "m.begin()": 23066,
        "alphabetically": 23067,
        "c_max": 23068,
        "dic": 23069,
        "dic(s)": 23070,
        "s[12],": 23071,
        "s1[12],": 23072,
        "s2[12]": 23073,
        "n=atoi(s)": 23074,
        "atoi(s1)": 23075,
        "len-2,": 23076,
        "atoi(s2)": 23077,
        "n>=0": 23078,
        "x=n/10": 23079,
        "y=n/100*10+n": 23080,
        "max(x,y)": 23081,
        "makes": 23082,
        "-n2": 23083,
        "-n1": 23084,
        "sl,": 23085,
        "r/10": 23086,
        "n=max(n,x)": 23087,
        "n=max(n,y)": 23088,
        "n=abs(n)": 23089,
        "a=(n/10)": 23090,
        "b=n": 23091,
        "n=((n-10*a)/10)+b": 23092,
        "max(b1,": 23093,
        "b2)": 23094,
        "last,slast=int": 23095,
        "a=abs(a)": 23096,
        "slast": 23097,
        "\"-\",": 23098,
        "a=(a/10)*10+last": 23099,
        "a=n/10": 23100,
        "b/n/100*10+n": 23101,
        "max(a,b)": 23102,
        "x[l-1]": 23103,
        "x[l-2]": 23104,
        "x[l-1],": 23105,
        "m/10": 23106,
        "getResult": 23107,
        "getResult(n)": 23108,
        "0x3f3f3f3f;": 23109,
        "minn(minx,": 23110,
        "squares": 23111,
        "squares[c]": 23112,
        "squares[i]": 23113,
        "*min_element(v.begin(),": 23114,
        "bj[x]": 23115,
        "bj[1]": 23116,
        "arr[temp-1]": 23117,
        "m[temp-1]": 23118,
        "s[1001],": 23119,
        "0x3fff": 23120,
        "gs[a[i]]": 23121,
        "10000001": 23122,
        "gs[i]": 23123,
        "A[t]": 23124,
        "vec[inp]": 23125,
        "points),": 23126,
        "1e5,": 23127,
        "ar[a]": 23128,
        "a[idx]": 23129,
        "*min_element(a,": 23130,
        "20090": 23131,
        "Freq[n]": 23132,
        "Freq[ele": 23133,
        "(Freq[i]": 23134,
        "min),": 23135,
        "Freq[i]": 23136,
        "ar[a[i]": 23137,
        "sum[c[i]]": 23138,
        "zlicz": 23139,
        "zlicz[c]": 23140,
        "zlicz[i]": 23141,
        "'i',": 23142,
        "'u',": 23143,
        "stg": 23144,
        "stg(a[i])": 23145,
        "stg(a[i": 23146,
        "car": 23147,
        "vowel": 23148,
        "including": 23149,
        "jap": 23150,
        "'u'": 23151,
        "isvowel(s[i])": 23152,
        "isvowel(s[i": 23153,
        "'y')": 23154,
        "s+1": 23155,
        "check(s[i])": 23156,
        "check(s[i-1])": 23157,
        "3;": 23158,
        "*words": 23159,
        "char[num": 23160,
        "dics": 23161,
        "dics[j]": 23162,
        "\"aeiouy\"": 23163,
        "!vowel(s[i": 23164,
        "!vowel(s[i])": 23165,
        "check(s[i+1])": 23166,
        "1000008": 23167,
        "isv(s[i])": 23168,
        "isv(length": 23169,
        "vi[vi": 23170,
        "10005,": 23171,
        "\"aeiouy\",": 23172,
        "d[e]": 23173,
        "is_vocal": 23174,
        "declaration": 23175,
        "isVowel,": 23176,
        "accepting": 23177,
        "isVowel": 23178,
        "vowel(a,": 23179,
        "is_vowel": 23180,
        "\"qwrtpsdfghjklzxcvbnm\"": 23181,
        "pd(str[i": 23182,
        "b['a']": 23183,
        "b['i']": 23184,
        "b['e']": 23185,
        "b['o']": 23186,
        "b['u']": 23187,
        "b['y']": 23188,
        "b[s[i]]": 23189,
        "V)": 23190,
        "sum[n]": 23191,
        "sequentially": 23192,
        "prod": 23193,
        "resta": 23194,
        "n-th": 23195,
        "minas": 23196,
        "Long,": 23197,
        "repeticiones;": 23198,
        "1500000": 23199,
        "Long": 23200,
        "repeticiones": 23201,
        "Arr[g]": 23202,
        "300010": 23203,
        "cnt,sum=0": 23204,
        "a[i]*(i+1)": 23205,
        "cnt+sum-a[n-1]": 23206,
        "900001": 23207,
        "0xc0c0c0c0": 23208,
        "less<int>()": 23209,
        "300030": 23210,
        "arr[N": 23211,
        "Solve()": 23212,
        "long)v[0]": 23213,
        "long)n": 23214,
        "long)v[i]": 23215,
        "long)j": 23216,
        "mdpower": 23217,
        "998244353)": 23218,
        "tor": 23219,
        "brr[0]": 23220,
        "brr[i": 23221,
        "brr[n": 23222,
        "dat[i+1]": 23223,
        "dat[0]": 23224,
        "full": 23225,
        "numbers[j]": 23226,
        "dat=array": 23227,
        "sum=array": 23228,
        "res=long": 23229,
        "300001": 23230,
        "max=int": 23231,
        "he=a+b+c": 23232,
        "he=a*(b+c)": 23233,
        "he[2]": 23234,
        "(a+b)*c": 23235,
        "he[3]": 23236,
        "a*b*c": 23237,
        "he[i]": 23238,
        "answers": 23239,
        "answers[5]": 23240,
        "answers[0]": 23241,
        "answers[1]": 23242,
        "answers[2]": 23243,
        "answers[3]": 23244,
        "answers[4]": 23245,
        "d[4]": 23246,
        "d[5]": 23247,
        "of(a": 23248,
        "),,": 23249,
        "(b+c)": 23250,
        "receive": 23251,
        "sent": 23252,
        "maximumValue": 23253,
        "(d,": 23254,
        "maximum)": 23255,
        "getAns(a,": 23256,
        "f2(a,": 23257,
        "f2(b,": 23258,
        "array[1]": 23259,
        "array[2]": 23260,
        "f1(a,": 23261,
        "maximum,": 23262,
        "max1=0": 23263,
        "a+b*c": 23264,
        "a*(b+c)": 23265,
        "sum[3]": 23266,
        "sum[4]": 23267,
        "sum[5]": 23268,
        "temp=sum": 23269,
        "a[i]+a[j]+a[k]": 23270,
        "total*2": 23271,
        "f,l=0": 23272,
        "next_permutation(v,": 23273,
        "v+6)": 23274,
        "6;": 23275,
        "arr[c]": 23276,
        "arr[j]),": 23277,
        "num=array": 23278,
        "sum=2,": 23279,
        "index=2": 23280,
        "t=j+1": 23281,
        "2*(num[i]+num[j]+num[t])": 23282,
        "((arr[i]": 23283,
        "a[6],": 23284,
        "stolen": 23285,
        "101th": 23286,
        "uts": 23287,
        "0(": 23288,
        "(uts": 23289,
        "kind": 23290,
        "uts)": 23291,
        "freq[kind]": 23292,
        "(maxcount": 23293,
        "freq)": 23294,
        "freq[i])": 23295,
        "m[arr[i]]": 23296,
        "it->second)": 23297,
        "sizeof(ut)": 23298,
        "ut[a]": 23299,
        "num_unique": 23300,
        "max_mode_val": 23301,
        "mode[arr[i]]": 23302,
        "mode[arr[i]],": 23303,
        "min_dishes": 23304,
        "us[i]": 23305,
        "us[a]": 23306,
        "=((us[100]": 23307,
        "(us[100]": 23308,
        "dishes": 23309,
        "maxNum": 23310,
        "numType": 23311,
        "((maxNum": 23312,
        "MAX_SIZE,": 23313,
        "MAX_SIZE": 23314,
        "dish": 23315,
        "(a[x]-1)": 23316,
        "(*max_element(a,": 23317,
        "105)": 23318,
        "(mp[*i]": 23319,
        "b[index]": 23320,
        "casted(max": 23321,
        "casted(max/k)": 23322,
        "a[m]=1,": 23323,
        "a[m]>Max,": 23324,
        "BigMod": 23325,
        "((ret": 23326,
        "998244353))": 23327,
        "((N": 23328,
        "(BigMod(N,": 23329,
        "cnt[tmp]": 23330,
        "cnt[i],": 23331,
        "ksm": 23332,
        "arr[q],": 23333,
        "arr[q]": 23334,
        "map[x]": 23335,
        "-12312": 23336,
        "4e5": 23337,
        "a[from]": 23338,
        "INFL": 23339,
        "newint": 23340,
        "rc[cur]": 23341,
        "(lc[cur]": 23342,
        "lc[cur]": 23343,
        "XOR": 23344,
        "get(pre)": 23345,
        "a(n": 23346,
        "s(n": 23347,
        "maxx=": 23348,
        "-1e18": 23349,
        "n,a": 23350,
        "max_tmp": 23351,
        "max_sum": 23352,
        "num[i+j]": 23353,
        "150-element": 23354,
        "5,100-element": 23355,
        "dp[t]": 23356,
        "solve2": 23357,
        "cur_res": 23358,
        "mas[j]": 23359,
        "total_cov": 23360,
        "mulitple": 23361,
        "(total_cov": 23362,
        "(R": 23363,
        "n,k,x,y=int,": 23364,
        "y-x+1": 23365,
        "print(": 23366,
        "k-(c": 23367,
        "offset": 23368,
        "offset2": 23369,
        "(offset": 23370,
        "(offset2": 23371,
        "%k": 23372,
        "d-c+1": 23373,
        "0?": 23374,
        "ans%k": 23375,
        "r-": 23376,
        "dist_len": 23377,
        "toString": 23378,
        "a,m": 23379,
        "cmpfunc": 23380,
        "pow_mod": 23381,
        "b-a+1": 23382,
        "(ans-k+1)*k-ans": 23383,
        "4x4": 23384,
        "(aux2": 23385,
        "compute": 23386,
        "numbers_total": 23387,
        "k,n,s": 23388,
        "k,n,s,p": 23389,
        "k,n,s,p,i,j": 23390,
        "n/s": 23391,
        "j/p": 23392,
        "nak": 23393,
        "long)ceil(k": 23394,
        "(int)(ceil(ceil((double)n": 23395,
        "p))": 23396,
        "sheets,": 23397,
        "pack": 23398,
        "sheets": 23399,
        "k,n,s,p,ans,sum": 23400,
        "sk,": 23401,
        "sk": 23402,
        "h/d": 23403,
        "max0": 23404,
        "sumpp": 23405,
        "long)ceil(double((int)ceil(n": 23406,
        "ceil(j": 23407,
        "n,a,": 23408,
        "(floor(sheets": 23409,
        ",s": 23410,
        "!!(M": 23411,
        "!!((N": 23412,
        "K)": 23413,
        "nu": 23414,
        "lnog": 23415,
        "ensure": 23416,
        "accuracy": 23417,
        "K.": 23418,
        "numsheets": 23419,
        "numpacks": 23420,
        "(numsheets": 23421,
        "P;": 23422,
        "ceil(1.0": 23423,
        "ceil(single": 23424,
        "p.": 23425,
        "maxsum": 23426,
        "1000111222": 23427,
        "500007": 23428,
        "just": 23429,
        "sum-sum/2": 23430,
        "s,x=long": 23431,
        "sum[i]=sum[i-1]+x": 23432,
        "sum[i]*2": 23433,
        "n,k,sum=int,": 23434,
        "ceil(sum/2)": 23435,
        "n,i,x=long": 23436,
        "200003": 23437,
        "s1=0": 23438,
        "x=(s+1)/2": 23439,
        "x=s/2": 23440,
        "l[b]": 23441,
        "float,": 23442,
        "A[n]": 23443,
        "nilai[200000],": 23444,
        "nilai[i]": 23445,
        "<(tot": 23446,
        "+nilai[i]": 23447,
        "(summ": 23448,
        "tab[n]": 23449,
        "double,sum=0": 23450,
        "flag3": 23451,
        "islower(str[i])": 23452,
        "isupper(str[i])": 23453,
        "isdigit(str[i])": 23454,
        "\"Too": 23455,
        "weak\"": 23456,
        "'z": 23457,
        "f2=1": 23458,
        "Too": 23459,
        "weak": 23460,
        "dk": 23461,
        "tk": 23462,
        "small,": 23463,
        "quit": 23464,
        "cont_big_word,": 23465,
        "cont_little_word,": 23466,
        "cont_cifra": 23467,
        "cont_little": 23468,
        "cont_big_word": 23469,
        "cont_little_word": 23470,
        "'_'": 23471,
        "puts(\"Too": 23472,
        "weak\"),": 23473,
        "shuzi,": 23474,
        "da,": 23475,
        "xiao,": 23476,
        "shuzi": 23477,
        "xiao": 23478,
        "mima": 23479,
        "mima[i]": 23480,
        "haveNum,": 23481,
        "haveSmallLetter": 23482,
        "haveBigLetter": 23483,
        "haveNum": 23484,
        "str[ii]<='z'": 23485,
        "123,": 23486,
        "password=string": 23487,
        "vec1=vector": 23488,
        "vec1[0]=1": 23489,
        "vec1[1]": 23490,
        "vec1[2]": 23491,
        "vec1[3]": 23492,
        "vec1[i]>0": 23493,
        "weak\\n\"": 23494,
        "92": 23495,
        "124": 23496,
        "flaga": 23497,
        "hasLarge": 23498,
        "Z),": 23499,
        "hasSmall": 23500,
        "z),": 23501,
        "hasDigit": 23502,
        "9),": 23503,
        "hasLarge(s)": 23504,
        "hasSmall(s)": 23505,
        "hasDigit(s)),": 23506,
        "cond_1,": 23507,
        "cond_2,": 23508,
        "cond_3,": 23509,
        "cond_4": 23510,
        "cond_1": 23511,
        "cond_2": 23512,
        "cond_3": 23513,
        "T.size()": 23514,
        "cond_4,": 23515,
        "-'a'": 23516,
        "a[2]]": 23517,
        "\"contest\\n\"": 23518,
        "\"home\\n\"": 23519,
        "contest": 23520,
        "flights": 23521,
        "Getint": 23522,
        "17576": 23523,
        "Getint()": 23524,
        "Hash()": 23525,
        "val[Hash()]": 23526,
        "\"contest\"": 23527,
        "\"home\"": 23528,
        "dsa[c]": 23529,
        "asd[c]": 23530,
        "asd,": 23531,
        "dsa[first": 23532,
        "dsa]": 23533,
        "asd[first": 23534,
        "asd],": 23535,
        "a.substr(0,": 23536,
        "a.substr(5,": 23537,
        "y[c]": 23538,
        "s[r[i]]": 23539,
        "y[r[i]]": 23540,
        "of9": 23541,
        "ada=array": 23542,
        "aa=vv[i]": 23543,
        "bal=false": 23544,
        "tuu=\"\"": 23545,
        "tuu": 23546,
        "\"->\"": 23547,
        "ada[j]": 23548,
        "bal=true": 23549,
        "ada[j]=true": 23550,
        "sf,": 23551,
        "home,": 23552,
        "go,": 23553,
        "home)": 23554,
        "(to": 23555,
        "home),": 23556,
        "(sf": 23557,
        "parent[parent[x]]": 23558,
        "'A'),": 23559,
        "_v": 23560,
        "Home,": 23561,
        "s1.substr(5,": 23562,
        "v1[i]),": 23563,
        "v2.size()": 23564,
        "v2[i]),": 23565,
        "&1": 23566,
        "ansmap": 23567,
        "ansmap[i][n]": 23568,
        "a[i][n": 23569,
        "{\"012210\",": 23570,
        "\"100122\",": 23571,
        "\"221001\"}": 23572,
        "a[i][n]": 23573,
        "undefined,": 23574,
        "t[moves": 23575,
        "6][pos]": 23576,
        "a[6][3]": 23577,
        "6][x]": 23578,
        "a[res][x]": 23579,
        "a5,": 23580,
        "a1[0]": 23581,
        "a1[1]": 23582,
        "a1[2]": 23583,
        "a2[1]": 23584,
        "a2[2]": 23585,
        "a3[1]": 23586,
        "a3[2]": 23587,
        "a4[0]": 23588,
        "a4[1]": 23589,
        "a4[2]": 23590,
        "a5[0]": 23591,
        "a5[1]": 23592,
        "a5[2]": 23593,
        "a6[0]": 23594,
        "a6[1]": 23595,
        "a6[2]": 23596,
        "a2[x]": 23597,
        "a3[x]": 23598,
        "a4[x]": 23599,
        "a5[x]": 23600,
        "a6[x]": 23601,
        "a1[x]": 23602,
        "n,x=long": 23603,
        "n,x,i": 23604,
        "0,0,0": 23605,
        "incline": 23606,
        "a[n][x]": 23607,
        "s[i-3],": 23608,
        "str[i-2]": 23609,
        "str[i-3],": 23610,
        "3],": 23611,
        "raw": 23612,
        "raw[up": 23613,
        "sith": 23614,
        "6000000": 23615,
        "=n+1": 23616,
        "i,j,l,n": 23617,
        "n-3": 23618,
        "l-3": 23619,
        "a[i-2]": 23620,
        "a[i-3]": 23621,
        "raw,": 23622,
        "2e3+7": 23623,
        "buck": 23624,
        "s[j-3],": 23625,
        "len=": 23626,
        "drinks,": 23627,
        "s[i-3]": 23628,
        "(turn+1)": 23629,
        "i=i+n": 23630,
        "s[h": 23631,
        "i-1st": 23632,
        "hate": 23633,
        "\"that": 23634,
        "love": 23635,
        "\"it\\n\"": 23636,
        "it\"": 23637,
        "r=string": 23638,
        "a,d=int": 23639,
        "\"it\"": 23640,
        "*s1": 23641,
        "*s2": 23642,
        "that\"": 23643,
        "*s3": 23644,
        "*s4": 23645,
        "\"hate": 23646,
        "\"love": 23647,
        "wa()": 23648,
        "ac()": 23649,
        "love\"": 23650,
        "hate\"": 23651,
        "\"that\"": 23652,
        "it\\n\"": 23653,
        "(2.0": 23654,
        "0.25)": 23655,
        "delta": 23656,
        "sqrt(delta)": 23657,
        "odp": 23658,
        "n/cnt": 23659,
        "n/cont": 23660,
        "((-1.0": 23661,
        "0.0001)": 23662,
        "n,sum,x=long": 23663,
        "s=(sqrt((8*sum)+1)-1)/2": 23664,
        "sum1=(x*(x+1))/2": 23665,
        "sum-sum1": 23666,
        "dropout": 23667,
        "\"slow\"": 23668,
        "x=(sqrt((8*sum)+1)-1)/2": 23669,
        "sqrt(left": 23670,
        "n,k,m=long": 23671,
        "k=sqrt(2*n+0.25)-0.5": 23672,
        "m=k*(k+1)/2": 23673,
        "m+k-n": 23674,
        "sqrt(2": 23675,
        "thr": 23676,
        "f(i)": 23677,
        "mayor": 23678,
        "sqrt(8.000": 23679,
        "7.000)": 23680,
        "1.000)": 23681,
        "2.000": 23682,
        "(mayor": 23683,
        "50010": 23684,
        "j+k": 23685,
        "Mahmoud": 23686,
        "Ehab": 23687,
        "\"Mahmoud\"": 23688,
        "\"Ehab\"": 23689,
        "\"Mahmoud\";": 23690,
        "\"Mahmoud\\n\"": 23691,
        "\"Ehab\\n\"": 23692,
        "\"Mahmoud\",": 23693,
        "proof": 23694,
        "yx": 23695,
        "ox": 23696,
        "oy": 23697,
        "ox[i]": 23698,
        "oy[i]": 23699,
        "cty": 23700,
        "y[k]": 23701,
        "ver[a]": 23702,
        "hor[b]": 23703,
        "reusing": 23704,
        "\"input.xt\"": 23705,
        "coloana,": 23706,
        "linie": 23707,
        "coloana[a]": 23708,
        "linie[b]": 23709,
        "m1.count(x)": 23710,
        "m1[x]": 23711,
        "m2.count(y)": 23712,
        "m2[y]": 23713,
        "m1.size()": 23714,
        "m2.size()": 23715,
        "count_x,": 23716,
        "count_y": 23717,
        "count_x": 23718,
        "county_y": 23719,
        "dnt": 23720,
        "vertical,": 23721,
        "horizontal": 23722,
        "vertical": 23723,
        "vertical.size()": 23724,
        "horizontal.size()": 23725,
        "H[x]": 23726,
        "V[y]": 23727,
        "exclusvie": 23728,
        "cun1": 23729,
        "cun2": 23730,
        "cun1[x],": 23731,
        "cun2[x],": 23732,
        "cun1[x]": 23733,
        "cun2[y]": 23734,
        "disx": 23735,
        "disy": 23736,
        "sizeof(ax)": 23737,
        "sizeof(ay)": 23738,
        "ax[x]": 23739,
        "ay[y]": 23740,
        "room": 23741,
        "cols,": 23742,
        "maxrow": 23743,
        "maxcol": 23744,
        "room[x][y]": 23745,
        "room[j][i]": 23746,
        "room[i][j]": 23747,
        "MN,": 23748,
        "ar[x][y]": 23749,
        "n,i,j,k": 23750,
        "cheapest": 23751,
        "a[100005],": 23752,
        "p[100005],": 23753,
        "c*a[i]": 23754,
        "a[j]*MIN": 23755,
        "kount": 23756,
        "a[i-1][1]": 23757,
        "eat": 23758,
        "need,": 23759,
        "long)need": 23760,
        "110000": 23761,
        "min_price": 23762,
        "pmin,": 23763,
        "pmin": 23764,
        "prise": 23765,
        "A[i][0],": 23766,
        "min_p": 23767,
        "amt,": 23768,
        "min_p*amt": 23769,
        "p[min]": 23770,
        "n,a,p=int": 23771,
        "dp=101": 23772,
        "dp>p": 23773,
        "dp=p": 23774,
        "a*dp": 23775,
        "b[1000]": 23776,
        "ggreater": 23777,
        "NumOfFree": 23778,
        "q-p": 23779,
        "cnt=0,": 23780,
        "x=b[i]-a[i]": 23781,
        "x>1": 23782,
        "minCoins": 23783,
        "coins,": 23784,
        "table[0]": 23785,
        "table[i]": 23786,
        "coins[j]": 23787,
        "sub_res": 23788,
        "table[i-coins[j]]": 23789,
        "table[i],": 23790,
        "table[V]": 23791,
        "7}": 23792,
        "(coins)": 23793,
        "(coins[0])": 23794,
        "CT": 23795,
        "CT[i]": 23796,
        "CT[i": 23797,
        "CT[a]": 23798,
        "mod2": 23799,
        "7+1": 23800,
        "7.": 23801,
        "b[0][i]": 23802,
        "(a[0][i]": 23803,
        "7.0": 23804,
        "big[i]": 23805,
        "tests": 23806,
        "<>": 23807,
        "a/7": 23808,
        "bag": 23809,
        "n,a=int,": 23810,
        "v[i]=k": 23811,
        "v[i]=size": 23812,
        "*)b": 23813,
        "*c": 23814,
        "*d": 23815,
        "N--": 23816,
        "((maxx)": 23817,
        "(cnt)": 23818,
        "(maxx)": 23819,
        "(cnt))": 23820,
        "!M[a]": 23821,
        "pres[100010]": 23822,
        "pres[p]=0": 23823,
        "pres[p]": 23824,
        "200300": 23825,
        "pres": 23826,
        "int)(2": 23827,
        "N),": 23828,
        "dic[a]": 23829,
        "n,x,y": 23830,
        "x>=y": 23831,
        "p>1": 23832,
        "pi=2*acos(0)": 23833,
        "nn=100005": 23834,
        "oo=3f3f3f3f": 23835,
        "x,y,n=int,": 23836,
        "n,x,y,s": 23837,
        "i>n": 23838,
        "y*cnt": 23839,
        "x*(cnt-1)+y": 23840,
        "n,x,y=long": 23841,
        "n0,n00=long": 23842,
        "n0=0": 23843,
        "n0=1": 23844,
        "n00=0": 23845,
        "n00": 23846,
        "num[n-1]": 23847,
        "y<x": 23848,
        "ans=n00*y": 23849,
        "ans=(n00-1)*x+y": 23850,
        "num_0": 23851,
        "num_1": 23852,
        "(cnt-1)": 23853,
        "s[len-1]": 23854,
        "(sum-1)*x+y": 23855,
        "sum*y": 23856,
        "respectievly": 23857,
        "b>": 23858,
        "min((count": 23859,
        "(count)*y)": 23860,
        "s[i]=0": 23861,
        "s[len-1]=0,": 23862,
        "<y": 23863,
        "sum-1*x+y": 23864,
        "p=0,": 23865,
        "y)+": 23866,
        "block_reached": 23867,
        "block,": 23868,
        "min(min_cost,": 23869,
        "(block": 23870,
        "x,y=long": 23871,
        "3000010": 23872,
        "last='1'": 23873,
        "last=seq[i]": 23874,
        "y+(x*(cnt-1))": 23875,
        "rev,": 23876,
        "satuan": 23877,
        "push(n": 23878,
        "(s.top()": 23879,
        "s.top()": 23880,
        "puts,": 23881,
        "s.push(n": 23882,
        "g=": 23883,
        "(st[i]": 23884,
        "onto": 23885,
        "s.c_str()": 23886,
        "Lucky": 23887,
        "Lucky(count)": 23888,
        "instructions": 23889,
        "a[res": 23890,
        "a[res],": 23891,
        "qiu": 23892,
        "f[k": 23893,
        "fq": 23894,
        "fq.begin": 23895,
        "downward": 23896,
        "ans=i+1": 23897,
        "d[q]": 23898,
        "patok": 23899,
        "seq,": 23900,
        "deq[k]": 23901,
        "arr[v]": 23902,
        "v[i-1],": 23903,
        "m[a[0]]": 23904,
        "m[a[j]]": 23905,
        "tcases,": 23906,
        "ar[I]": 23907,
        "ar[I": 23908,
        "quared": 23909,
        "b%a,": 23910,
        "chek": 23911,
        "x/temp": 23912,
        "x/a[i]": 23913,
        "mx5": 23914,
        "bol": 23915,
        "bol(arr[i])": 23916,
        "100020": 23917,
        "a[100505]": 23918,
        "a[i]/2": 23919,
        "a[i]/3": 23920,
        "a+1+n": 23921,
        "divider": 23922,
        "two=three=1": 23923,
        "2*two": 23924,
        "3*three": 23925,
        "g*two*three": 23926,
        "items[i-1]": 23927,
        "gcdofarray": 23928,
        "gcd(gcdofarray,": 23929,
        "gcdofarray)": 23930,
        "gcd(mini,": 23931,
        "1000004,": 23932,
        "d[temp]": 23933,
        "per(a[i])": 23934,
        "__gcd(a[i],": 23935,
        "dp[x][i]": 23936,
        "((dp[x][i": 23937,
        "isPrimeRoot": 23938,
        "dp[x][k]": 23939,
        "dp[x][p": 23940,
        "helper()": 23941,
        "isPrimeRoot(x)": 23942,
        "1)),": 23943,
        "MAXN=2200": 23944,
        "rtn=1": 23945,
        "a=1ll*a*a": 23946,
        "rtn=1ll*rtn*a": 23947,
        "rtn": 23948,
        "top=0": 23949,
        "p=true": 23950,
        "fpow(i,j)": 23951,
        "Integer": 23952,
        "exicute": 23953,
        "reminder": 23954,
        "p-1": 23955,
        "p-2": 23956,
        "num-1": 23957,
        "((num": 23958,
        "isRoot": 23959,
        "test(x,p,mod)": 23960,
        "md)": 23961,
        "det": 23962,
        "&MOD": 23963,
        "pwr(x,": 23964,
        "result)": 23965,
        "(pwr(x,": 23966,
        "listprime": 23967,
        "isprime[2]": 23968,
        "fastexpo": 23969,
        "(((a": 23970,
        "akhir,": 23971,
        "akhir": 23972,
        "bnyak": 23973,
        "(awal": 23974,
        "akhir)": 23975,
        "(x-1)": 23976,
        "(x*i)": 23977,
        "((val": 23978,
        "2200": 23979,
        "q[++top]": 23980,
        "fpow(i,": 23981,
        "q[j])": 23982,
        "isit": 23983,
        "p=int,": 23984,
        "dp[i][0]=1": 23985,
        "dp[x][i]=((dp[x][i-1])*x)": 23986,
        "curr=0": 23987,
        "dp[x][p-2]": 23988,
        "ans=solve()": 23989,
        "\"DL\",": 23990,
        "\"DR\",": 23991,
        "\"UL\"": 23992,
        "M[s]": 23993,
        "(M[\"ULDR\"]": 23994,
        "M[\"UR\"]": 23995,
        "M[\"UL\"]": 23996,
        "ULDR": 23997,
        "UR": 23998,
        "DL": 23999,
        "UL": 24000,
        "DR": 24001,
        "ULDR,": 24002,
        "UL,": 24003,
        "UR,": 24004,
        "mp[\"UR\"]": 24005,
        "mp[\"DL\"]": 24006,
        "mp[\"UL\"]": 24007,
        "mp[\"DR\"]": 24008,
        "mp[\"ULDR\"]": 24009,
        "x[mp[s]]": 24010,
        "x[3])": 24011,
        "(x[2]": 24012,
        "\"DL\"": 24013,
        "\"ULDR\"": 24014,
        "\"DR\"": 24015,
        "il": 24016,
        "l,r,u,d=int": 24017,
        "c1,c2,c3=0": 24018,
        "(1+c1+c3)*(1+c2+c3)": 24019,
        "1LL*x*y": 24020,
        "q=string": 24021,
        "a,b=1": 24022,
        "DL\"": 24023,
        "multiplication": 24024,
        "uno": 24025,
        "cc[\"UL\"]": 24026,
        "cc[\"DR\"]": 24027,
        "cc[\"ULDR\"]": 24028,
        "cc[\"UR\"]": 24029,
        "cc[\"DL\"]": 24030,
        "\"UR\",": 24031,
        "\"UL\",": 24032,
        "\"ULDR\",": 24033,
        "\"ULDR,": 24034,
        "c[i]=array": 24035,
        "found=false": 24036,
        "a,i1,j1=int": 24037,
        "i1=i": 24038,
        "j1=j": 24039,
        "k=j": 24040,
        "c[i][k+1]": 24041,
        "found=true": 24042,
        "i1+a/2+1,": 24043,
        "j1+a/2+1": 24044,
        "(a2": 24045,
        "(b2": 24046,
        "color[i][j]": 24047,
        "first_row": 24048,
        "last_row": 24049,
        "row_start": 24050,
        "row_end": 24051,
        "executing": 24052,
        "side,": 24053,
        "(y1+y2)/2,": 24054,
        "area[i][j]": 24055,
        "(begin": 24056,
        "bstart": 24057,
        "bstartc": 24058,
        "bastart": 24059,
        "bhoric": 24060,
        "mat[bstart][i]": 24061,
        "bhoric/2": 24062,
        "bvoric": 24063,
        "inclusvie": 24064,
        "mat[i][bstartc": 24065,
        "116": 24066,
        "0,sumj": 24067,
        "sumj": 24068,
        "mp8i][j]": 24069,
        "r3,": 24070,
        "l3,": 24071,
        "a[r1][j]": 24072,
        "a[j][l4]": 24073,
        "l3": 24074,
        "a[j][l3]": 24075,
        "r4)": 24076,
        "l4)": 24077,
        "char[m]": 24078,
        "[v][j]": 24079,
        "(s[i]+1)": 24080,
        "tj": 24081,
        "s[ti][j]": 24082,
        "s[i][tj]": 24083,
        "ti),": 24084,
        "tj),": 24085,
        "ii,jj,iii,jjj": 24086,
        "iii)": 24087,
        "jjj)": 24088,
        "sqrs": 24089,
        "i^3+2*i^2+1": 24090,
        "lev": 24091,
        "(lev": 24092,
        "(tar": 24093,
        "lev)": 24094,
        "sabc": 24095,
        "a3))": 24096,
        "gig": 24097,
        "1E6": 24098,
        "3.1415926535897932384626433832795": 24099,
        "generation": 24100,
        "ot": 24101,
        "SQRTN": 24102,
        "LOGN": 24103,
        "prv,": 24104,
        "prv": 24105,
        "arr[maxn]": 24106,
        "(rest": 24107,
        "(((l": 24108,
        "(level": 24109,
        "(level)": 24110,
        "included": 24111,
        "2009": 24112,
        "K,R,i=int": 24113,
        "K,R": 24114,
        "K*i": 24115,
        "(K*i)-R": 24116,
        "(k*i)": 24117,
        "shovelNum": 24118,
        "k,r=int": 24119,
        "k,r": 24120,
        "k*ans": 24121,
        "i*k": 24122,
        "i*k-r": 24123,
        "newk": 24124,
        "endloop": 24125,
        "remainder,": 24126,
        "aws": 24127,
        "(((k": 24128,
        "__gcd(10,": 24129,
        "lcm,": 24130,
        "k,r,res=int": 24131,
        "((k*i)": 24132,
        "res=i": 24133,
        "ab": 24134,
        "bb[a]": 24135,
        "(aa[a]": 24136,
        "bb[a])": 24137,
        "sumu": 24138,
        "sumtp,": 24139,
        "sumdn,": 24140,
        "1000020,": 24141,
        "dn": 24142,
        "1000020": 24143,
        "f[decrement": 24144,
        "read(n)": 24145,
        "read(tp[i])": 24146,
        "read(dn[i])": 24147,
        "sumtp": 24148,
        "sumdn": 24149,
        "dn[i]": 24150,
        "((sumtp": 24151,
        "dn[i])": 24152,
        "((sumdn": 24153,
        "tp[i])": 24154,
        "B[n]": 24155,
        "(ca": 24156,
        "(cb": 24157,
        "(upper": 24158,
        "arr[i][0])": 24159,
        "(lower": 24160,
        "arr[i][1])": 24161,
        ")),": 24162,
        "exxclusive": 24163,
        "sum_1": 24164,
        "sum_u": 24165,
        "sum_l": 24166,
        "\"1'": 24167,
        "ant,": 24168,
        "bnt": 24169,
        "sumpar": 24170,
        "sumimpar": 24171,
        "(sumpar": 24172,
        "(sumimpar": 24173,
        "asum": 24174,
        "bsum": 24175,
        "((a[i]": 24176,
        "(asum": 24177,
        "1123123123": 24178,
        "n/2]": 24179,
        "x[kanan]": 24180,
        "choice": 24181,
        "suf": 24182,
        "(choice": 24183,
        "tmp]": 24184,
        "a[200010]": 24185,
        "int)1e9": 24186,
        "int)3e5": 24187,
        "201010": 24188,
        "shown": 24189,
        "tu)]": 24190,
        "nums[2": 24191,
        "ini,": 24192,
        "arr[n/2": 24193,
        "222222": 24194,
        "x[1": 24195,
        "Map[maxn]": 24196,
        "Map[i]": 24197,
        "Map[i": 24198,
        "mid]": 24199,
        "n,0": 24200,
        "a.end()": 24201,
        "occ[s[i]": 24202,
        "occ['b'": 24203,
        "occ['u'": 24204,
        "occ['a'": 24205,
        "occ['l'": 24206,
        "occ['s'": 24207,
        "occ['r'": 24208,
        "r[3]": 24209,
        "r[4]": 24210,
        "r[5]": 24211,
        "r[6]": 24212,
        "r[7]": 24213,
        "\"Bulbasaur\"": 24214,
        "mp['u']": 24215,
        "mp[*it]": 24216,
        "[2][26]": 24217,
        "alpha[0][c": 24218,
        "alpha[1][c": 24219,
        "alpha[1][B": 24220,
        "alpha[0][u": 24221,
        "alpha[0][l": 24222,
        "alpha[0][b": 24223,
        "alpha[0][a": 24224,
        "alpha[0][s": 24225,
        "alpha[0][r": 24226,
        "m['B']": 24227,
        "m['u']": 24228,
        "m['l']": 24229,
        "m['s']": 24230,
        "Bulbasaur,": 24231,
        "Bulbasaur": 24232,
        "min(u": 24233,
        "r)))))": 24234,
        "m['u']/2": 24235,
        "m['a']/2": 24236,
        "l[s[i]": 24237,
        "l[0]/2": 24238,
        "l[18]": 24239,
        "l[20]/2": 24240,
        "l[11]": 24241,
        "l[17]": 24242,
        "kol[s[i]]": 24243,
        "kol['u']": 24244,
        "kol['a']": 24245,
        "kol[res[i]]": 24246,
        "x[s[i]]": 24247,
        "x['u']": 24248,
        "x['a']": 24249,
        "x['B']": 24250,
        "x['l']": 24251,
        "x['b']": 24252,
        "x['s']": 24253,
        "x['r']": 24254,
        "betwen": 24255,
        "m['B']=0": 24256,
        "m['u']=0": 24257,
        "m['l']=0": 24258,
        "m['b']=0": 24259,
        "m['a']=0": 24260,
        "m['s']=0": 24261,
        "m['r']=0": 24262,
        "ans=min(ans,m['B'])": 24263,
        "ans=min(ans,m['u']/2)": 24264,
        "ans=min(ans,m['l'])": 24265,
        "ans=min(ans,m['b'])": 24266,
        "ans=min(ans,m['a']/2)": 24267,
        "ans=min(ans,m['s'])": 24268,
        "ans=min(ans,m['r'])": 24269,
        "b[need[i]]": 24270,
        "str[i]=": 24271,
        "min(B,": 24272,
        "r))))))": 24273,
        "isPrime(int": 24274,
        "n-4": 24275,
        "isPrime(a)": 24276,
        "isPrime(b)": 24277,
        "Isprime(long": 24278,
        "(Isprime(n": 24279,
        "sushu": 24280,
        "(x/2)": 24281,
        "sushu(ans2)": 24282,
        "isprime(a)": 24283,
        "isprime(b)": 24284,
        "is_prime[0],": 24285,
        "is_prime[2]": 24286,
        "is_prime[n": 24287,
        "p.resize(n": 24288,
        "upto": 24289,
        "isComposite": 24290,
        "1000010,": 24291,
        "vis[i*j]": 24292,
        "vis[n-1]": 24293,
        "isp[0]": 24294,
        "isp[1]": 24295,
        "isp[i]": 24296,
        "isp[j]": 24297,
        "isp[n-1]": 24298,
        "isPrime(j)": 24299,
        "p(i)": 24300,
        "p(n": 24301,
        "g1,": 24302,
        "g2": 24303,
        "con1": 24304,
        "con2": 24305,
        "INF=2^29": 24306,
        "C=array": 24307,
        "sum,cc=0": 24308,
        "cc>=x": 24309,
        "sum-cc>=x": 24310,
        "cc<=y": 24311,
        "sum-cc<=y": 24312,
        "c[i]=v[i-1]+c[i-1]": 24313,
        "c[i]>=x": 24314,
        "c[i]<=y": 24315,
        "sum-c[i]>=x": 24316,
        "sum-c[i]<=y": 24317,
        "nxt": 24318,
        "nxt()": 24319,
        "(int)m": 24320,
        "pass)": 24321,
        "ci[i]": 24322,
        "ci[j]": 24323,
        "arra=array": 24324,
        "sum,key,countt=0,": 24325,
        "n,k,sum2,minn,maxx,result=int": 24326,
        "arra[i]=k": 24327,
        "sum2=sum-key": 24328,
        "key>=minn": 24329,
        "sum2>=minn": 24330,
        "result=i+1": 24331,
        "countt=1": 24332,
        "pl,q=0": 24333,
        "q>=x": 24334,
        "<=y": 24335,
        "sum-q>=x": 24336,
        "pl=i+2": 24337,
        "size_m,": 24338,
        "size_x,": 24339,
        "size_y=int": 24340,
        "result=-1": 24341,
        "ii=int": 24342,
        "size_m": 24343,
        "ii=1": 24344,
        "sum[ii]=sum[ii-1]+tmp": 24345,
        "size_x": 24346,
        "size_y": 24347,
        "ii=0,": 24348,
        "sum[ii]>size_y": 24349,
        "sum[size_m-1]-sum[ii]": 24350,
        "sum[ii]": 24351,
        "result=ii+2": 24352,
        "tem=0": 24353,
        "tem>=x": 24354,
        "sum-tem": 24355,
        "flag=i+1": 24356,
        "cnt[i+1]": 24357,
        "max_res": 24358,
        "max_res,": 24359,
        "maxC": 24360,
        "maxC,": 24361,
        "c>maxC,": 24362,
        "curl": 24363,
        "maxl,": 24364,
        "maxlen": 24365,
        "curlen": 24366,
        "maxlen[i]": 24367,
        "maxlen[i-1]": 24368,
        "mininc": 24369,
        "maxle,": 24370,
        "maxle+1": 24371,
        "N=100005": 24372,
        "a,f=array": 24373,
        "f[i]=f[i-1]+1": 24374,
        "f[i]=1": 24375,
        "ans=max(ans,f[i])": 24376,
        "n,m,r": 24377,
        "remainders": 24378,
        "remainders.find(rem)": 24379,
        "remainders.end()": 24380,
        "rem)": 24381,
        "(a+a": 24382,
        "qiu[a]": 24383,
        "qiu[a]=1": 24384,
        "store=set": 24385,
        "x=a,": 24386,
        "L=int": 24387,
        "L=suze": 24388,
        "ma[a": 24389,
        "once": 24390,
        "(ma[(a": 24391,
        "m)]": 24392,
        "(!(x": 24393,
        "check(b)": 24394,
        "m=m/2": 24395,
        "pii": 24396,
        "\"s\\n\"": 24397,
        "store.size()": 24398,
        "store.size())": 24399,
        "(((m": 24400,
        "gtr": 24401,
        "smlr": 24402,
        "util": 24403,
        "(gtr": 24404,
        "(smlr": 24405,
        "SieveOfEratosthenes": 24406,
        "tiles": 24407,
        "tiles(m,": 24408,
        "s=n/2*m": 24409,
        "MaxDominoesNumber": 24410,
        "remain_domino": 24411,
        "board[i": 24412,
        "((w": 24413,
        "s<=n": 24414,
        "Cost,": 24415,
        "Init,": 24416,
        "borrow": 24417,
        "Cost": 24418,
        "Cost)": 24419,
        "min(m,": 24420,
        "i,x": 24421,
        "n>=x": 24422,
        "toal": 24423,
        "n,m,o": 24424,
        "k,n,w": 24425,
        "ndmny": 24426,
        "expect,": 24427,
        "expect": 24428,
        "dollar": 24429,
        "Need_money": 24430,
        "((number": 24431,
        "(number": 24432,
        "iinclusive,": 24433,
        "amt": 24434,
        "(n+1)": 24435,
        "amt-w": 24436,
        "terminator": 24437,
        "a=0,b,k,w,n": 24438,
        "k,n": 24439,
        "(i*k)": 24440,
        "a-n": 24441,
        "solve(a": 24442,
        "solve(c": 24443,
        "hishab": 24444,
        "jhamela": 24445,
        "shob": 24446,
        "hishab((i": 24447,
        "a+l": 24448,
        "b+l": 24449,
        "min(i,": 24450,
        "i=c": 24451,
        "f(a,": 24452,
        "f(b,": 24453,
        "f(c,": 24454,
        "(L": 24455,
        "getsum": 24456,
        "getsum(a": 24457,
        "getsum(c": 24458,
        "initially,": 24459,
        "initially": 24460,
        "i+a": 24461,
        "i+c": 24462,
        "dm": 24463,
        "ajout": 24464,
        "(ajout": 24465,
        "query(ajout)": 24466,
        "query(ajout": 24467,
        "v2)": 24468,
        "v3)": 24469,
        "add)": 24470,
        "calc(c,": 24471,
        "dm(a,": 24472,
        "dm(b,": 24473,
        "rexxx": 24474,
        "rexxx(c1,": 24475,
        "rexxx(c2,": 24476,
        "rexxx(x,": 24477,
        "c1)": 24478,
        "0x7FFFFFFF": 24479,
        "long)0,": 24480,
        "(less": 24481,
        "sub(a,": 24482,
        "ll)": 24483,
        "sub(b,": 24484,
        "sub(c,": 24485,
        "\"t.txt\"": 24486,
        "ex(a,": 24487,
        "ex(b,": 24488,
        "ex(c,": 24489,
        "a,b,c,l=long": 24490,
        "a,b,c,l": 24491,
        "(i+2)*(i+1)/2": 24492,
        "a+i": 24493,
        "tmp=min(l-i,": 24494,
        "a+i-b-c)": 24495,
        "(tmp+2)*(tmp+1)/2": 24496,
        "a+c": 24497,
        "b+i-a-c)": 24498,
        "c+i": 24499,
        "b+a": 24500,
        "c+i-b-a)": 24501,
        "sum[l]": 24502,
        "501,": 24503,
        "d[0][0]": 24504,
        "d[j][k]": 24505,
        "(d[j][k]": 24506,
        "1][k": 24507,
        "a[i]])": 24508,
        "d[m][i])": 24509,
        "8e16": 24510,
        "Dp": 24511,
        "dp[j][a[i]]": 24512,
        "dp[j][k]": 24513,
        "Dp[j][k]": 24514,
        "Dp[m][j]": 24515,
        "dp[j][t]": 24516,
        "1][t": 24517,
        "dp[m][i])": 24518,
        "dp[m][i]": 24519,
        "d[j-1][k-a[i]]": 24520,
        "sizeof(d)": 24521,
        "502": 24522,
        "dpn": 24523,
        "dpn[0][0]": 24524,
        "dp[t][s]": 24525,
        "s-a[i]": 24526,
        "(dp[t": 24527,
        "1][s": 24528,
        "dpn[t][s])": 24529,
        "dpn[t][s]": 24530,
        "dp[m][s])": 24531,
        "dp[j-1][k-x]": 24532,
        "%=mod": 24533,
        "dp[k][j]": 24534,
        "dp[k": 24535,
        "520": 24536,
        "(dp[j][k]": 24537,
        "dp[m][b]": 24538,
        "dp[0][0][0]": 24539,
        "dp[flag][j][k]": 24540,
        "dp[flag^1][j][k]": 24541,
        "dp[flag][j": 24542,
        "a[i]][k": 24543,
        "dp[flag][i][m],": 24544,
        "(f[j][k]": 24545,
        "f[j": 24546,
        "x])": 24547,
        "f[m][i])": 24548,
        "2][0][0]": 24549,
        "1L": 24550,
        "2][j][k]": 24551,
        "dp[(i": 24552,
        "2][j][k])": 24553,
        "2][m][i])": 24554,
        "x],": 24555,
        "dp[m][i],": 24556,
        "hot": 24557,
        "hot[0][0]": 24558,
        "hot[j][k]": 24559,
        "hot[j": 24560,
        "Arr[i]],": 24561,
        "hot[m][i])": 24562,
        "dp[m][k]": 24563,
        "dp[m][k": 24564,
        "ap[j][k]": 24565,
        "(dp[j][t]": 24566,
        "sum*k": 24567,
        "l=l/k": 24568,
        "a,b,n=long": 24569,
        "k=k/n": 24570,
        "k,l,i=int": 24571,
        "k,l": 24572,
        "pow(k,": 24573,
        "lower_bound(vec,": 24574,
        "pos=it-begin": 24575,
        "importance": 24576,
        "a,b,cnt": 24577,
        "0,flag": 24578,
        "k*n": 24579,
        "Yes,": 24580,
        "Pow(b,": 24581,
        "Pow(k,": 24582,
        "Pow(km": 24583,
        "w[n],": 24584,
        "z[n]": 24585,
        "pockets": 24586,
        "tot-1": 24587,
        "p/2+1": 24588,
        "cnt;": 24589,
        "read(a[i])": 24590,
        "arr[10005]": 24591,
        "w/k": 24592,
        "arr[i]=w": 24593,
        "w/k+1": 24594,
        "incrementcnt": 24595,
        "ele/k": 24596,
        "n,m,x=int,": 24597,
        "x/m": 24598,
        "a/k": 24599,
        "inputs)": 24600,
        "curInd": 24601,
        "curMin": 24602,
        "points[curInd]": 24603,
        "points[curMin]": 24604,
        "my_sort(integer": 24605,
        "minimum(curInd,n)": 24606,
        "points[ind]": 24607,
        "my_sort": 24608,
        "Work": 24609,
        "maxdiff": 24610,
        "diameter": 24611,
        "removals": 24612,
        "aes;": 24613,
        "aes": 24614,
        "aes0": 24615,
        "aes,": 24616,
        "n,d,": 24617,
        "0,start": 24618,
        "0,end": 24619,
        "seq[end]": 24620,
        "seq[start]": 24621,
        "max(cnt,": 24622,
        "cnt),": 24623,
        "n,d,i=long": 24624,
        "m=10001": 24625,
        "index1,j,index2=long": 24626,
        "abs(a[j]-a[i])": 24627,
        "m=min(count+i,": 24628,
        "maxlen=0": 24629,
        "thislen": 24630,
        "max(thislen,": 24631,
        "maxlen)": 24632,
        "abs(arr[i]": 24633,
        "a+n,": 24634,
        "number(a,": 24635,
        "(array[j]": 24636,
        "dp=": 24637,
        "a[i]-1": 24638,
        "[i-1]th": 24639,
        "lower_bound(a,": 24640,
        "ele)": 24641,
        "[i+1]th": 24642,
        "dp[p]": 24643,
        "dp[100000]": 24644,
        "ans[i-1]": 24645,
        "ans[100000]": 24646,
        "freq[a[i]]": 24647,
        "nextprev": 24648,
        "dp[val][nextprev][prev]": 24649,
        "go(val": 24650,
        "max((val": 24651,
        "(go(val": 24652,
        "0)))": 24653,
        "go(2,": 24654,
        "[100001][2]": 24655,
        "dp[maxn][0]": 24656,
        "dp[maxn][1]": 24657,
        "dp[N]": 24658,
        "brr[100000]": 24659,
        "max(ans[i": 24660,
        "ans[maxi]": 24661,
        "c[arr[i]]": 24662,
        "c[i])": 24663,
        "c[ar]": 24664,
        "3])": 24665,
        "dp[100001]": 24666,
        "dp[100001": 24667,
        "m[*s.rbegin()]": 24668,
        "A[num]": 24669,
        "cnt[num]": 24670,
        "max(dp[0],": 24671,
        "cnt[i])": 24672,
        "dp[num": 24673,
        "numbers(max1)": 24674,
        "numbers(max1,": 24675,
        "numbers[n1]": 24676,
        "values[0]": 24677,
        "values[1]": 24678,
        "numbers[1]": 24679,
        "values[i]": 24680,
        "values[i": 24681,
        "values[max1": 24682,
        "val[x]": 24683,
        "val[1]": 24684,
        "dp[100004]": 24685,
        "freq[b[j]]": 24686,
        "vis[b[j]]": 24687,
        "lower_bound(a": 24688,
        "dp[lx": 24689,
        "arr[temp]": 24690,
        "1e5+1,0": 24691,
        "dp[z]": 24692,
        "dp[z-2]": 24693,
        "dp[z-3]": 24694,
        "dp[1e5]": 24695,
        "dp[1e5-1]": 24696,
        "dp[maxa]": 24697,
        "maxa,": 24698,
        "num[t]": 24699,
        "cnt[x],": 24700,
        "dp[mx]": 24701,
        "contiguous": 24702,
        "sumo,": 24703,
        "sumz,": 24704,
        "sumo": 24705,
        "0000000": 24706,
        "1111111": 24707,
        "\"0000000\"": 24708,
        "\"1111111\"": 24709,
        "isSubstring": 24710,
        "s2[i+j]": 24711,
        "s1[j],": 24712,
        "counta2": 24713,
        "(size_t": 24714,
        "(contiguous": 24715,
        "to1": 24716,
        "str_1": 24717,
        "str_0": 24718,
        "streak": 24719,
        "isDanger": 24720,
        "plyrs": 24721,
        "playerState": 24722,
        "plyrs[0]": 24723,
        "plNumber": 24724,
        "plyrs[i]": 24725,
        "Players": 24726,
        "setn": 24727,
        "wordVolume": 24728,
        "textVolume": 24729,
        "max(textVolume,": 24730,
        "wordVolume)": 24731,
        "f(s[i])": 24732,
        "v[v.size()": 24733,
        "is_big": 24734,
        "N,K,ans,A,val,x,y=int": 24735,
        "T,S,P=string": 24736,
        "val=max(val,": 24737,
        "val=max(val,ans)": 24738,
        "maxWord,": 24739,
        "maxVolume": 24740,
        "maxWord": 24741,
        "maxVolume,": 24742,
        "sym=char": 24743,
        "temp>max1": 24744,
        "max1=temp": 24745,
        "2e7": 24746,
        "compare=": 24747,
        "c/a": 24748,
        ",flag": 24749,
        "test_cases": 24750,
        "ax)": 24751,
        "whether": 24752,
        "f[c]": 24753,
        "(red": 24754,
        "blue)": 24755,
        "d[0][1]": 24756,
        "d[i][j]": 24757,
        "d[i-1][j]": 24758,
        "(d[i][j]": 24759,
        "(d[n][0]": 24760,
        "d[n][1])": 24761,
        "oddsum": 24762,
        "evensum": 24763,
        "val[0]": 24764,
        "val[i": 24765,
        "(val[i": 24766,
        "val[(i": 24767,
        "(val[0]": 24768,
        "val[1])": 24769,
        "0x7f7f7f7f": 24770,
        "1000099": 24771,
        "num[2]": 24772,
        "num[3]": 24773,
        "((num[i": 24774,
        "a[!num]": 24775,
        "(blue": 24776,
        "s0,": 24777,
        "(s0": 24778,
        "ev,": 24779,
        "odd[1]": 24780,
        "(ev[i": 24781,
        "odd[i]": 24782,
        "(odd[i": 24783,
        "ev[i]": 24784,
        "pos[0]": 24785,
        "pos[end]": 24786,
        "pos[(end": 24787,
        "alt_prefix": 24788,
        "alt_prefix[1]": 24789,
        "alt_prefix[2]": 24790,
        "alt_prefix[i": 24791,
        "(alt_prefix[i": 24792,
        "alt_prefix[i]": 24793,
        "(answer": 24794,
        "1001000": 24795,
        "dp[i][i%2]": 24796,
        "(dp[i][i": 24797,
        "1][(i": 24798,
        "(dp[n][0]": 24799,
        "dp[0][i-1]": 24800,
        "dp[1][i]": 24801,
        "(dp[1][i": 24802,
        "dp[0][i": 24803,
        "dp[1][i-1]": 24804,
        "(dp[0][i": 24805,
        "dp[1][i": 24806,
        "(dp[0][n": 24807,
        "dp[1][n": 24808,
        "1234567": 24809,
        "d[1][0]": 24810,
        "d[1][1]": 24811,
        "d[i][0]": 24812,
        "d[i][1]": 24813,
        "d[i][i": 24814,
        "1][1": 24815,
        "(i%2)]": 24816,
        "acumx": 24817,
        "acum0": 24818,
        "(acumx": 24819,
        "(acum0": 24820,
        "acumx)": 24821,
        "gcd1(b": 24822,
        "998244353LL": 24823,
        "dp[1][0]": 24824,
        "dp[n][1])": 24825,
        "(dp[0]": 24826,
        "=4,": 24827,
        "cnt1-": 24828,
        "nq": 24829,
        "cnta-cntb": 24830,
        "ans=ans": 24831,
        "nq/2": 24832,
        "a_4,": 24833,
        "a_7,": 24834,
        "b_4": 24835,
        "b_7": 24836,
        "a_4": 24837,
        "a_7": 24838,
        "del)": 24839,
        "cnt4": 24840,
        "cnt7": 24841,
        "cnt7,": 24842,
        "(cnt4": 24843,
        "(cnt7": 24844,
        "f[a[i]": 24845,
        "x,r": 24846,
        "f[4]": 24847,
        "f[7],": 24848,
        "f[7]": 24849,
        "coA": 24850,
        "coB": 24851,
        "(wrong": 24852,
        "num4,": 24853,
        "num7": 24854,
        "num4": 24855,
        "b[i])),": 24856,
        "_tmp": 24857,
        "_tc": 24858,
        "((_tc": 24859,
        "(_tc": 24860,
        "'0'),": 24861,
        "swap(a[i],": 24862,
        "3000+10": 24863,
        "num4=0": 24864,
        "num7=0": 24865,
        "so,": 24866,
        "c74,": 24867,
        "c47": 24868,
        "c74": 24869,
        "INF=": 24870,
        "qta,": 24871,
        "qtb": 24872,
        "qta.first": 24873,
        "qta.second": 24874,
        "qtb.first": 24875,
        "qtb.second": 24876,
        "jia,": 24877,
        "yi,": 24878,
        "jiati,": 24879,
        "yiti": 24880,
        "jiati": 24881,
        "jia": 24882,
        "yi": 24883,
        "vb,": 24884,
        "\"Friendship\\n\"": 24885,
        "time2,": 24886,
        "v1,v2,t1,t2=int": 24887,
        "res1,res2=int": 24888,
        "v1,v2,t1,t2": 24889,
        "res1=v1*n+2*t1": 24890,
        "res2=v2*n+2*t2": 24891,
        "res1<res2": 24892,
        "res1>res2": 24893,
        "n=n/2": 24894,
        "read(return": 24895,
        "c=getchar()": 24896,
        "x=(x+(x<<2)<<1)+c-'0'": 24897,
        "x=read()": 24898,
        "cnt=1": 24899,
        "(binary": 24900,
        "base-2": 24901,
        "logarith": 24902,
        "bacterias": 24903,
        "contador_final": 24904,
        "contador_bacterias": 24905,
        "product": 24906,
        "bacterias,": 24907,
        "__builtin_popcount(x)": 24908,
        "__builtin_popcount(n)": 24909,
        "twice": 24910,
        "palabra": 24911,
        "vocale": 24912,
        "\"aeioun\"": 24913,
        "valido": 24914,
        "\"aeiou\"": 24915,
        "palabra[tam": 24916,
        "palabra[i]": 24917,
        "palabra[i": 24918,
        "whith": 24919,
        "\"colors.is\",": 24920,
        "5=": 24921,
        "elem": 24922,
        "vowels": 24923,
        "binary_search(vowels.begin(),": 24924,
        "vowels.end(),": 24925,
        "is_valid": 24926,
        "'n',": 24927,
        "is_vowel(s[i])": 24928,
        "is_vowel(s[i": 24929,
        "is_valid(s)": 24930,
        "esVocal": 24931,
        "esVocal(s[i])": 24932,
        "esVocal(s[i+1]),": 24933,
        "esVocal(s[n-1])": 24934,
        "isyuan": 24935,
        "lenn": 24936,
        "vowel(s[i]))": 24937,
        "(vowel(s[i": 24938,
        "vowel(s[i": 24939,
        "len),": 24940,
        "fun1": 24941,
        "fun1(s[i])": 24942,
        "fun1(s[i+1])": 24943,
        "vis['a'],": 24944,
        "vis['e'],": 24945,
        "vis['i'],": 24946,
        "vis['o']": 24947,
        "vis['u']": 24948,
        "vis[str[i]]": 24949,
        "vis[str[i": 24950,
        "puts(\"NO\")": 24951,
        "9e5": 24952,
        "gl": 24953,
        "s[s-1]": 24954,
        "66666": 24955,
        "ss[j],": 24956,
        "pd(i)": 24957,
        "pd(i+1)": 24958,
        "\"a\",": 24959,
        "\"e\",": 24960,
        "\"i\",": 24961,
        "\"o\"": 24962,
        "\"u\"": 24963,
        "\"n\",": 24964,
        "isVowel(chat": 24965,
        "aux)": 24966,
        "isvowel(s[i+1])": 24967,
        "isvowel(s[size": 24968,
        "(isVowel(s[i])": 24969,
        "isVowel(s[i": 24970,
        "1])),": 24971,
        "(band)": 24972,
        "is_vowel(s[i+1])": 24973
    },
    "tgt_vocab": {
        "<pad>": 0,
        "<sos>": 1,
        "<eos>": 2,
        "int": 3,
        "main()": 4,
        "{": 5,
        "string": 6,
        "s;": 7,
        "x1,": 8,
        "y1,": 9,
        "x2,": 10,
        "y2;": 11,
        "cin": 12,
        ">>": 13,
        "x1": 14,
        "=": 15,
        "s[0]": 16,
        "-": 17,
        "96;": 18,
        "y1": 19,
        "s[1]": 20,
        "'0';": 21,
        "x2": 22,
        "y2": 23,
        "cout": 24,
        "<<": 25,
        "max(abs(x1": 26,
        "x2),": 27,
        "abs(y1": 28,
        "y2))": 29,
        "endl;": 30,
        "while": 31,
        "(x1": 32,
        "!=": 33,
        "||": 34,
        "y2)": 35,
        "if": 36,
        "(x2": 37,
        ">": 38,
        "x1)": 39,
        "\"R\";": 40,
        "x1++;": 41,
        "}": 42,
        "<": 43,
        "\"L\";": 44,
        "x1--;": 45,
        "(y1": 46,
        "\"D\";": 47,
        "y1--;": 48,
        "\"U\";": 49,
        "y1++;": 50,
        "\"\\n\";": 51,
        "return": 52,
        "0;": 53,
        "char": 54,
        "c1[2];": 55,
        "c2[2];": 56,
        "c1[0]": 57,
        "c1[1];": 58,
        "c2[0]": 59,
        "c2[1];": 60,
        "vector<string>": 61,
        "ans;": 62,
        "(c1[0]": 63,
        "c1[1]": 64,
        "c2[1])": 65,
        "&&": 66,
        "ans.push_back(\"RU\");": 67,
        "c1[0]++;": 68,
        "c1[1]++;": 69,
        "else": 70,
        "==": 71,
        "ans.push_back(\"R\");": 72,
        "ans.push_back(\"RD\");": 73,
        "c1[1]--;": 74,
        "ans.push_back(\"U\");": 75,
        "ans.push_back(\"D\");": 76,
        "ans.push_back(\"LD\");": 77,
        "c1[0]--;": 78,
        "ans.push_back(\"L\");": 79,
        "ans.push_back(\"LU\");": 80,
        "ans.size()": 81,
        "for": 82,
        "(int": 83,
        "i": 84,
        "ans.size();": 85,
        "i++)": 86,
        "ans[i]": 87,
        "long": 88,
        "n,": 89,
        "m;": 90,
        "x,": 91,
        "y,": 92,
        "a,": 93,
        "b;": 94,
        "s,": 95,
        "s1;": 96,
        "s": 97,
        "n": 98,
        "int(s[0]": 99,
        "s1[0]),": 100,
        "m": 101,
        "int(s[1]": 102,
        "s1[1]);": 103,
        "(n": 104,
        "0)": 105,
        "-n;": 106,
        "x": 107,
        "'R';": 108,
        "'L';": 109,
        "(m": 110,
        "-m;": 111,
        "y": 112,
        "'U';": 113,
        "'D';": 114,
        "max(n,": 115,
        "m)": 116,
        "|": 117,
        "(n)": 118,
        "n--,": 119,
        "x;": 120,
        "(m)": 121,
        "m--,": 122,
        "y;": 123,
        "now,": 124,
        "goal,": 125,
        "way[100];": 126,
        "step,": 127,
        "i,": 128,
        "tstep": 129,
        "now": 130,
        "goal;": 131,
        "(now": 132,
        "goal)": 133,
        "(now[0]": 134,
        "goal[0])": 135,
        "step": 136,
        "now[1]": 137,
        "goal[1];": 138,
        "(step": 139,
        "(i": 140,
        "step;": 141,
        "way[tstep++]": 142,
        "now[1]--;": 143,
        "-step;": 144,
        "now[1]++;": 145,
        "(now[1]": 146,
        "goal[1])": 147,
        "now[0]": 148,
        "goal[0];": 149,
        "now[0]--;": 150,
        "now[0]++;": 151,
        "goal[0]": 152,
        "\"RD\";": 153,
        "\"LD\";": 154,
        "\"RU\";": 155,
        "\"LU\";": 156,
        "tstep;": 157,
        "way[i]": 158,
        "S;": 159,
        "S[0]": 160,
        "49,": 161,
        "S[1]": 162,
        "97;": 163,
        "Way": 164,
        "\"\";": 165,
        "counter": 166,
        "(true)": 167,
        "sign_X": 168,
        "0": 169,
        "?": 170,
        "/": 171,
        "abs(x2": 172,
        ":": 173,
        "sign_Y": 174,
        "(y2": 175,
        "y1)": 176,
        "abs(y2": 177,
        "(sign_X": 178,
        "1)": 179,
        "+=": 180,
        "-1)": 181,
        "(sign_Y": 182,
        "sign_X;": 183,
        "sign_Y;": 184,
        "(!sign_X": 185,
        "&": 186,
        "!sign_Y)": 187,
        "break;": 188,
        "'\\n';": 189,
        "counter++;": 190,
        "endl": 191,
        "Way;": 192,
        "a[10];": 193,
        "b[10][10];": 194,
        "csx,": 195,
        "ctx;": 196,
        "sx,": 197,
        "sy,": 198,
        "tx,": 199,
        "ty;": 200,
        "k;": 201,
        "csx": 202,
        "sy;": 203,
        "ctx": 204,
        "sx": 205,
        "tx": 206,
        "k": 207,
        "(sx": 208,
        "tx)": 209,
        "(sy": 210,
        "ty)": 211,
        "sy": 212,
        "k++;": 213,
        "a[k]": 214,
        "6;": 215,
        "sx--;": 216,
        "sy--;": 217,
        "1;": 218,
        "sy++;": 219,
        "8;": 220,
        "sx++;": 221,
        "3;": 222,
        "5;": 223,
        "4;": 224,
        "2;": 225,
        "7;": 226,
        "<=": 227,
        "(a[i]": 228,
        "\"LU\"": 229,
        "2)": 230,
        "\"U\"": 231,
        "3)": 232,
        "\"RU\"": 233,
        "4)": 234,
        "\"L\"": 235,
        "5)": 236,
        "\"R\"": 237,
        "6)": 238,
        "\"LD\"": 239,
        "7)": 240,
        "\"D\"": 241,
        "8)": 242,
        "\"RD\"": 243,
        "res(int": 244,
        "y)": 245,
        "(x": 246,
        "-1": 247,
        "1": 248,
        "xy(char": 249,
        "y++;": 250,
        "y--;": 251,
        "j,": 252,
        "k,": 253,
        "l,": 254,
        "count": 255,
        "0,": 256,
        "to,": 257,
        "from;": 258,
        "from": 259,
        "to;": 260,
        "vec;": 261,
        "from[0],": 262,
        "from[1],": 263,
        "to[0],": 264,
        "to[1];": 265,
        "xy(x1,": 266,
        "x2);": 267,
        "xy(y1,": 268,
        "y2);": 269,
        "vec.push_back(res(x,": 270,
        "y));": 271,
        "vec.size()": 272,
        "vec.size();": 273,
        "vec[i]": 274,
        "aa,": 275,
        "bb,": 276,
        "a": 277,
        "aa": 278,
        "b": 279,
        "bb;": 280,
        "a;": 281,
        "bb": 282,
        "aa;": 283,
        "ans": 284,
        "max(abs(x),": 285,
        "abs(y));": 286,
        "x--;": 287,
        "(y": 288,
        "x++;": 289,
        "t;": 290,
        "max(abs(s[0]": 291,
        "t[0]),": 292,
        "abs(s[1]": 293,
        "t[1]))": 294,
        "(s": 295,
        "t)": 296,
        "(s[0]": 297,
        "t[0])": 298,
        "-=": 299,
        "(s[1]": 300,
        "t[1])": 301,
        "l": 302,
        "'": 303,
        "',": 304,
        "';": 305,
        "n++;": 306,
        "n--;": 307,
        "l++;": 308,
        "d;": 309,
        "short": 310,
        "d": 311,
        "'a'": 312,
        "+": 313,
        "max(abs(x": 314,
        "a),": 315,
        "abs(y": 316,
        "b))": 317,
        "or": 318,
        "b)": 319,
        "a)": 320,
        "d1": 321,
        "t[0];": 322,
        "d2": 323,
        "t[1];": 324,
        "max(abs(d1),": 325,
        "abs(d2));": 326,
        "c1": 327,
        "'L'": 328,
        "c2": 329,
        "'D'": 330,
        "min(abs(d1),": 331,
        "abs(d1);": 332,
        "abs(d2);": 333,
        "(d1": 334,
        "d2)": 335,
        "c2;": 336,
        "abs(d1": 337,
        "d2);": 338,
        "(int)max(abs(s[0]": 339,
        "inp;": 340,
        "inp[0]": 341,
        "'a',": 342,
        "inp[1]": 343,
        "x2)": 344,
        "res[64];": 345,
        "i;": 346,
        "c": 347,
        "s[0];": 348,
        "r": 349,
        "(int)s[1];": 350,
        "ctr": 351,
        "dc": 352,
        "d[0];": 353,
        "dr": 354,
        "(int)d[1];": 355,
        "(c": 356,
        "dr)": 357,
        "dc)": 358,
        "(r": 359,
        "res[i]": 360,
        "r--;": 361,
        "r++;": 362,
        "(char)(c": 363,
        "1);": 364,
        "ctr++;": 365,
        "i++;": 366,
        "ctr;": 367,
        "vector<int>": 368,
        "VI,": 369,
        "VI2,": 370,
        "VI3,": 371,
        "VI4;": 372,
        "f": 373,
        "t[0],": 374,
        "max(abs(a),": 375,
        "abs(b))": 376,
        "(a": 377,
        "a--;": 378,
        "a++;": 379,
        "(b": 380,
        "b--;": 381,
        "b++;": 382,
        "max((abs(s[0]": 383,
        "t[0])),": 384,
        "(abs(s[1]": 385,
        "t[1])));": 386,
        "s[0]--;": 387,
        "s[0]++;": 388,
        "s[1]--;": 389,
        "s[1]++;": 390,
        "c,": 391,
        "max(abs(int(c)": 392,
        "int(d)),": 393,
        "abs(a": 394,
        "and": 395,
        "a++,": 396,
        "c++;": 397,
        "\"RU\\n\";": 398,
        "c++,": 399,
        "\"RD\\n\";": 400,
        "c--,": 401,
        "\"LU\\n\";": 402,
        "\"LD\\n\";": 403,
        "d)": 404,
        "\"U\\n\";": 405,
        "\"D\\n\";": 406,
        "\"R\\n\";": 407,
        "c--;": 408,
        "\"L\\n\";": 409,
        "c1[3],": 410,
        "c2[3];": 411,
        "c1;": 412,
        "y2,": 413,
        "ans,": 414,
        "xx,": 415,
        "yy;": 416,
        "c2[1]": 417,
        "x2;": 418,
        "xx": 419,
        "abs(x);": 420,
        "yy": 421,
        "abs(y);": 422,
        "max(xx,": 423,
        "yy);": 424,
        "b,": 425,
        "max(abs(a": 426,
        "c),": 427,
        "abs(b": 428,
        "d));": 429,
        "(1)": 430,
        "((a": 431,
        "c)": 432,
        "d))": 433,
        "s1,": 434,
        "s2;": 435,
        "s1": 436,
        "(abs(s1[0]": 437,
        "s2[0])": 438,
        "abs(s1[1]": 439,
        "s2[1]))": 440,
        "abs(s1[0]": 441,
        "s2[1])": 442,
        "(s1": 443,
        "s2)": 444,
        "(s1[0]": 445,
        "s1[0]--;": 446,
        "s1[0]++;": 447,
        "(s1[1]": 448,
        "s1[1]--;": 449,
        "s1[1]++;": 450,
        "t[1]));": 451,
        "xx;": 452,
        "c_x,": 453,
        "c_y;": 454,
        "d_y,": 455,
        "d_x;": 456,
        "(xx": 457,
        ">=": 458,
        "d_x": 459,
        "abs(xx": 460,
        "x);": 461,
        "c_x": 462,
        "(yy": 463,
        "d_y": 464,
        "abs(yy": 465,
        "y);": 466,
        "c_y": 467,
        "get;": 468,
        "(d_x": 469,
        "d_y)": 470,
        "get": 471,
        "d_y;": 472,
        "++i)": 473,
        "d_x)": 474,
        "c_x;": 475,
        "(0)": 476,
        "freopen(\"CP.inp\",": 477,
        "\"r\",": 478,
        "stdin);": 479,
        "freopen(\"CP.out\",": 480,
        "\"w\",": 481,
        "stdout);": 482,
        "max(abs(s1[0]": 483,
        "s2[0]),": 484,
        "\"R\",": 485,
        "s1[0]": 486,
        "\"L\",": 487,
        "s2[0]": 488,
        "\"U\",": 489,
        "s1[1]": 490,
        "\"D\",": 491,
        "s2[1]": 492,
        "s.at(0);": 493,
        "s2": 494,
        "s.at(1);": 495,
        "t1": 496,
        "t.at(0);": 497,
        "t2": 498,
        "t.at(1);": 499,
        "max(abs(s1": 500,
        "t1),": 501,
        "abs(s2": 502,
        "t2))": 503,
        "t2)": 504,
        "t1)": 505,
        "s1--;": 506,
        "s1++;": 507,
        "(s2": 508,
        "s2--;": 509,
        "s2++;": 510,
        "s2[0];": 511,
        "s2[1];": 512,
        "abs(a);": 513,
        "abs(b);": 514,
        "x[0]": 515,
        "y[0];": 516,
        "x[1]": 517,
        "y[1];": 518,
        "-a;": 519,
        "-b;": 520,
        "(x[0]": 521,
        "y[0])": 522,
        "x[0]++;": 523,
        "x[0]--;": 524,
        "(x[1]": 525,
        "y[1])": 526,
        "x[1]++;": 527,
        "x[1]--;": 528,
        "q,": 529,
        "v,": 530,
        "z,": 531,
        "w,": 532,
        "u,": 533,
        "R,": 534,
        "D,": 535,
        "L,": 536,
        "U;": 537,
        "t": 538,
        "q;": 539,
        "abs(q[0]": 540,
        "t[0]);": 541,
        "abs(q[1]": 542,
        "t[1]);": 543,
        "min(c,": 544,
        "n);": 545,
        "w": 546,
        "(q[0]": 547,
        "L": 548,
        "R": 549,
        "(q[1]": 550,
        "D": 551,
        "U": 552,
        "c;": 553,
        "G;": 554,
        "(L": 555,
        "D)": 556,
        "G": 557,
        "U)": 558,
        "(R": 559,
        "w;": 560,
        "(U)": 561,
        "(b)": 562,
        "(R)": 563,
        "current,": 564,
        "destination;": 565,
        "current": 566,
        "udmoves": 567,
        "current[1]": 568,
        "destination[1];": 569,
        "rlmoves": 570,
        "current[0]": 571,
        "destination[0];": 572,
        "max(abs(udmoves),": 573,
        "abs(rlmoves))": 574,
        "(udmoves": 575,
        "udmoves--;": 576,
        "rlmoves++;": 577,
        "udmoves++;": 578,
        "rlmoves--;": 579,
        "m,": 580,
        "res,": 581,
        "o,": 582,
        "p;": 583,
        "n;": 584,
        "o": 585,
        "(o": 586,
        "*=": 587,
        "-1;": 588,
        "p": 589,
        "int(a)": 590,
        "int(s);": 591,
        "(p": 592,
        "res": 593,
        "max(o,": 594,
        "p);": 595,
        "(int(s)": 596,
        "int(a))": 597,
        "((n": 598,
        "a))": 599,
        "char(int(a)": 600,
        "s)": 601,
        "n1,": 602,
        "n2;": 603,
        "n1": 604,
        "s2),": 605,
        "abs(n1": 606,
        "n2))": 607,
        "startx,": 608,
        "starty,": 609,
        "endx,": 610,
        "endy;": 611,
        "c1,": 612,
        "startx": 613,
        "'a';": 614,
        "starty": 615,
        "'1';": 616,
        "endx": 617,
        "endy": 618,
        "v;": 619,
        "(startx": 620,
        "endy)": 621,
        "endx)": 622,
        "(starty": 623,
        "v.push_back(\"D\");": 624,
        "starty--;": 625,
        "v.push_back(\"U\");": 626,
        "starty++;": 627,
        "v.push_back(\"L\");": 628,
        "startx--;": 629,
        "v.push_back(\"R\");": 630,
        "startx++;": 631,
        "v.push_back(\"LD\");": 632,
        "v.push_back(\"LU\");": 633,
        "v.push_back(\"RD\");": 634,
        "v.push_back(\"RU\");": 635,
        "v.size()": 636,
        "v.size();": 637,
        "v[i]": 638,
        "c);": 639,
        "d);": 640,
        "n)": 641,
        "m--;": 642,
        "start,": 643,
        "dest;": 644,
        "start;": 645,
        "letter_start": 646,
        "start[0];": 647,
        "letter_dest": 648,
        "dest[0];": 649,
        "num_start": 650,
        "start[1]": 651,
        "num_dest": 652,
        "dest[1]": 653,
        "way;": 654,
        "(letter_start": 655,
        "num_dest)": 656,
        "way.push_back(\"RU\");": 657,
        "way.push_back(\"RD\");": 658,
        "way.push_back(\"LU\");": 659,
        "way.push_back(\"LD\");": 660,
        "way.push_back(\"U\");": 661,
        "way.push_back(\"D\");": 662,
        "way.push_back(\"R\");": 663,
        "way.push_back(\"L\");": 664,
        "(way.size())": 665,
        "way.size()": 666,
        "way.size();": 667,
        "v1": 668,
        "abs(a[0]": 669,
        "b[0]),": 670,
        "v2": 671,
        "abs(a[1]": 672,
        "b[1]);": 673,
        "min(v1,": 674,
        "v2)": 675,
        "(a[0]": 676,
        "b[0])": 677,
        "(a[1]": 678,
        "b[1])": 679,
        "(v1": 680,
        "v1--;": 681,
        "(v2": 682,
        "v2--;": 683,
        "i1,": 684,
        "i2,": 685,
        "l1,": 686,
        "l2;": 687,
        "i1": 688,
        "i2": 689,
        "l1": 690,
        "max(abs(i1": 691,
        "l1),": 692,
        "abs(i2": 693,
        "l2))": 694,
        "(i1": 695,
        "l2)": 696,
        "l1)": 697,
        "i1++;": 698,
        "i1--;": 699,
        "(i2": 700,
        "i2--;": 701,
        "i2++;": 702,
        "y1;": 703,
        "str[1000];": 704,
        "str[count]": 705,
        "count++;": 706,
        "count;": 707,
        "str[i]": 708,
        "cx,": 709,
        "cy,": 710,
        "dx,": 711,
        "dy;": 712,
        "(cin": 713,
        "cy": 714,
        "dy)": 715,
        "cx": 716,
        "48": 717,
        "dx": 718,
        "xd": 719,
        "yd": 720,
        "max(abs(xd),": 721,
        "abs(yd));": 722,
        "(ans--)": 723,
        "(xd": 724,
        "xd--;": 725,
        "xd++;": 726,
        "(yd": 727,
        "yd--;": 728,
        "yd++;": 729,
        "mx": 730,
        "s2[1]));": 731,
        "rx[8]": 732,
        "{1,": 733,
        "1,": 734,
        "-1,": 735,
        "1};": 736,
        "ry[8]": 737,
        "{0,": 738,
        "-1};": 739,
        "'0'": 740,
        "xf": 741,
        "yf": 742,
        "kol": 743,
        "(xf": 744,
        "yf)": 745,
        "kol++,": 746,
        "ans.push_back(\"RU\"),": 747,
        "x++,": 748,
        "ans.push_back(\"LD\"),": 749,
        "x--,": 750,
        "ans.push_back(\"LU\"),": 751,
        "ans.push_back(\"RD\"),": 752,
        "ans.push_back(\"U\"),": 753,
        "ans.push_back(\"D\"),": 754,
        "ans.push_back(\"L\"),": 755,
        "ans.push_back(\"R\"),": 756,
        "int(ans.size());": 757,
        "min(int,": 758,
        "int);": 759,
        "xie,": 760,
        "dy": 761,
        "int(b)": 762,
        "int(a);": 763,
        "xie": 764,
        "min(dx,": 765,
        "dy);": 766,
        "abs(abs(dx)": 767,
        "abs(dy));": 768,
        "(dx": 769,
        "xie;": 770,
        "(abs(dx)": 771,
        "abs(dy))": 772,
        "(dy": 773,
        "min(int": 774,
        "r1,": 775,
        "r2,": 776,
        "r1": 777,
        "t[0]": 778,
        "r2": 779,
        "t[1]": 780,
        "7": 781,
        "r1;": 782,
        "r2;": 783,
        "max(abs(r1": 784,
        "r2),": 785,
        "abs(c1": 786,
        "c2))": 787,
        "(r1": 788,
        "c2)": 789,
        "(c1": 790,
        "c1++;": 791,
        "c1--;": 792,
        "r2)": 793,
        "r1++;": 794,
        "r1--;": 795,
        "d,": 796,
        "s[1001];": 797,
        "c[0]": 798,
        "c[1]": 799,
        "48;": 800,
        "d[0]": 801,
        "d[1]": 802,
        "cnt": 803,
        "cnt++;": 804,
        "s[cnt]": 805,
        "cnt;": 806,
        "s[i]": 807,
        "xs,": 808,
        "ys,": 809,
        "xt,": 810,
        "yt,": 811,
        "l[200];": 812,
        "xs": 813,
        "ys": 814,
        "'1'": 815,
        "xt": 816,
        "yt": 817,
        "(xs": 818,
        "yt)": 819,
        "(xt": 820,
        "ys)": 821,
        "l[n]": 822,
        "xs++;": 823,
        "ys++;": 824,
        "ys--;": 825,
        "xs--;": 826,
        "l[i]": 827,
        "p1[3],": 828,
        "p2[3];": 829,
        "p1": 830,
        "p2;": 831,
        "p2[0]": 832,
        "p1[0],": 833,
        "p2[1]": 834,
        "p1[1];": 835,
        "const": 836,
        "*dx": 837,
        "\"\",": 838,
        "*dy": 839,
        "x)": 840,
        "(x--)": 841,
        "(y--)": 842,
        "inline": 843,
        "read()": 844,
        "ch": 845,
        "(!isdigit(ch))": 846,
        "getchar();": 847,
        "(ch": 848,
        "'-')": 849,
        "(isdigit(ch))": 850,
        "*": 851,
        "c[2];": 852,
        "fx,": 853,
        "fy,": 854,
        "an[1000];": 855,
        "fx": 856,
        "fy": 857,
        "fy)": 858,
        "y++,": 859,
        "an[++ans]": 860,
        "y--,": 861,
        "an[i]": 862,
        "start[3],": 863,
        "end[3];": 864,
        "gap,": 865,
        "cin.get(start,": 866,
        "3,": 867,
        "'\\n');": 868,
        "cin.ignore();": 869,
        "cin.get(end,": 870,
        "start[0]": 871,
        "end[0];": 872,
        "end[1];": 873,
        "(abs(x)": 874,
        "abs(y))": 875,
        "gap": 876,
        "(gap": 877,
        "gap)": 878,
        "'R',": 879,
        "'L',": 880,
        "'D',": 881,
        "'U',": 882,
        "hi2,": 883,
        "hi2": 884,
        "abs(hi2": 885,
        "hi2--;": 886,
        "hi2++;": 887,
        "(hi2": 888,
        "loop": 889,
        "max(abs(a[0]": 890,
        "b[1]));": 891,
        "loop;": 892,
        "a[0]++;": 893,
        "a[0]--;": 894,
        "a[1]++;": 895,
        "a[1]--;": 896,
        "a[0]": 897,
        "a[1]": 898,
        "ex": 899,
        "b[0]": 900,
        "ey": 901,
        "b[1]": 902,
        "flag1,": 903,
        "flag2;": 904,
        "(ex": 905,
        "sx)": 906,
        "flag1": 907,
        "(ey": 908,
        "sy)": 909,
        "flag2": 910,
        "fabs(ex": 911,
        "sx);": 912,
        "fabs(ey": 913,
        "sy);": 914,
        "max(dx,": 915,
        "flag1;": 916,
        "dx--;": 917,
        "dy--;": 918,
        "s2,": 919,
        "t1,": 920,
        "t2;": 921,
        "f,": 922,
        "(abs(m)": 923,
        "abs(n))": 924,
        "abs(m)": 925,
        "abs(n)": 926,
        "i--)": 927,
        "m++;": 928,
        "(-m": 929,
        "-n)": 930,
        "(f": 931,
        "diag": 932,
        "s1[0],": 933,
        "diag2": 934,
        "s1[1];": 935,
        "(diag": 936,
        "diag--;": 937,
        "diag2++;": 938,
        "ans.push_back(\"RD\\n\");": 939,
        "diag2--;": 940,
        "ans.push_back(\"RU\\n\");": 941,
        "(diag2": 942,
        "diag++;": 943,
        "ans.push_back(\"LD\\n\");": 944,
        "ans.push_back(\"LU\\n\");": 945,
        "ans.push_back(\"D\\n\");": 946,
        "ans.push_back(\"U\\n\");": 947,
        "ans.push_back(\"R\\n\");": 948,
        "ans.push_back(\"L\\n\");": 949,
        "ans[i];": 950,
        "getint()": 951,
        "'9'": 952,
        "'0')": 953,
        "'9')": 954,
        "10": 955,
        "f;": 956,
        "a[0],": 957,
        "a[1];": 958,
        "min(x,": 959,
        "max(x,": 960,
        "\"U\")": 961,
        "\"D\")": 962,
        "s1[5],": 963,
        "s2[5];": 964,
        "s1[0];": 965,
        "dx;": 966,
        "++cnt;": 967,
        "a[10],": 968,
        "b[10];": 969,
        "'0',": 970,
        "max(fabs(x1": 971,
        "fabs(y1": 972,
        "y2));": 973,
        "y2--;": 974,
        "x2--;": 975,
        "void": 976,
        "fastIo()": 977,
        "{}": 978,
        "fastIo();": 979,
        "MAT[n][m];": 980,
        "j": 981,
        "j++)": 982,
        "MAT[i][j];": 983,
        "LC": 984,
        "RC": 985,
        "TR": 986,
        "BR": 987,
        "bool": 988,
        "first": 989,
        "false;": 990,
        "(MAT[i][j]": 991,
        "'*')": 992,
        "(!first)": 993,
        "min(LC,": 994,
        "j);": 995,
        "true;": 996,
        "max(RC,": 997,
        "min(TR,": 998,
        "i);": 999,
        "max(BR,": 1000,
        "TR;": 1001,
        "BR;": 1002,
        "LC;": 1003,
        "RC;": 1004,
        "min_i": 1005,
        "51,": 1006,
        "min_j": 1007,
        "max_i,": 1008,
        "max_j;": 1009,
        "a[55][55];": 1010,
        "a[i][j];": 1011,
        "(a[i][j]": 1012,
        "min(min_i,": 1013,
        "min(min_j,": 1014,
        "max_i": 1015,
        "max(max_i,": 1016,
        "max_j": 1017,
        "max(max_j,": 1018,
        "min_i;": 1019,
        "max_i;": 1020,
        "min_j;": 1021,
        "z;": 1022,
        "51;": 1023,
        "z": 1024,
        "a[51][51];": 1025,
        "w)": 1026,
        "(j": 1027,
        "j;": 1028,
        "z)": 1029,
        "s[55][55],": 1030,
        "check[55];": 1031,
        "mn": 1032,
        "888888,": 1033,
        "s[i][j];": 1034,
        "(s[i][j]": 1035,
        "min(j,": 1036,
        "mn);": 1037,
        "max(j,": 1038,
        "mx);": 1039,
        "check[i]": 1040,
        "m1": 1041,
        "m2": 1042,
        "444;": 1043,
        "(check[i]": 1044,
        "max(i,": 1045,
        "m1);": 1046,
        "min(i,": 1047,
        "m2);": 1048,
        "m2;": 1049,
        "m1;": 1050,
        "mn;": 1051,
        "mx;": 1052,
        "ar[n][m];": 1053,
        "uper,": 1054,
        "lowar,": 1055,
        "left,": 1056,
        "right;": 1057,
        "ck": 1058,
        "left": 1059,
        "right": 1060,
        "con": 1061,
        "ar[i][j];": 1062,
        "(ck": 1063,
        "ar[i][j]": 1064,
        "uper": 1065,
        "(ar[i][j]": 1066,
        "lowar": 1067,
        "con++;": 1068,
        "left)": 1069,
        "(right": 1070,
        "j)": 1071,
        "(con": 1072,
        "\"*\"": 1073,
        "uper;": 1074,
        "lowar;": 1075,
        "left;": 1076,
        "vector<char>": 1077,
        "vec(n": 1078,
        "m);": 1079,
        "vec[j": 1080,
        "m];": 1081,
        "h1": 1082,
        "(vec[j": 1083,
        "m]": 1084,
        "(h1": 1085,
        "i)": 1086,
        "h2": 1087,
        "(h2": 1088,
        "j--)": 1089,
        "(h1;": 1090,
        "h2;": 1091,
        "h1++)": 1092,
        "q": 1093,
        "q++)": 1094,
        "(q": 1095,
        "vec[q": 1096,
        "2e9,": 1097,
        "i),": 1098,
        "min(y,": 1099,
        "j),": 1100,
        "max(yy,": 1101,
        "i++,": 1102,
        "endl)": 1103,
        "l2,": 1104,
        "l2": 1105,
        "100;": 1106,
        "check": 1107,
        "c1)": 1108,
        "(check)": 1109,
        "l1;": 1110,
        "c[66][66];": 1111,
        "6666,": 1112,
        "c[i][j];": 1113,
        "(c[i][j]": 1114,
        "'*'": 1115,
        "x1;": 1116,
        "55,": 1117,
        "finishx,": 1118,
        "finishy;": 1119,
        "st[55][55];": 1120,
        "st[i][j];": 1121,
        "(st[i][j]": 1122,
        "min(startx,": 1123,
        "min(starty,": 1124,
        "finishx": 1125,
        "max(finishx,": 1126,
        "finishy": 1127,
        "max(finishy,": 1128,
        "startx;": 1129,
        "finishx;": 1130,
        "starty;": 1131,
        "f[90][100];": 1132,
        "hangx[4409];": 1133,
        "coty[4999];": 1134,
        "tt": 1135,
        "xaydung(int": 1136,
        "hang,": 1137,
        "cot)": 1138,
        "hang;": 1139,
        "cot;": 1140,
        "bao1": 1141,
        "bao2": 1142,
        "demx": 1143,
        "demy": 1144,
        "maxx;": 1145,
        "maxx": 1146,
        "(bao1": 1147,
        "f[x][cot]": 1148,
        "++demx;": 1149,
        "(bao2": 1150,
        "f[hang][y]": 1151,
        "++demy;": 1152,
        "(demx": 1153,
        "(coty[0]": 1154,
        "cot": 1155,
        "coty[tt": 1156,
        "1]": 1157,
        "f[i][cot]": 1158,
        "(demy": 1159,
        "(hangx[0]": 1160,
        "hang": 1161,
        "hangx[tt": 1162,
        "1])": 1163,
        "f[hang][i]": 1164,
        "'.')": 1165,
        "f[i][j]": 1166,
        "hangx[tt]": 1167,
        "coty[tt]": 1168,
        "tt++;": 1169,
        "sort(hangx,": 1170,
        "hangx": 1171,
        "tt);": 1172,
        "sort(coty,": 1173,
        "coty": 1174,
        "(f[i][j]": 1175,
        "xaydung(i,": 1176,
        "chodoi": 1177,
        "\".\";": 1178,
        "\"*\";": 1179,
        "(chodoi": 1180,
        "a[100][100];": 1181,
        "100,": 1182,
        "-100,": 1183,
        "-100;": 1184,
        "min(x1,": 1185,
        "max(x2,": 1186,
        "min(y1,": 1187,
        "max(y2,": 1188,
        "q[n];": 1189,
        "A[n][m];": 1190,
        "q[i];": 1191,
        "A[i][j]": 1192,
        "q[i][j];": 1193,
        "u": 1194,
        "(A[i][j]": 1195,
        "(k)": 1196,
        "u;": 1197,
        "l;": 1198,
        "r;": 1199,
        "A[i][j];": 1200,
        "a[n][m];": 1201,
        "xmin": 1202,
        "200,": 1203,
        "xmax": 1204,
        "ymin": 1205,
        "ymax": 1206,
        "xmin;": 1207,
        "xmax;": 1208,
        "ymin;": 1209,
        "ymax;": 1210,
        "p,": 1211,
        "mat[55][55];": 1212,
        "49;": 1213,
        "mat[i][j];": 1214,
        "(mat[i][j]": 1215,
        "p)": 1216,
        "q)": 1217,
        "e;": 1218,
        "e": 1219,
        "s[a];": 1220,
        "50,": 1221,
        "s[i];": 1222,
        "u)": 1223,
        "l)": 1224,
        "r)": 1225,
        "s[i].substr(l,": 1226,
        "arr[n][m];": 1227,
        "arr[i][j];": 1228,
        "up,": 1229,
        "down,": 1230,
        "(arr[i][j]": 1231,
        "(count": 1232,
        "up": 1233,
        "down": 1234,
        "up;": 1235,
        "down;": 1236,
        "r,": 1237,
        "arr[50][50];": 1238,
        "mni": 1239,
        "INT_MAX,": 1240,
        "mnj": 1241,
        "mxi": 1242,
        "mxj": 1243,
        "arr[i][j]": 1244,
        "mxi);": 1245,
        "mxj);": 1246,
        "mni);": 1247,
        "mnj);": 1248,
        "mni;": 1249,
        "mxi;": 1250,
        "mnj;": 1251,
        "mxj;": 1252,
        "miny": 1253,
        "maxy": 1254,
        "minx": 1255,
        "minx)": 1256,
        "maxx)": 1257,
        "miny)": 1258,
        "maxy)": 1259,
        "miny;": 1260,
        "maxy;": 1261,
        "minx;": 1262,
        "f[n][m];": 1263,
        "r++)": 1264,
        "f[i][r];": 1265,
        "ch1": 1266,
        "1001,": 1267,
        "ch2": 1268,
        "ch3": 1269,
        "ch4": 1270,
        "(f[i][r]": 1271,
        "min(ch1,": 1272,
        "r);": 1273,
        "max(ch2,": 1274,
        "min(ch3,": 1275,
        "max(ch4,": 1276,
        "ch3;": 1277,
        "ch1;": 1278,
        "x0": 1279,
        "y0": 1280,
        "s[n];": 1281,
        "x0);": 1282,
        "y0);": 1283,
        "x1);": 1284,
        "y1);": 1285,
        "x0;": 1286,
        "s[i].substr(y0,": 1287,
        "a[100][100],": 1288,
        "d[100],": 1289,
        "a[i][j]": 1290,
        "(s[j]": 1291,
        "d[2]": 1292,
        "d[3]": 1293,
        "d[0])": 1294,
        "d[1])": 1295,
        "d[2])": 1296,
        "d[3])": 1297,
        "d[2];": 1298,
        "d[3];": 1299,
        "d[1];": 1300,
        "a[1001][1001];": 1301,
        "min_i,": 1302,
        "min_j,": 1303,
        "goto": 1304,
        "x:": 1305,
        "y:": 1306,
        "z:": 1307,
        "t:": 1308,
        "s[51][51];": 1309,
        "lx": 1310,
        "ly": 1311,
        "min(fx,": 1312,
        "min(fy,": 1313,
        "max(lx,": 1314,
        "max(ly,": 1315,
        "fx;": 1316,
        "lx;": 1317,
        "fy;": 1318,
        "ly;": 1319,
        "MOD": 1320,
        "1000000007;": 1321,
        "INF": 1322,
        "INF2": 1323,
        "1000000007LL": 1324,
        "1000000007LL;": 1325,
        "double": 1326,
        "EPS": 1327,
        "1e-9;": 1328,
        "s[100][100];": 1329,
        "mini": 1330,
        "INF,": 1331,
        "minj": 1332,
        "maxi": 1333,
        "-INF,": 1334,
        "maxj": 1335,
        "-INF;": 1336,
        "(long": 1337,
        "++j)": 1338,
        "min(mini,": 1339,
        "max(maxi,": 1340,
        "min(minj,": 1341,
        "max(maxj,": 1342,
        "s[i][j]": 1343,
        "mini;": 1344,
        "maxi;": 1345,
        "minj;": 1346,
        "maxj;": 1347,
        "a1": 1348,
        "a2": 1349,
        "a3": 1350,
        "a4": 1351,
        "a1)": 1352,
        "a2)": 1353,
        "(a3": 1354,
        "(a4": 1355,
        "a1;": 1356,
        "a3;": 1357,
        "a2;": 1358,
        "a4;": 1359,
        "lett(n);": 1360,
        "errl": 1361,
        "lett[i];": 1362,
        "(errl)": 1363,
        "err": 1364,
        "(lett[i][j]": 1365,
        "(err)": 1366,
        "lett[i]": 1367,
        "\"": 1368,
        "\";": 1369,
        "(lett[j][i]": 1370,
        "lett[j][i]": 1371,
        "(lett[i]": 1372,
        "\")": 1373,
        "')": 1374,
        "lett[i][j];": 1375,
        "alt": 1376,
        "-1000,": 1377,
        "ust": 1378,
        "1000,": 1379,
        "sag": 1380,
        "sol": 1381,
        "1000;": 1382,
        "max(alt,": 1383,
        "min(ust,": 1384,
        "max(sag,": 1385,
        "min(sol,": 1386,
        "ust;": 1387,
        "alt;": 1388,
        "sol;": 1389,
        "sag;": 1390,
        "yy,": 1391,
        "a[60][60];": 1392,
        "500,": 1393,
        "ch[50][50];": 1394,
        "endj": 1395,
        "ch[i][j];": 1396,
        "(ch[i][j]": 1397,
        "(;": 1398,
        "(endj": 1399,
        "maxj)": 1400,
        "endj;": 1401,
        "minj)": 1402,
        "endi": 1403,
        "(endi": 1404,
        "maxi)": 1405,
        "endi;": 1406,
        "mini)": 1407,
        "99999999,": 1408,
        "99999999;": 1409,
        "a[101][101];": 1410,
        "(k": 1411,
        "lu,": 1412,
        "ru,": 1413,
        "ld,": 1414,
        "rd,": 1415,
        "c[60][60];": 1416,
        "lu": 1417,
        "100000;": 1418,
        "ld": 1419,
        "lu)": 1420,
        "ru)": 1421,
        "ru": 1422,
        "ld)": 1423,
        "rd)": 1424,
        "rd": 1425,
        "lu;": 1426,
        "ru;": 1427,
        "ld;": 1428,
        "rd;": 1429,
        "arr[51][51];": 1430,
        "hi,": 1431,
        "hj,": 1432,
        "li,": 1433,
        "lj;": 1434,
        "hi": 1435,
        "hj": 1436,
        "li": 1437,
        "lj": 1438,
        "flag": 1439,
        "(flag": 1440,
        "hi)": 1441,
        "hj)": 1442,
        "li)": 1443,
        "lj)": 1444,
        "hi;": 1445,
        "li;": 1446,
        "hj;": 1447,
        "a[m][n];": 1448,
        "gg,": 1449,
        "0x3f,": 1450,
        "0x3f;": 1451,
        "gg;": 1452,
        "(gg": 1453,
        "500;": 1454,
        "m3": 1455,
        "m4": 1456,
        "map[55][55];": 1457,
        "map[i][j];": 1458,
        "(map[i][j]": 1459,
        "m1)": 1460,
        "m2)": 1461,
        "(map[j][i]": 1462,
        "m3)": 1463,
        "m4)": 1464,
        "m3;": 1465,
        "m4;": 1466,
        "'*');": 1467,
        "(a[i][j])": 1468,
        "min(u,": 1469,
        "max(d,": 1470,
        "min(l,": 1471,
        "max(r,": 1472,
        "g": 1473,
        "a[52][52];": 1474,
        "g)": 1475,
        "g;": 1476,
        "c[55][55];": 1477,
        "999999,": 1478,
        "X,": 1479,
        "Y;": 1480,
        "ok": 1481,
        "--i)": 1482,
        "--j)": 1483,
        "X": 1484,
        "max(X,": 1485,
        "Y": 1486,
        "max(Y,": 1487,
        "X;": 1488,
        "s[60];": 1489,
        "999,": 1490,
        "min(U,": 1491,
        "max(D,": 1492,
        "min(L,": 1493,
        "max(R,": 1494,
        "D;": 1495,
        "L;": 1496,
        "R;": 1497,
        "mini1": 1498,
        "60,": 1499,
        "mini2": 1500,
        "maxi1": 1501,
        "maxi2": 1502,
        "min(mini1,": 1503,
        "min(mini2,": 1504,
        "max(maxi1,": 1505,
        "max(maxi2,": 1506,
        "mini1;": 1507,
        "maxi1;": 1508,
        "mini2;": 1509,
        "maxi2;": 1510,
        "s.size();": 1511,
        "s[j];": 1512,
        "(!f)": 1513,
        "true)": 1514,
        "t);": 1515,
        "b);": 1516,
        "imx,": 1517,
        "imn": 1518,
        "1222,": 1519,
        "jmx,": 1520,
        "jmn": 1521,
        "1222;": 1522,
        "imx": 1523,
        "max(imx,": 1524,
        "min(imn,": 1525,
        "jmx": 1526,
        "max(jmx,": 1527,
        "min(jmn,": 1528,
        "imn;": 1529,
        "imx;": 1530,
        "k++)": 1531,
        "jmn;": 1532,
        "jmx;": 1533,
        "p++)": 1534,
        "s[k][p];": 1535,
        "-2019,": 1536,
        "-2019;": 1537,
        "-2019)": 1538,
        "(a[j][i]": 1539,
        "MX": 1540,
        "55;": 1541,
        "1e4,": 1542,
        "1e4;": 1543,
        "a[MX][MX];": 1544,
        "continue;": 1545,
        "min(minx,": 1546,
        "min(miny,": 1547,
        "max(maxx,": 1548,
        "max(maxy,": 1549,
        "\"\\n\")": 1550,
        "g,": 1551,
        "v": 1552,
        "arr[r][c];": 1553,
        "(!s": 1554,
        "v)": 1555,
        "e)": 1556,
        "o;": 1557,
        "(!s)": 1558,
        "arr1[p][y];": 1559,
        "arr1[k][l]": 1560,
        "arr1[i][j];": 1561,
        "imin": 1562,
        "imax": 1563,
        "jmin": 1564,
        "jmax": 1565,
        "str[n": 1566,
        "5][m": 1567,
        "5];": 1568,
        "str[i][j];": 1569,
        "(str[i][j]": 1570,
        "imin)": 1571,
        "imax)": 1572,
        "jmin)": 1573,
        "jmax)": 1574,
        "imin;": 1575,
        "imax;": 1576,
        "jmin;": 1577,
        "jmax;": 1578,
        "a[j][i];": 1579,
        "mini1)": 1580,
        "mini2)": 1581,
        "maxi1)": 1582,
        "maxi2)": 1583,
        "a[j][i]": 1584,
        "s[55][55];": 1585,
        "min,": 1586,
        "max,": 1587,
        "row_min,": 1588,
        "row_max;": 1589,
        "min": 1590,
        "max": 1591,
        "row_min": 1592,
        "row_max": 1593,
        "min)": 1594,
        "max)": 1595,
        "row_min)": 1596,
        "row_max)": 1597,
        "row_min;": 1598,
        "min;": 1599,
        "max;": 1600,
        "up)": 1601,
        "down)": 1602,
        "right)": 1603,
        "c[4];": 1604,
        "c[2]": 1605,
        "c[3]": 1606,
        "s[n": 1607,
        "9],": 1608,
        "r[m": 1609,
        "9];": 1610,
        "a[m": 1611,
        "11];": 1612,
        "r[i]": 1613,
        "a[i];": 1614,
        "s[(i": 1615,
        "%": 1616,
        "1]++;": 1617,
        "r[(i": 1618,
        "(r[i]": 1619,
        "(s[i]": 1620,
        "c[0];": 1621,
        "c[1];": 1622,
        "c[3];": 1623,
        "a[(i": 1624,
        "j];": 1625,
        "flag;": 1626,
        "(arr[j][i]": 1627,
        "c[100][100];": 1628,
        "34298343,": 1629,
        "2193809;": 1630,
        "f)": 1631,
        "data(50": 1632,
        "5);": 1633,
        "data[i];": 1634,
        "(data[i][j]": 1635,
        "(u": 1636,
        "(l": 1637,
        "data[i][j];": 1638,
        "n2": 1639,
        "max(n1,": 1640,
        "min(n2,": 1641,
        "max(m1,": 1642,
        "min(m2,": 1643,
        "n1;": 1644,
        "read();": 1645,
        "row,": 1646,
        "col;": 1647,
        "graph[1000][50];": 1648,
        "row": 1649,
        "start_x": 1650,
        "row;": 1651,
        "start_y": 1652,
        "end_x": 1653,
        "end_y": 1654,
        "input;": 1655,
        "graph[i][j];": 1656,
        "(graph[i][j]": 1657,
        "(start_x": 1658,
        "(start_y": 1659,
        "(end_x": 1660,
        "(end_y": 1661,
        "start_x;": 1662,
        "end_x;": 1663,
        "start_y;": 1664,
        "end_y;": 1665,
        "ch[n": 1666,
        "9][m": 1667,
        "Min_X": 1668,
        "Min_Y": 1669,
        "Max_X": 1670,
        "Max_Y": 1671,
        "ch[i];": 1672,
        "Min_X);": 1673,
        "Min_Y);": 1674,
        "Max_X);": 1675,
        "Max_Y);": 1676,
        "Min_X;": 1677,
        "Max_X;": 1678,
        "Min_Y;": 1679,
        "Max_Y;": 1680,
        "**sheet": 1681,
        "new": 1682,
        "*[n];": 1683,
        "sheet[i]": 1684,
        "char[m];": 1685,
        "sheet[i][j];": 1686,
        "minRow": 1687,
        "minCol": 1688,
        "maxRow": 1689,
        "maxCol": 1690,
        "(sheet[i][j]": 1691,
        "minRow)": 1692,
        "maxRow)": 1693,
        "minCol)": 1694,
        "maxCol)": 1695,
        "minRow;": 1696,
        "maxRow;": 1697,
        "minCol;": 1698,
        "maxCol;": 1699,
        "**shap": 1700,
        "shap[i]": 1701,
        "rows,": 1702,
        "colums,": 1703,
        "rowe,": 1704,
        "colume;": 1705,
        "shap[i][j];": 1706,
        "(j;": 1707,
        "(shap[i][j]": 1708,
        "rows": 1709,
        "(e": 1710,
        "(i;": 1711,
        "colums": 1712,
        "colums;": 1713,
        "rows;": 1714,
        "colume": 1715,
        "rowe": 1716,
        "rowe;": 1717,
        "N": 1718,
        "123;": 1719,
        "1e9": 1720,
        "KIOT_camp,": 1721,
        "x3,": 1722,
        "y3,": 1723,
        "x4,": 1724,
        "y4;": 1725,
        "a[N][N];": 1726,
        "exit": 1727,
        "KIOT_camp": 1728,
        "(exit)": 1729,
        "y3": 1730,
        "x3": 1731,
        "y4": 1732,
        "x4": 1733,
        "min(KIOT_camp,": 1734,
        "y3);": 1735,
        "y4);": 1736,
        "x4);": 1737,
        "x3);": 1738,
        "checktop()": 1739,
        "checkbottom()": 1740,
        "checkleft()": 1741,
        "(s[j][i]": 1742,
        "checkright()": 1743,
        "s.resize(n);": 1744,
        "checkleft();": 1745,
        "checkright();": 1746,
        "top": 1747,
        "checktop();": 1748,
        "bottom": 1749,
        "checkbottom();": 1750,
        "top;": 1751,
        "bottom;": 1752,
        "s[i].substr(left,": 1753,
        "4": 1754,
        "'#';": 1755,
        "'.';": 1756,
        "2": 1757,
        "\"#\";": 1758,
        "\"#\"": 1759,
        "(r)": 1760,
        "a1[m": 1761,
        "1],": 1762,
        "a2[m": 1763,
        "a3[m": 1764,
        "1];": 1765,
        "a1[i]": 1766,
        "a2[i]": 1767,
        "a3[i]": 1768,
        "a1[m]": 1769,
        "'\\0';": 1770,
        "a2[m]": 1771,
        "a3[m]": 1772,
        "a3[0]": 1773,
        "((i": 1774,
        "\"#\\n\";": 1775,
        "\".\\n\";": 1776,
        "maxn": 1777,
        "200000": 1778,
        "zw[maxn": 1779,
        "2];": 1780,
        "pair<int,": 1781,
        "int>": 1782,
        "G[maxn];": 1783,
        "ans[maxn];": 1784,
        "a[maxn];": 1785,
        "b[30];": 1786,
        "ss,": 1787,
        "sss;": 1788,
        "(f)": 1789,
        "(!(i": 1790,
        "1))": 1791,
        "!f;": 1792,
        "'#'": 1793,
        "temp": 1794,
        "len": 1795,
        "(len": 1796,
        "temp;": 1797,
        "\".\"": 1798,
        "len++;": 1799,
        "y++)": 1800,
        "x++)": 1801,
        "even[55];": 1802,
        "even[i]": 1803,
        "(even[i]": 1804,
        "(right)": 1805,
        "1e5": 1806,
        "10;": 1807,
        "nn[maxn];": 1808,
        "-x;": 1809,
        "size": 1810,
        "305;": 1811,
        "print(char": 1812,
        "print('#',": 1813,
        "(check": 1814,
        "print('.',": 1815,
        "flg": 1816,
        "(0);": 1817,
        "(m);": 1818,
        "(flg)": 1819,
        "(!flg)": 1820,
        "!flg;": 1821,
        "line,": 1822,
        "lie;": 1823,
        "line": 1824,
        "line;": 1825,
        "(flag)": 1826,
        "lie": 1827,
        "a[50][50]": 1828,
        "{'.'};": 1829,
        "a[i][0]": 1830,
        "a[i][m": 1831,
        "cnt,": 1832,
        "sum,": 1833,
        "rem": 1834,
        "vector<long": 1835,
        "long>": 1836,
        "v1,": 1837,
        "v2,": 1838,
        "v3;": 1839,
        "map<long": 1840,
        "long,": 1841,
        "make_pair;": 1842,
        "set<long": 1843,
        "se;": 1844,
        "h,": 1845,
        "3": 1846,
        "(!flag)": 1847,
        "col": 1848,
        "result": 1849,
        "(n);": 1850,
        "fastio()": 1851,
        "fastio();": 1852,
        "h": 1853,
        "h++)": 1854,
        "s[120][120];": 1855,
        "0))": 1856,
        "2000010;": 1857,
        "mod": 1858,
        "add(int": 1859,
        "mod;": 1860,
        "res;": 1861,
        "mul(int": 1862,
        "1LL": 1863,
        "a[1000][1000];": 1864,
        "'.'": 1865,
        "'#');": 1866,
        "((x": 1867,
        "isitright": 1868,
        "(isitright": 1869,
        "true": 1870,
        "false": 1871,
        "s++)": 1872,
        "v++)": 1873,
        "putchar('#');": 1874,
        "putchar('.');": 1875,
        "puts(\"\");": 1876,
        "a()": 1877,
        "b()": 1878,
        "c()": 1879,
        "a();": 1880,
        "b();": 1881,
        "c();": 1882,
        "t,": 1883,
        "2,": 1884,
        "20;": 1885,
        "(!ok)": 1886,
        "a[i][1]": 1887,
        "a[m];": 1888,
        "b[m];": 1889,
        "c[m];": 1890,
        "a[i]": 1891,
        "b[i]": 1892,
        "b[m": 1893,
        "c[i]": 1894,
        "a[j];": 1895,
        "b[j];": 1896,
        "c[j];": 1897,
        "power(int": 1898,
        "modi)": 1899,
        "(res": 1900,
        "modi;": 1901,
        "/=": 1902,
        "dirx[]": 1903,
        "{-1,": 1904,
        "diry[]": 1905,
        "dx[]": 1906,
        "0};": 1907,
        "dy[]": 1908,
        "sum": 1909,
        "cur": 1910,
        "a[1005];": 1911,
        "(n--)": 1912,
        "column,": 1913,
        "column": 1914,
        "s3": 1915,
        "column;": 1916,
        "s3;": 1917,
        "(d": 1918,
        "d++;": 1919,
        "**p": 1920,
        "*[n": 1921,
        "p[i]": 1922,
        "int[m": 1923,
        "\".\");": 1924,
        "TESTS": 1925,
        "(TESTS--)": 1926,
        "hang++)": 1927,
        "(hang": 1928,
        "(temp": 1929,
        "temp++;": 1930,
        "(m;": 1931,
        "m++)": 1932,
        "n++)": 1933,
        "ma": 1934,
        "flag++;": 1935,
        "ma)": 1936,
        "(v": 1937,
        "!flag;": 1938,
        "lol": 1939,
        "(lol": 1940,
        "a[1000][50];": 1941,
        "c(max(n,": 1942,
        "m));": 1943,
        "rtr": 1944,
        "(rtr": 1945,
        "c[j]": 1946,
        "((rtr": 1947,
        "2))": 1948,
        "c[m]": 1949,
        "num": 1950,
        "(num": 1951,
        "part;": 1952,
        "50": 1953,
        "mxn": 1954,
        "s[101][101];": 1955,
        "(cnt": 1956,
        "a[55][55]": 1957,
        "{'0'};": 1958,
        "memset(a,": 1959,
        "'#',": 1960,
        "sizeof(a));": 1961,
        "c[i][j]": 1962,
        "c[i][m": 1963,
        "c[i][0]": 1964,
        "a[i][m]": 1965,
        "s[55];": 1966,
        "s[j]": 1967,
        "g++)": 1968,
        "f++)": 1969,
        "(g": 1970,
        ";": 1971,
        "mk[100][100];": 1972,
        "mk[x][y]": 1973,
        "mk[x": 1974,
        "1][y]": 1975,
        "(!mk[i][j])": 1976,
        "c(int": 1977,
        "g[1000005];": 1978,
        "(c(i))": 1979,
        "g[l": 1980,
        "i]": 1981,
        "(!c(i))": 1982,
        "g[i]": 1983,
        "(g[i])": 1984,
        "kol++;": 1985,
        "(kol": 1986,
        "k)": 1987,
        "\"YES\\n\";": 1988,
        "\"NO\\n\";": 1989,
        "SZ": 1990,
        "1003;": 1991,
        "isprime[SZ];": 1992,
        "sieve()": 1993,
        "fill(isprime,": 1994,
        "isprime": 1995,
        "SZ,": 1996,
        "isprime[0]": 1997,
        "isprime[1]": 1998,
        "SZ;": 1999,
        "(isprime[i])": 2000,
        "isprime[j]": 2001,
        "sieve();": 2002,
        "primes;": 2003,
        "primes.push_back(i);": 2004,
        "primes.size();": 2005,
        "primes[i]": 2006,
        "primes[i": 2007,
        "isprime[num])": 2008,
        "isPrime[1005];": 2009,
        "p[500],": 2010,
        "ji": 2011,
        "prime()": 2012,
        "isPrime[0]": 2013,
        "isPrime[1]": 2014,
        "1005;": 2015,
        "(!isPrime[i])": 2016,
        "p[ji]": 2017,
        "ji++;": 2018,
        "isPrime[j]": 2019,
        "prime();": 2020,
        "(isPrime[j": 2021,
        "(p[i]": 2022,
        "p[i": 2023,
        "ans++;": 2024,
        "(ans": 2025,
        "ifprime(int": 2026,
        "good[3000];": 2027,
        "last": 2028,
        "(ifprime(i))": 2029,
        "(last": 2030,
        "good[i": 2031,
        "(!ifprime(i))": 2032,
        "good[i]": 2033,
        "(good[i])": 2034,
        "\"YES\"": 2035,
        "\"NO\"": 2036,
        "vector<bool>": 2037,
        "prime(1005,": 2038,
        "true);": 2039,
        "prime[1]": 2040,
        "sq": 2041,
        "(int)ceil(sqrt(1005": 2042,
        "0.0));": 2043,
        "sq;": 2044,
        "1000)": 2045,
        "prime[j]": 2046,
        "(prime[i])": 2047,
        "(prime[j])": 2048,
        "prime[i": 2049,
        "pr(n": 2050,
        "pr[i]": 2051,
        "next(n": 2052,
        "(pr[j])": 2053,
        "(pr[k])": 2054,
        "next[j]": 2055,
        "(pr[i])": 2056,
        "++k)": 2057,
        "(pr[k]": 2058,
        "pr[i": 2059,
        "k]": 2060,
        "next[k]": 2061,
        "puts(cnt": 2062,
        "\"NO\");": 2063,
        "primos;": 2064,
        "esPrimo(n": 2065,
        "false);": 2066,
        "primo": 2067,
        "(primo)": 2068,
        "primos.push_back(i);": 2069,
        "esPrimo[i]": 2070,
        "primos.size()": 2071,
        "(primos[i": 2072,
        "primos[i]": 2073,
        "(esPrimo[primos[i": 2074,
        "res++;": 2075,
        "1111;": 2076,
        "a[N]": 2077,
        "plen;": 2078,
        "p[N],": 2079,
        "b[N];": 2080,
        "num;": 2081,
        "N;": 2082,
        "(!a[i])": 2083,
        "p[plen++]": 2084,
        "a[j]": 2085,
        "plen": 2086,
        "(p[j]": 2087,
        "p[j": 2088,
        "num++;": 2089,
        "\"NO\\n\"": 2090,
        "\"YES\\n\");": 2091,
        "num[1000": 2092,
        "10],": 2093,
        "prime[1000": 2094,
        "10];": 2095,
        "num[0]": 2096,
        "num[1]": 2097,
        "(num[i]": 2098,
        "num[j]": 2099,
        "(!num[i])": 2100,
        "prime[j++]": 2101,
        "2]": 2102,
        "(!num[sum])": 2103,
        "p[1001],": 2104,
        "can[1001];": 2105,
        "(!p[i])": 2106,
        "can[i];": 2107,
        "can[last": 2108,
        "p[j]": 2109,
        "map<int,": 2110,
        "check()": 2111,
        "(m[primes[i]": 2112,
        "sieve(int": 2113,
        "size)": 2114,
        "bitset<100010>": 2115,
        "was;": 2116,
        "was.set();": 2117,
        "was[0]": 2118,
        "was[1]": 2119,
        "size;": 2120,
        "(was[i])": 2121,
        "m[i]": 2122,
        "was[j]": 2123,
        "check();": 2124,
        "sieve(n);": 2125,
        "sqrt(a);": 2126,
        "p[1010],": 2127,
        "visit[1010];": 2128,
        "(!visit[i])": 2129,
        "p[++*p]": 2130,
        "visit[j]": 2131,
        "*p;": 2132,
        "((t": 2133,
        "!visit[t])": 2134,
        "k--;": 2135,
        "puts(k": 2136,
        "9;": 2137,
        "9)": 2138,
        "MAXN": 2139,
        "1000005;": 2140,
        "prime[MAXN],": 2141,
        "pd[MAXN];": 2142,
        "find_prime()": 2143,
        "pd[0]": 2144,
        "pd[1]": 2145,
        "MAXN;": 2146,
        "(!pd[i])": 2147,
        "prime[num++]": 2148,
        "MAXN)": 2149,
        "pd[i": 2150,
        "prime[j]]": 2151,
        "find(int": 2152,
        "mid;": 2153,
        "mid": 2154,
        "prime[mid])": 2155,
        "mz(int": 2156,
        "pos,": 2157,
        "(t": 2158,
        "(pd[t])": 2159,
        "t++;": 2160,
        "pos": 2161,
        "find(t);": 2162,
        "(prime[pos": 2163,
        "prime[pos]": 2164,
        "find_prime();": 2165,
        "prime[i]": 2166,
        "(mz(prime[i]))": 2167,
        "prime(int": 2168,
        "sqrt(n)": 2169,
        "tmp": 2170,
        "set<int>": 2171,
        "ju;": 2172,
        "(prime(i))": 2173,
        "ju.insert(i);": 2174,
        "set<int>::iterator": 2175,
        "it;": 2176,
        "(it": 2177,
        "ju.begin();": 2178,
        "it": 2179,
        "ju.end();": 2180,
        "it++)": 2181,
        "*it;": 2182,
        "it--;": 2183,
        "(prime(tmp)": 2184,
        "it++;": 2185,
        "a[1001]": 2186,
        "p[1001];": 2187,
        "b[2002]": 2188,
        "{0};": 2189,
        "1001;": 2190,
        "b[p[i]": 2191,
        "(b[i]": 2192,
        "!a[i])": 2193,
        "puts(num": 2194,
        "isp(int": 2195,
        "(isp(i))": 2196,
        "primes.size()": 2197,
        "(isp(primes[i]": 2198,
        "isprime(int": 2199,
        "can(int": 2200,
        "(isprime(i))": 2201,
        "(can(s))": 2202,
        "Primes(1001);": 2203,
        "Primes[i]": 2204,
        "Primes[0]": 2205,
        "Primes[1]": 2206,
        "sqrt(1001);": 2207,
        "(Primes[i]": 2208,
        "Primes[i": 2209,
        "j]": 2210,
        "Primes.size();": 2211,
        "v.push_back(i);": 2212,
        "(v[j]": 2213,
        "v[j": 2214,
        "20000;": 2215,
        "f[N": 2216,
        "5]": 2217,
        "prime[20000];": 2218,
        "fin[30000];": 2219,
        "seive()": 2220,
        "f[0]": 2221,
        "f[1]": 2222,
        "(f[i])": 2223,
        "long)i": 2224,
        "f[j]": 2225,
        "primes()": 2226,
        "seive();": 2227,
        "5,": 2228,
        "prevI": 2229,
        "prime[0]": 2230,
        "2000;": 2231,
        "(!f[i])": 2232,
        "prevI;": 2233,
        "sum;": 2234,
        "prime[c++]": 2235,
        "memset(fin,": 2236,
        "3000);": 2237,
        "test;": 2238,
        "200;": 2239,
        "test": 2240,
        "prime[i];": 2241,
        "(!f[test])": 2242,
        "fin[test]": 2243,
        "3000;": 2244,
        "fin[i]": 2245,
        "fin[i": 2246,
        "primes();": 2247,
        "num,": 2248,
        "((fin[num]": 2249,
        "\"YES\\n\"": 2250,
        "\"NO\\n\");": 2251,
        "File()": 2252,
        "freopen(\"output.txt\",": 2253,
        "freopen(\"input.txt\",": 2254,
        "fast()": 2255,
        "pi": 2256,
        "3.1415926;": 2257,
        "nn": 2258,
        "1e3": 2259,
        "arr[nn];": 2260,
        "solve()": 2261,
        "arr[x++]": 2262,
        "fast();": 2263,
        "solve();": 2264,
        "(arr[j]": 2265,
        "arr[j": 2266,
        "isprime(i))": 2267,
        "&prime);": 2268,
        "is_prime(int": 2269,
        "num);": 2270,
        "prime;": 2271,
        "sieve(n,": 2272,
        "prime);": 2273,
        "prime.size();": 2274,
        "(is_prime(sum)": 2275,
        "&prime)": 2276,
        "mark[n": 2277,
        "memset(mark,": 2278,
        "true,": 2279,
        "sizeof(mark));": 2280,
        "(mark[i]": 2281,
        "mark[j]": 2282,
        "prime.push_back(i);": 2283,
        "num)": 2284,
        "isPrime(int": 2285,
        "sqrt(n);": 2286,
        "nextPrime(int": 2287,
        "(!isPrime(ans))": 2288,
        "noldbach(int": 2289,
        "(isPrime(i))": 2290,
        "nextPrimeNum": 2291,
        "nextPrime(i);": 2292,
        "(nextPrimeNum": 2293,
        "(noldbach(i))": 2294,
        "cerr": 2295,
        "(0": 2296,
        "\"NO\")": 2297,
        "check(int": 2298,
        "good[2000];": 2299,
        "(check(i))": 2300,
        "(!check(i))": 2301,
        "pri(int": 2302,
        "a[168];": 2303,
        "(pri(i))": 2304,
        "a[temp]": 2305,
        "(a[j]": 2306,
        "a[j": 2307,
        "a[i])": 2308,
        "prime[j": 2309,
        "(prime[j]": 2310,
        "sum++;": 2311,
        "(sum": 2312,
        "isprime[4000];": 2313,
        "4000;": 2314,
        "isprime[i]": 2315,
        "prime.push_back(2);": 2316,
        "prime.size()": 2317,
        "prime.at(i)": 2318,
        "prime.at(i": 2319,
        "(binary_search(prime.begin(),": 2320,
        "prime.end(),": 2321,
        "num))": 2322,
        "p[1010];": 2323,
        "ok[1010];": 2324,
        "memset(p,": 2325,
        "sizeof(p));": 2326,
        "p[0]": 2327,
        "p[1]": 2328,
        "(1010);": 2329,
        "(p[i])": 2330,
        "1010;": 2331,
        "(1009);": 2332,
        "(p[j])": 2333,
        "ok[i": 2334,
        "(2);": 2335,
        "(ok[i": 2336,
        "p[i])": 2337,
        "++r;": 2338,
        "sievesize": 2339,
        "bitset<1009>": 2340,
        "bs;": 2341,
        "bs.set();": 2342,
        "bs[0]": 2343,
        "bs[1]": 2344,
        "sievesize;": 2345,
        "(bs[i])": 2346,
        "bs[j]": 2347,
        "(primes[j]": 2348,
        "primes[j": 2349,
        "primes[i])": 2350,
        "primes[600],": 2351,
        "point": 2352,
        "putprime()": 2353,
        "600;": 2354,
        "primes[point++]": 2355,
        "return;": 2356,
        "isNoldPrime(int": 2357,
        "(!isprime(x))": 2358,
        "(primes[i]": 2359,
        "putprime();": 2360,
        "(isNoldPrime(i))": 2361,
        "puts(b": 2362,
        "judge(int": 2363,
        "a[1000],": 2364,
        "a[u]": 2365,
        "u++;": 2366,
        "ii": 2367,
        "ii++)": 2368,
        "a[s]": 2369,
        "ii;": 2370,
        "(a[s]": 2371,
        "ii)": 2372,
        "(p)": 2373,
        "a[r": 2374,
        "(a[r]": 2375,
        "aa++;": 2376,
        "(aa": 2377,
        "tp(int": 2378,
        "cm(int": 2379,
        "lt": 2380,
        "(tp(i))": 2381,
        "(lt": 2382,
        "(cm(p))": 2383,
        "prime[1111],": 2384,
        "pp[2222],": 2385,
        "cnt[2222],": 2386,
        "pm(int": 2387,
        "pm2()": 2388,
        "(pm(i))": 2389,
        "(!prime[i])": 2390,
        "(!prime[j])": 2391,
        "(!prime[i": 2392,
        "pp[i": 2393,
        "pm2();": 2394,
        "2222;": 2395,
        "cnt[i]": 2396,
        "cnt[i": 2397,
        "pp[i];": 2398,
        "cnt[n];": 2399,
        "pv;": 2400,
        "isprime(long": 2401,
        "ok(long": 2402,
        "pv.size()": 2403,
        "pv[i]": 2404,
        "pv[i": 2405,
        "pv.push_back(i);": 2406,
        "(isprime(i)": 2407,
        "ok(i": 2408,
        "p[1111],": 2409,
        "ok[1111],": 2410,
        "lt;": 2411,
        "ok[i];": 2412,
        "ok[lt": 2413,
        "m[100001];": 2414,
        "good[100001];": 2415,
        "isprime[1000010];": 2416,
        "prime[1000010];": 2417,
        "phi[1000010];": 2418,
        "primesize;": 2419,
        "register": 2420,
        "!isdigit(ch);": 2421,
        "getchar())": 2422,
        "isdigit(ch);": 2423,
        "judge(long": 2424,
        "(isprime[r]": 2425,
        "(isprime[i]": 2426,
        "i--;": 2427,
        "(isprime[j]": 2428,
        "j++;": 2429,
        "getlist(long": 2430,
        "listsize)": 2431,
        "memset(isprime,": 2432,
        "sizeof(isprime));": 2433,
        "listsize;": 2434,
        "prime[++primesize]": 2435,
        "primesize": 2436,
        "isprime[i": 2437,
        "getlist(10000);": 2438,
        "read(),": 2439,
        "(judge(i)": 2440,
        "puts(\"YES\");": 2441,
        "puts(\"NO\");": 2442,
        "prime[N],": 2443,
        "pre[N];": 2444,
        "init()": 2445,
        "prime[++cnt]": 2446,
        "(check(t))": 2447,
        "pre[t]": 2448,
        "pre[i]": 2449,
        "pre[i": 2450,
        "init();": 2451,
        "(pre[n]": 2452,
        "a[N": 2453,
        "x[N": 2454,
        "get_prime()": 2455,
        "memset(x,": 2456,
        "false,": 2457,
        "sizeof(x));": 2458,
        "(a[i])": 2459,
        "s.insert(i);": 2460,
        "s.begin();": 2461,
        "s.end();)": 2462,
        "(s.find(q)": 2463,
        "s.end())": 2464,
        "x[q]": 2465,
        "get_prime();": 2466,
        "(x[i])": 2467,
        "(w": 2468,
        "*a,": 2469,
        "*prime;": 2470,
        "int[n": 2471,
        "prime": 2472,
        "prime[k++]": 2473,
        "a[sum]": 2474,
        "86;": 2475,
        "86)": 2476,
        "87;": 2477,
        "87)": 2478,
        "int(sqrt(n));": 2479,
        "(v[i]": 2480,
        "v[i": 2481,
        "(check(v[i]": 2482,
        "book[1010];": 2483,
        "is_p[1010];": 2484,
        "is_p[i]": 2485,
        "is_p[0]": 2486,
        "is_p[1]": 2487,
        "(is_p[i])": 2488,
        "p.push_back(i);": 2489,
        "is_p[j]": 2490,
        "prime(n);": 2491,
        "p.size();": 2492,
        "(is_p[p[i]": 2493,
        "book[p[i]": 2494,
        "(book[i])": 2495,
        "power(long": 2496,
        "%=": 2497,
        "(power((x": 2498,
        "m))": 2499,
        "power((x": 2500,
        "Seive(int": 2501,
        "is_prime(n": 2502,
        "is_prime[0]": 2503,
        "is_prime[1]": 2504,
        "(is_prime[i])": 2505,
        "is_prime[j]": 2506,
        "Seive(n);": 2507,
        "prime[i])": 2508,
        "CalculatePrimes(vector<int>": 2509,
        "&primes,": 2510,
        "limit)": 2511,
        "primes.push_back(2);": 2512,
        "limit;": 2513,
        "(size_t": 2514,
        "primes[j]": 2515,
        "(test)": 2516,
        "limit,": 2517,
        "limit": 2518,
        "CalculatePrimes(primes,": 2519,
        "limit);": 2520,
        "sums;": 2521,
        "primes.size())": 2522,
        "sums.push_back(primes[i]": 2523,
        "sums.size();": 2524,
        "(find(primes.begin(),": 2525,
        "primes.end(),": 2526,
        "sums[i])": 2527,
        "primes.end())": 2528,
        "1e4": 2529,
        "10,": 2530,
        "inf": 2531,
        "1e18;": 2532,
        "is(int": 2533,
        "(is(i))": 2534,
        "vec.push_back(i);": 2535,
        "int((vec).size())": 2536,
        "(vec[i]": 2537,
        "vec[i": 2538,
        "is(vec[i]": 2539,
        "y--)": 2540,
        "z++)": 2541,
        "'*';": 2542,
        "2);": 2543,
        "abs(mid": 2544,
        "(abs(mid": 2545,
        "1));": 2546,
        "sum[60]": 2547,
        "arr[101][101];": 2548,
        "memset(arr,": 2549,
        "'*',": 2550,
        "sizeof(arr));": 2551,
        "cont": 2552,
        "star": 2553,
        "cont;": 2554,
        "c++)": 2555,
        "star;": 2556,
        "d1++)": 2557,
        "tmp,": 2558,
        "(tmp": 2559,
        "tmp;": 2560,
        "dCount,": 2561,
        "starCount;": 2562,
        "u++)": 2563,
        "dCount": 2564,
        "starCount": 2565,
        "dCount;": 2566,
        "(2": 2567,
        "i--,": 2568,
        "a[n][n];": 2569,
        "f++;": 2570,
        "d--;": 2571,
        "'D')": 2572,
        "(j;;": 2573,
        "mf(int": 2574,
        "tr": 2575,
        "read(int": 2576,
        "(read(i,": 2577,
        "j))": 2578,
        "max_n": 2579,
        "a[max_n];": 2580,
        "float": 2581,
        "ceil(n": 2582,
        "l++)": 2583,
        "cnt--;": 2584,
        "draw[202][202];": 2585,
        "201)": 2586,
        "\"n%2==0||n": 2587,
        "201\";": 2588,
        "draw[i][k]": 2589,
        "Mid": 2590,
        "DiamondCount": 2591,
        "Mid)": 2592,
        "Mid);": 2593,
        "draw[i][Mid": 2594,
        "draw[i]": 2595,
        "i)));": 2596,
        "c[110][110];": 2597,
        "r++,": 2598,
        "l--,": 2599,
        "r--,": 2600,
        "l++,": 2601,
        "(k--)": 2602,
        "(m--)": 2603,
        "(p--)": 2604,
        "e,": 2605,
        "p[301];": 2606,
        "\"*\",": 2607,
        "w++;": 2608,
        "e++;": 2609,
        "s++;": 2610,
        "(s)": 2611,
        "p++;": 2612,
        "s--;": 2613,
        "p--;": 2614,
        "(abs(i)": 2615,
        "abs(j)": 2616,
        "(abs(i": 2617,
        "abs(j": 2618,
        "numD": 2619,
        "numStar": 2620,
        "numD;": 2621,
        "kkk(pair<int,": 2622,
        "(a.first": 2623,
        "b.first)": 2624,
        "(a.second": 2625,
        "b.second)": 2626,
        "b.first);": 2627,
        "inc(int": 2628,
        "*k)": 2629,
        "(*k)++;": 2630,
        "(abs((n": 2631,
        "iskom": 2632,
        "k1": 2633,
        "iskom;": 2634,
        "tmp)": 2635,
        "k1;": 2636,
        "(k1": 2637,
        "tmp--;": 2638,
        "tmp++;": 2639,
        "dem": 2640,
        "dem)": 2641,
        "dem;": 2642,
        "mid)": 2643,
        "MD": 2644,
        "1000000009;": 2645,
        "2e3": 2646,
        "33;": 2647,
        "(abs(j": 2648,
        "s[n][n];": 2649,
        "s[i][n": 2650,
        "1][j];": 2651,
        "arr[n][n];": 2652,
        "arr[i][k]": 2653,
        "putchar('D');": 2654,
        "putchar('*');": 2655,
        "star,": 2656,
        "ch;": 2657,
        "star++;": 2658,
        "star--;": 2659,
        "l--;": 2660,
        "N,": 2661,
        "M,": 2662,
        "K,": 2663,
        "H,": 2664,
        "W,": 2665,
        "a[k][j]": 2666,
        "a[n": 2667,
        "2][i]": 2668,
        "(1": 2669,
        "key": 2670,
        "key;": 2671,
        "modpow(long": 2672,
        "modpow(x,": 2673,
        "e++)": 2674,
        "(tt": 2675,
        "count--;": 2676,
        "(mid": 2677,
        "cnt)": 2678,
        "101": 2679,
        "table[MAXN][MAXN];": 2680,
        "half;": 2681,
        "half": 2682,
        "table[i][j]": 2683,
        "(half": 2684,
        "i))": 2685,
        "table[half][i]": 2686,
        "table[u][j]": 2687,
        "table[i][j];": 2688,
        "o++)": 2689,
        "a[102][102];": 2690,
        "1][j]": 2691,
        "h;": 2692,
        "h--;": 2693,
        "k--)": 2694,
        "h++;": 2695,
        "Size;": 2696,
        "(Size": 2697,
        "Size": 2698,
        "A(int": 2699,
        "A(n);": 2700,
        "printDiamond(int": 2701,
        "diamond,": 2702,
        "dotNum": 2703,
        "diamond)": 2704,
        "(dotNum": 2705,
        "diamond))": 2706,
        "diamond": 2707,
        "printDiamond(diamond,": 2708,
        "x[102][102];": 2709,
        "a++)": 2710,
        "x[a][n": 2711,
        "b++)": 2712,
        "b]": 2713,
        "b--)": 2714,
        "x[i][j];": 2715,
        "(abs(n": 2716,
        "abs(n": 2717,
        "print(int": 2718,
        "print(i,": 2719,
        "a[i][p": 2720,
        "(a[i][k]": 2721,
        "a[i][k];": 2722,
        "assert(n": 2723,
        "1LL);": 2724,
        "md": 2725,
        "md;": 2726,
        "sz,": 2727,
        "s3,": 2728,
        "s4,": 2729,
        "s5,": 2730,
        "s6;": 2731,
        "ar[(int)(1e5": 2732,
        "10)],": 2733,
        "ar2[(int)(1e5": 2734,
        "10)];": 2735,
        "brainfuck();": 2736,
        "brainfuck()": 2737,
        "stars": 2738,
        "ds": 2739,
        "stars;": 2740,
        "ds;": 2741,
        "stars--;": 2742,
        "stars++;": 2743,
        "v1;": 2744,
        "set<char>": 2745,
        "mp;": 2746,
        "odd": 2747,
        "abs(i": 2748,
        "(odd": 2749,
        "q[1000][1000];": 2750,
        "q[i][j]": 2751,
        "q[i][f]": 2752,
        "a[101],": 2753,
        "a[mid]": 2754,
        "mid);": 2755,
        "(abs(m": 2756,
        "s[mid": 2757,
        "1][n];": 2758,
        "2.0);": 2759,
        "od": 2760,
        "(od": 2761,
        "boost()": 2762,
        "boost();": 2763,
        "Vector(n,": 2764,
        "'D');": 2765,
        "value": 2766,
        "k++,": 2767,
        "m--)": 2768,
        "Vector[k]": 2769,
        "Vector[m]": 2770,
        "Vector[k];": 2771,
        "++a)": 2772,
        "star_count,": 2773,
        "d_count,": 2774,
        "star_count": 2775,
        "d_count": 2776,
        "data;": 2777,
        "(star_count": 2778,
        "d_count;": 2779,
        "data.push_back(row);": 2780,
        "++i;": 2781,
        "data.size();": 2782,
        "data[i]": 2783,
        "data.size()": 2784,
        "0x3f3f3f3f;": 2785,
        "t++)": 2786,
        "nd": 2787,
        "ns": 2788,
        "nd)": 2789,
        "ns;": 2790,
        "nd;": 2791,
        "(nd": 2792,
        "arr[3][3];": 2793,
        "out[3][3];": 2794,
        "arr[i": 2795,
        "arr[i][j": 2796,
        "out[i][j]": 2797,
        "out[i][j];": 2798,
        "a[3][3],": 2799,
        "b[3][3],": 2800,
        "t3": 2801,
        "b[i][j]": 2802,
        "b[0][0]": 2803,
        "(b[0][0]": 2804,
        "b[0][1]": 2805,
        "(b[0][1]": 2806,
        "b[1][0]": 2807,
        "(b[1][0]": 2808,
        "b[0][2]": 2809,
        "(b[0][2]": 2810,
        "b[1][1]": 2811,
        "(b[1][1]": 2812,
        "b[1][2]": 2813,
        "(b[1][2]": 2814,
        "b[2][0]": 2815,
        "(b[2][0]": 2816,
        "b[2][1]": 2817,
        "(b[2][1]": 2818,
        "b[2][2]": 2819,
        "(b[2][2]": 2820,
        "b[i][j];": 2821,
        "l[3][3];": 2822,
        "memset(l[i],": 2823,
        "'1',": 2824,
        "sizeof": 2825,
        "l[i]);": 2826,
        "(l[i][j]": 2827,
        "'1')": 2828,
        "l[i][j]": 2829,
        "(l[i": 2830,
        "l[i": 2831,
        "(l[i][j": 2832,
        "l[i][j": 2833,
        "l[i][j];": 2834,
        "arr2[3][3]": 2835,
        "{{1,": 2836,
        "1},": 2837,
        "1}};": 2838,
        "row++)": 2839,
        "colom": 2840,
        "colom++)": 2841,
        "arr[row][colom];": 2842,
        "(arr[row][colom]": 2843,
        "arr2[row][colom]": 2844,
        "!arr2[row][colom];": 2845,
        "(colom": 2846,
        "arr2[row][colom": 2847,
        "!arr2[row][colom": 2848,
        "(row": 2849,
        "arr2[row": 2850,
        "1][colom]": 2851,
        "!arr2[row": 2852,
        "1][colom];": 2853,
        "arr2[row][colom];": 2854,
        "b[3][3];": 2855,
        "!(b[i][j]);": 2856,
        "b[i": 2857,
        "!(b[i": 2858,
        "1][j]);": 2859,
        "b[i][j": 2860,
        "!(b[i][j": 2861,
        "1]);": 2862,
        "toggle(int": 2863,
        "a);": 2864,
        "number);": 2865,
        "a[5][5];": 2866,
        "input[5][5];": 2867,
        "input[i][j];": 2868,
        "input[i][j]": 2869,
        "(input[i][j]": 2870,
        "toggle(a[i][j]);": 2871,
        "a[i][j": 2872,
        "toggle(a[i][j": 2873,
        "a[i": 2874,
        "toggle(a[i": 2875,
        "fill((int": 2876,
        "*)a,": 2877,
        "*)a": 2878,
        "sizeof(a)": 2879,
        "sizeof(int),": 2880,
        "(b[i][j]": 2881,
        "abs(1": 2882,
        "a[i][j]);": 2883,
        "a[i][abs(j": 2884,
        "1)]": 2885,
        "1)]);": 2886,
        "a[abs(i": 2887,
        "1)][j]": 2888,
        "1)][j]);": 2889,
        "1)][(j)]);": 2890,
        "a[0][1]": 2891,
        "a[0][1];": 2892,
        "a[2][1]": 2893,
        "a[2][1];": 2894,
        "a[1][0]": 2895,
        "a[1][0];": 2896,
        "a[1][2]": 2897,
        "a[1][2];": 2898,
        "a[x][y];": 2899,
        "v[3][3];": 2900,
        "n[3][3];": 2901,
        "v[i][j];": 2902,
        "n[i][j]": 2903,
        "(v[i][j])": 2904,
        "n[i": 2905,
        "!n[i": 2906,
        "n[i][j": 2907,
        "!n[i][j": 2908,
        "!n[i][j];": 2909,
        "v[i][j]--;": 2910,
        "n[i][j];": 2911,
        "arr[3][3],": 2912,
        "l[3][3]": 2913,
        "((j": 2914,
        "2e5": 2915,
        "s[N];": 2916,
        "b[6][6],": 2917,
        "a[6][6];": 2918,
        "bool>": 2919,
        "ma;": 2920,
        "off_or_on(int": 2921,
        "off_or_on(i,": 2922,
        "off_or_on(i": 2923,
        "in[9];": 2924,
        "bin[9];": 2925,
        "in[i];": 2926,
        "bin[i]": 2927,
        "!bin[i];": 2928,
        "9": 2929,
        "bin[i": 2930,
        "!bin[i": 2931,
        "3]": 2932,
        "3];": 2933,
        "(bin[i": 2934,
        "arr[3][3]": 2935,
        "light[3][3]": 2936,
        "light[i][j]": 2937,
        "R[]": 2938,
        "C[]": 2939,
        "n_i": 2940,
        "R[k];": 2941,
        "n_j": 2942,
        "C[k];": 2943,
        "(n_i": 2944,
        "(light[n_i][n_j])": 2945,
        "light[n_i][n_j]": 2946,
        "light[i][j];": 2947,
        "a[5][5]": 2948,
        "{0},": 2949,
        "b[4][4];": 2950,
        "a[t][k];": 2951,
        "b[t][k]": 2952,
        "a[t][k]": 2953,
        "a[t][k": 2954,
        "a[t": 2955,
        "1][k]": 2956,
        "a[5][5],": 2957,
        "c[5][5];": 2958,
        "c[i": 2959,
        "1][j]++;": 2960,
        "c[i][j": 2961,
        "pole[5][5];": 2962,
        "naj;": 2963,
        "pole[i][j]": 2964,
        "iii": 2965,
        "iii++)": 2966,
        "(pole[i][ii]": 2967,
        "pole[i][ii]": 2968,
        "(pole[i": 2969,
        "1][ii]": 2970,
        "pole[i": 2971,
        "(pole[i][ii": 2972,
        "pole[i][ii": 2973,
        "pole[i][j];": 2974,
        "isvalid(int": 2975,
        "((r": 2976,
        "3));": 2977,
        "a[3][3];": 2978,
        "s[3][3];": 2979,
        "(isvalid(i": 2980,
        "(s[i": 2981,
        "s[i": 2982,
        "(isvalid(i,": 2983,
        "(s[i][j": 2984,
        "s[i][j": 2985,
        "curr[3][3]": 2986,
        "actions[3][3];": 2987,
        "actions[i][j];": 2988,
        "(actions[i][j]": 2989,
        "(curr[i][j]": 2990,
        "curr[i][j]": 2991,
        "(curr[i][j": 2992,
        "curr[i][j": 2993,
        "(curr[i": 2994,
        "curr[i": 2995,
        "curr[i][j];": 2996,
        "b[5][5],": 2997,
        "a[i][j],": 2998,
        "!b[i][j],": 2999,
        "!b[i": 3000,
        "1][j],": 3001,
        "!b[i][j": 3002,
        "a[3][3]": 3003,
        "(a[i": 3004,
        "1][j])": 3005,
        "(a[i][j": 3006,
        "a[k][l];": 3007,
        "arr[5][5]": 3008,
        "cpy[5][5]": 3009,
        "{1};": 3010,
        "cpy[i][j]": 3011,
        "cpy[i": 3012,
        "cpy[i][j": 3013,
        "(cpy[i][j]": 3014,
        "change(bool": 3015,
        "mat[][3],": 3016,
        "mat[i][j]": 3017,
        "lights[3][3];": 3018,
        "lights[i][j]": 3019,
        "toggle[3][3];": 3020,
        "toggle[i][j]": 3021,
        "(toggle[i][j]": 3022,
        "change(lights,": 3023,
        "lights[i][j];": 3024,
        "f[3][3];": 3025,
        "p[3][3];": 3026,
        "f[i][e]": 3027,
        "p[i][e];": 3028,
        "(p[i][e]": 3029,
        "(f[i][e]": 3030,
        "(f[i][e": 3031,
        "f[i][e": 3032,
        "(f[i": 3033,
        "1][e]": 3034,
        "f[i": 3035,
        "p[i][e]--;": 3036,
        "e--;": 3037,
        "f[i][e];": 3038,
        "b[i][j]++;": 3039,
        "light[3][3],": 3040,
        "memset(light,": 3041,
        "sizeof(int));": 3042,
        "(light[i][j]": 3043,
        "dx[k];": 3044,
        "dy[k];": 3045,
        "light[y][x]": 3046,
        "(light[y][x]": 3047,
        "arr[5][5];": 3048,
        "off[5][5]": 3049,
        "{};": 3050,
        "off[i][j]": 3051,
        "!off[i][j];": 3052,
        "off[i": 3053,
        "!off[i": 3054,
        "off[i][j": 3055,
        "!off[i][j": 3056,
        "b[3][3]": 3057,
        "b[i][++j]": 3058,
        "j--;": 3059,
        "b[i][--j]": 3060,
        "b[++i][j]": 3061,
        "b[--i][j]": 3062,
        "(b[i][j])": 3063,
        "j1,": 3064,
        "press[3][3],": 3065,
        "light[5][5];": 3066,
        "press[i][j];": 3067,
        "press[i][j]": 3068,
        "(press[i][j]": 3069,
        "light[i][j": 3070,
        "light[i": 3071,
        "1][j": 3072,
        "2][j": 3073,
        "ans[3][3];": 3074,
        "change(int": 3075,
        "(ans[i][j])": 3076,
        "ans[i][j]": 3077,
        "fill(&ans[0][0],": 3078,
        "&ans[0][0]": 3079,
        "sizeof(ans),": 3080,
        "(arr[i][j])": 3081,
        "change(i,": 3082,
        "change(i": 3083,
        "ans[i][j];": 3084,
        "ar[5][5],": 3085,
        "ar1[4][4];": 3086,
        "memset(ar,": 3087,
        "ar);": 3088,
        "ar[i][j": 3089,
        "ar[i": 3090,
        "ar1[i][j]": 3091,
        "ar1[i][j];": 3092,
        "arr1[3][3];": 3093,
        "arr[0][0]": 3094,
        "arr[0][1]": 3095,
        "arr[1][0];": 3096,
        "arr1[0][0]": 3097,
        "arr[1][1]": 3098,
        "arr[0][2];": 3099,
        "arr1[0][1]": 3100,
        "arr[0][2]": 3101,
        "arr[1][2];": 3102,
        "arr1[0][2]": 3103,
        "arr[1][0]": 3104,
        "arr[2][0]": 3105,
        "arr[0][0];": 3106,
        "arr1[1][0]": 3107,
        "arr[1][2]": 3108,
        "arr[2][1];": 3109,
        "arr1[1][1]": 3110,
        "arr[2][2]": 3111,
        "arr[1][1];": 3112,
        "arr1[1][2]": 3113,
        "arr1[2][0]": 3114,
        "arr[2][1]": 3115,
        "arr[2][2];": 3116,
        "arr1[2][1]": 3117,
        "arr1[2][2]": 3118,
        "\"1\";": 3119,
        "\"0\";": 3120,
        "((b": 3121,
        "((c": 3122,
        "((d": 3123,
        "((y": 3124,
        "b[5][5];": 3125,
        "a[0][i]": 3126,
        "a[4][i]": 3127,
        "a[i][4]": 3128,
        "((a[i": 3129,
        "a[i][j])": 3130,
        "arr[5]": 3131,
        "{\"11111\",": 3132,
        "\"11111\",": 3133,
        "\"11111\"};": 3134,
        "jj": 3135,
        "ii++,": 3136,
        "jj++)": 3137,
        "(arr[ii][j]": 3138,
        "arr[ii][j]": 3139,
        "(jj": 3140,
        "(arr[i][jj]": 3141,
        "arr[i][jj]": 3142,
        "arr[i].erase(arr[i].begin());": 3143,
        "arr[i].erase(arr[i].end()": 3144,
        "arr[i]": 3145,
        "mat[3][3]": 3146,
        "imprimir()": 3147,
        "mat[i][e];": 3148,
        "encender(int": 3149,
        "mat[i][e]": 3150,
        "!mat[i][e];": 3151,
        "mat[i][e": 3152,
        "!mat[i][e": 3153,
        "mat[i": 3154,
        "!mat[i": 3155,
        "1][e];": 3156,
        "aux;": 3157,
        "(aux": 3158,
        "encender(i,": 3159,
        "e);": 3160,
        "imprimir();": 3161,
        "MAT[3][3],": 3162,
        "TOOG[3][3];": 3163,
        "MAT[i][j]": 3164,
        "TOOG[i][j];": 3165,
        "_i[5]": 3166,
        "0},": 3167,
        "_j[5]": 3168,
        "(TOOG[i][j]": 3169,
        "ni": 3170,
        "_i[c],": 3171,
        "nj": 3172,
        "_j[c];": 3173,
        "((ni": 3174,
        "(nj": 3175,
        "MAT[ni][nj]": 3176,
        "(MAT[ni][nj])": 3177,
        "*a)": 3178,
        "(*a": 3179,
        "*a": 3180,
        "v[3][3],": 3181,
        "(v[i][j]": 3182,
        "toggle(&b[i][j]);": 3183,
        "toggle(&b[i][j": 3184,
        "toggle(&b[i": 3185,
        "mat[10][10];": 3186,
        "ans[10][10];": 3187,
        "isval(int": 3188,
        "(ans[i][j]": 3189,
        "mat[i][j])": 3190,
        "(isval(x,": 3191,
        "y))": 3192,
        "ans[x][y]": 3193,
        "(ans[x][y]": 3194,
        "((a[0][0]": 3195,
        "a[1][0])": 3196,
        "a[1][1]": 3197,
        "a[0][2])": 3198,
        "((a[0][2]": 3199,
        "a[1][2])": 3200,
        "\"0\\n\";": 3201,
        "\"1\\n\";": 3202,
        "a[2][0]": 3203,
        "a[1][1])": 3204,
        "((a[1][0]": 3205,
        "a[2][1])": 3206,
        "a[2][2]": 3207,
        "((a[2][0]": 3208,
        "((a[2][2]": 3209,
        "grid[5][5];": 3210,
        "ans[4][4];": 3211,
        "grid[i][j],": 3212,
        "(grid[i][j]": 3213,
        "!ans[i][j];": 3214,
        "ans[i][j": 3215,
        "!ans[i][j": 3216,
        "ans[i": 3217,
        "!ans[i": 3218,
        "ar[5][5];": 3219,
        "(b[i][j": 3220,
        "(b[i": 3221,
        "res[3][3];": 3222,
        "p[3][3],": 3223,
        "(p[a][b]": 3224,
        "p[a][b]": 3225,
        "res[i][j]": 3226,
        "toggle(res,": 3227,
        "res[i][j];": 3228,
        "(x)": 3229,
        "!a[i][j];": 3230,
        "max(long": 3231,
        "min(long": 3232,
        "modd(long": 3233,
        "0LL)": 3234,
        "-1LL;": 3235,
        "dir[4][2]": 3236,
        "{{0,": 3237,
        "-1},": 3238,
        "0}};": 3239,
        "dir[ii][0]": 3240,
        "dir[ii][1]": 3241,
        "ans[x][y];": 3242,
        "fabs(arr[0][0]": 3243,
        "fabs(arr[0][1]": 3244,
        "fabs(arr[1][0]": 3245,
        "fabs(arr[0][2]": 3246,
        "fabs(arr[1][2]": 3247,
        "fabs(arr[1][1]": 3248,
        "fabs(arr[2][0]": 3249,
        "fabs(arr[2][2]": 3250,
        "fabs(arr[2][1]": 3251,
        "a[10][10];": 3252,
        "!a[i": 3253,
        "!a[i][j": 3254,
        "a[9],": 3255,
        "out[9];": 3256,
        "out[0]": 3257,
        "a[3];": 3258,
        "out[1]": 3259,
        "a[2]": 3260,
        "a[4];": 3261,
        "out[2]": 3262,
        "a[5];": 3263,
        "out[3]": 3264,
        "a[3]": 3265,
        "a[4]": 3266,
        "a[6];": 3267,
        "out[4]": 3268,
        "a[5]": 3269,
        "a[7];": 3270,
        "out[5]": 3271,
        "a[8];": 3272,
        "out[6]": 3273,
        "a[6]": 3274,
        "out[7]": 3275,
        "a[7]": 3276,
        "out[8]": 3277,
        "a[8]": 3278,
        "(out[i]": 3279,
        "ans[5][5];": 3280,
        "x[3][3]": 3281,
        "1}},": 3282,
        "x[i][0]": 3283,
        "(x[i][0]": 3284,
        "x[i][2]": 3285,
        "(x[i][2]": 3286,
        "x[i][1]": 3287,
        "(x[i][1]": 3288,
        "x[0][j]": 3289,
        "(x[0][j]": 3290,
        "x[2][j]": 3291,
        "(x[2][j]": 3292,
        "x[1][j]": 3293,
        "(x[1][j]": 3294,
        "x[i][j]": 3295,
        "(x[i][j]": 3296,
        "ara[3][3];": 3297,
        "memset(ara,": 3298,
        "sizeof(ara));": 3299,
        "(!ara[w][q])": 3300,
        "ara[w][q]": 3301,
        "(!ara[w": 3302,
        "1][q])": 3303,
        "ara[w": 3304,
        "1][q]": 3305,
        "(!ara[w][q": 3306,
        "ara[w][q": 3307,
        "q++;": 3308,
        "ara[i][r];": 3309,
        "b[5][5]": 3310,
        "b[x][y]": 3311,
        "(a[x][y]": 3312,
        "a[x": 3313,
        "a[x][y": 3314,
        "(b[x][y]": 3315,
        "arx[4]": 3316,
        "ary[4]": 3317,
        "ar[3][3];": 3318,
        "4;)": 3319,
        "arx[l];": 3320,
        "ary[l];": 3321,
        "arr[x][y]": 3322,
        "arr[x][y];": 3323,
        "checkodd(int": 3324,
        "(checkodd(a[0][0]": 3325,
        "a[1][0]))": 3326,
        "(checkodd(a[0][1]": 3327,
        "a[0][0]": 3328,
        "a[0][2]": 3329,
        "a[1][1]))": 3330,
        "a[1][2]))": 3331,
        "(checkodd(a[1][0]": 3332,
        "a[2][1]))": 3333,
        "(checkodd(a[1][2]": 3334,
        "(checkodd(a[2][0]": 3335,
        "(checkodd(a[2][1]": 3336,
        "memset(b,": 3337,
        "sizeof(b));": 3338,
        "b[6][6];": 3339,
        "n[4][4],": 3340,
        "m[4][4];": 3341,
        "n[i][1]": 3342,
        "n[i][2]": 3343,
        "n[i][3];": 3344,
        "m[i][1]": 3345,
        "m[i][2]": 3346,
        "m[i][3]": 3347,
        "(n[i][j]": 3348,
        "m[i][j]": 3349,
        "(m[i][j]": 3350,
        "m[i": 3351,
        "m[i][j": 3352,
        "b[9];": 3353,
        "a[0];": 3354,
        "b[2]": 3355,
        "a[2];": 3356,
        "b[3]": 3357,
        "b[4]": 3358,
        "b[5]": 3359,
        "b[6]": 3360,
        "b[7]": 3361,
        "b[8]": 3362,
        "n[3][3],": 3363,
        "out[3][3]": 3364,
        "^": 3365,
        "out[i][j": 3366,
        "dy]": 3367,
        "^=": 3368,
        "out[i": 3369,
        "dx][j]": 3370,
        "x[3][3];": 3371,
        "y[3][3];": 3372,
        "++row)": 3373,
        "++col)": 3374,
        "y[row][col]": 3375,
        "x[row][col];": 3376,
        "(x[0][0]": 3377,
        "y[0][1]": 3378,
        "!y[0][1];": 3379,
        "y[0][0]": 3380,
        "!y[0][0];": 3381,
        "y[1][0]": 3382,
        "!y[1][0];": 3383,
        "(x[0][1]": 3384,
        "y[1][1]": 3385,
        "!y[1][1];": 3386,
        "y[0][2]": 3387,
        "!y[0][2];": 3388,
        "(x[0][2]": 3389,
        "y[1][2]": 3390,
        "!y[1][2];": 3391,
        "(x[1][0]": 3392,
        "y[2][0]": 3393,
        "!y[2][0];": 3394,
        "(x[1][1]": 3395,
        "y[2][1]": 3396,
        "!y[2][1];": 3397,
        "(x[1][2]": 3398,
        "y[2][2]": 3399,
        "!y[2][2];": 3400,
        "(x[2][0]": 3401,
        "(x[2][1]": 3402,
        "(x[2][2]": 3403,
        "(y[row][col])": 3404,
        "S,": 3405,
        "T;": 3406,
        "A[5][5],": 3407,
        "B[5][5],": 3408,
        "val,": 3409,
        "C;": 3410,
        "A[i": 3411,
        "A[i][j": 3412,
        "input[3][3];": 3413,
        "input[i": 3414,
        "input[i][j": 3415,
        "!b[i][j];": 3416,
        "memset(l,": 3417,
        "sizeof(l));": 3418,
        "!l[i": 3419,
        "!l[i][j": 3420,
        "!l[i][j];": 3421,
        "str[6];": 3422,
        "str[0]": 3423,
        "\"+------------------------+\";": 3424,
        "str[1]": 3425,
        "\"|#.#.#.#.#.#.#.#.#.#.#.|D|)\";": 3426,
        "str[2]": 3427,
        "\"|#.#.#.#.#.#.#.#.#.#.#.|.|\";": 3428,
        "str[3]": 3429,
        "\"|#.......................|\";": 3430,
        "str[4]": 3431,
        "\"|#.#.#.#.#.#.#.#.#.#.#.|.|)\";": 3432,
        "str[5]": 3433,
        "23;": 3434,
        "str[i][j]": 3435,
        "'O',": 3436,
        "s[6];": 3437,
        "s[2]": 3438,
        "s[3]": 3439,
        "s[4]": 3440,
        "s[5]": 3441,
        "21;": 3442,
        "'#')": 3443,
        "--k;": 3444,
        "'O';": 3445,
        "\"+------------------------+\"": 3446,
        "\"|\";": 3447,
        "\"O.\";": 3448,
        "\"#.\";": 3449,
        "\"..\";": 3450,
        "(!i": 3451,
        "(4": 3452,
        "(3": 3453,
        "\"|D|)\\n\";": 3454,
        "\"|.|)\\n\";": 3455,
        "\"..|\\n\";": 3456,
        "\"|.|\\n\";": 3457,
        "xx[8][30];": 3458,
        "yy[30]": 3459,
        "strcpy(xx[0],": 3460,
        "zz[30]": 3461,
        "strcpy(xx[1],": 3462,
        "zz);": 3463,
        "k[30]": 3464,
        "strcpy(xx[2],": 3465,
        "k);": 3466,
        "kk[30]": 3467,
        "strcpy(xx[3],": 3468,
        "kk);": 3469,
        "ss[30]": 3470,
        "strcpy(xx[4],": 3471,
        "ss);": 3472,
        "tt[30]": 3473,
        "strcpy(xx[5],": 3474,
        "30;": 3475,
        "(xx[j][i]": 3476,
        "xx[j][i]": 3477,
        "xx[i]": 3478,
        "numbers[4][12];": 3479,
        "12;": 3480,
        "numbers[0][0]": 3481,
        "numbers[1][0]": 3482,
        "numbers[3][0]": 3483,
        "numbers[2][0]": 3484,
        "numbers[i][j]": 3485,
        "11;": 3486,
        "(numbers[0][i]": 3487,
        "\"O\";": 3488,
        "\"|D|)\"": 3489,
        "(numbers[1][i]": 3490,
        "\"|.|\"": 3491,
        "\".......................|\"": 3492,
        "(numbers[2][i]": 3493,
        "\"|.|)\"": 3494,
        "cin.get();": 3495,
        "a[201][201],": 3496,
        "dp[201][201],": 3497,
        "9999999999999;": 3498,
        "'|';": 3499,
        "\"|O.......................|\"": 3500,
        "\"#.#.#.#.#.#.#.#.#.#.|D|)\"": 3501,
        "\"#.#.#.#.#.#.#.#.#.#.|.|\"": 3502,
        "\"|#.......................|\"": 3503,
        "\"|#.#.#.#.#.#.#.#.#.#.#.|.|)\"": 3504,
        "k2": 3505,
        "k3": 3506,
        "ost": 3507,
        "(ost": 3508,
        "k1++;": 3509,
        "k2++;": 3510,
        "k2;": 3511,
        "k3;": 3512,
        "ind": 3513,
        "ind++)": 3514,
        "(ind": 3515,
        "a[i]--;": 3516,
        "\".|D|)\"": 3517,
        "\".|.|\"": 3518,
        "\".|.|)\"": 3519,
        "\"+\";": 3520,
        "24;": 3521,
        "\"-\";": 3522,
        "\"+\"": 3523,
        "((4": 3524,
        "\"|D|)\";": 3525,
        "\"|.|\";": 3526,
        "\"..|\";": 3527,
        "\"|.|)\";": 3528,
        "bus(6);": 3529,
        "bus[0]": 3530,
        "bus[1]": 3531,
        "bus[2]": 3532,
        "bus[3]": 3533,
        "bus[4]": 3534,
        "bus[5]": 3535,
        "bus[0].size();": 3536,
        "(bus[j][i]": 3537,
        "bus[j][i]": 3538,
        "bus[i]": 3539,
        "st[10];": 3540,
        "st[1]": 3541,
        "st[2]": 3542,
        "st[3]": 3543,
        "st[4]": 3544,
        "st[5]": 3545,
        "st[6]": 3546,
        "27;": 3547,
        "(st[j][i]": 3548,
        "st[j][i]": 3549,
        "st[i]": 3550,
        "bus[6];": 3551,
        "22;": 3552,
        "ch++;": 3553,
        "\"+------------------------+\\n\";": 3554,
        "arr[4][11];": 3555,
        "((i)*3": 3556,
        "\"|#.#.#.#.#.#.#.#.#.#.#.|D|)\"": 3557,
        "\"|#.#.#.#.#.#.#.#.#.#.#.|.|\"": 3558,
        "\"|O.#.#.#.#.#.#.#.#.#.#.|D|)\"": 3559,
        "\"|O.#.#.#.#.#.#.#.#.#.#.|.|\"": 3560,
        "\"|O.#.#.#.#.#.#.#.#.#.#.|.|)\"": 3561,
        "\"|O.O.#.#.#.#.#.#.#.#.#.|D|)\"": 3562,
        "\"|O.O.#.#.#.#.#.#.#.#.#.|.|\"": 3563,
        "\"|O.O.#.#.#.#.#.#.#.#.#.|.|)\"": 3564,
        "\"|O.O.O.#.#.#.#.#.#.#.#.|D|)\"": 3565,
        "\"|O.O.O.#.#.#.#.#.#.#.#.|.|\"": 3566,
        "10)": 3567,
        "\"|O.O.O.#.#.#.#.#.#.#.#.|.|)\"": 3568,
        "11)": 3569,
        "\"|O.O.O.O.#.#.#.#.#.#.#.|D|)\"": 3570,
        "12)": 3571,
        "\"|O.O.O.O.#.#.#.#.#.#.#.|.|\"": 3572,
        "13)": 3573,
        "\"|O.O.O.O.#.#.#.#.#.#.#.|.|)\"": 3574,
        "14)": 3575,
        "\"|O.O.O.O.O.#.#.#.#.#.#.|D|)\"": 3576,
        "15)": 3577,
        "\"|O.O.O.O.O.#.#.#.#.#.#.|.|\"": 3578,
        "16)": 3579,
        "\"|O.O.O.O.O.#.#.#.#.#.#.|.|)\"": 3580,
        "17)": 3581,
        "\"|O.O.O.O.O.O.#.#.#.#.#.|D|)\"": 3582,
        "18)": 3583,
        "\"|O.O.O.O.O.O.#.#.#.#.#.|.|\"": 3584,
        "19)": 3585,
        "\"|O.O.O.O.O.O.#.#.#.#.#.|.|)\"": 3586,
        "20)": 3587,
        "\"|O.O.O.O.O.O.O.#.#.#.#.|D|)\"": 3588,
        "21)": 3589,
        "\"|O.O.O.O.O.O.O.#.#.#.#.|.|\"": 3590,
        "22)": 3591,
        "\"|O.O.O.O.O.O.O.#.#.#.#.|.|)\"": 3592,
        "23)": 3593,
        "\"|O.O.O.O.O.O.O.O.#.#.#.|D|)\"": 3594,
        "24)": 3595,
        "\"|O.O.O.O.O.O.O.O.#.#.#.|.|\"": 3596,
        "25)": 3597,
        "\"|O.O.O.O.O.O.O.O.#.#.#.|.|)\"": 3598,
        "26)": 3599,
        "\"|O.O.O.O.O.O.O.O.O.#.#.|D|)\"": 3600,
        "27)": 3601,
        "\"|O.O.O.O.O.O.O.O.O.#.#.|.|\"": 3602,
        "28)": 3603,
        "\"|O.O.O.O.O.O.O.O.O.#.#.|.|)\"": 3604,
        "29)": 3605,
        "\"|O.O.O.O.O.O.O.O.O.O.#.|D|)\"": 3606,
        "30)": 3607,
        "\"|O.O.O.O.O.O.O.O.O.O.#.|.|\"": 3608,
        "31)": 3609,
        "\"|O.O.O.O.O.O.O.O.O.O.#.|.|)\"": 3610,
        "32)": 3611,
        "\"|O.O.O.O.O.O.O.O.O.O.O.|D|)\"": 3612,
        "33)": 3613,
        "\"|O.O.O.O.O.O.O.O.O.O.O.|.|\"": 3614,
        "34)": 3615,
        "\"|O.O.O.O.O.O.O.O.O.O.O.|.|)\"": 3616,
        "Pi": 3617,
        "acos(-1.0);": 3618,
        "((k": 3619,
        "\".......................|\\n\";": 3620,
        "bus[4][11]": 3621,
        "(flg": 3622,
        "bus[i][ind]": 3623,
        "ind--;": 3624,
        "(bus[i][j])": 3625,
        "a[15]": 3626,
        "a[j]--;": 3627,
        "idx": 3628,
        "(s[i][idx]": 3629,
        "s[i][idx]": 3630,
        "(!k)": 3631,
        "idx++;": 3632,
        "s[4][11];": 3633,
        "s[2][i]": 3634,
        "passengers;": 3635,
        "passengers)": 3636,
        "(passengers": 3637,
        "\"..|\"": 3638,
        "\"ttttttttttttttttttttttttttt\";": 3639,
        "'+';": 3640,
        "a[0][25]": 3641,
        "a[5][0]": 3642,
        "a[5][25]": 3643,
        "a[1][26]": 3644,
        "')';": 3645,
        "a[4][26]": 3646,
        "25;": 3647,
        "'-';": 3648,
        "a[5][i]": 3649,
        "a[1][i]": 3650,
        "a[2][i]": 3651,
        "a[3][i]": 3652,
        "a[i][25]": 3653,
        "a[i][23]": 3654,
        "'t')": 3655,
        "26;": 3656,
        "che[7][100];": 3657,
        "strcpy(che[0],": 3658,
        "\"+------------------------+\");": 3659,
        "strcpy(che[1],": 3660,
        "\"|#.#.#.#.#.#.#.#.#.#.#.|D|)\");": 3661,
        "strcpy(che[2],": 3662,
        "\"|#.#.#.#.#.#.#.#.#.#.#.|.|\");": 3663,
        "strcpy(che[3],": 3664,
        "\"|#.......................|\");": 3665,
        "strcpy(che[4],": 3666,
        "\"|#.#.#.#.#.#.#.#.#.#.#.|.|)\");": 3667,
        "strcpy(che[5],": 3668,
        "(che[j][i]": 3669,
        "che[j][i]": 3670,
        "(!n)": 3671,
        "che[i]": 3672,
        "sandali[6];": 3673,
        "sandali[0]": 3674,
        "sandali[1]": 3675,
        "sandali[2]": 3676,
        "sandali[3]": 3677,
        "sandali[4]": 3678,
        "sandali[5]": 3679,
        "(sandali[j][i]": 3680,
        "sandali[j][i]": 3681,
        "sandali[t]": 3682,
        "s[8];": 3683,
        "s[6]": 3684,
        "\"......................|\"": 3685,
        "calc_subtractions_slow(int": 3686,
        "numOps": 3687,
        "++numOps;": 3688,
        "numOps;": 3689,
        "calc_subtractions_div(int": 3690,
        "temp);": 3691,
        "calc_subtractions_mod(int": 3692,
        "calc_subtractions(int": 3693,
        "calc_subtractions_div(a,": 3694,
        "subtractions_solve(istream": 3695,
        "&in,": 3696,
        "ostream": 3697,
        "&out)": 3698,
        "numPairs,": 3699,
        "in": 3700,
        "numPairs;": 3701,
        "out": 3702,
        "subtractions_solve(cin,": 3703,
        "cout);": 3704,
        "(t--)": 3705,
        "min(n,": 3706,
        "m),": 3707,
        "swap(a,": 3708,
        "hasil(int": 3709,
        "ret": 3710,
        "ret--;": 3711,
        "ret++;": 3712,
        "ret;": 3713,
        "tc;": 3714,
        "(tc--)": 3715,
        "hasil(n,": 3716,
        "MAX": 3717,
        "max(a,": 3718,
        "MIN": 3719,
        "min(a,": 3720,
        "(MAX": 3721,
        "(MIN": 3722,
        "MIN;": 3723,
        "MIN);": 3724,
        "(T--)": 3725,
        "(mn": 3726,
        "unsigned": 3727,
        "(;;)": 3728,
        "swp(int": 3729,
        "&x,": 3730,
        "&y)": 3731,
        "swp(a,": 3732,
        "test_div()": 3733,
        "INT_MAX;": 3734,
        "calc_subtractions_div(1000000000,": 3735,
        "999999999);": 3736,
        "test_mod()": 3737,
        "calc_subtractions_mod(1000000000,": 3738,
        "getNumbers(const": 3739,
        "&str)": 3740,
        "gotValue": 3741,
        "(unsigned": 3742,
        "str.length();": 3743,
        "(str[i]": 3744,
        "(gotValue)": 3745,
        "res.push_back(value);": 3746,
        "subtractions_solve_low(istream": 3747,
        "calc_subtractions_mod(a,": 3748,
        "subtractions_solve_fast(istream": 3749,
        "getline(in,": 3750,
        "line);": 3751,
        "nums": 3752,
        "getNumbers(line);": 3753,
        "calc_subtractions_div(nums[0],": 3754,
        "nums[1]);": 3755,
        "subtractions_solve_fast(in,": 3756,
        "out);": 3757,
        "ceil(1.0": 3758,
        "a[1000];": 3759,
        "Q,": 3760,
        "Q;": 3761,
        "(Q--)": 3762,
        "cntint": 3763,
        "cntfloat": 3764,
        "adivb,": 3765,
        "bdiva,": 3766,
        "reduce;": 3767,
        "adivb": 3768,
        "reduce": 3769,
        "cntfloat++;": 3770,
        "bdiva": 3771,
        "a(0),": 3772,
        "b(0);": 3773,
        "total(0);": 3774,
        "total": 3775,
        "ans(0);": 3776,
        "doit(int": 3777,
        "doit(b,": 3778,
        "T,": 3779,
        "doit(a,": 3780,
        "(1ll": 3781,
        "get(int": 3782,
        "get(b": 3783,
        "get(a,": 3784,
        "tc": 3785,
        "tc++)": 3786,
        "orderArguments(int": 3787,
        "&arg1,": 3788,
        "&arg2)": 3789,
        "(arg1": 3790,
        "arg2)": 3791,
        "arg1;": 3792,
        "arg1": 3793,
        "arg2;": 3794,
        "arg2": 3795,
        "subtraction(istream": 3796,
        "&r,": 3797,
        "&w)": 3798,
        "arg1,": 3799,
        "(false)": 3800,
        "\"arg1=\"": 3801,
        "\"arg2=\"": 3802,
        "orderArguments(arg1,": 3803,
        "arg2);": 3804,
        "quotient": 3805,
        "remainder;": 3806,
        "do": 3807,
        "remainder": 3808,
        "(remainder": 3809,
        "0);": 3810,
        "evaluate(istream": 3811,
        "numOfTestCases;": 3812,
        "subtraction(r,": 3813,
        "w);": 3814,
        "evaluate(cin,": 3815,
        "casos,": 3816,
        "casos;": 3817,
        "(casos--)": 3818,
        "(((a": 3819,
        "(((b": 3820,
        "test,": 3821,
        "modu;": 3822,
        "(test--)": 3823,
        "\"1\"": 3824,
        "swap(n,": 3825,
        "cases;": 3826,
        "num1,": 3827,
        "num2;": 3828,
        "num1": 3829,
        "ops": 3830,
        "(num1": 3831,
        "num2": 3832,
        "num2)": 3833,
        "num1;": 3834,
        "gcd(long": 3835,
        "gcd(b,": 3836,
        "gcd(a,": 3837,
        "solve(long": 3838,
        "solve(b": 3839,
        "a));": 3840,
        "solve(min(a,": 3841,
        "b),": 3842,
        "getans(int": 3843,
        "getans(b": 3844,
        "getans(min(a,": 3845,
        "GCD(int": 3846,
        "GCD(a": 3847,
        "GCD(a,": 3848,
        "swap(m,": 3849,
        "ss": 3850,
        "10000002;": 3851,
        "a[1000001];": 3852,
        "cift[1000001];": 3853,
        "tek[1000001];": 3854,
        "doIt(int": 3855,
        "t_ab": 3856,
        "t_a": 3857,
        "t_b": 3858,
        "t_ab;": 3859,
        "doIt(max(a,": 3860,
        "b));": 3861,
        "first,": 3862,
        "second,": 3863,
        "smaller,": 3864,
        "larger;": 3865,
        "mult;": 3866,
        "second;": 3867,
        "(first": 3868,
        "second": 3869,
        "smaller": 3870,
        "min(first,": 3871,
        "second);": 3872,
        "larger": 3873,
        "max(first,": 3874,
        "mult": 3875,
        "smaller;": 3876,
        "gcd(int": 3877,
        "f(long": 3878,
        "q);": 3879,
        "v.push_back(f(x,": 3880,
        "z++;": 3881,
        "(a)": 3882,
        "gcd_answ(long": 3883,
        "gcd_answ(a,": 3884,
        "f(int": 3885,
        "f(b,": 3886,
        "f(n,": 3887,
        "settings()": 3888,
        "1073741824;": 3889,
        "f(b": 3890,
        "settings();": 3891,
        "f(a,": 3892,
        "MAX1": 3893,
        "3e8": 3894,
        "acos(-1);": 3895,
        "1e9;": 3896,
        "y),": 3897,
        "A,": 3898,
        "B;": 3899,
        "Calc(long": 3900,
        "0LL;": 3901,
        "Calc(b,": 3902,
        "(N--)": 3903,
        "A": 3904,
        "Calc(A,": 3905,
        "B)": 3906,
        "subtraction(long": 3907,
        "subtraction(a,": 3908,
        "mod)": 3909,
        "(!x": 3910,
        "!y)": 3911,
        "swap(x,": 3912,
        "times": 3913,
        "times++)": 3914,
        "co,": 3915,
        "co": 3916,
        "(co": 3917,
        "s[10000],": 3918,
        "t--;": 3919,
        "solve(a,": 3920,
        "int64_t": 3921,
        "modex(int64_t": 3922,
        ">>=": 3923,
        "count(int64_t": 3924,
        "dv": 3925,
        "count(min(a,": 3926,
        "max(b,": 3927,
        "0;)": 3928,
        "b[n": 3929,
        "b[i];": 3930,
        "max(a[i],": 3931,
        "b[i]);": 3932,
        "min(a[i],": 3933,
        "solve(int": 3934,
        "ceil(double(temp)": 3935,
        "double(a));": 3936,
        "(q--)": 3937,
        "(min(a,": 3938,
        "final": 3939,
        "ifstream": 3940,
        "in(\"txt.in\");": 3941,
        "ofstream": 3942,
        "out(\"txt.out\");": 3943,
        "fixed": 3944,
        "setprecision(12);": 3945,
        "kq;": 3946,
        "xuli(long": 3947,
        "kq": 3948,
        "xuli(x,": 3949,
        "_;": 3950,
        "gcd(unsigned": 3951,
        "lcm(unsigned": 3952,
        "check(unsigned": 3953,
        "arr[100005];": 3954,
        "say": 3955,
        "cmd;": 3956,
        "people_cnt": 3957,
        "(getline(cin,": 3958,
        "cmd))": 3959,
        "(cmd[0]": 3960,
        "'+')": 3961,
        "people_cnt++;": 3962,
        "people_cnt--;": 3963,
        "(cmd[idx]": 3964,
        "':')": 3965,
        "(int)cmd.substr(idx": 3966,
        "1).size()": 3967,
        "people_cnt;": 3968,
        "cmd": 3969,
        "maxs": 3970,
        "100": 3971,
        "s[maxs];": 3972,
        "(gets(s))": 3973,
        "(s[t]": 3974,
        "(strlen(s)": 3975,
        "set<string>": 3976,
        "s))": 3977,
        "s.substr(1,": 3978,
        "s.size());": 3979,
        "Q.insert(ss);": 3980,
        "Q.erase(ss);": 3981,
        "(t)": 3982,
        "Q.size());": 3983,
        "\"\")": 3984,
        "l.insert(s.substr(1));": 3985,
        "l.erase(s.substr(1));": 3986,
        "((int)s.size()": 3987,
        "l.size();": 3988,
        "EOF)": 3989,
        "'\\n')": 3990,
        "++n;": 3991,
        "--n;": 3992,
        "(s.size()": 3993,
        "c[1000000];": 3994,
        "(gets(c": 3995,
        "(c[1]": 3996,
        "'+'": 3997,
        "(c[t]": 3998,
        "((strlen(c": 3999,
        "s);": 4000,
        "s.find(\":\"));": 4001,
        "ch[105];": 4002,
        "(gets(ch))": 4003,
        "byte": 4004,
        "(ch[0]": 4005,
        "sum--;": 4006,
        "strlen(ch);": 4007,
        "len;": 4008,
        "byte++;": 4009,
        "(ch[i]": 4010,
        "active": 4011,
        "++active;": 4012,
        "--active;": 4013,
        "s.length()": 4014,
        "(s.length()": 4015,
        "getline(cin,": 4016,
        "s.substr(1);": 4017,
        "q.erase(s);": 4018,
        "q.insert(s);": 4019,
        "name": 4020,
        "i(0);": 4021,
        "(s.size());": 4022,
        "s.substr(0,": 4023,
        "s.substr(i": 4024,
        "s.size()": 4025,
        "q.size();": 4026,
        "commands;": 4027,
        "person": 4028,
        "mark_idx,": 4029,
        "send_size": 4030,
        "commands))": 4031,
        "(commands[0]": 4032,
        "person++;": 4033,
        "person--;": 4034,
        "mark_idx": 4035,
        "commands.find(':');": 4036,
        "(commands.size()": 4037,
        "person;": 4038,
        "'-'": 4039,
        "now--;": 4040,
        "now++;": 4041,
        "s.length();": 4042,
        "now;": 4043,
        "c[(int)1e2": 4044,
        "mygets(char": 4045,
        "*s)": 4046,
        "memset(s,": 4047,
        "sizeof(s));": 4048,
        "me": 4049,
        "(gets(c))": 4050,
        "(c[0]": 4051,
        "strlen(c);": 4052,
        "(c[i]": 4053,
        "(ok": 4054,
        "s1[101": 4055,
        "101]": 4056,
        "(gets(s1))": 4057,
        "(s1[j]": 4058,
        "(strlen(s1": 4059,
        "c3": 4060,
        "0;;": 4061,
        "c3++;": 4062,
        "c3)": 4063,
        "comando;": 4064,
        "comando))": 4065,
        "(comando[0]": 4066,
        "((int)comando.size()": 4067,
        "comando.find(':')": 4068,
        "str;": 4069,
        "str))": 4070,
        "(str[0]": 4071,
        "ln": 4072,
        "str.size();": 4073,
        "ln;": 4074,
        "(ln": 4075,
        "n_participantes": 4076,
        "n_bytes": 4077,
        "linha_chat;": 4078,
        "linha_chat)": 4079,
        "!cin.eof())": 4080,
        "(linha_chat[0]": 4081,
        "n_participantes++;": 4082,
        "n_participantes--;": 4083,
        "linha_chat.length();": 4084,
        "(linha_chat[x]": 4085,
        "linha_chat.length()": 4086,
        "n_participantes;": 4087,
        "st;": 4088,
        "st))": 4089,
        "(st.size()": 4090,
        "(st[0]": 4091,
        "(st[i]": 4092,
        "10005;": 4093,
        "map<string,": 4094,
        "tc,": 4095,
        "sm": 4096,
        "st": 4097,
        "(!mp[st])": 4098,
        "mp[st]++;": 4099,
        "(mp[st])": 4100,
        "mp[st]--;": 4101,
        "sz": 4102,
        "':';": 4103,
        "sz--;": 4104,
        "(sz": 4105,
        "cnt);": 4106,
        "num--;": 4107,
        "(s[idx": 4108,
        "idx);": 4109,
        "local(char": 4110,
        "s[])": 4111,
        "vis;": 4112,
        "s[205];": 4113,
        "tp": 4114,
        "vis.insert(tp);": 4115,
        "vis.erase(tp);": 4116,
        "local(s);": 4117,
        "tp(s,": 4118,
        "st);": 4119,
        "(vis.count(tp))": 4120,
        "strlen(s": 4121,
        "vis.size();": 4122,
        "a[100];": 4123,
        "(gets(a))": 4124,
        "strlen(a);": 4125,
        "s.find(\":\")": 4126,
        "s.size()).size();": 4127,
        "str[10005];": 4128,
        "(gets(str))": 4129,
        "ans--;": 4130,
        "strlen(str);": 4131,
        "command;": 4132,
        "name;": 4133,
        "name.clear();": 4134,
        "command))": 4135,
        "(command[0]": 4136,
        "name.insert(command.substr(1,": 4137,
        "command.size()": 4138,
        "name.erase(command.substr(1,": 4139,
        "id": 4140,
        "command.length();": 4141,
        "(command[i]": 4142,
        "name.size()": 4143,
        "(command.length()": 4144,
        "id);": 4145,
        "s[110];": 4146,
        "lens": 4147,
        "strlen(s);": 4148,
        "(lens": 4149,
        "frq;": 4150,
        "count1": 4151,
        "count1++;": 4152,
        "count1--;": 4153,
        "s.find(':')": 4154,
        "kk": 4155,
        "kkk": 4156,
        "kk++;": 4157,
        "users": 4158,
        "traffic": 4159,
        "users++;": 4160,
        "users--;": 4161,
        "(cmd.length()": 4162,
        "cmd.find(':')": 4163,
        "olnum": 4164,
        "charnum": 4165,
        "charsum": 4166,
        "olnum++;": 4167,
        "olnum--;": 4168,
        "(s.at(i)": 4169,
        "olnum;": 4170,
        "user": 4171,
        "input);": 4172,
        "(input.length()": 4173,
        "(input[0]": 4174,
        "user++;": 4175,
        "user--;": 4176,
        "coun": 4177,
        "count_now": 4178,
        "(input[i]": 4179,
        "coun++;": 4180,
        "input.length()": 4181,
        "coun;": 4182,
        "FindLen(string": 4183,
        "ss)": 4184,
        "ss.size();": 4185,
        "(ss[i]": 4186,
        "Set;": 4187,
        "ss;": 4188,
        "ss))": 4189,
        "(ss[0]": 4190,
        "ss.size()": 4191,
        "Set.insert(ss.substr(1,": 4192,
        "len));": 4193,
        "ss.substr(1,": 4194,
        "len);": 4195,
        "Set.erase(name);": 4196,
        "FindLen(ss);": 4197,
        "Set.size()": 4198,
        "a[105];": 4199,
        "count1;": 4200,
        "check1(string": 4201,
        "check(string": 4202,
        "(check1(s)": 4203,
        "(check(s)": 4204,
        "s);)": 4205,
        "++dem;": 4206,
        "--dem;": 4207,
        "txt,": 4208,
        "txt))": 4209,
        "(txt.size()": 4210,
        "(txt[0]": 4211,
        "txt.size();": 4212,
        "txt[i];": 4213,
        "mp[name]": 4214,
        "ind;": 4215,
        "(txt[i]": 4216,
        "(int)name.size());": 4217,
        "s.substr(s.find(\":\"));": 4218,
        "(ns.length()": 4219,
        "se.insert(s.substr(1));": 4220,
        "se.erase(s.substr(1));": 4221,
        "se.size()": 4222,
        "s.substr(s.find(':')": 4223,
        "1).size();": 4224,
        "answer": 4225,
        "str": 4226,
        "S.insert(str);": 4227,
        "S.erase(str);": 4228,
        "(S.size())": 4229,
        "100011;": 4230,
        "cout.precision(10);": 4231,
        "fixed;": 4232,
        "cnt1": 4233,
        "cnt2": 4234,
        "tot": 4235,
        "'(')": 4236,
        "cnt1++;": 4237,
        "tot++;": 4238,
        "'?')": 4239,
        "(cnt1": 4240,
        "cnt1--;": 4241,
        "cnt2++;": 4242,
        "tot--;": 4243,
        "(tot": 4244,
        "(cnt2": 4245,
        "cnt2--;": 4246,
        "doit()": 4247,
        "resp": 4248,
        "open": 4249,
        "qClose": 4250,
        "open++;": 4251,
        "')')": 4252,
        "open--;": 4253,
        "(open": 4254,
        "qClose++;": 4255,
        "resp++;": 4256,
        "abs(open);": 4257,
        "T": 4258,
        "doit();": 4259,
        "aa.size();": 4260,
        "(aa[b]": 4261,
        "1000000000000;": 4262,
        "f[5001][5001]": 4263,
        "g[5001][5001]": 4264,
        "cur--;": 4265,
        "cur++;": 4266,
        "(cur": 4267,
        "ok;": 4268,
        "g[j][i]": 4269,
        "g[i][j]": 4270,
        "5050;": 4271,
        "a[N];": 4272,
        "qmarks": 4273,
        "++t;": 4274,
        "--t;": 4275,
        "++qmarks;": 4276,
        "(qmarks": 4277,
        "--qmarks;": 4278,
        "++count;": 4279,
        "(!l)": 4280,
        "1e7": 4281,
        "5000": 4282,
        "can[N][N];": 4283,
        "fail": 4284,
        "(fail": 4285,
        "-c": 4286,
        "can[i][j]": 4287,
        "(can[j][i]": 4288,
        "s[5010];": 4289,
        "strlen(s),": 4290,
        "z--;": 4291,
        "siz,": 4292,
        "tmp2;": 4293,
        "ck++,": 4294,
        "ck++;": 4295,
        "ck--;": 4296,
        "q--;": 4297,
        "5e3": 4298,
        "dp[maxn][maxn];": 4299,
        "sum1,": 4300,
        "sum2,": 4301,
        "sum3;": 4302,
        "sum1": 4303,
        "sum2": 4304,
        "sum3": 4305,
        "sum1++;": 4306,
        "sum1--;": 4307,
        "sum2++;": 4308,
        "(sum1": 4309,
        "sum2--;": 4310,
        "a.length();": 4311,
        "a[5005];": 4312,
        "num1++;": 4313,
        "num1--;": 4314,
        "num2++;": 4315,
        "num2--;": 4316,
        "sup": 4317,
        "sup++,": 4318,
        "inf++;": 4319,
        "sup--,": 4320,
        "inf--;": 4321,
        "(sup": 4322,
        "(inf": 4323,
        "str[5005];": 4324,
        "(str[j]": 4325,
        "(l)": 4326,
        "(q)": 4327,
        "str[j]": 4328,
        "5005;": 4329,
        "ok[maxn][maxn];": 4330,
        "ok[i][i": 4331,
        "j][i]": 4332,
        "50;": 4333,
        "ch[MAX];": 4334,
        "ch)": 4335,
        "(ch[j]": 4336,
        "vis[MAXN][MAXN];": 4337,
        "vis[i][j]++;": 4338,
        "vis[j][i]++;": 4339,
        "vis[i][j]": 4340,
        "!t)": 4341,
        "zuo": 4342,
        "wen": 4343,
        "zuo++;": 4344,
        "zuo--;": 4345,
        "zuo--,": 4346,
        "wen++;": 4347,
        "(zuo": 4348,
        "(wen": 4349,
        "wen--;": 4350,
        "que": 4351,
        "(que": 4352,
        "que--;": 4353,
        "que++;": 4354,
        "5010;": 4355,
        "s[maxn];": 4356,
        "s[5050];": 4357,
        "cnt++,": 4358,
        "cnt--,": 4359,
        "val": 4360,
        "vis": 4361,
        "vis++;": 4362,
        "val++;": 4363,
        "vis--,": 4364,
        "god": 4365,
        "god++;": 4366,
        "(god": 4367,
        "god--;": 4368,
        "kh": 4369,
        "kh++;": 4370,
        "kh--;": 4371,
        "!r)": 4372,
        "vis[maxn][maxn];": 4373,
        "'('": 4374,
        "')'": 4375,
        "s[MX];": 4376,
        "q++,": 4377,
        "q--,": 4378,
        "pre": 4379,
        "pre++;": 4380,
        "pre--;": 4381,
        "(pre": 4382,
        "pre)": 4383,
        "MAX_N": 4384,
        "1000000": 4385,
        "1e-10;": 4386,
        "len,": 4387,
        "rt": 4388,
        "lt++;": 4389,
        "rt)": 4390,
        "rt++;": 4391,
        "rt--;": 4392,
        "lt--;": 4393,
        "(rt": 4394,
        "lt)": 4395,
        "a[110];": 4396,
        "ed;": 4397,
        "'G')": 4398,
        "'T')": 4399,
        "ed": 4400,
        "(ed": 4401,
        "st)": 4402,
        "swap(ed,": 4403,
        "ed)": 4404,
        "'G'": 4405,
        "(s[m]": 4406,
        "'T'": 4407,
        "s[m]": 4408,
        "('A'": 4409,
        "'Z')": 4410,
        "v(n);": 4411,
        "indexT,": 4412,
        "indexG;": 4413,
        "v[i];": 4414,
        "indexT": 4415,
        "indexG": 4416,
        "found": 4417,
        "(indexT": 4418,
        "indexG)": 4419,
        "indexT;": 4420,
        "(found)": 4421,
        "start": 4422,
        "(start)": 4423,
        "(start": 4424,
        "start++;": 4425,
        "((s": 4426,
        "location;": 4427,
        "line[110];": 4428,
        "line[i];": 4429,
        "(line[i]": 4430,
        "location": 4431,
        "location,": 4432,
        "(left": 4433,
        "(line[left]": 4434,
        "(line[right]": 4435,
        "100005;": 4436,
        "N[1000],": 4437,
        "vis[1000]": 4438,
        "BFS(int": 4439,
        "memset(vis,": 4440,
        "sizeof(vis));": 4441,
        "N[i]": 4442,
        "S": 4443,
        "(S": 4444,
        "T)": 4445,
        "(!N[i])": 4446,
        "s[105];": 4447,
        "tar;": 4448,
        "s[r];": 4449,
        "(s[r]": 4450,
        "tar": 4451,
        "(tar": 4452,
        "pos)": 4453,
        "(pos": 4454,
        "(s[pos]": 4455,
        "tar)": 4456,
        "arr[105];": 4457,
        "arr[i];": 4458,
        "(arr[i]": 4459,
        "(arr[i": 4460,
        "(s[c]": 4461,
        "(s[e]": 4462,
        "loc1,": 4463,
        "loc2;": 4464,
        "loc1": 4465,
        "loc2": 4466,
        "sign": 4467,
        "((loc2": 4468,
        "loc1)": 4469,
        "loc1;": 4470,
        "-1);": 4471,
        "(a[t]": 4472,
        "loc2);": 4473,
        "(sign)": 4474,
        "1120;": 4475,
        "str[105];": 4476,
        "loct,": 4477,
        "locg;": 4478,
        "loct": 4479,
        "locg": 4480,
        "(locg": 4481,
        "loct)": 4482,
        "loct;": 4483,
        "false)": 4484,
        "(s[g]": 4485,
        "x1.length();": 4486,
        "(x1[i]": 4487,
        "(((c": 4488,
        "arr[105],": 4489,
        "vis[105];": 4490,
        "dfs(int": 4491,
        "st,": 4492,
        "ed,": 4493,
        "(st": 4494,
        "arr[now]": 4495,
        "vis[now]": 4496,
        "dfs(now,": 4497,
        "dfs(st,": 4498,
        "swap(g,": 4499,
        "exit(0);": 4500,
        "ch[100];": 4501,
        "d[c]": 4502,
        "(d[i]": 4503,
        "d[i]": 4504,
        "((d[i]": 4505,
        "b.push_back(i);": 4506,
        "diff;": 4507,
        "-10;": 4508,
        "diff": 4509,
        "diff)": 4510,
        "-10": 4511,
        "'T'))": 4512,
        "-10)": 4513,
        "(!found)": 4514,
        "(abs(a": 4515,
        "\"NO\\n\",": 4516,
        "locg,": 4517,
        "(abs(locg": 4518,
        "yes": 4519,
        "min(locg,": 4520,
        "loct);": 4521,
        "max(locg,": 4522,
        "(yes)": 4523,
        "solve(string": 4524,
        "str,": 4525,
        "indG": 4526,
        "indT": 4527,
        "(indT": 4528,
        "indG)": 4529,
        "indG;": 4530,
        "solve(str,": 4531,
        "insect;": 4532,
        "insect": 4533,
        "(insect": 4534,
        "start)": 4535,
        "insect)": 4536,
        "Start": 4537,
        "End": 4538,
        "max(Start,": 4539,
        "End)": 4540,
        "min(Start,": 4541,
        "End);": 4542,
        "(Start": 4543,
        "Start;": 4544,
        "End;": 4545,
        "hap": 4546,
        "abs(l": 4547,
        "(answer": 4548,
        "hap)": 4549,
        "int,": 4550,
        "int>::iterator": 4551,
        "itr;": 4552,
        "pos1,": 4553,
        "pos2;": 4554,
        "pos1": 4555,
        "pos2": 4556,
        "(pos1": 4557,
        "pos2)": 4558,
        "(str[pos1]": 4559,
        "a[100007];": 4560,
        "_s": 4561,
        "_f": 4562,
        "(_s": 4563,
        "_f)": 4564,
        "swap(_s,": 4565,
        "_f);": 4566,
        "_s;": 4567,
        "_f;": 4568,
        "'G';": 4569,
        "'T';": 4570,
        "(s[k]": 4571,
        "post;": 4572,
        "post": 4573,
        "(abs(pos": 4574,
        "post)": 4575,
        "pos;": 4576,
        "a[120];": 4577,
        "ti,": 4578,
        "tg;": 4579,
        "ti": 4580,
        "tg": 4581,
        "(tg": 4582,
        "ti)": 4583,
        "n;)": 4584,
        "(str[j": 4585,
        "((str[j": 4586,
        "str[j": 4587,
        "endl,": 4588,
        "a[101];": 4589,
        "flag2,": 4590,
        "(flag1": 4591,
        "flag2)": 4592,
        "a1,": 4593,
        "s4;": 4594,
        "string>": 4595,
        "s3)": 4596,
        "first;": 4597,
        "first)": 4598,
        "second)": 4599,
        "str1,": 4600,
        "str2,": 4601,
        "str3;": 4602,
        "str1;": 4603,
        "days": 4604,
        "days;": 4605,
        "str1": 4606,
        "(days": 4607,
        "days--)": 4608,
        "str2": 4609,
        "(str2": 4610,
        "str)": 4611,
        "str1)": 4612,
        "num1[15],": 4613,
        "num2[15],": 4614,
        "a[15],": 4615,
        "b[15];": 4616,
        "strcmp(num1,": 4617,
        "strcpy(num2,": 4618,
        "strcpy(num1,": 4619,
        "n2,": 4620,
        "n1a,": 4621,
        "n2a;": 4622,
        "v.push_back(n1);": 4623,
        "v.push_back(n2);": 4624,
        "n1a": 4625,
        "(n1": 4626,
        "n1a)": 4627,
        "(n2": 4628,
        "sir1[1000];": 4629,
        "sir2[1000];": 4630,
        "sir1[i]": 4631,
        "sir2[i];": 4632,
        "(sir1[i]": 4633,
        "s1)": 4634,
        "sir2[i]": 4635,
        "sir1[i];": 4636,
        "now[2];": 4637,
        "str[1005][2];": 4638,
        "now[1];": 4639,
        "str[i][0]": 4640,
        "str[i][1];": 4641,
        "str[i][0])": 4642,
        "a:": 4643,
        "maxN": 4644,
        "1e6": 4645,
        "1e10;": 4646,
        "mx,": 4647,
        "sz;": 4648,
        "killed,": 4649,
        "added,": 4650,
        "day;": 4651,
        "killed": 4652,
        "added;": 4653,
        "killed)": 4654,
        "B": 4655,
        "A)": 4656,
        "linf": 4657,
        "62;": 4658,
        "iinf": 4659,
        "dinf": 4660,
        "1e17;": 4661,
        "Mod": 4662,
        "t1;": 4663,
        "a[100006];": 4664,
        "b[110];": 4665,
        "100000": 4666,
        "kill,": 4667,
        "rep;": 4668,
        "kill": 4669,
        "(kill": 4670,
        "na1,": 4671,
        "na2;": 4672,
        "na1": 4673,
        "(na1": 4674,
        "n1)": 4675,
        "str2;": 4676,
        "s[1000][2];": 4677,
        "s[i][0]": 4678,
        "s[i][1]": 4679,
        "str3,": 4680,
        "str4;": 4681,
        "str3": 4682,
        "(str3": 4683,
        "str2)": 4684,
        "b[15],": 4685,
        "c[15],": 4686,
        "d[15];": 4687,
        "strcmp(a,": 4688,
        "strcpy(b,": 4689,
        "strcpy(a,": 4690,
        "MAX2": 4691,
        "1000000000": 4692,
        "dr[]": 4693,
        "dc[]": 4694,
        "eps": 4695,
        "a[30];": 4696,
        "pot1,": 4697,
        "pot2;": 4698,
        "pot1": 4699,
        "pot2": 4700,
        "vict,": 4701,
        "next;": 4702,
        "vict": 4703,
        "(vict": 4704,
        "pot1)": 4705,
        "S[3][11];": 4706,
        "ele[11],": 4707,
        "val[11];": 4708,
        "S[1];": 4709,
        "ele": 4710,
        "val;": 4711,
        "(strcmp(ele,": 4712,
        "S[0])": 4713,
        "val[i];": 4714,
        "S[0][i]": 4715,
        "S[1][i]": 4716,
        "S[0][i];": 4717,
        "S[1][i];": 4718,
        "tt;": 4719,
        "1e-8;": 4720,
        "(int)(n);": 4721,
        "pod,": 4722,
        "pod1;": 4723,
        "pod": 4724,
        "pod1": 4725,
        "pod)": 4726,
        "res_arr[num": 4727,
        "res_arr[0]": 4728,
        "res_arr[1]": 4729,
        "res_arr[i": 4730,
        "to_be_replaced": 4731,
        "res_arr[i];": 4732,
        "replaced_by": 4733,
        "(str1": 4734,
        "to_be_replaced)": 4735,
        "replaced_by;": 4736,
        "res_arr[i]": 4737,
        "name1[1005][11];": 4738,
        "name2[1005][11];": 4739,
        "temp1,": 4740,
        "temp2;": 4741,
        "temp1": 4742,
        "(temp1": 4743,
        "pair<string,": 4744,
        "ans[1024];": 4745,
        "ans[0]": 4746,
        "make_pair(A,": 4747,
        "B);": 4748,
        "(A": 4749,
        "1].first)": 4750,
        "ans[i].first": 4751,
        "ans[i].second": 4752,
        "1].second;": 4753,
        "1].second)": 4754,
        "1].first;": 4755,
        "(B": 4756,
        "A;": 4757,
        "A[10000],": 4758,
        "B[10000];": 4759,
        "A[i]": 4760,
        "B[i];": 4761,
        "(A[i]": 4762,
        "B[i]": 4763,
        "B[i": 4764,
        "be,": 4765,
        "af;": 4766,
        "be": 4767,
        "be)": 4768,
        "nex;": 4769,
        "f[5000];": 4770,
        "ft,": 4771,
        "(!q.count(a))": 4772,
        "f[++ft]": 4773,
        "q[a]": 4774,
        "ft;": 4775,
        "(!q.count(b))": 4776,
        "q[b]": 4777,
        "q[a];": 4778,
        "q[b];": 4779,
        "(z": 4780,
        "f[x]": 4781,
        "f[y]": 4782,
        "(s1.compare(s)": 4783,
        "a0,": 4784,
        "b0;": 4785,
        "a0": 4786,
        "(a0": 4787,
        "d++)": 4788,
        "(a--)": 4789,
        "curr;": 4790,
        "replacement;": 4791,
        "(curr": 4792,
        "abort();": 4793,
        "name1,": 4794,
        "name2;": 4795,
        "name1": 4796,
        "name2": 4797,
        "death,": 4798,
        "death": 4799,
        "(death": 4800,
        "name1)": 4801,
        "(s3": 4802,
        "setIO(string": 4803,
        "setIO(\"\");": 4804,
        "b1;": 4805,
        "let(const": 4806,
        "vs(n);": 4807,
        "vs[i];": 4808,
        "(int)(m);": 4809,
        "(vs[i][j]": 4810,
        "vs[i][0])": 4811,
        "vs[i][0]": 4812,
        "vs[i": 4813,
        "1][0])": 4814,
        "\"Time": 4815,
        "elapsed:": 4816,
        "1.0": 4817,
        "clock()": 4818,
        "CLOCKS_PER_SEC": 4819,
        "s.\\n\";": 4820,
        "valid": 4821,
        "s[j": 4822,
        "valid;": 4823,
        "(valid": 4824,
        "prevc": 4825,
        "prevr": 4826,
        "(prevr": 4827,
        "prevr)": 4828,
        "prevc;": 4829,
        "(v[i][0]": 4830,
        "v[i].size();": 4831,
        "v[i][0])": 4832,
        "pr,": 4833,
        "ls": 4834,
        "nx;": 4835,
        "(nx": 4836,
        "ls)": 4837,
        "pr": 4838,
        "(pr": 4839,
        "nx)": 4840,
        "x[101][101];": 4841,
        "x[i][j": 4842,
        "s.insert(x[i][j]);": 4843,
        "x[i": 4844,
        "1][1])": 4845,
        "ch1,": 4846,
        "ch2;": 4847,
        "(ch2": 4848,
        "(ch1": 4849,
        "ch2)": 4850,
        "ff,": 4851,
        "used[1001];": 4852,
        "ch,": 4853,
        "arr[n": 4854,
        "1][n": 4855,
        "st.insert(ch);": 4856,
        "*st.begin();": 4857,
        "v.push_back(x);": 4858,
        "st.clear();": 4859,
        "st[110];": 4860,
        "st[i];": 4861,
        "st[i].size();": 4862,
        "st[i][j": 4863,
        "st[i][j]": 4864,
        "st[i": 4865,
        "iso": 4866,
        "chrColor;": 4867,
        "color,": 4868,
        "perColor,": 4869,
        "perRowColor;": 4870,
        "color": 4871,
        "chrColor": 4872,
        "(color": 4873,
        "perColor": 4874,
        "color)": 4875,
        "color;": 4876,
        "perRowColor)": 4877,
        "perRowColor": 4878,
        "perColor;": 4879,
        "(iso": 4880,
        "s[j])": 4881,
        "s[0])": 4882,
        "SIZE": 4883,
        "110;": 4884,
        "M[SIZE];": 4885,
        "M[i];": 4886,
        "M[i][j]": 4887,
        "M[i][j": 4888,
        "M[i": 4889,
        "count(s.begin(),": 4890,
        "s.end(),": 4891,
        "s[0]);": 4892,
        "s.size())": 4893,
        "\"YES\";": 4894,
        "\"NO\";": 4895,
        "flag[100][100];": 4896,
        "flag[0][0];": 4897,
        "flag[0][i];": 4898,
        "(flag[0][i]": 4899,
        "flag[0][i": 4900,
        "flag[i][0];": 4901,
        "flag[i][j];": 4902,
        "(flag[i][j]": 4903,
        "flag[i][j": 4904,
        "flag[i][j]": 4905,
        "flag[i": 4906,
        "s.clear();": 4907,
        "s.insert(x": 4908,
        "'0');": 4909,
        "mat[105][105];": 4910,
        "anomalyFound": 4911,
        "((mat[i][0]": 4912,
        "(mat[i][0]": 4913,
        "1][0]))": 4914,
        "(anomalyFound": 4915,
        "matriz[110][110];": 4916,
        "suma;": 4917,
        "memset(matriz,": 4918,
        "matriz);": 4919,
        "aux);": 4920,
        "int(0);": 4921,
        "int(n);": 4922,
        "int(m);": 4923,
        "matriz[i][j]": 4924,
        "int(aux[j])": 4925,
        "prom": 4926,
        "pass": 4927,
        "suma": 4928,
        "int(m": 4929,
        "(matriz[i][j": 4930,
        "matriz[i][j])": 4931,
        "(pass)": 4932,
        "int(n": 4933,
        "(matriz[k][0]": 4934,
        "matriz[k": 4935,
        "'x';": 4936,
        "(n[0]": 4937,
        "last)": 4938,
        "n[0];": 4939,
        "n[j])": 4940,
        "c[a": 4941,
        "1][b": 4942,
        "s[110][110];": 4943,
        "tmp1,": 4944,
        "tmp2,": 4945,
        "tmp3;": 4946,
        "tmp1": 4947,
        "tmp2)": 4948,
        "(tmp2": 4949,
        "tmp3)": 4950,
        "e[n][m];": 4951,
        "e[i][j];": 4952,
        "e[i][0];": 4953,
        "e[i][j])": 4954,
        "(e[i][0]": 4955,
        "e[i": 4956,
        "s[100];": 4957,
        "isRow(string": 4958,
        "&=": 4959,
        "result;": 4960,
        "isRow(s[i]);": 4961,
        "(s[i][0]": 4962,
        "1][0]);": 4963,
        "last_stripe": 4964,
        "ok)": 4965,
        "current_stripe": 4966,
        "(ok)": 4967,
        "a[n];": 4968,
        "(a[i][0]": 4969,
        "str[0];": 4970,
        "str[0])": 4971,
        "(str.find_first_not_of(str[0],": 4972,
        "string::npos)": 4973,
        "M": 4974,
        "fre[2005];": 4975,
        "ans[2005];": 4976,
        "str[i];": 4977,
        "(str[i][j": 4978,
        "str[i][j])": 4979,
        "(str[i][0]": 4980,
        "str[i": 4981,
        "prev": 4982,
        "'z';": 4983,
        "prev)": 4984,
        "puts(flag": 4985,
        "s[101][102];": 4986,
        "e[11];": 4987,
        "(!(abs(s[i]": 4988,
        "len)": 4989,
        "(abs(s[i]": 4990,
        "s[len])": 4991,
        "abs(s[i]": 4992,
        "len--;": 4993,
        "used[1000];": 4994,
        "memset(used,": 4995,
        "sizeof(used));": 4996,
        "(used[s[i]])": 4997,
        "(abs(s[n": 4998,
        "s[i])": 4999,
        "abs(s[n": 5000,
        "func(char": 5001,
        "(!func(s[i],": 5002,
        "s[j]))": 5003,
        "label;": 5004,
        "label:": 5005,
        "abs(s[x]": 5006,
        "s[y]);": 5007,
        "upLetter(char": 5008,
        "letter)": 5009,
        "(letter": 5010,
        "'z')": 5011,
        "downLetter(char": 5012,
        "'a')": 5013,
        "palindrom(char": 5014,
        "begin,": 5015,
        "end)": 5016,
        "(downLetter(begin)": 5017,
        "downLetter(end)": 5018,
        "begin": 5019,
        "end": 5020,
        "upLetter(end)": 5021,
        "(upLetter(begin)": 5022,
        "'z'": 5023,
        "numW,": 5024,
        "numL,": 5025,
        "check;": 5026,
        "word;": 5027,
        "numW;": 5028,
        "numL;": 5029,
        "numL": 5030,
        "word.length();": 5031,
        "(palindrom(word.at(j),": 5032,
        "word.at(size": 5033,
        "j))))": 5034,
        "a[200007];": 5035,
        "fabs(s[i]": 5036,
        "cmp(char": 5037,
        "(t1": 5038,
        "chk": 5039,
        "(!cmp(s[i],": 5040,
        "(chk)": 5041,
        "++i,": 5042,
        "abs((int)s[i]": 5043,
        "(int)s[n": 5044,
        "(diff": 5045,
        "60;": 5046,
        "w(0),": 5047,
        "f(0);": 5048,
        "-w": 5049,
        "i])": 5050,
        "998244353;": 5051,
        "ONLINE__JUDGE();": 5052,
        "valid(char": 5053,
        "st++,": 5054,
        "ed--)": 5055,
        "(y[st]": 5056,
        "y[ed])": 5057,
        "(!valid(y[st],": 5058,
        "y[ed]))": 5059,
        "ONLINE__JUDGE()": 5060,
        "ac": 5061,
        "S[i],": 5062,
        "S[n": 5063,
        "swap(t1,": 5064,
        "t2);": 5065,
        "(!ac)": 5066,
        "print": 5067,
        "r--)": 5068,
        "(str[l]": 5069,
        "str[r])": 5070,
        "act": 5071,
        "str[l]": 5072,
        "pos.insert(act": 5073,
        "str[r]": 5074,
        "(str[r]": 5075,
        "(pos.find(act": 5076,
        "pos.end())": 5077,
        "(print)": 5078,
        "s1.push_back(s[i]);": 5079,
        "s2.push_back(s[i]);": 5080,
        "reverse(s2.begin(),": 5081,
        "s2.end());": 5082,
        "s1.size();": 5083,
        "((abs(s1[i]": 5084,
        "s2[i])": 5085,
        "(s1[i]": 5086,
        "s2[i]))": 5087,
        "cout.setf(ios::fixed);": 5088,
        "cout.precision(9);": 5089,
        "mi": 5090,
        "1e9,": 5091,
        "-1e9,": 5092,
        "a[1002]": 5093,
        "(abs(s[j]": 5094,
        "s[m": 5095,
        "j])": 5096,
        "abs(s[j]": 5097,
        "s[j]);": 5098,
        "(int)abs(s[i]": 5099,
        "_": 5100,
        "_++)": 5101,
        "isP": 5102,
        "abs(s.at(i)": 5103,
        "s.at(n": 5104,
        "(!(r": 5105,
        "(isP": 5106,
        "v2;": 5107,
        "v4;": 5108,
        "int(s1[j]);": 5109,
        "int(s2[j]);": 5110,
        "abs(d": 5111,
        "can_change(char": 5112,
        "(c--)": 5113,
        "can": 5114,
        "can;": 5115,
        "(!can_change(s[i],": 5116,
        "(can)": 5117,
        "j++,": 5118,
        "s[k])": 5119,
        "s[k]": 5120,
        "str[j])": 5121,
        "(abs(str[i]": 5122,
        "lo": 5123,
        "(hi": 5124,
        "lo)": 5125,
        "s[lo++];": 5126,
        "s[hi--];": 5127,
        "(ans)": 5128,
        "ac;": 5129,
        "S[i]": 5130,
        "97,": 5131,
        "(ac)": 5132,
        "qpow(long": 5133,
        "(y)": 5134,
        "inve(long": 5135,
        "(mod": 5136,
        "inve(mod": 5137,
        "vis[N],": 5138,
        "prime[N];": 5139,
        "pri_num;": 5140,
        "(!vis[i])": 5141,
        "prime[pri_num++]": 5142,
        "vis[j]": 5143,
        "t--)": 5144,
        "(s[l]": 5145,
        "s[r]": 5146,
        "abs(s[l]": 5147,
        "s[r])": 5148,
        "palin": 5149,
        "a[len": 5150,
        "abs((int)a[i]": 5151,
        "(palin)": 5152,
        "min(s[i],": 5153,
        "i]);": 5154,
        "max(s[i],": 5155,
        "(!(c2": 5156,
        "g1": 5157,
        "s[t": 5158,
        "b1": 5159,
        "((g": 5160,
        "g1)": 5161,
        "b1)": 5162,
        "b1))": 5163,
        "\"-": 5164,
        "-\"": 5165,
        "palindrome": 5166,
        "(palindrome": 5167,
        "(abs(a1": 5168,
        "abs(a1": 5169,
        "modPow(long": 5170,
        "nCr(long": 5171,
        "modPow(i": 5172,
        "Sieve()": 5173,
        "prime[1000009];": 5174,
        "memset(prime,": 5175,
        "sizeof(prime));": 5176,
        "1000006;": 5177,
        "(prime[p]": 5178,
        "(prime[i]": 5179,
        "factorial(long": 5180,
        "factorial(n": 5181,
        "catalan(long": 5182,
        "(nCr(2": 5183,
        "modPow(n": 5184,
        "isCheck(char": 5185,
        "((char)(a": 5186,
        "(char)(b": 5187,
        "(char)(a": 5188,
        "!isCheck(str[i],": 5189,
        "str[j]))": 5190,
        "ok(char": 5191,
        "(!ok(s[j],": 5192,
        "j]))": 5193,
        "tam;": 5194,
        "teste()": 5195,
        "tam--;": 5196,
        "lim": 5197,
        "tam": 5198,
        "lim;": 5199,
        "str[tam": 5200,
        "abs(str[i]": 5201,
        "ncasos;": 5202,
        "(ncasos--)": 5203,
        "(teste())": 5204,
        "proverka(char": 5205,
        "(abs(s2": 5206,
        "(!proverka(s[j],": 5207,
        "1]))": 5208,
        "57": 5209,
        "(48": 5210,
        "57)": 5211,
        "48,": 5212,
        "ac(string": 5213,
        "*pre": 5214,
        "&s[0];": 5215,
        "*end": 5216,
        "&s[n": 5217,
        "(abs((*pre)": 5218,
        "(*end))": 5219,
        "abs((*pre)": 5220,
        "end--;": 5221,
        "ac(s,": 5222,
        "(result)": 5223,
        "check_palindrome(string": 5224,
        "str.length()": 5225,
        "a2,": 5226,
        "b1,": 5227,
        "b2;": 5228,
        "'b';": 5229,
        "'y';": 5230,
        "(char)str[i]": 5231,
        "b2": 5232,
        "(char)str[j]": 5233,
        "(a1": 5234,
        "b2)": 5235,
        "lines;": 5236,
        "(check_palindrome(s))": 5237,
        "ans[t];": 5238,
        "a[tt];": 5239,
        "++l)": 5240,
        "a[l];": 5241,
        "++j,": 5242,
        "--k)": 5243,
        "(a[k]": 5244,
        "count)": 5245,
        "candidate[100];": 5246,
        "votes;": 5247,
        "votes)": 5248,
        "candidate[i];": 5249,
        "cond": 5250,
        "(cond)": 5251,
        "Max": 5252,
        "(candidate[i]": 5253,
        "Max)": 5254,
        "(Max": 5255,
        "candidate[0])": 5256,
        "candidate[x]--;": 5257,
        "candidate[0]++;": 5258,
        "-9999999;": 5259,
        "arr[0])": 5260,
        "arr[k]--;": 5261,
        "arr[0]++;": 5262,
        "cmp(int": 5263,
        "a[102];": 5264,
        "sort(a,": 5265,
        "cmp);": 5266,
        "first++;": 5267,
        "v.push_back(a);": 5268,
        "sort(v.begin(),": 5269,
        "v.end());": 5270,
        "v[sz])": 5271,
        "(cout": 5272,
        "\"\\n\",": 5273,
        "(v[sz]": 5274,
        "temp)": 5275,
        "v[sz]--;": 5276,
        "INFF": 5277,
        "1000000000000000005LL;": 5278,
        "priority_queue<int>": 5279,
        "liz;": 5280,
        "(1);": 5281,
        "(i)": 5282,
        "++(i))": 5283,
        "c.push(a);": 5284,
        "(liz": 5285,
        "c.top())": 5286,
        "c.top();": 5287,
        "liz": 5288,
        "c.pop();": 5289,
        "ncandidates;": 5290,
        "nvotes;": 5291,
        "votes.push_back(nvotes);": 5292,
        "changedVotes": 5293,
        "bestIndex": 5294,
        "bestVotes": 5295,
        "votes.size();": 5296,
        "(votes[i]": 5297,
        "bestVotes)": 5298,
        "votes[i];": 5299,
        "(bestVotes": 5300,
        "votes[0])": 5301,
        "changedVotes++;": 5302,
        "votes[0]++;": 5303,
        "votes[bestIndex]--;": 5304,
        "lcm(long": 5305,
        "a(n);": 5306,
        "(1000);": 5307,
        "arr[n];": 5308,
        "pq;": 5309,
        "pq.push(arr[i]);": 5310,
        "(!pq.empty())": 5311,
        "pq.top();": 5312,
        "pq.pop();": 5313,
        "pq.push(u": 5314,
        "counts": 5315,
        "sort(a": 5316,
        "a[n])": 5317,
        "a[n]--;": 5318,
        "counts++;": 5319,
        "b[maxn];": 5320,
        "-10000;": 5321,
        "pq.push(x);": 5322,
        "priority_queue<long": 5323,
        "pq.push(aa);": 5324,
        "pq.push(k);": 5325,
        "p.push(x);": 5326,
        "p.top();": 5327,
        "p.pop();": 5328,
        "p.push(t);": 5329,
        "temp,": 5330,
        "arr[a];": 5331,
        "arr[x];": 5332,
        "highnum": 5333,
        "highid": 5334,
        "(arr[y]": 5335,
        "highnum)": 5336,
        "arr[y];": 5337,
        "(highid": 5338,
        "arr[highid]--;": 5339,
        "*log;": 5340,
        "log": 5341,
        "int[n];": 5342,
        "log[i];": 5343,
        "sort(log": 5344,
        "(log[0]": 5345,
        "log[n": 5346,
        "log[0]++;": 5347,
        "1]--;": 5348,
        "ara[n];": 5349,
        "ara[i];": 5350,
        "(ara[0]": 5351,
        "ara[i])": 5352,
        "v.push_back(ara[i]);": 5353,
        "\"0\"": 5354,
        "v[s": 5355,
        "ara[0]++;": 5356,
        "reverse(v.begin(),": 5357,
        "v[0])": 5358,
        "v[0]--;": 5359,
        "a[107],": 5360,
        "a[n]": 5361,
        "(a[n]": 5362,
        "vote;": 5363,
        "(vote": 5364,
        "a[0])": 5365,
        "vote++;": 5366,
        "as[100];": 5367,
        "as[i];": 5368,
        "sort(as,": 5369,
        "as": 5370,
        "*max_element(as,": 5371,
        "as[n": 5372,
        "2]--;": 5373,
        "v++;": 5374,
        "pq.push(a[i]);": 5375,
        "pq.top())": 5376,
        "cont++;": 5377,
        "choc": 5378,
        "voters;": 5379,
        "voters.push(x);": 5380,
        "voters.top())": 5381,
        "voters.top();": 5382,
        "voters.pop();": 5383,
        "choc++;": 5384,
        "q.push(a);": 5385,
        "maxv": 5386,
        "q.top();": 5387,
        "q.pop();": 5388,
        "maxv)": 5389,
        "maxv--;": 5390,
        "q.push(maxv);": 5391,
        "loc;": 5392,
        "v[0];": 5393,
        "sort(v.rbegin(),": 5394,
        "v.rend());": 5395,
        "v[i]++;": 5396,
        "(v[0]": 5397,
        "v[1])": 5398,
        "Q.push(k);": 5399,
        "Q.top();": 5400,
        "Q.pop();": 5401,
        "sort(arr": 5402,
        "arr": 5403,
        "arr[1000];": 5404,
        "arr[0];": 5405,
        "(arr[0]": 5406,
        "arr[0]": 5407,
        "font": 5408,
        "(font": 5409,
        "(maxx": 5410,
        "a[t]--;": 5411,
        "comp(int": 5412,
        "fl": 5413,
        "(fl)": 5414,
        "v.end(),": 5415,
        "comp);": 5416,
        "my,": 5417,
        "my;": 5418,
        "q.push(tmp);": 5419,
        "(my": 5420,
        "q.top())": 5421,
        "my++;": 5422,
        "mx)": 5423,
        "mx--;": 5424,
        "vec[i];": 5425,
        "sort(vec.rbegin(),": 5426,
        "vec.rend());": 5427,
        "vec[0])": 5428,
        "vec[0]--;": 5429,
        "q.push(y);": 5430,
        "(!q.empty())": 5431,
        "q.push(t);": 5432,
        "modn": 5433,
        "p.push(b);": 5434,
        "arr[1000": 5435,
        "sort(arr,": 5436,
        "greater<int>());": 5437,
        "p.push(a[i]);": 5438,
        "a[i]);": 5439,
        "p.push(d": 5440,
        "ff": 5441,
        "(ff": 5442,
        "(sum)": 5443,
        "(max": 5444,
        "a[k]--;": 5445,
        "a[3])": 5446,
        "4);": 5447,
        "\"TRIANGLE\"": 5448,
        "\"SEGMENT\"": 5449,
        "\"IMPOSSIBLE\"": 5450,
        "swap(b,": 5451,
        "swap(c,": 5452,
        "xx[6];": 5453,
        "yy[4];": 5454,
        "xx[0]": 5455,
        "xx[1]": 5456,
        "xx[2]": 5457,
        "xx[3];": 5458,
        "sort(xx,": 5459,
        "yy[b++]": 5460,
        "xx[j];": 5461,
        "(yy[0]": 5462,
        "yy[1]": 5463,
        "yy[2])": 5464,
        "mark": 5465,
        "((a[i]": 5466,
        "a[k])": 5467,
        "(int)fabs((a[j]": 5468,
        "a[k]))))": 5469,
        "(mark": 5470,
        "\"IMPOSSIBLE\\n\";": 5471,
        "\"SEGMENT\\n\";": 5472,
        "\"TRIANGLE\\n\";": 5473,
        "t[4],": 5474,
        "t[2]": 5475,
        "t[3]": 5476,
        "sort(t,": 5477,
        "t[i],": 5478,
        "t[j],": 5479,
        "t[k];": 5480,
        "arr[4];": 5481,
        "((arr[0]": 5482,
        "arr[1]": 5483,
        "arr[2])": 5484,
        "(arr[1]": 5485,
        "arr[2]": 5486,
        "arr[3]))": 5487,
        "n[4];": 5488,
        "n[i];": 5489,
        "(n[j]": 5490,
        "n[max])": 5491,
        "n[max];": 5492,
        "n[max]": 5493,
        "n[i]": 5494,
        "((n[1]": 5495,
        "n[2])": 5496,
        "n[0]": 5497,
        "n[2]": 5498,
        "n[3]": 5499,
        "n[1])": 5500,
        "arr[4],": 5501,
        "arr[3];": 5502,
        "max(arr[0]": 5503,
        "arr[2],": 5504,
        "arr[3]);": 5505,
        "\"SEGMENT\");": 5506,
        "2])": 5507,
        "ar[5];": 5508,
        "ar[i];": 5509,
        "sort(ar,": 5510,
        "ar": 5511,
        "(ar[3]": 5512,
        "ar[0]": 5513,
        "ar[1]": 5514,
        "ar[3]": 5515,
        "ar[2]": 5516,
        "ar[2])": 5517,
        "(ar[2]": 5518,
        "ar[1])": 5519,
        "(fl": 5520,
        "puts(\"TRIANGLE\");": 5521,
        "puts(\"SEGMENT\");": 5522,
        "puts(\"IMPOSSIBLE\");": 5523,
        "v(4);": 5524,
        "(arr[3]": 5525,
        "best": 5526,
        "o)": 5527,
        "v.push_back(a[i]);": 5528,
        "v[1]": 5529,
        "v[2])": 5530,
        "max(best,": 5531,
        "(best": 5532,
        "4,": 5533,
        "((a[1]": 5534,
        "a[2]))": 5535,
        "a[4])": 5536,
        "x[5];": 5537,
        "x[i];": 5538,
        "sort(x,": 5539,
        "x[2]": 5540,
        "x[3])": 5541,
        "\"IMPOSSIBLE\";": 5542,
        "\"SEGMENT\";": 5543,
        "par[2];": 5544,
        "(arr[2]": 5545,
        "arr[3])": 5546,
        "l[4];": 5547,
        "l[i];": 5548,
        "sort(l,": 5549,
        "((l[1]": 5550,
        "l[2]": 5551,
        "l[3])": 5552,
        "(l[0]": 5553,
        "l[1]": 5554,
        "l[2]))": 5555,
        "sort(int": 5556,
        "arr[],": 5557,
        "(arr[min]": 5558,
        "arr[j])": 5559,
        "arr[min];": 5560,
        "arr[min]": 5561,
        "a[11111];": 5562,
        "(a[2]": 5563,
        "checkDegenerate(int": 5564,
        "(check(a[1],": 5565,
        "a[2],": 5566,
        "check(a[2],": 5567,
        "a[3],": 5568,
        "a[4]))": 5569,
        "(checkDegenerate(a[1],": 5570,
        "checkDegenerate(a[2],": 5571,
        "a[2])": 5572,
        "tr(int": 5573,
        "seg(int": 5574,
        "normal": 5575,
        "deg": 5576,
        "(tr(a,": 5577,
        "c));": 5578,
        "(tr(b,": 5579,
        "(seg(a,": 5580,
        "(seg(b,": 5581,
        "(normal)": 5582,
        "(deg)": 5583,
        "\"TRIANGLE\";": 5584,
        "arr[3]": 5585,
        "(arr[x]": 5586,
        "\"TRIANGLE\")": 5587,
        "\"SEGMENT\")": 5588,
        "6,": 5589,
        "tri()": 5590,
        "\"TRIANGLE\\n\",": 5591,
        "seg()": 5592,
        "\"SEGMENT\\n\",": 5593,
        "vec.push_back(a);": 5594,
        "vec.push_back(b);": 5595,
        "vec.push_back(c);": 5596,
        "vec.push_back(d);": 5597,
        "sort(vec.begin(),": 5598,
        "vec.end());": 5599,
        "tri();": 5600,
        "seg();": 5601,
        "arr[1];": 5602,
        "arr[2];": 5603,
        "int(1e7);": 5604,
        "(2e9);": 5605,
        "(1e9)": 5606,
        "len[5];": 5607,
        "freopen(\"debug.txt\",": 5608,
        "stderr);": 5609,
        "len[i];": 5610,
        "sort(len,": 5611,
        "(len[0]": 5612,
        "len[1]": 5613,
        "len[2]": 5614,
        "len[3])": 5615,
        "f[5];": 5616,
        "f[i];": 5617,
        "sort(f,": 5618,
        "(f[0]": 5619,
        "f[2]": 5620,
        "f[3])": 5621,
        "1e6;": 5622,
        "tri(int": 5623,
        "equ(int": 5624,
        "|=": 5625,
        "tri(a,": 5626,
        "tri(b,": 5627,
        "equ(a,": 5628,
        "equ(b,": 5629,
        "ch(int": 5630,
        "seg": 5631,
        "(check(a,": 5632,
        "check(a,": 5633,
        "check(b,": 5634,
        "(ch(a,": 5635,
        "ch(a,": 5636,
        "ch(b,": 5637,
        "(tr)": 5638,
        "(seg)": 5639,
        "a[5],": 5640,
        "a[j])": 5641,
        "judge(a,": 5642,
        "judge(b,": 5643,
        "triangle": 5644,
        "segment": 5645,
        "stat;": 5646,
        "swap(a[i],": 5647,
        "a[3]);": 5648,
        "stat": 5649,
        "tri(a);": 5650,
        "(stat": 5651,
        "(triangle)": 5652,
        "(segment)": 5653,
        "match(long": 5654,
        "base": 5655,
        "(10": 5656,
        "(base)": 5657,
        "base)": 5658,
        "arr;": 5659,
        "arr2;": 5660,
        "long>::iterator": 5661,
        "arr2[match(num)]++;": 5662,
        "arr2[match(num)]--;": 5663,
        "arr2[match(num)]": 5664,
        "get(long": 5665,
        "(num.size()": 5666,
        "reverse(num.begin(),": 5667,
        "num.end());": 5668,
        "get(n);": 5669,
        "m[num]++;": 5670,
        "m[num]--;": 5671,
        "reverse(str.begin(),": 5672,
        "str.end());": 5673,
        "(str.size()": 5674,
        "m[str]": 5675,
        "5e5": 5676,
        "add(long": 5677,
        "mul(long": 5678,
        "(1LL": 5679,
        "mt;": 5680,
        "pow(2,": 5681,
        "mt[get(x)]++;": 5682,
        "mt[get(x)]--;": 5683,
        "mt[res]": 5684,
        "(char)((a[i]": 5685,
        "c[r]++;": 5686,
        "c[r]--;": 5687,
        "(a.length()": 5688,
        "a.erase(0,": 5689,
        "c[a];": 5690,
        "a.insert(0,": 5691,
        "18;": 5692,
        "a[tmp]++;": 5693,
        "a[tmp]--;": 5694,
        "a[tmp]": 5695,
        "long)(s.size());": 5696,
        "(((int)(s[j]": 5697,
        "'0'))": 5698,
        "size_t": 5699,
        "s.find(\"1\");": 5700,
        "s.substr(pos1);": 5701,
        "\"?\")": 5702,
        "mp[s]": 5703,
        "\"+\")": 5704,
        "mp[s]++;": 5705,
        "mp[s]--;": 5706,
        "fast_exp(long": 5707,
        "base,": 5708,
        "ex)": 5709,
        "(base": 5710,
        "re": 5711,
        "re;": 5712,
        "mg;": 5713,
        "conv(long": 5714,
        "fast_exp(b,": 5715,
        "f);": 5716,
        "ma[a]++;": 5717,
        "conv(a);": 5718,
        "mg[k]++;": 5719,
        "ma[a]--;": 5720,
        "mg[k]--;": 5721,
        "mg[k]": 5722,
        "ChuyenDoi(string": 5723,
        "&a)": 5724,
        "\"000000000000000000\";": 5725,
        "a.length()": 5726,
        "a[ma]": 5727,
        "ma--;": 5728,
        "flat;": 5729,
        "sign;": 5730,
        "ChuyenDoi(s,": 5731,
        "(sign": 5732,
        "flat[a]++;": 5733,
        "flat[a]--;": 5734,
        "(flat[a]": 5735,
        "flat.erase(a);": 5736,
        "flat[a]": 5737,
        "arr[524289]": 5738,
        "pos);": 5739,
        "pos++;": 5740,
        "position": 5741,
        "conv(num);": 5742,
        "arr[position]++;": 5743,
        "arr[position]--;": 5744,
        "arr[position]": 5745,
        "x[p]++;": 5746,
        "x[p]--;": 5747,
        "x[p]": 5748,
        "tran(string": 5749,
        "res(18,": 5750,
        "res[18": 5751,
        "(s[s.size()": 5752,
        "judge(vector<int>": 5753,
        "17;": 5754,
        "temp[i])": 5755,
        "map<vector<int>,": 5756,
        "biao;": 5757,
        "op;": 5758,
        "(op": 5759,
        "tran(s);": 5760,
        "biao[num]++;": 5761,
        "biao[num]--;": 5762,
        "(biao[num]": 5763,
        "biao.erase(num);": 5764,
        "biao.begin();": 5765,
        "biao[num];": 5766,
        "alter(string": 5767,
        "(idx": 5768,
        "x.size()": 5769,
        "(x[idx]": 5770,
        "idx;": 5771,
        "x.size();": 5772,
        "dig": 5773,
        "(x[i]": 5774,
        "alter(x);": 5775,
        "(cnt.find(x)": 5776,
        "cnt.end())": 5777,
        "cnt[x]++;": 5778,
        "cnt.insert({x,": 5779,
        "1});": 5780,
        "cnt[x]--;": 5781,
        "cnt[x]": 5782,
        "tipo;": 5783,
        "tipo": 5784,
        "s[c]": 5785,
        "'2'": 5786,
        "'4'": 5787,
        "'6'": 5788,
        "'8')": 5789,
        "usa;": 5790,
        "20": 5791,
        "usa": 5792,
        "(tipo": 5793,
        "cont[usa]": 5794,
        "reverse(s.begin(),": 5795,
        "s.end());": 5796,
        "m[f(a)]++;": 5797,
        "m[f(a)]--;": 5798,
        "m[s]": 5799,
        "inter(string": 5800,
        "ss.length();": 5801,
        "((ss[i]": 5802,
        "(res.find_first_not_of('0')": 5803,
        "res.find_first_not_of('0');": 5804,
        "res.substr(pos,": 5805,
        "ss.length()": 5806,
        "inter(s);": 5807,
        "ok[s]++;": 5808,
        "ok[s]--;": 5809,
        "ok[s]": 5810,
        "siz": 5811,
        "siz;": 5812,
        "(((int(s[i])": 5813,
        "19": 5814,
        "m[s2]++;": 5815,
        "((int(s[i])": 5816,
        "m[s2]--;": 5817,
        "m[s2]": 5818,
        "in;": 5819,
        "ope;": 5820,
        "ope": 5821,
        "bi": 5822,
        "in,": 5823,
        "((tmp": 5824,
        "(ope": 5825,
        "m[bi]++;": 5826,
        "m[bi]--;": 5827,
        "m[bi]": 5828,
        "query[(1": 5829,
        "6];": 5830,
        "num.size()": 5831,
        "query[x]": 5832,
        "((int)(num[i]": 5833,
        "query[x]++;": 5834,
        "query[x]--;": 5835,
        "MAX(int": 5836,
        "(b);": 5837,
        "MIN(int": 5838,
        "tobin(long": 5839,
        "m[sz": 5840,
        "m[tobin(x)]++;": 5841,
        "m[tobin(x)]--;": 5842,
        "m[tobin(x)]": 5843,
        "(int)1e5": 5844,
        "(int)1e9": 5845,
        "1000": 5846,
        "lol(long": 5847,
        "reverse(res.begin(),": 5848,
        "res.end());": 5849,
        "ch[maxn];": 5850,
        "ch[i]": 5851,
        "lol(x);": 5852,
        "max(mx,": 5853,
        "(int)ans[i].size());": 5854,
        "(ans[i].size()": 5855,
        "mp[ans[i]]++;": 5856,
        "mp[ans[i]]--;": 5857,
        "mp[ans[i]]": 5858,
        "m.clear();": 5859,
        "18": 5860,
        "x[i]": 5861,
        "(str": 5862,
        "m[y]++;": 5863,
        "\"-\")": 5864,
        "m[y]--;": 5865,
        "m[y]": 5866,
        "maxm": 5867,
        "mp1;": 5868,
        "mp2;": 5869,
        "conv(string": 5870,
        "&str,": 5871,
        "(num)": 5872,
        "(char)(num": 5873,
        "48);": 5874,
        "conv(str,": 5875,
        "++mp1[num],": 5876,
        "++mp2[str];": 5877,
        "--mp1[num],": 5878,
        "--mp2[str];": 5879,
        "mp2[str]": 5880,
        "getsolved(long": 5881,
        "alpha": 5882,
        "int)s[i]": 5883,
        "alpha;": 5884,
        "getsolved(num);": 5885,
        "a[y]++;": 5886,
        "a[y]--;": 5887,
        "a[y]": 5888,
        "mymap;": 5889,
        "mp[d]++;": 5890,
        "s.push_back((d": 5891,
        "s.push_back('0');": 5892,
        "mymap[s]++;": 5893,
        "mp[d]--;": 5894,
        "mymap[s]--;": 5895,
        "s.push_back(d": 5896,
        "mymap[s]": 5897,
        "base);": 5898,
        "base++;": 5899,
        "mymap[sum]++;": 5900,
        "mymap[sum]--;": 5901,
        "mymap[sum]": 5902,
        "pot": 5903,
        "pot;": 5904,
        "aux": 5905,
        "m[aux]": 5906,
        "IntToPattern(long": 5907,
        "patt": 5908,
        "patt;": 5909,
        "nl": 5910,
        "(18": 5911,
        "patt.length());": 5912,
        "nl;": 5913,
        "el;": 5914,
        "IntToPattern(el);": 5915,
        "(second.count(t))": 5916,
        "p[t]++;": 5917,
        "second.insert(t);": 5918,
        "(p[t]": 5919,
        "p[t]--;": 5920,
        "second.erase(t);": 5921,
        "sl;": 5922,
        "sl.length();": 5923,
        "p[temp]": 5924,
        "Cnt;": 5925,
        "msk": 5926,
        "((num[i]": 5927,
        "Cnt[msk]++;": 5928,
        "Cnt[msk]--;": 5929,
        "Cnt[msk]": 5930,
        "((s[i]": 5931,
        "48)": 5932,
        "m[x]++;": 5933,
        "m[x]--;": 5934,
        "m[x]": 5935,
        "f[1000000];": 5936,
        "memset(f,": 5937,
        "sizeof(f));": 5938,
        "cn": 5939,
        "cn);": 5940,
        "cn++;": 5941,
        "f[s]++;": 5942,
        "f[s]--;": 5943,
        "reverse(t.begin(),": 5944,
        "t.end());": 5945,
        "t.size();": 5946,
        "(t[i]": 5947,
        "f[s]": 5948,
        "__gcd(a,": 5949,
        "9,": 5950,
        "dX[]": 5951,
        "dY[]": 5952,
        "(ss.size()": 5953,
        "mp[ss]++;": 5954,
        "mp[ss]--;": 5955,
        "map1;": 5956,
        "tmp1[2];": 5957,
        "tmp1;": 5958,
        "(tmp1[0]": 5959,
        "t[20];": 5960,
        "t[i]": 5961,
        "t[19]": 5962,
        "map1[t]++;": 5963,
        "map1[t]--;": 5964,
        "tmp[20]": 5965,
        "strlen(tmp);": 5966,
        "lens--;": 5967,
        "t[20]": 5968,
        "lens;": 5969,
        "tmp[lens": 5970,
        "t[i]++;": 5971,
        "map1[t]": 5972,
        "get_str(long": 5973,
        "sp;": 5974,
        "get_str(num);": 5975,
        "mp[str]++;": 5976,
        "mp[str]--;": 5977,
        "mcnt": 5978,
        "lead": 5979,
        "sp.length();": 5980,
        "(sp[i]": 5981,
        "sp.substr(cnt,": 5982,
        "sp.length()": 5983,
        "mp[s];": 5984,
        "(cnt--)": 5985,
        "a.size();": 5986,
        "m.push_back(k": 5987,
        "m.push_back(0": 5988,
        "mp[m]++;": 5989,
        "mp[m]--;": 5990,
        "mp[m]": 5991,
        "'S')": 5992,
        "h1++;": 5993,
        "h2++;": 5994,
        "h2)": 5995,
        "rr[10];": 5996,
        "cc[10];": 5997,
        "cnt[3]": 5998,
        "rr[i]": 5999,
        "cc[i]": 6000,
        "cc[j]": 6001,
        "cnt[2]": 6002,
        "(!rr[i])": 6003,
        "cnt[0]++;": 6004,
        "(!cc[i])": 6005,
        "cnt[1]++;": 6006,
        "cnt[0]": 6007,
        "cnt[1]": 6008,
        "row[12]": 6009,
        "{},": 6010,
        "col[12]": 6011,
        "row[i]": 6012,
        "col[j]": 6013,
        "(!(row[i]": 6014,
        "col[j]))": 6015,
        "r[11],": 6016,
        "c[11];": 6017,
        "memset(r,": 6018,
        "sizeof(r));": 6019,
        "memset(c,": 6020,
        "sizeof(c));": 6021,
        "c[j])": 6022,
        "s[15][15];": 6023,
        "c[15];": 6024,
        "(!b[i])": 6025,
        "(!c[i])": 6026,
        "b[100][100];": 6027,
        "sum1;": 6028,
        "sum2;": 6029,
        "(arr[i][c]": 6030,
        "(arr[r][j]": 6031,
        "'S';": 6032,
        "row[11]": 6033,
        "col[11]": 6034,
        "cakes(0);": 6035,
        "(row[i]": 6036,
        "cakes": 6037,
        "rows(r,": 6038,
        "cols(c,": 6039,
        "mat[r][c];": 6040,
        "rows[i]": 6041,
        "cols[j]": 6042,
        "rows.size();": 6043,
        "(rows[i])": 6044,
        "cols.size();": 6045,
        "(cols[j])": 6046,
        "'x')": 6047,
        "a[1005][1005];": 6048,
        "vis[1005][1005];": 6049,
        "s[1000];": 6050,
        "row[12],": 6051,
        "col[12];": 6052,
        "col[i]": 6053,
        "t[12][12];": 6054,
        "t[i][j];": 6055,
        "(t[i][j]": 6056,
        "(col[j]": 6057,
        "r[10],": 6058,
        "c[10];": 6059,
        "s[10][10];": 6060,
        "(r[i])": 6061,
        "(c[i])": 6062,
        "(b[j][i]": 6063,
        "b[j]": 6064,
        "b[j])": 6065,
        "a[15][15]": 6066,
        "{false};": 6067,
        "arr[15][15];": 6068,
        "w++)": 6069,
        "(arr[w][i]": 6070,
        "co++;": 6071,
        "a[w][i]": 6072,
        "col)": 6073,
        "a[w][n]": 6074,
        "(arr[i][w]": 6075,
        "(a[i][w]": 6076,
        "row)": 6077,
        "commamd;": 6078,
        "row[20];": 6079,
        "col[20];": 6080,
        "(commamd": 6081,
        "row[i]++;": 6082,
        "col[j]++;": 6083,
        "row[N],": 6084,
        "col[N],": 6085,
        "eaten[N][N];": 6086,
        "Input()": 6087,
        "Solve()": 6088,
        "(!eaten[i][j])": 6089,
        "eaten[i][j]": 6090,
        "Input();": 6091,
        "Solve();": 6092,
        "v(r);": 6093,
        "hor(c,": 6094,
        "false),": 6095,
        "ver(r,": 6096,
        "++y)": 6097,
        "++x)": 6098,
        "(v[y][x]": 6099,
        "hor[x]": 6100,
        "ver[y]": 6101,
        "(!hor[x]": 6102,
        "!ver[y])": 6103,
        "cake;": 6104,
        "(cake": 6105,
        "a.insert(i);": 6106,
        "b.insert(j);": 6107,
        "a.size()": 6108,
        "b.size()": 6109,
        "row[15];": 6110,
        "col[15];": 6111,
        "(x[j]": 6112,
        "noteaten_r": 6113,
        "noteaten_c": 6114,
        "row[i];": 6115,
        "col[i];": 6116,
        "x[11][11];": 6117,
        "y[11][11];": 6118,
        "dfs()": 6119,
        "(y[i][j]": 6120,
        "(o)": 6121,
        "(y[j][i]": 6122,
        "x[j][i]": 6123,
        "y[i];": 6124,
        "dfs();": 6125,
        "(x[i][j])": 6126,
        "freq[15]": 6127,
        "freq1[15]": 6128,
        "a[r][c];": 6129,
        "freq[i]++;": 6130,
        "freq1[j]++;": 6131,
        "(freq1[i]": 6132,
        "(freq[i]": 6133,
        "a[12];": 6134,
        "c[maxn],": 6135,
        "r[maxn];": 6136,
        "C,": 6137,
        "(!c[j]": 6138,
        "!r[i])": 6139,
        "a[20],": 6140,
        "b[20];": 6141,
        "(s.find('S')": 6142,
        "cnt]": 6143,
        "a[u][j];": 6144,
        "(s1.find('S')": 6145,
        "vis[2][16]": 6146,
        "vis[0][i]": 6147,
        "vis[1][j]": 6148,
        "chn": 6149,
        "chm": 6150,
        "(vis[0][i]": 6151,
        "chn--;": 6152,
        "(vis[1][i]": 6153,
        "chm--;": 6154,
        "(chn": 6155,
        "(chm": 6156,
        "chm);": 6157,
        "100001;": 6158,
        "(val": 6159,
        "s1.insert(i);": 6160,
        "s2.insert(j);": 6161,
        "(s1.size()": 6162,
        "s2.size());": 6163,
        "a[20][20];": 6164,
        "ro[20];": 6165,
        "co[20];": 6166,
        "ro[i]": 6167,
        "co[j]": 6168,
        "(ro[i]": 6169,
        "'n';": 6170,
        "(co[i]": 6171,
        "'n')": 6172,
        "rowsDeleted": 6173,
        "**inputArr": 6174,
        "*rows": 6175,
        "bool[n]();": 6176,
        "*cols": 6177,
        "bool[m]();": 6178,
        "inputArr[i]": 6179,
        "inputArr[i][j];": 6180,
        "(inputArr[i][j]": 6181,
        "(rows[i]": 6182,
        "rowsDeleted++;": 6183,
        "(cols[j]": 6184,
        "rowsDeleted;": 6185,
        "b[11];": 6186,
        "rowCount": 6187,
        "colCount": 6188,
        "rowCount++;": 6189,
        "colCount++;": 6190,
        "(rowCount": 6191,
        "colCount)": 6192,
        "rb[10],": 6193,
        "cb[10];": 6194,
        "rb[i]": 6195,
        "cb[j]": 6196,
        "(rb[i]": 6197,
        "(cb[i]": 6198,
        "(rb[j]": 6199,
        "m[r][c];": 6200,
        "m[i][j];": 6201,
        "cont2": 6202,
        "aux1": 6203,
        "aux2": 6204,
        "aux1++;": 6205,
        "(aux1": 6206,
        "(m[j][i]": 6207,
        "aux2++;": 6208,
        "(aux2": 6209,
        "cont2++;": 6210,
        "rows[11]": 6211,
        "arr[11][11];": 6212,
        "'@';": 6213,
        "(!x)": 6214,
        "row[m": 6215,
        "10]": 6216,
        "col[n": 6217,
        "(col[i]": 6218,
        "(max(r,": 6219,
        "min(r,": 6220,
        "line[20];": 6221,
        "line[i]": 6222,
        "line[j]": 6223,
        "(row[i])": 6224,
        "save": 6225,
        "(line[i])": 6226,
        "trans": 6227,
        "save;": 6228,
        "trans;": 6229,
        "str[11][11];": 6230,
        "str1[11][11];": 6231,
        "arr[11]": 6232,
        "arr2[11]": 6233,
        "arr2[j]": 6234,
        "(arr2[i]": 6235,
        "(str[j][i]": 6236,
        "rowSet,": 6237,
        "colSet;": 6238,
        "value;": 6239,
        "(value": 6240,
        "rowSet.insert(i);": 6241,
        "colSet.insert(j);": 6242,
        "rowSet.size();": 6243,
        "cols": 6244,
        "colSet.size();": 6245,
        "eatable": 6246,
        "(rows": 6247,
        "(cols": 6248,
        "cols);": 6249,
        "c[10],": 6250,
        "b[6];": 6251,
        "\"purple\";": 6252,
        "\"Power\";": 6253,
        "\"green\";": 6254,
        "\"Time\";": 6255,
        "\"blue\";": 6256,
        "\"Space\";": 6257,
        "\"orange\";": 6258,
        "\"Soul\";": 6259,
        "\"red\";": 6260,
        "\"Reality\";": 6261,
        "\"yellow\";": 6262,
        "\"Mind\";": 6263,
        "*x;": 6264,
        "string[size];": 6265,
        "\"00\";": 6266,
        "\"00\")": 6267,
        "book[6];": 6268,
        "str[6][10]": 6269,
        "{\"Power\",": 6270,
        "\"Time\",": 6271,
        "\"Space\",": 6272,
        "\"Soul\",": 6273,
        "\"Reality\",": 6274,
        "\"Mind\"};": 6275,
        "6": 6276,
        "\"purple\")": 6277,
        "book[0]": 6278,
        "\"green\")": 6279,
        "book[1]": 6280,
        "\"blue\")": 6281,
        "book[2]": 6282,
        "\"orange\")": 6283,
        "book[3]": 6284,
        "\"red\")": 6285,
        "book[4]": 6286,
        "\"yellow\")": 6287,
        "book[5]": 6288,
        "(!book[i])": 6289,
        "map<char,": 6290,
        "index;": 6291,
        "index['p']": 6292,
        "index['g']": 6293,
        "index['b']": 6294,
        "index['o']": 6295,
        "index['r']": 6296,
        "index['y']": 6297,
        "names[6]": 6298,
        "need": 6299,
        "x--)": 6300,
        "need--;": 6301,
        "names[index[color[0]]]": 6302,
        "(names[x][0]": 6303,
        "names[x]": 6304,
        "v[10];": 6305,
        "make_pair(\"purple\",": 6306,
        "\"Power\");": 6307,
        "make_pair(\"green\",": 6308,
        "\"Time\");": 6309,
        "make_pair(\"blue\",": 6310,
        "\"Space\");": 6311,
        "make_pair(\"orange\",": 6312,
        "\"Soul\");": 6313,
        "make_pair(\"red\",": 6314,
        "\"Reality\");": 6315,
        "make_pair(\"yellow\",": 6316,
        "\"Mind\");": 6317,
        "(a[i].first": 6318,
        "v[j])": 6319,
        "a[i].second": 6320,
        "b[][10]": 6321,
        "vis[10];": 6322,
        "'p')": 6323,
        "vis[0]++;": 6324,
        "'g')": 6325,
        "vis[1]++;": 6326,
        "'b')": 6327,
        "vis[2]++;": 6328,
        "'o')": 6329,
        "vis[3]++;": 6330,
        "'r')": 6331,
        "vis[4]++;": 6332,
        "'y')": 6333,
        "vis[5]++;": 6334,
        "s[7];": 6335,
        "q[\"purple\"]": 6336,
        "q[\"green\"]": 6337,
        "q[\"blue\"]": 6338,
        "q[\"orange\"]": 6339,
        "q[\"red\"]": 6340,
        "q[\"yellow\"]": 6341,
        "(q[ss]": 6342,
        "q[ss]": 6343,
        "cont--;": 6344,
        "(q[\"purple\"]": 6345,
        "(q[\"green\"]": 6346,
        "(q[\"blue\"]": 6347,
        "(q[\"orange\"]": 6348,
        "(q[\"red\"]": 6349,
        "(q[\"yellow\"]": 6350,
        "s[6][21];": 6351,
        "strcpy(s[0],": 6352,
        "strcpy(s[1],": 6353,
        "strcpy(s[2],": 6354,
        "strcpy(s[3],": 6355,
        "strcpy(s[4],": 6356,
        "strcpy(s[5],": 6357,
        "\"-1\");": 6358,
        "(strcmp(s[i],": 6359,
        "\"-1\")": 6360,
        "inp[6];": 6361,
        "inp[i];": 6362,
        "s1[6]": 6363,
        "{\"purple\",": 6364,
        "\"green\",": 6365,
        "\"blue\",": 6366,
        "\"orange\",": 6367,
        "\"red\",": 6368,
        "\"yellow\"};": 6369,
        "s2[6]": 6370,
        "inp[j])": 6371,
        "s2[i]": 6372,
        "(\"Power\\nTime\\nSpace\\nSoul\\nReality\\nMind\\n\");": 6373,
        "a.erase(a.rfind(\"Power\"),": 6374,
        "6);": 6375,
        "counter--;": 6376,
        "a.erase(a.rfind(\"Time\"),": 6377,
        "a.erase(a.rfind(\"Space\"),": 6378,
        "a.erase(a.rfind(\"Soul\"),": 6379,
        "a.erase(a.rfind(\"Reality\"),": 6380,
        "8);": 6381,
        "a.erase(a.rfind(\"Mind\"),": 6382,
        "\"\\n\"": 6383,
        "a[n][10];": 6384,
        "b[6][10]": 6385,
        "v[6]": 6386,
        "v[0]": 6387,
        "v[2]": 6388,
        "v[3]": 6389,
        "v[4]": 6390,
        "v[5]": 6391,
        "(6": 6392,
        "x5": 6393,
        "x6": 6394,
        "(!x1)": 6395,
        "\"Power\"": 6396,
        "(!x2)": 6397,
        "\"Time\"": 6398,
        "(!x3)": 6399,
        "\"Space\"": 6400,
        "(!x4)": 6401,
        "\"Soul\"": 6402,
        "(!x5)": 6403,
        "\"Reality\"": 6404,
        "(!x6)": 6405,
        "\"Mind\"": 6406,
        "(!a[0])": 6407,
        "(!a[1])": 6408,
        "(!a[2])": 6409,
        "(!a[3])": 6410,
        "(!a[4])": 6411,
        "(!a[5])": 6412,
        "(t[0]": 6413,
        "g++;": 6414,
        "o++;": 6415,
        "m['p']": 6416,
        "m['g']": 6417,
        "m['b']": 6418,
        "m['o']": 6419,
        "m['r']": 6420,
        "m['y']": 6421,
        "m[s[0]]": 6422,
        "(m['p']": 6423,
        "(m['g']": 6424,
        "(m['b']": 6425,
        "(m['o']": 6426,
        "(m['r']": 6427,
        "(m['y']": 6428,
        "output[6]": 6429,
        "input[n],": 6430,
        "out[6];": 6431,
        "out[i]": 6432,
        "input[i];": 6433,
        "input[i])": 6434,
        "out[j]": 6435,
        "(out[i])": 6436,
        "output[i];": 6437,
        "color(6);": 6438,
        "color[0]": 6439,
        "color[1]": 6440,
        "color[2]": 6441,
        "color[3]": 6442,
        "color[4]": 6443,
        "color[5]": 6444,
        "vvod(n);": 6445,
        "vvod[i];": 6446,
        "(color[i]": 6447,
        "vvod[j])": 6448,
        "(!f[p])": 6449,
        "f[p]": 6450,
        "(!f[\"purple\"])": 6451,
        "(!f[\"green\"])": 6452,
        "(!f[\"blue\"])": 6453,
        "(!f[\"orange\"])": 6454,
        "(!f[\"red\"])": 6455,
        "(!f[\"yellow\"])": 6456,
        "reshala,": 6457,
        "gol,": 6458,
        "kachok,": 6459,
        "reshala++;": 6460,
        "gol++;": 6461,
        "kachok++;": 6462,
        "(reshala": 6463,
        "(gol": 6464,
        "(kachok": 6465,
        "nome;": 6466,
        "(nome": 6467,
        "(v[1]": 6468,
        "(v[2]": 6469,
        "(v[3]": 6470,
        "(v[4]": 6471,
        "(v[5]": 6472,
        "counter;": 6473,
        "mas[6]": 6474,
        "mas1[6]": 6475,
        "(mas1[j]": 6476,
        "mas1[j]": 6477,
        "(mas1[i]": 6478,
        "\"0\")": 6479,
        "mas[i]": 6480,
        "Names[6][15]": 6481,
        "DeleteIt(int": 6482,
        "strcpy(Names[x],": 6483,
        "\");": 6484,
        "Colours[n][10];": 6485,
        "Colours[i];": 6486,
        "(strcmp(Colours[i],": 6487,
        "DeleteIt(0);": 6488,
        "DeleteIt(1);": 6489,
        "DeleteIt(2);": 6490,
        "DeleteIt(3);": 6491,
        "DeleteIt(4);": 6492,
        "DeleteIt(5);": 6493,
        "(strcmp(Names[i],": 6494,
        "Names[i]": 6495,
        "s_color[6]": 6496,
        "s_ip[6];": 6497,
        "s_ip[i];": 6498,
        "(s_color[i]": 6499,
        "s_ip[j])": 6500,
        "(a[0])": 6501,
        "(a[1])": 6502,
        "(a[2])": 6503,
        "(a[3])": 6504,
        "(a[4])": 6505,
        "(a[5])": 6506,
        "s[10];": 6507,
        "vis[7];": 6508,
        "vis[1]": 6509,
        "vis[2]": 6510,
        "vis[3]": 6511,
        "vis[4]": 6512,
        "vis[5]": 6513,
        "vis[6]": 6514,
        "mp.insert(pair<int,": 6515,
        "string>(1,": 6516,
        "\"Power\"));": 6517,
        "string>(2,": 6518,
        "\"Time\"));": 6519,
        "string>(3,": 6520,
        "\"Space\"));": 6521,
        "string>(4,": 6522,
        "\"Soul\"));": 6523,
        "string>(5,": 6524,
        "\"Reality\"));": 6525,
        "string>(6,": 6526,
        "\"Mind\"));": 6527,
        "check(s[i]);": 6528,
        "string>::iterator": 6529,
        "mp.find(i);": 6530,
        "a->second": 6531,
        "s[6],": 6532,
        "k[6];": 6533,
        "(c)": 6534,
        "k[ans]": 6535,
        "k[i]": 6536,
        "x[7];": 6537,
        "y[7];": 6538,
        "u[7];": 6539,
        "b[7];": 6540,
        "y[1]": 6541,
        "y[2]": 6542,
        "y[3]": 6543,
        "y[4]": 6544,
        "y[5]": 6545,
        "y[6]": 6546,
        "(b[j]": 6547,
        "y[i]": 6548,
        "vet[n];": 6549,
        "vet[i];": 6550,
        "purple": 6551,
        "green": 6552,
        "blue": 6553,
        "orange": 6554,
        "red": 6555,
        "yellow": 6556,
        "(vet[j]": 6557,
        "(!purple)": 6558,
        "(!green)": 6559,
        "(!blue)": 6560,
        "(!orange)": 6561,
        "(!red)": 6562,
        "(!yellow)": 6563,
        "\"Power\\n\";": 6564,
        "\"Time\\n\";": 6565,
        "\"Space\\n\";": 6566,
        "\"Soul\\n\";": 6567,
        "\"Reality\\n\";": 6568,
        "\"Mind\\n\";": 6569,
        "puno": 6570,
        "nula": 6571,
        "b[10],": 6572,
        "c[4]": 6573,
        "c[5]": 6574,
        "\"nope\";": 6575,
        "\"nope\")": 6576,
        "GetStone(string": 6577,
        "FindNotFound(string": 6578,
        "stone,": 6579,
        "stones)": 6580,
        "stones.size();": 6581,
        "(stone": 6582,
        "stones.data()[i])": 6583,
        "stones;": 6584,
        "stones.push_back(\"Power\");": 6585,
        "stones.push_back(\"Time\");": 6586,
        "stones.push_back(\"Space\");": 6587,
        "stones.push_back(\"Soul\");": 6588,
        "stones.push_back(\"Reality\");": 6589,
        "stones.push_back(\"Mind\");": 6590,
        "st.push_back(GetStone(s));": 6591,
        "not_found;": 6592,
        "(!FindNotFound(stones.data()[j],": 6593,
        "not_found.push_back(stones.data()[j]);": 6594,
        "not_found.size()": 6595,
        "not_found.size();": 6596,
        "not_found.data()[i]": 6597,
        "gem[6]": 6598,
        "color[6]": 6599,
        "out;": 6600,
        "run()": 6601,
        "have": 6602,
        "(have": 6603,
        "out.push_back(gem[i]);": 6604,
        "out.size()": 6605,
        "(vector<string>::iterator": 6606,
        "out.begin();": 6607,
        "out.end();": 6608,
        "*i": 6609,
        "run();": 6610,
        "mass[6];": 6611,
        "mass[i]": 6612,
        "mass[0]": 6613,
        "answer++;": 6614,
        "mass[1]": 6615,
        "mass[2]": 6616,
        "mass[3]": 6617,
        "mass[4]": 6618,
        "mass[5]": 6619,
        "(mass[i]": 6620,
        "b[0]++;": 6621,
        "b[1]++;": 6622,
        "b[2]++;": 6623,
        "b[3]++;": 6624,
        "b[4]++;": 6625,
        "b[5]++;": 6626,
        "(b[0]": 6627,
        "(b[1]": 6628,
        "(b[2]": 6629,
        "(b[3]": 6630,
        "(b[4]": 6631,
        "(b[5]": 6632,
        "ans1": 6633,
        "ans2": 6634,
        "ans3": 6635,
        "ans4": 6636,
        "ans5": 6637,
        "ans6": 6638,
        "ans1--;": 6639,
        "ans2--;": 6640,
        "ans3--;": 6641,
        "ans4--;": 6642,
        "ans5--;": 6643,
        "ans6--;": 6644,
        "(ans1": 6645,
        "(ans2": 6646,
        "(ans3": 6647,
        "(ans4": 6648,
        "(ans5": 6649,
        "(ans6": 6650,
        "has[8];": 6651,
        "sir[10];": 6652,
        "colors[10][10]": 6653,
        "stones[10][10]": 6654,
        "sir;": 6655,
        "(strcmp(sir,": 6656,
        "colors[0])": 6657,
        "has[0]": 6658,
        "colors[1])": 6659,
        "has[1]": 6660,
        "colors[2])": 6661,
        "has[2]": 6662,
        "colors[3])": 6663,
        "has[3]": 6664,
        "colors[4])": 6665,
        "has[4]": 6666,
        "colors[5])": 6667,
        "has[5]": 6668,
        "(!has[i])": 6669,
        "stones[i]": 6670,
        "gems[6]": 6671,
        "mp[\"purple\"]": 6672,
        "mp[\"green\"]": 6673,
        "mp[\"blue\"]": 6674,
        "mp[\"orange\"]": 6675,
        "mp[\"red\"]": 6676,
        "mp[\"yellow\"]": 6677,
        "id[6]": 6678,
        "id[mp[color]]": 6679,
        "(id[i]": 6680,
        "gems[i]": 6681,
        "inf(6);": 6682,
        "q(6);": 6683,
        "inf[0]": 6684,
        "inf[1]": 6685,
        "inf[2]": 6686,
        "inf[3]": 6687,
        "inf[4]": 6688,
        "inf[5]": 6689,
        "(q[i]": 6690,
        "color[j])": 6691,
        "color[j]": 6692,
        "\"aa\";": 6693,
        "\"aa\")": 6694,
        "inf[i]": 6695,
        "(j--)": 6696,
        "a[l]": 6697,
        "vis[100010];": 6698,
        "'-');": 6699,
        "-x": 6700,
        "(register": 6701,
        "vis[read()]": 6702,
        "s.insert(p);": 6703,
        "a[1000001]": 6704,
        "(a[g]": 6705,
        "a[g]": 6706,
        "r[105];": 6707,
        "cc": 6708,
        "(r[y]": 6709,
        "r[y]": 6710,
        "cc++;": 6711,
        "(cc": 6712,
        "num[101],": 6713,
        "flag[101];": 6714,
        "no,": 6715,
        "signal": 6716,
        "no;": 6717,
        "flag[no]": 6718,
        "(flag[i]": 6719,
        "(!signal)": 6720,
        "tt,": 6721,
        "a[t]++;": 6722,
        "(vis)": 6723,
        "bt;": 6724,
        "bohlam;": 6725,
        "list<int>": 6726,
        "(bt": 6727,
        "v.push_back(bohlam);": 6728,
        "bt--;": 6729,
        "v.sort();": 6730,
        "v.unique();": 6731,
        "(v.size()": 6732,
        "arr[150];": 6733,
        "arr[y]": 6734,
        "vis[10005];": 6735,
        "vis[x]": 6736,
        "blag": 6737,
        "(vis[i]": 6738,
        "(blag": 6739,
        "cek[1000];": 6740,
        "cek[b]": 6741,
        "(!cek[i])": 6742,
        "nums;": 6743,
        "nums.insert(temp);": 6744,
        "(nums.size()": 6745,
        "ss.insert(y);": 6746,
        "a[150];": 6747,
        "a[num]++;": 6748,
        "(a[num]": 6749,
        "a[b]": 6750,
        "INF_INT": 6751,
        "2147483647;": 6752,
        "INF_LL": 6753,
        "9223372036854775807LL;": 6754,
        "INF_ULL": 6755,
        "18446744073709551615Ull;": 6756,
        "P": 6757,
        "92540646808111039LL;": 6758,
        "Move[4][2]": 6759,
        "Move_[8][2]": 6760,
        "a[x]++;": 6761,
        "lasagna[696969];": 6762,
        "cyka,": 6763,
        "blyat;": 6764,
        "A++)": 6765,
        "cyka;": 6766,
        "lasagna[cyka]": 6767,
        "(lasagna[a]": 6768,
        "a[105]": 6769,
        "a[c]": 6770,
        "(i--)": 6771,
        "mp[k]++;": 6772,
        "(mp[k]": 6773,
        "p.insert(m);": 6774,
        "buttons,": 6775,
        "bulbs;": 6776,
        "buttons": 6777,
        "marks[bulbs": 6778,
        "1]{false};": 6779,
        "(buttons--)": 6780,
        "connected,": 6781,
        "bulb_no;": 6782,
        "connected;": 6783,
        "marks[bulb_no]": 6784,
        "is_possible": 6785,
        "(!marks[i])": 6786,
        "(is_possible)": 6787,
        "st.insert(y);": 6788,
        "st.size();": 6789,
        "go;": 6790,
        "go[z]++;": 6791,
        "(go[i]": 6792,
        "in()": 6793,
        "b.insert(in());": 6794,
        "(((int)b.size()": 6795,
        "a[y1]": 6796,
        "judge": 6797,
        "(judge)": 6798,
        "x[n": 6799,
        "x[ss]": 6800,
        "(!x[i])": 6801,
        "a[xx]": 6802,
        "(a[l]": 6803,
        "b[105];": 6804,
        "b[a]": 6805,
        "(dc": 6806,
        "bulb[105];": 6807,
        "kk;": 6808,
        "memset(bulb,": 6809,
        "sizeof(bulb));": 6810,
        "bulb[kk]": 6811,
        "(bulb[i]": 6812,
        "a[110],": 6813,
        "towhid;": 6814,
        "towhid.insert(k);": 6815,
        "towhid.size();": 6816,
        "B,": 6817,
        "H;": 6818,
        "cek[105];": 6819,
        "cek[B]": 6820,
        "v.push_back(y);": 6821,
        "v[j]": 6822,
        "bulbs[m];": 6823,
        "bulbs[i]": 6824,
        "next--;": 6825,
        "bulbs[next]": 6826,
        "(!bulbs[i])": 6827,
        "removeDuplicates(int": 6828,
        "temp[n];": 6829,
        "temp[j++]": 6830,
        "temp[i];": 6831,
        "bul[10000];": 6832,
        "bul[y];": 6833,
        "sizebul": 6834,
        "sort(bul,": 6835,
        "bul": 6836,
        "sizebul);": 6837,
        "removeDuplicates(bul,": 6838,
        "(sizebul": 6839,
        "vis[1000];": 6840,
        "vis[y]": 6841,
        "LIM": 6842,
        "1e2": 6843,
        "vis[LIM]": 6844,
        "nb,": 6845,
        "nbulb;": 6846,
        "nb": 6847,
        "(nb--)": 6848,
        "qt;": 6849,
        "(qt--)": 6850,
        "vis[a]": 6851,
        "l[105];": 6852,
        "l[x]": 6853,
        "(l[i]": 6854,
        "200001;": 6855,
        "An[MAX];": 6856,
        "book[MAX];": 6857,
        "book[y]": 6858,
        "(book[i]": 6859,
        "fill(a,": 6860,
        "a[c": 6861,
        "turned[m": 6862,
        "memset(turned,": 6863,
        "turned[a]": 6864,
        "(turned[i]": 6865,
        "a[t2]++;": 6866,
        "*p": 6867,
        "10000];": 6868,
        "p[r]": 6869,
        "mod(long": 6870,
        "MOD;": 6871,
        "MOD)": 6872,
        "arr[m];": 6873,
        "arr[g": 6874,
        "done": 6875,
        "s.insert(m);": 6876,
        "asc": 6877,
        "now--,": 6878,
        "f--,": 6879,
        "s--,": 6880,
        "((asc": 6881,
        "(!asc": 6882,
        "abs(f": 6883,
        "now);": 6884,
        "(asc": 6885,
        "now)": 6886,
        "(asc)": 6887,
        "f));": 6888,
        "long)(n);": 6889,
        "f--;": 6890,
        "dt": 6891,
        "(dt": 6892,
        "dt;": 6893,
        "dir;": 6894,
        "nr,": 6895,
        "dir": 6896,
        "(!dir)": 6897,
        "curlower;": 6898,
        "(up)": 6899,
        "curlower": 6900,
        "NeedTime": 6901,
        "(curlower": 6902,
        "curlower)": 6903,
        "tim": 6904,
        "(tim": 6905,
        "seed": 6906,
        "131;": 6907,
        "1200;": 6908,
        "((m": 6909,
        "1e7)": 6910,
        "setprecision(8)": 6911,
        "si,": 6912,
        "fi,": 6913,
        "position;": 6914,
        "gotodown": 6915,
        "gotoup": 6916,
        "moves": 6917,
        "si": 6918,
        "fi": 6919,
        "position++;": 6920,
        "(si": 6921,
        "(down": 6922,
        "(position": 6923,
        "si)": 6924,
        "fi);": 6925,
        "(fi": 6926,
        "(up": 6927,
        "position)": 6928,
        "piso,": 6929,
        "1),": 6930,
        "(h": 6931,
        "piso": 6932,
        "(piso": 6933,
        "mod,": 6934,
        "dist;": 6935,
        "dist": 6936,
        "105;": 6937,
        "M;": 6938,
        "(M": 6939,
        "ty": 6940,
        "ts": 6941,
        "(tx": 6942,
        "tx;": 6943,
        "sx;": 6944,
        "fx)": 6945,
        "(fx": 6946,
        "(fy": 6947,
        "min(tx,": 6948,
        "ty);": 6949,
        "*s": 6950,
        "*f": 6951,
        "*t": 6952,
        "xxx;": 6953,
        "ud": 6954,
        "control;": 6955,
        "f[i]": 6956,
        "t[i];": 6957,
        "(f[i]": 6958,
        "ud;": 6959,
        "control": 6960,
        "(control": 6961,
        "xxx": 6962,
        "s[i]);": 6963,
        "(len)": 6964,
        "F(int": 6965,
        "tt)": 6966,
        "-(m": 6967,
        "work()": 6968,
        "(abs(F(t))": 6969,
        "F(t)": 6970,
        "(F(t)": 6971,
        "abs(F(t))": 6972,
        "F(t);": 6973,
        "abs(F(t)))": 6974,
        "1)));": 6975,
        "fin,": 6976,
        "tim,": 6977,
        "timr;": 6978,
        "fin": 6979,
        "tim;": 6980,
        "timr": 6981,
        "fin)": 6982,
        "(timr": 6983,
        "(fin": 6984,
        "(((2": 6985,
        "s[p": 6986,
        "f[p": 6987,
        "t[p": 6988,
        "s[i]--;": 6989,
        "f[i]--;": 6990,
        "s[i]))": 6991,
        "res)": 6992,
        "a(n,": 6993,
        "(l1": 6994,
        "MOD(int": 6995,
        "max3(long": 6996,
        "max(c,": 6997,
        "adji[5001];": 6998,
        "adjo[5001];": 6999,
        "10000000000;": 7000,
        "ceil((double)(t": 7001,
        "2));": 7002,
        "max(0,": 7003,
        "2)));": 7004,
        "p[102];": 7005,
        "dif": 7006,
        "dif)": 7007,
        "(dif": 7008,
        "--m;": 7009,
        "u_d,": 7010,
        "d_u,": 7011,
        "u_d": 7012,
        "d_u": 7013,
        "u_d;": 7014,
        "d_u;": 7015,
        "100010;": 7016,
        "nap;": 7017,
        "et;": 7018,
        "et": 7019,
        "nap": 7020,
        "(nap": 7021,
        "(et": 7022,
        "flag)": 7023,
        "!flag)": 7024,
        "et);": 7025,
        "et)": 7026,
        "et(int": 7027,
        "check(t);": 7028,
        "(!fl": 7029,
        "tim(int": 7030,
        "(in": 7031,
        "fl)": 7032,
        "in);": 7033,
        "!fl)": 7034,
        "abs(in": 7035,
        "o);": 7036,
        "in)": 7037,
        "f.resize(n);": 7038,
        "t.resize(n);": 7039,
        "tm;": 7040,
        "f[i])": 7041,
        "tim(et(t[i]),": 7042,
        "s[i],": 7043,
        "t[i]);": 7044,
        "ttt": 7045,
        "tim(s[i],": 7046,
        "f[i],": 7047,
        "0x3FFFFFFF;": 7048,
        "s[MAXN],": 7049,
        "f[MAXN],": 7050,
        "t[MAXN];": 7051,
        "(((t[i]": 7052,
        "(!temp)": 7053,
        "min(b,": 7054,
        "mp[h]": 7055,
        "h)": 7056,
        "mp[l]": 7057,
        "mp[h];": 7058,
        "mp[l];": 7059,
        "lca(long": 7060,
        "swap(u,": 7061,
        "v);": 7062,
        "(mp.find(v)": 7063,
        "mp.end())": 7064,
        "mp[v];": 7065,
        "(w)": 7066,
        "mp[v]": 7067,
        "tp;": 7068,
        "(tp": 7069,
        "lca(u,": 7070,
        "peso;": 7071,
        "peso[max(u,": 7072,
        "v)]": 7073,
        "(peso.count(max(u,": 7074,
        "v)))": 7075,
        "v)];": 7076,
        "op,": 7077,
        "LCA(long": 7078,
        "a.push_back(v);": 7079,
        "b.push_back(u);": 7080,
        "reverse(a.begin(),": 7081,
        "a.end());": 7082,
        "reverse(b.begin(),": 7083,
        "b.end());": 7084,
        "b.size();": 7085,
        "b[i])": 7086,
        "op": 7087,
        "lca": 7088,
        "LCA(u,": 7089,
        "lca)": 7090,
        "add(v,": 7091,
        "add(u,": 7092,
        "(mp.count(v))": 7093,
        "(mp.count(u))": 7094,
        "mp[u];": 7095,
        "3e5": 7096,
        "st[MAX][2];": 7097,
        "cmp(pair<int,": 7098,
        "&a,": 7099,
        "&b)": 7100,
        "mp[n]": 7101,
        "mp[n];": 7102,
        "swap(v,": 7103,
        "u);": 7104,
        "(log2(u)": 7105,
        "log2(v))": 7106,
        "a[x]": 7107,
        "cal(long": 7108,
        "a[x];": 7109,
        "LCA(x,": 7110,
        "solve(l,": 7111,
        "z);": 7112,
        "cal(l,": 7113,
        "dp;": 7114,
        "type;": 7115,
        "(type": 7116,
        "dp[v]": 7117,
        "dp[v];": 7118,
        "parent(long": 7119,
        "long>{1};": 7120,
        "parent(n": 7121,
        "ans.push_back(n);": 7122,
        "route(long": 7123,
        "pu": 7124,
        "parent(u),": 7125,
        "pv": 7126,
        "parent(v);": 7127,
        "mxcommon": 7128,
        "min(pu.size(),": 7129,
        "pv.size());": 7130,
        "(pu[i]": 7131,
        "pv[i])": 7132,
        "mxcommon++;": 7133,
        "rta;": 7134,
        "mxcommon;": 7135,
        "rta.push_back(pv[i]);": 7136,
        "pu.size();": 7137,
        "rta.push_back(pu[i]);": 7138,
        "map<pair<long": 7139,
        "long>,": 7140,
        "cost;": 7141,
        "route(min(u,": 7142,
        "v),": 7143,
        "max(u,": 7144,
        "v));": 7145,
        "r.size()": 7146,
        "cost[make_pair(min(r[i],": 7147,
        "r[i": 7148,
        "1]),": 7149,
        "max(r[i],": 7150,
        "1]))]": 7151,
        "1]))];": 7152,
        "solve(bool": 7153,
        "a[u];": 7154,
        "solve(1);": 7155,
        "solve(0);": 7156,
        "1000000007,": 7157,
        "131071;": 7158,
        "a[v]": 7159,
        "a[v];": 7160,
        "m[make_pair(i,": 7161,
        "2)]": 7162,
        "2)];": 7163,
        "((q--)": 7164,
        "sel;": 7165,
        "(sel": 7166,
        "depth(long": 7167,
        "++e)": 7168,
        "dep_u": 7169,
        "depth(u),": 7170,
        "dep_v": 7171,
        "depth(v);": 7172,
        "(dep_v": 7173,
        "dep_u)": 7174,
        "swap(dep_v,": 7175,
        "dep_u);": 7176,
        "(dep_u": 7177,
        "dep_v)": 7178,
        "A[pair<long": 7179,
        "long>(u,": 7180,
        "--dep_u;": 7181,
        "long>(v,": 7182,
        "(A.find(pair<long": 7183,
        "A.end())": 7184,
        "temp2,": 7185,
        "temp0;": 7186,
        "temp2": 7187,
        "temp2)": 7188,
        "M[temp1]": 7189,
        "M[temp2]": 7190,
        "M[temp1];": 7191,
        "M[temp2];": 7192,
        "mp[u]": 7193,
        "getPr(long": 7194,
        "getPr(u": 7195,
        "getPr(u,": 7196,
        "getAns(long": 7197,
        "finish)": 7198,
        "value[make_pair(start": 7199,
        "start)]": 7200,
        "getAns(start": 7201,
        "finish);": 7202,
        "setTree(long": 7203,
        "end,": 7204,
        "value[make_pair(v": 7205,
        "setTree(v": 7206,
        "setTree(u,": 7207,
        "setTree(v,": 7208,
        "getAns(u,": 7209,
        "pr)": 7210,
        "getAns(v,": 7211,
        "poskupi(long": 7212,
        "cost[x]": 7213,
        "cost[y]": 7214,
        "cena(long": 7215,
        "cost[x];": 7216,
        "cost[y];": 7217,
        "poskupi(u,": 7218,
        "cena(u,": 7219,
        "answer;": 7220,
        "M[make_pair(p,": 7221,
        "u)]": 7222,
        "u)];": 7223,
        "(tc": 7224,
        "m[u]": 7225,
        "m[v]": 7226,
        "m[v];": 7227,
        "m[u];": 7228,
        "M[v];": 7229,
        "M[v]": 7230,
        "q--)": 7231,
        "solve(u,": 7232,
        "int>,": 7233,
        "pair<long": 7234,
        "lol;": 7235,
        "lca();": 7236,
        "finder();": 7237,
        "lca()": 7238,
        "(log2(p)": 7239,
        "log2(q))": 7240,
        "swap(p,": 7241,
        "log_": 7242,
        "int)log2(p);": 7243,
        "int)log2(q);": 7244,
        "((1": 7245,
        "(log_": 7246,
        "log_++;": 7247,
        "log_;": 7248,
        "((p": 7249,
        "i)))": 7250,
        "lol.first": 7251,
        "lol.second": 7252,
        "(mp.find(lol)": 7253,
        "mp[lol]": 7254,
        "finder()": 7255,
        "mp[lol];": 7256,
        "(depth(a)": 7257,
        "depth(b))": 7258,
        "m[{a,": 7259,
        "2}]": 7260,
        "dis(long": 7261,
        "m[{b,": 7262,
        "2}];": 7263,
        "anc": 7264,
        "lca(b,": 7265,
        "add(b,": 7266,
        "anc,": 7267,
        "add(c,": 7268,
        "dis(anc,": 7269,
        "cost.clear();": 7270,
        "cost[{v,": 7271,
        "cost[{v": 7272,
        "v}]": 7273,
        "qq": 7274,
        "qq++)": 7275,
        "(m.find(v)": 7276,
        "m.end())": 7277,
        "(~w)": 7278,
        "p.insert(u);": 7279,
        "(p.find(v)": 7280,
        "p.end())": 7281,
        "dfs(long": 7282,
        "(m[make_pair(v": 7283,
        "v)])": 7284,
        "m[make_pair(v": 7285,
        "dfs2(long": 7286,
        "get(u,": 7287,
        "dfs(p,": 7288,
        "dfs2(p,": 7289,
        "tree;": 7290,
        "add_path(long": 7291,
        "tree[v]": 7292,
        "tree[u]": 7293,
        "dist(long": 7294,
        "tree[v];": 7295,
        "tree[u];": 7296,
        "add_path(u,": 7297,
        "dist(u,": 7298,
        "wh,": 7299,
        "wh;": 7300,
        "(wh": 7301,
        "M[u]": 7302,
        "M[v],": 7303,
        "M[u],": 7304,
        "s[1005];": 7305,
        "max1": 7306,
        "ls;": 7307,
        "m])": 7308,
        "max(m,": 7309,
        "max1);": 7310,
        "s.substr(j,": 7311,
        "(s.find(key,": 7312,
        "freq;": 7313,
        "temp.clear();": 7314,
        "(++freq[temp]": 7315,
        "max(len,": 7316,
        "(int)temp.size());": 7317,
        "length": 7318,
        "length)": 7319,
        "k])": 7320,
        "max(ans,": 7321,
        "cnt])": 7322,
        "max(cnt,": 7323,
        "Max);": 7324,
        "judge(string": 7325,
        "pnt": 7326,
        "(t[j": 7327,
        "pnt++;": 7328,
        "(pnt": 7329,
        "s.substr(i,": 7330,
        "(judge(x))": 7331,
        "sz);": 7332,
        "v.push_back(s.substr(i,": 7333,
        "l));": 7334,
        "gets(s);": 7335,
        "--l)": 7336,
        "m[ss]++;": 7337,
        "(m[ss]": 7338,
        "a.length(),": 7339,
        "a.substr(j,": 7340,
        "(a.substr(k,": 7341,
        "ma);": 7342,
        "max(maxn,": 7343,
        "ar[110];": 7344,
        "ar;": 7345,
        "strlen(ar);": 7346,
        "(ar[i": 7347,
        "s]": 7348,
        "ar[j": 7349,
        "s])": 7350,
        "sum[1000000]": 7351,
        "(s[ii]": 7352,
        "s[jj])": 7353,
        "ii++;": 7354,
        "jj++;": 7355,
        "sum[k]++;": 7356,
        "sort(sum,": 7357,
        "1000000,": 7358,
        "sum[0]": 7359,
        "(x[a]": 7360,
        "x[b])": 7361,
        "cmp(i,": 7362,
        "l);": 7363,
        "brr[500000];": 7364,
        "arr[500000];": 7365,
        "m[p]++;": 7366,
        "m.begin();": 7367,
        "m.end();": 7368,
        "(it->second": 7369,
        "q.push(it->first.size());": 7370,
        "(q.size()": 7371,
        "q.top()": 7372,
        "(a[x]": 7373,
        "all;": 7374,
        "all.clear();": 7375,
        "all.insert(s.substr(j,": 7376,
        "i));": 7377,
        "(all.size()": 7378,
        "jj++,": 7379,
        "(a[ii]": 7380,
        "a[jj])": 7381,
        "nn++;": 7382,
        "(nn": 7383,
        "nn;": 7384,
        "l--)": 7385,
        "maxx);": 7386,
        "--len)": 7387,
        "(s.find(s1,": 7388,
        "2000": 7389,
        "main_str;": 7390,
        "main_str.length();": 7391,
        "len--)": 7392,
        "start_index": 7393,
        "start_index++)": 7394,
        "str_for_compare": 7395,
        "main_str.substr(start_index,": 7396,
        "reg": 7397,
        "main_str.substr(i,": 7398,
        "(reg": 7399,
        "str_for_compare)": 7400,
        "occ": 7401,
        "(s.substr(k,": 7402,
        "occ++;": 7403,
        "(occ": 7404,
        "s.substr(j": 7405,
        "(str.find(tmp)": 7406,
        "eps(1e-8);": 7407,
        "str[100];": 7408,
        "-1000000007;": 7409,
        "str[i])": 7410,
        "tmp2": 7411,
        "(str[tmp]": 7412,
        "str[tmp2]": 7413,
        "str[tmp]": 7414,
        "'\\0')": 7415,
        "tmp2++;": 7416,
        "z.push_back(s.substr(i,": 7417,
        "sort(z.begin(),": 7418,
        "z.end());": 7419,
        "z.size()": 7420,
        "(z[k]": 7421,
        "z[k": 7422,
        "letter[26];": 7423,
        "index": 7424,
        "letter[index].push_back(i);": 7425,
        "(letter[i].size()": 7426,
        "letter[i].size();": 7427,
        "index1": 7428,
        "letter[i][j];": 7429,
        "index2": 7430,
        "letter[i][k];": 7431,
        "tmp_ans": 7432,
        "(index1": 7433,
        "s.length())": 7434,
        "(s[index1]": 7435,
        "s[index2])": 7436,
        "tmp_ans++;": 7437,
        "index1++;": 7438,
        "index2++;": 7439,
        "(tmp_ans": 7440,
        "ans)": 7441,
        "tmp_ans;": 7442,
        "c]": 7443,
        "c])": 7444,
        "p[100];": 7445,
        "p[a[i]": 7446,
        "1].push_back(i);": 7447,
        "k1,": 7448,
        "k2,": 7449,
        "p[i].size();": 7450,
        "p[i][j];": 7451,
        "p[i][k];": 7452,
        "(a[t1]": 7453,
        "a[t2])": 7454,
        "t1++;": 7455,
        "t2++;": 7456,
        "a.size())": 7457,
        "st.insert(s.substr(j,": 7458,
        "(s.substr(j,": 7459,
        "s.substr(k,": 7460,
        "(l--)": 7461,
        "a[m])": 7462,
        "output(0);": 7463,
        "input.size()": 7464,
        "length--)": 7465,
        "(output": 7466,
        "present;": 7467,
        "start++)": 7468,
        "input.substr(start,": 7469,
        "length);": 7470,
        "(present.find(current)": 7471,
        "present.end())": 7472,
        "present.insert(current);": 7473,
        "output": 7474,
        "length;": 7475,
        "fre;": 7476,
        "(++fre[temp]": 7477,
        "max(l,": 7478,
        "a.size(),": 7479,
        "make()": 7480,
        "name.size();": 7481,
        "name[i];": 7482,
        "v.push_back(temp);": 7483,
        "name[j];": 7484,
        "make();": 7485,
        "record;": 7486,
        "name.find(v[i]);": 7487,
        "name.size())": 7488,
        "name.find(v[i],": 7489,
        "(counter": 7490,
        "max(ma,": 7491,
        "long)v[i].size());": 7492,
        "c[105];": 7493,
        "c[i];": 7494,
        "(c[i": 7495,
        "total]": 7496,
        "c[j": 7497,
        "total])": 7498,
        "total++;": 7499,
        "total)": 7500,
        "total;": 7501,
        "(s.find(x,": 7502,
        "((int)(s).size());": 7503,
        "sort((v).begin(),": 7504,
        "(v).end());": 7505,
        "((int)(v).size())": 7506,
        "str.size()": 7507,
        "str.size())": 7508,
        "sub": 7509,
        "str.substr(j,": 7510,
        "((pos": 7511,
        "str.find(sub,": 7512,
        "pos))": 7513,
        "sub.length()": 7514,
        "min(ans,": 7515,
        "arr[100];": 7516,
        "(!v.empty())": 7517,
        "v.erase(v.begin());": 7518,
        "(v[v.size()": 7519,
        "v.erase(v.begin()": 7520,
        "++ans;": 7521,
        "ans);": 7522,
        "a[105],": 7523,
        "right,": 7524,
        "a[150],": 7525,
        "a[u])": 7526,
        "num[200];": 7527,
        "K;": 7528,
        "num[i];": 7529,
        "(num[p]": 7530,
        "K)": 7531,
        "(num[j]": 7532,
        "num[101];": 7533,
        "(index": 7534,
        "(num[index]": 7535,
        "sum++,": 7536,
        "index++;": 7537,
        "(num[last]": 7538,
        "last--;": 7539,
        "ans++,": 7540,
        "(!flag": 7541,
        "a[100],": 7542,
        "j;)": 7543,
        "j--,": 7544,
        "forth": 7545,
        "back": 7546,
        "j1;": 7547,
        "(j1": 7548,
        "j1": 7549,
        "j1--)": 7550,
        "(a[j1]": 7551,
        "deque<int>": 7552,
        "deq;": 7553,
        "deq.push_back(temp);": 7554,
        "(deq.size()": 7555,
        "deq.front()": 7556,
        "deq.pop_front();": 7557,
        "deq.back()": 7558,
        "deq.pop_back();": 7559,
        "countl": 7560,
        "countr": 7561,
        "(countl": 7562,
        "p[n": 7563,
        "p[i];": 7564,
        "A[105];": 7565,
        "A[i];": 7566,
        "(A[0]": 7567,
        "V;": 7568,
        "V.push_back(x);": 7569,
        "(V[i]": 7570,
        "(V[j]": 7571,
        "a[100001];": 7572,
        "b[100001]": 7573,
        "flag[105]": 7574,
        "flag[i]": 7575,
        "a[200];": 7576,
        "An[MAX],": 7577,
        "Bn[MAX];": 7578,
        "preorder()": 7579,
        "(An[i]": 7580,
        "rearorder()": 7581,
        "An[i];": 7582,
        "rearorder();": 7583,
        "v.clear();": 7584,
        "v.push_back(c);": 7585,
        "v.size())": 7586,
        "a[10000];": 7587,
        "min(cnt,": 7588,
        "bf": 7589,
        "(!bf": 7590,
        "!ff)": 7591,
        "(!ff": 7592,
        "v[r]": 7593,
        "v[f]": 7594,
        "v[b]": 7595,
        "L++,": 7596,
        "R--,": 7597,
        "A[100];": 7598,
        "((l": 7599,
        "true))": 7600,
        "cou": 7601,
        "cou++;": 7602,
        "n1[100000];": 7603,
        "n1[i];": 7604,
        "(n1[i]": 7605,
        "1e8": 7606,
        "a[N],": 7607,
        "flag1)": 7608,
        "((a[j]": 7609,
        "n))": 7610,
        "(!flag1": 7611,
        "!flag2)": 7612,
        "ct": 7613,
        "marked(n,": 7614,
        "!marked[i])": 7615,
        "ct++;": 7616,
        "marked[i]": 7617,
        "s.push_back(x);": 7618,
        "(s.empty()": 7619,
        "s.back()": 7620,
        "s.pop_back();": 7621,
        "arr[m": 7622,
        "(__typeof(0)": 7623,
        "(A[j]": 7624,
        "seen[101];": 7625,
        "A[101];": 7626,
        "(N": 7627,
        "K": 7628,
        "seen[i]": 7629,
        "a[1001];": 7630,
        "*a;": 7631,
        "head": 7632,
        "a[head]": 7633,
        "head++;": 7634,
        "a[end]": 7635,
        "Arr[n": 7636,
        "Arr[i];": 7637,
        "lft": 7638,
        "(lft": 7639,
        "Arr[lft]": 7640,
        "lft++,": 7641,
        "rgt": 7642,
        "(rgt": 7643,
        "Arr[rgt]": 7644,
        "rgt--,": 7645,
        "s[100001];": 7646,
        "gcd(q,": 7647,
        "manx": 7648,
        "sort(b,": 7649,
        "(b[n": 7650,
        "remove_zeros(int": 7651,
        "ten": 7652,
        "digit": 7653,
        "(digit": 7654,
        "ten;": 7655,
        "remove_zeros(a);": 7656,
        "remove_zeros(b);": 7657,
        "remove_zeros(c);": 7658,
        "bx(long": 7659,
        "10);": 7660,
        "(bx(a)": 7661,
        "bx(b)": 7662,
        "bx(a": 7663,
        "add(string": 7664,
        "cry": 7665,
        "max(a.size(),": 7666,
        "b.size())": 7667,
        "ta,": 7668,
        "tb;": 7669,
        "ta": 7670,
        "tb": 7671,
        "cry;": 7672,
        "(ans[ans.size()": 7673,
        "ans.substr(0,": 7674,
        "era(string": 7675,
        "p.substr(0,": 7676,
        "p.substr(i": 7677,
        "add(a,": 7678,
        "era(a);": 7679,
        "era(b);": 7680,
        "era(c);": 7681,
        "(add(a,": 7682,
        "a_,": 7683,
        "b_,": 7684,
        "c_;": 7685,
        "a_": 7686,
        "b_": 7687,
        "c_": 7688,
        "a_)": 7689,
        "(a_)": 7690,
        "(a_": 7691,
        "(b_)": 7692,
        "(b_": 7693,
        "(c_)": 7694,
        "(c_": 7695,
        "remove_zero(int": 7696,
        "remove_zero(a);": 7697,
        "remove_zero(b);": 7698,
        "remove_zero(c);": 7699,
        "a[20];": 7700,
        "lzl(int": 7701,
        "a[z++]": 7702,
        "lzl(t);": 7703,
        "lzl(a)": 7704,
        "lzl(b);": 7705,
        "zeroRemover(int": 7706,
        "zeroRemover(a);": 7707,
        "zeroRemover(b);": 7708,
        "zeroRemover(c);": 7709,
        "remove0(int": 7710,
        "m(0),": 7711,
        "pow(1);": 7712,
        "pow;": 7713,
        "pow": 7714,
        "remove0(a);": 7715,
        "remove0(b);": 7716,
        "C": 7717,
        "remove0(c);": 7718,
        "gum(int": 7719,
        "(int)d": 7720,
        "pow(10,": 7721,
        "p[10000];": 7722,
        "s[320][320];": 7723,
        "(gum(a)": 7724,
        "gum(b)": 7725,
        "gum(c))": 7726,
        "zx(int": 7727,
        "zx(a);": 7728,
        "zx(b);": 7729,
        "zx(c);": 7730,
        "removeZeros(int": 7731,
        "(dig)": 7732,
        "removeZeros(a);": 7733,
        "removeZeros(b);": 7734,
        "removeZeros(c);": 7735,
        "puts(a": 7736,
        "tempa": 7737,
        "tempb": 7738,
        "tempa;": 7739,
        "rem1": 7740,
        "(rem)": 7741,
        "newa": 7742,
        "rem1;": 7743,
        "tempb;": 7744,
        "newb": 7745,
        "newsum": 7746,
        "newb;": 7747,
        "(newsum": 7748,
        "rem1)": 7749,
        "putchar('\\n');": 7750,
        "a[k++]": 7751,
        "change(t);": 7752,
        "change(a)": 7753,
        "change(b);": 7754,
        "remv(long": 7755,
        "div,": 7756,
        "mod);": 7757,
        "remv(a);": 7758,
        "remv(b);": 7759,
        "remv(c);": 7760,
        "f(string": 7761,
        "static_cast<ostringstream": 7762,
        "*>(&(ostringstream()": 7763,
        "a))->str();": 7764,
        "b))->str();": 7765,
        "c))->str();": 7766,
        "((f(x)": 7767,
        "f(y))": 7768,
        "f(z))": 7769,
        "r(int": 7770,
        "r(a);": 7771,
        "r(b);": 7772,
        "r(c);": 7773,
        "getNum(int": 7774,
        "currMod": 7775,
        "(currMod": 7776,
        "(pow(10,": 7777,
        "ds));": 7778,
        "ds++;": 7779,
        "getNum(c1);": 7780,
        "(getNum(a)": 7781,
        "getNum(b)": 7782,
        "zy,": 7783,
        "xy": 7784,
        "zy": 7785,
        "(z)": 7786,
        "xy;": 7787,
        "removeZero(long": 7788,
        "(num);": 7789,
        "num2,": 7790,
        "removeZero(num1);": 7791,
        "removeZero(num2);": 7792,
        "(sum2": 7793,
        "removeZero(sum1))": 7794,
        "gcd(double": 7795,
        "0.01": 7796,
        "gcd(fmod(b,": 7797,
        "swap(char": 7798,
        "*x,": 7799,
        "*y)": 7800,
        "*y;": 7801,
        "*y": 7802,
        "*x": 7803,
        "ad[12]": 7804,
        "cd[12]": 7805,
        "bd[12]": 7806,
        "bs": 7807,
        "cs": 7808,
        "ad[k++]": 7809,
        "bd[k++]": 7810,
        "cd[k++]": 7811,
        "(ad[i]);": 7812,
        "(bd[i]);": 7813,
        "(cd[i]);": 7814,
        "cal(a);": 7815,
        "cal(b);": 7816,
        "cal(c);": 7817,
        "q))": 7818,
        "darVuelta(long": 7819,
        "dig1": 7820,
        "dig1;": 7821,
        "quitarZeros(long": 7822,
        "(dig1": 7823,
        "darVuelta(x),": 7824,
        "darVuelta(y),": 7825,
        "darVuelta(c);": 7826,
        "(quitarZeros(xx)": 7827,
        "quitarZeros(yy)": 7828,
        "quitarZeros(cc))": 7829,
        "sum1_str,": 7830,
        "sum2_str;": 7831,
        "string_int(string": 7832,
        "(int)s.length()": 7833,
        "int_string(int": 7834,
        "char(x": 7835,
        "string_int(a,": 7836,
        "string_int(b,": 7837,
        "sum1_str": 7838,
        "int_string(sum1);": 7839,
        "reverse(sum1_str.begin(),": 7840,
        "sum1_str.end());": 7841,
        "string_int(sum1_str,": 7842,
        "sum2)": 7843,
        "a[11],": 7844,
        "(a1)": 7845,
        "mul1": 7846,
        "mul1;": 7847,
        "(b1)": 7848,
        "(b1": 7849,
        "b[y2]": 7850,
        "y2++;": 7851,
        "mul2": 7852,
        "mul2;": 7853,
        "(v)": 7854,
        "c[y]": 7855,
        "mul": 7856,
        "mul;": 7857,
        "sum)": 7858,
        "zero(long": 7859,
        "array[Y];": 7860,
        "zero(a);": 7861,
        "zero(b);": 7862,
        "zero(c);": 7863,
        "atoi(x.c_str());": 7864,
        "atoi(y.c_str());": 7865,
        "stringstream": 7866,
        "ss.str();": 7867,
        "reverse(c.begin(),": 7868,
        "c.end());": 7869,
        "(y[i]": 7870,
        "atoi(x1.c_str());": 7871,
        "atoi(y1.c_str());": 7872,
        "atoi(c.c_str());": 7873,
        "ostringstream": 7874,
        "ss1;": 7875,
        "ss1": 7876,
        "anew": 7877,
        "ss1.str();": 7878,
        "ss2;": 7879,
        "ss2": 7880,
        "bnew": 7881,
        "ss2.str();": 7882,
        "ss3;": 7883,
        "ss3": 7884,
        "cnew": 7885,
        "ss3.str();": 7886,
        "anew.erase(remove(anew.begin(),": 7887,
        "anew.end(),": 7888,
        "'0'),": 7889,
        "anew.end());": 7890,
        "bnew.erase(remove(bnew.begin(),": 7891,
        "bnew.end(),": 7892,
        "bnew.end());": 7893,
        "cnew.erase(remove(cnew.begin(),": 7894,
        "cnew.end(),": 7895,
        "cnew.end());": 7896,
        "geek(anew);": 7897,
        "geek": 7898,
        "geek1(bnew);": 7899,
        "geek1": 7900,
        "geek2(cnew);": 7901,
        "x3;": 7902,
        "geek2": 7903,
        "((x1": 7904,
        "x3)": 7905,
        "};": 7906,
        "aa[3000],": 7907,
        "bb[3000],": 7908,
        "cc[3000];": 7909,
        "A.size();": 7910,
        "B.size();": 7911,
        "(B[j]": 7912,
        "aa[num]": 7913,
        "aa[i];": 7914,
        "bb[num]": 7915,
        "bb[i];": 7916,
        "cc[num]": 7917,
        "cc[i];": 7918,
        "gcd1(int": 7919,
        "gcd1(b": 7920,
        "modx(long": 7921,
        "1LL,": 7922,
        "base;": 7923,
        "1LL)": 7924,
        "val)": 7925,
        "1000000009LL;": 7926,
        "1LL;": 7927,
        "visit[maxn];": 7928,
        "adj[maxn];": 7929,
        "dist[maxn][maxn];": 7930,
        "visit[start]": 7931,
        "v.push_back(start);": 7932,
        "adj[start].size();": 7933,
        "pt": 7934,
        "adj[start][i];": 7935,
        "(!visit[pt])": 7936,
        "dfs(pt);": 7937,
        "adj[a].push_back(b);": 7938,
        "adj[b].push_back(a);": 7939,
        "dist[b][a]": 7940,
        "dfs(1);": 7941,
        "dist[v[i]][v[(i": 7942,
        "n]];": 7943,
        "dist[v[i]][v[v.size()": 7944,
        "1]];": 7945,
        "dist[v[i]][v[i": 7946,
        "min(ans1,": 7947,
        "ans2)": 7948,
        "num[105][105];": 7949,
        "counts;": 7950,
        "en;": 7951,
        "en": 7952,
        "vis[k]": 7953,
        "(num[k][i]": 7954,
        "(num[i][k]": 7955,
        "num[i][k];": 7956,
        "dfs(i);": 7957,
        "memset(num,": 7958,
        "sizeof(num));": 7959,
        "num[x][y]": 7960,
        "(num[en][1]": 7961,
        "num[1][en];": 7962,
        "min(counts,": 7963,
        "counts)": 7964,
        "fa[102][102],": 7965,
        "p1,": 7966,
        "v[102];": 7967,
        "viy[102][2];": 7968,
        "f1(int": 7969,
        "dg,": 7970,
        "msh)": 7971,
        "(viy[dg][0])": 7972,
        "viy[dg][0]": 7973,
        "(msh": 7974,
        "v[dg][0])": 7975,
        "fa[v[dg][0]][dg];": 7976,
        "f1(v[dg][0],": 7977,
        "dg);": 7978,
        "fa[v[dg][1]][dg];": 7979,
        "f1(v[dg][1],": 7980,
        "f2(int": 7981,
        "(viy[dg][1])": 7982,
        "viy[dg][1]": 7983,
        "v[dg][1])": 7984,
        "p2": 7985,
        "f2(v[dg][1],": 7986,
        "f2(v[dg][0],": 7987,
        "v[a].push_back(b);": 7988,
        "v[b].push_back(a);": 7989,
        "fa[b][a]": 7990,
        "f1(1,": 7991,
        "f2(1,": 7992,
        "min(p1,": 7993,
        "p2)": 7994,
        "G[maxn][maxn];": 7995,
        "G1[maxn][maxn];": 7996,
        "vis[maxn];": 7997,
        "lsum,": 7998,
        "ssum;": 7999,
        "cur,": 8000,
        "(!vis[i]": 8001,
        "G1[cur][i]": 8002,
        "vis[i]": 8003,
        "(G[cur][i]": 8004,
        "lsum": 8005,
        "G[cur][i];": 8006,
        "dfs(i,": 8007,
        "N)": 8008,
        "(G[cur][1])": 8009,
        "G[cur][1];": 8010,
        "memset(G,": 8011,
        "sizeof(G));": 8012,
        "memset(G1,": 8013,
        "sizeof(G1));": 8014,
        "ssum": 8015,
        "G[x][y]": 8016,
        "G1[x][y]": 8017,
        "G1[y][x]": 8018,
        "max(num,": 8019,
        "dfs(1,": 8020,
        "min(lsum,": 8021,
        "lsum)": 8022,
        "edges[105][105];": 8023,
        "*visited,": 8024,
        "index,": 8025,
        "*ans,": 8026,
        "visited[index]": 8027,
        "(edges[index][i]": 8028,
        "(visited[i]": 8029,
        "*ans": 8030,
        "edges[index][i];": 8031,
        "dfs(visited,": 8032,
        "dfs2(int": 8033,
        "visited[n];": 8034,
        "edges[i][j]": 8035,
        "edges[a][b]": 8036,
        "edges[b][a]": 8037,
        "visited[i]": 8038,
        "&ans,": 8039,
        "(edges[0][i]": 8040,
        "edges[i][0];": 8041,
        "dfs2(visited,": 8042,
        "&ans2,": 8043,
        "ans2);": 8044,
        "vis[200];": 8045,
        "a[101][101],": 8046,
        "c[101][101];": 8047,
        "ans1,": 8048,
        "ans2,": 8049,
        "cur;": 8050,
        "bo;": 8051,
        "a[x][y]": 8052,
        "a[y][x]": 8053,
        "c[x][y]": 8054,
        "c[y][x]": 8055,
        "bo": 8056,
        "(bo)": 8057,
        "(a[cur][i]": 8058,
        "c[cur][i];": 8059,
        "vis[cur]": 8060,
        "(a[cur][1]": 8061,
        "c[cur][1];": 8062,
        "((a[cur][i]": 8063,
        "false))": 8064,
        "(a[cur][2]": 8065,
        "a[n],": 8066,
        "b[n],": 8067,
        "c[n],": 8068,
        "v[n": 8069,
        "(!v[i])": 8070,
        "!v[j])": 8071,
        "b[105],": 8072,
        "self)": 8073,
        "(self": 8074,
        "a[1])": 8075,
        "dfs(b[i],": 8076,
        "dfs(a[i],": 8077,
        "dfs(b[1],": 8078,
        "min(result,": 8079,
        "result);": 8080,
        "gtw": 8081,
        "edge[100][100];": 8082,
        "ada_edge()": 8083,
        "ro": 8084,
        "(edge[i][j]": 8085,
        "ro;": 8086,
        "edge[a][b]": 8087,
        "(ada_edge())": 8088,
        "ada_out_edge": 8089,
        "(edge[a][i]": 8090,
        "(ada_out_edge)": 8091,
        "edge[a][i]": 8092,
        "(edge[i][a]": 8093,
        "edge[i][a];": 8094,
        "edge[i][a]": 8095,
        "min(gtw,": 8096,
        "gtw)": 8097,
        "graph[105][105];": 8098,
        "m[105][105];": 8099,
        "vis[u]": 8100,
        "m[1][u];": 8101,
        "(graph[u][i]": 8102,
        "m[i][u];": 8103,
        "memset(graph,": 8104,
        "sizeof(graph));": 8105,
        "memset(m,": 8106,
        "sizeof(m));": 8107,
        "graph[x][y]": 8108,
        "graph[y][x]": 8109,
        "m[y][x]": 8110,
        "v[101];": 8111,
        "vis[101];": 8112,
        "cost": 8113,
        "GRAPH[101][101];": 8114,
        "DFS(int": 8115,
        "v[x].size();": 8116,
        "(!vis[v[x][i]])": 8117,
        "(GRAPH[v[x][i]][x]": 8118,
        "GRAPH[v[x][i]][x];": 8119,
        "DFS(v[x][i]);": 8120,
        "GRAPH[i][j]": 8121,
        "GRAPH[x][y]": 8122,
        "v[x].push_back(y);": 8123,
        "v[y].push_back(x);": 8124,
        "DFS(v[1][0]);": 8125,
        "cost1": 8126,
        "(GRAPH[1][v[1][0]]": 8127,
        "GRAPH[v[1][0]][1];": 8128,
        "(GRAPH[v[1][1]][1]": 8129,
        "GRAPH[1][v[1][1]];": 8130,
        "DFS(v[1][1]);": 8131,
        "cost2": 8132,
        "(GRAPH[1][v[1][1]]": 8133,
        "GRAPH[v[1][1]][1];": 8134,
        "(GRAPH[v[1][0]][1]": 8135,
        "GRAPH[1][v[1][0]];": 8136,
        "min(cost1,": 8137,
        "cost2)": 8138,
        "g[MAX],": 8139,
        "v[MAX];": 8140,
        "(v[f]": 8141,
        "g[t])": 8142,
        "g[f]": 8143,
        "v[t]": 8144,
        "g[t]": 8145,
        "min(res,": 8146,
        "u[maxn],": 8147,
        "v[maxn],": 8148,
        "c[maxn];": 8149,
        "index)": 8150,
        "u[i])": 8151,
        "u[1])": 8152,
        "dfs(v[i],": 8153,
        "v[i])": 8154,
        "(u[i]": 8155,
        "dfs(u[i],": 8156,
        "u[i]": 8157,
        "dfs(v[1],": 8158,
        "adj[500005];": 8159,
        "visit[500005];": 8160,
        "map<pair<int,": 8161,
        "cycle;": 8162,
        "cycle.push_back(start);": 8163,
        "(!visit[adj[start][i]])": 8164,
        "dfs(adj[start][i]);": 8165,
        "mp1[make_pair(b,": 8166,
        "a)]": 8167,
        "cycle.size();": 8168,
        "mp1[make_pair(cycle[i],": 8169,
        "cycle[i": 8170,
        "1])];": 8171,
        "mp1[make_pair(cycle[i": 8172,
        "cycle[i])];": 8173,
        "mp1[make_pair(cycle[sz": 8174,
        "cycle[0])];": 8175,
        "mp1[make_pair(cycle[0],": 8176,
        "cycle[sz": 8177,
        "k[105],": 8178,
        "x[105],": 8179,
        "y[105],": 8180,
        "z[105];": 8181,
        "s[105][105];": 8182,
        "memset(k,": 8183,
        "sizeof(k));": 8184,
        "memset(y,": 8185,
        "sizeof(y));": 8186,
        "memset(z,": 8187,
        "sizeof(z));": 8188,
        "vis[a[i]]++;": 8189,
        "vis[b[i]]--;": 8190,
        "k[t]": 8191,
        "(k[i]": 8192,
        "k[i];": 8193,
        "x[v]": 8194,
        "y[v]": 8195,
        "z[v]": 8196,
        "gb1": 8197,
        "gb2": 8198,
        "x[0];": 8199,
        "(vis[j]": 8200,
        "((x[j]": 8201,
        "(y[j]": 8202,
        "y[j];": 8203,
        "z[j];": 8204,
        "x[j];": 8205,
        "min(gb1,": 8206,
        "gb2)": 8207,
        "out[n": 8208,
        "in[n": 8209,
        "(out[a]": 8210,
        "in[b])": 8211,
        "out[b]": 8212,
        "in[a]": 8213,
        "out[a]": 8214,
        "in[b]": 8215,
        "min(cost": 8216,
        "a[MAXN],": 8217,
        "b[MAXN],": 8218,
        "c[MAXN];": 8219,
        "res1": 8220,
        "b[0];": 8221,
        "used(n,": 8222,
        "used[0]": 8223,
        "(used[i]": 8224,
        "cur))": 8225,
        "cur)": 8226,
        "used[i]": 8227,
        "res2": 8228,
        "used.assign(n,": 8229,
        "min(res1,": 8230,
        "res2)": 8231,
        "path[105][105];": 8232,
        "isVisited[105];": 8233,
        "totAll,": 8234,
        "totCc;": 8235,
        "memset(path,": 8236,
        "sizeof(path));": 8237,
        "totAll": 8238,
        "totCc": 8239,
        "path[a][b]": 8240,
        "isVisited[1]": 8241,
        "(not(isVisited[i])": 8242,
        "(path[now][i]": 8243,
        "path[i][now]": 8244,
        "-1))": 8245,
        "(path[i][now]": 8246,
        "path[i][now];": 8247,
        "isVisited[i]": 8248,
        "min(totCc,": 8249,
        "totCc)": 8250,
        "static": 8251,
        "count2": 8252,
        "dfs1(int": 8253,
        "root,": 8254,
        "prev,": 8255,
        "visit[],": 8256,
        "V[])": 8257,
        "visit[root]": 8258,
        "root;": 8259,
        "(prev": 8260,
        "(m[{prev,": 8261,
        "root}]": 8262,
        "m[{root,": 8263,
        "prev}];": 8264,
        "V[root].size();": 8265,
        "(visit[V[root][i]]": 8266,
        "dfs1(V[root][i],": 8267,
        "visit,": 8268,
        "V);": 8269,
        "p[1];": 8270,
        "V[n": 8271,
        "p[0].first;": 8272,
        "p[0].second;": 8273,
        "m[p[0]]": 8274,
        "V[p[0].first].push_back(p[0].second);": 8275,
        "V[p[0].second].push_back(p[0].first);": 8276,
        "visit[n": 8277,
        "memset(visit,": 8278,
        "sizeof(visit));": 8279,
        "dfs1(1,": 8280,
        "(m[{last,": 8281,
        "1}]": 8282,
        "m[{1,": 8283,
        "last}];": 8284,
        "min(total": 8285,
        "count1,": 8286,
        "count1)": 8287,
        "sh[4][n];": 8288,
        "a[temp]++;": 8289,
        "sh[temp][a[temp]]": 8290,
        "min1": 8291,
        "min(min(a[1],": 8292,
        "a[2]),": 8293,
        "min1;": 8294,
        "sh[1][i]": 8295,
        "sh[2][i]": 8296,
        "sh[3][i]": 8297,
        "cnt[10];": 8298,
        "ar[5005];": 8299,
        "cnt[a]++;": 8300,
        "ar[i]": 8301,
        "make_pair(a,": 8302,
        "(cnt[i]": 8303,
        "mi)": 8304,
        "cnt[i];": 8305,
        "cnt[1],": 8306,
        "cnt[2];": 8307,
        "mi;": 8308,
        "ar[b].second": 8309,
        "ar[c].second": 8310,
        "ar[d].second": 8311,
        "b++,": 8312,
        "p.push_back(i": 8313,
        "m.push_back(i": 8314,
        "t.push_back(i": 8315,
        "min(min(p.size(),": 8316,
        "m.size()),": 8317,
        "t.size());": 8318,
        "ans1;": 8319,
        "programming;": 8320,
        "math;": 8321,
        "PE;": 8322,
        "programming.push_back(i);": 8323,
        "math.push_back(i);": 8324,
        "PE.push_back(i);": 8325,
        "team": 8326,
        "min(min(programming.size(),": 8327,
        "math.size()),": 8328,
        "PE.size());": 8329,
        "team;": 8330,
        "programming[i]": 8331,
        "math[i]": 8332,
        "PE[i]": 8333,
        "i[n],": 8334,
        "i[j];": 8335,
        "(i[j]": 8336,
        "i1[n],": 8337,
        "i2[n],": 8338,
        "i3[n];": 8339,
        "i1[a]": 8340,
        "i2[b]": 8341,
        "i3[c]": 8342,
        "i1[j]": 8343,
        "i2[j]": 8344,
        "i3[j]": 8345,
        "c[5005];": 8346,
        "satu": 8347,
        "dua": 8348,
        "tiga": 8349,
        "satu++;": 8350,
        "dua++;": 8351,
        "tiga++;": 8352,
        "b[4];": 8353,
        "satu;": 8354,
        "dua;": 8355,
        "tiga;": 8356,
        "3);": 8357,
        "one;": 8358,
        "two;": 8359,
        "three;": 8360,
        "one.push_back(i": 8361,
        "two.push_back(i": 8362,
        "three.push_back(i": 8363,
        "groups": 8364,
        "min(min(one.size(),": 8365,
        "two.size()),": 8366,
        "three.size());": 8367,
        "(groups": 8368,
        "groups;": 8369,
        "one[i]": 8370,
        "two[i]": 8371,
        "three[i]": 8372,
        "npr": 8373,
        "nma": 8374,
        "nph": 8375,
        "ma,": 8376,
        "ph;": 8377,
        "pr.push_back(i);": 8378,
        "npr++;": 8379,
        "ma.push_back(i);": 8380,
        "nma++;": 8381,
        "ph.push_back(i);": 8382,
        "nph++;": 8383,
        "min(npr,": 8384,
        "min(nma,": 8385,
        "nph));": 8386,
        "ma[i]": 8387,
        "ph[i]": 8388,
        "alen,": 8389,
        "blen,": 8390,
        "clen,": 8391,
        "a.push_back(i);": 8392,
        "c.push_back(i);": 8393,
        "alen": 8394,
        "blen": 8395,
        "clen": 8396,
        "c.size();": 8397,
        "(alen": 8398,
        "clen)": 8399,
        "alen;": 8400,
        "(blen": 8401,
        "blen;": 8402,
        "clen;": 8403,
        "d[n],": 8404,
        "t[3];": 8405,
        "b[x]": 8406,
        "d[z]": 8407,
        "one,": 8408,
        "two,": 8409,
        "minsize": 8410,
        "min(one.size(),": 8411,
        "min(two.size(),": 8412,
        "three.size()));": 8413,
        "minsize;": 8414,
        "Min;": 8415,
        "v[4];": 8416,
        "v[1].push_back(i);": 8417,
        "v[2].push_back(i);": 8418,
        "v[3].push_back(i);": 8419,
        "Min": 8420,
        "min(v[1].size(),": 8421,
        "min(v[2].size(),": 8422,
        "v[3].size()));": 8423,
        "v[1][i]": 8424,
        "v[2][i]": 8425,
        "v[3][i]": 8426,
        "arr[5005],": 8427,
        "cnt3": 8428,
        "cnt3++;": 8429,
        "min(cnt1,": 8430,
        "cnt2);": 8431,
        "min(m,": 8432,
        "cnt3);": 8433,
        "arr[j]": 8434,
        "mohi,": 8435,
        "v.push_back(k);": 8436,
        "arr[1]++;": 8437,
        "arr[2]++;": 8438,
        "mohi": 8439,
        "mohi)": 8440,
        "mohi;": 8441,
        "tot1,": 8442,
        "tot2,": 8443,
        "tot3,": 8444,
        "x[5002],": 8445,
        "y[5002],": 8446,
        "z[5002],": 8447,
        "d[5002],": 8448,
        "e[5002],": 8449,
        "f[5002];": 8450,
        "tot1++;": 8451,
        "tot2++;": 8452,
        "tot3++;": 8453,
        "z[i]": 8454,
        "(tot1": 8455,
        "tot2": 8456,
        "tot3": 8457,
        "tot1": 8458,
        "result++;": 8459,
        "(x[k]": 8460,
        "d[l]": 8461,
        "(y[p]": 8462,
        "e[o]": 8463,
        "(z[r]": 8464,
        "f[q]": 8465,
        "d[m]": 8466,
        "e[m]": 8467,
        "f[m]": 8468,
        "a1[n],": 8469,
        "a2[n],": 8470,
        "a3[n];": 8471,
        "a1[j]": 8472,
        "a2[k]": 8473,
        "a3[l]": 8474,
        "min(k,": 8475,
        "l))": 8476,
        "v1.push_back(i);": 8477,
        "v2.push_back(i);": 8478,
        "v3.push_back(i);": 8479,
        "min(v1.size(),": 8480,
        "min(v2.size(),": 8481,
        "v3.size()));": 8482,
        "v1[i]": 8483,
        "v2[i]": 8484,
        "v3[i]": 8485,
        "v1.push_back(i": 8486,
        "v2.push_back(i": 8487,
        "v3.push_back(i": 8488,
        "min(min(v1.size(),": 8489,
        "v2.size()),": 8490,
        "v3.size());": 8491,
        "mins(int": 8492,
        "t2,": 8493,
        "t3;": 8494,
        "t1.push_back(i);": 8495,
        "t2.push_back(i);": 8496,
        "t3.push_back(i);": 8497,
        "t1.size();": 8498,
        "t2.size();": 8499,
        "n3": 8500,
        "t3.size();": 8501,
        "mins(n1,": 8502,
        "n3);": 8503,
        "t1[i]": 8504,
        "t2[i]": 8505,
        "t3[i];": 8506,
        "queue<int>": 8507,
        "ca,": 8508,
        "cb,": 8509,
        "cc,": 8510,
        "ca": 8511,
        "cb": 8512,
        "ca++;": 8513,
        "a.push(i);": 8514,
        "cb++;": 8515,
        "b.push(i);": 8516,
        "c.push(i);": 8517,
        "min(ca,": 8518,
        "min(cb,": 8519,
        "cc));": 8520,
        "(mn--)": 8521,
        "a.front()": 8522,
        "b.front()": 8523,
        "c.front()": 8524,
        "a.pop();": 8525,
        "b.pop();": 8526,
        "pc[4][10010],": 8527,
        "pc[x][++pc[0][x]]": 8528,
        "min(pc[0][1],": 8529,
        "min(pc[0][2],": 8530,
        "pc[0][3]));": 8531,
        "pc[1][i]": 8532,
        "pc[2][i]": 8533,
        "pc[3][i]": 8534,
        "ara[6005][5];": 8535,
        "ara[0][k]++;": 8536,
        "ara[ara[0][k]][k]": 8537,
        "min(ara[0][1],": 8538,
        "ara[0][2]);": 8539,
        "ara[0][3]);": 8540,
        "ara[i][1]": 8541,
        "ara[i][2]": 8542,
        "ara[i][3]": 8543,
        "pe;": 8544,
        "pe.push_back(i": 8545,
        "min(p.size(),": 8546,
        "min(m.size(),": 8547,
        "pe.size()));": 8548,
        "pe[i]": 8549,
        "a[5001],": 8550,
        "b[5001],": 8551,
        "c[5001],": 8552,
        "d[5001];": 8553,
        "b[k]": 8554,
        "c[l]": 8555,
        "min(min(x,": 8556,
        "arr[0].push_back(i": 8557,
        "arr[1].push_back(i": 8558,
        "arr[2].push_back(i": 8559,
        "nt": 8560,
        "min(arr[0].size(),": 8561,
        "min(arr[1].size(),": 8562,
        "arr[2].size()));": 8563,
        "nt;": 8564,
        "arr[0][i]": 8565,
        "arr[1][i]": 8566,
        "arr[2][i]": 8567,
        "c[5],": 8568,
        "a[5][5005];": 8569,
        "a[x][++c[x]]": 8570,
        "c[i]);": 8571,
        "va;": 8572,
        "vb;": 8573,
        "vc;": 8574,
        "mp[arr[i]]++;": 8575,
        "mp.begin();": 8576,
        "mp.end();": 8577,
        "v.push_back(it->second);": 8578,
        "mp.size()": 8579,
        "va.push_back(i);": 8580,
        "vb.push_back(i);": 8581,
        "vc.push_back(i);": 8582,
        "va[i]": 8583,
        "vb[i]": 8584,
        "vc[i]": 8585,
        "a[10010],": 8586,
        "out[5];": 8587,
        "book[10010];": 8588,
        "a[i],": 8589,
        "c[a[i]]++;": 8590,
        "min(min(c[1],": 8591,
        "c[2]),": 8592,
        "c[3])": 8593,
        "book[i]": 8594,
        "c[a[i]]--,": 8595,
        "freq[4];": 8596,
        "freq[0]": 8597,
        "A[n];": 8598,
        "++freq[A[i]];": 8599,
        "*min": 8600,
        "min_element(freq,": 8601,
        "freq": 8602,
        "p2,": 8603,
        "p3;": 8604,
        "p1.push_back(i": 8605,
        "p2.push_back(i": 8606,
        "p3.push_back(i": 8607,
        "*min;": 8608,
        "p1[i]": 8609,
        "p2[i]": 8610,
        "p3[i]": 8611,
        "Ta[5001][4]": 8612,
        "Ta[x": 8613,
        "g][1]": 8614,
        "g][2]": 8615,
        "f][3]": 8616,
        "(Ta[x][1]": 8617,
        "Ta[x][2]": 8618,
        "Ta[x][3]": 8619,
        "Ta[x][1]": 8620,
        "a[5000];": 8621,
        "m.push_back(i);": 8622,
        "e.push_back(i);": 8623,
        "e.size()));": 8624,
        "e[i]": 8625,
        "on": 8626,
        "to": 8627,
        "te": 8628,
        "one[n];": 8629,
        "two[n];": 8630,
        "three[n];": 8631,
        "one[on]": 8632,
        "on++;": 8633,
        "two[to]": 8634,
        "to++;": 8635,
        "three[te]": 8636,
        "te++;": 8637,
        "(on": 8638,
        "te)": 8639,
        "on;": 8640,
        "(to": 8641,
        "(te": 8642,
        "to)": 8643,
        "te;": 8644,
        "least(int": 8645,
        "f1": 8646,
        "f2": 8647,
        "f3": 8648,
        "++f1;": 8649,
        "++f2;": 8650,
        "++f3;": 8651,
        "teams": 8652,
        "least(f1,": 8653,
        "least(f2,": 8654,
        "f3));": 8655,
        "teams;": 8656,
        "t[5001],": 8657,
        "a1++;": 8658,
        "a2++;": 8659,
        "a3++;": 8660,
        "min(a1,": 8661,
        "a2);": 8662,
        "a3);": 8663,
        "b1[5001],": 8664,
        "b2[5001],": 8665,
        "b3[5001];": 8666,
        "b1[i]": 8667,
        "5002;": 8668,
        "b2[i]": 8669,
        "b3[i]": 8670,
        "sort(b1,": 8671,
        "sort(b2,": 8672,
        "sort(b3,": 8673,
        "b3": 8674,
        "count[3]": 8675,
        "count[arr[i]": 8676,
        "sort(count,": 8677,
        "count[0];": 8678,
        "a(n": 8679,
        "tr;": 8680,
        "trunc;": 8681,
        "qbe": 8682,
        "html": 8683,
        "jjj": 8684,
        "mp[qbe]": 8685,
        "qbe++;": 8686,
        "tr[hj]": 8687,
        "hj++;": 8688,
        "trunc[html]": 8689,
        "html++;": 8690,
        "min((int)(mp.size()),": 8691,
        "min((int)(tr.size()),": 8692,
        "(int)(trunc.size())));": 8693,
        "jjj;": 8694,
        "mp[q]": 8695,
        "tr[q]": 8696,
        "trunc[q]": 8697,
        "one[5000],": 8698,
        "two[5000],": 8699,
        "three[5000],": 8700,
        "one[count[0]]": 8701,
        "count[0]++;": 8702,
        "two[count[1]]": 8703,
        "count[1]++;": 8704,
        "three[count[2]]": 8705,
        "count[2]++;": 8706,
        "(count[1]": 8707,
        "count[1];": 8708,
        "(count[2]": 8709,
        "count[2];": 8710,
        "min(t.size(),": 8711,
        "m.size()));": 8712,
        "unos,": 8713,
        "dos,": 8714,
        "tres;": 8715,
        "unos.push_back(i);": 8716,
        "dos.push_back(i);": 8717,
        "tres.push_back(i);": 8718,
        "unos.size();": 8719,
        "dos.size();": 8720,
        "tres.size();": 8721,
        "min(min(a,": 8722,
        "unos[i]": 8723,
        "dos[i]": 8724,
        "tres[i]": 8725,
        "so()": 8726,
        "(y);": 8727,
        "so();": 8728,
        "arr2[100005];": 8729,
        "compa1(int": 8730,
        "compa2(int": 8731,
        "arr2[i];": 8732,
        "mx1": 8733,
        "mx2": 8734,
        "max(mx1,": 8735,
        "compa1(l,": 8736,
        "r));": 8737,
        "max(mx2,": 8738,
        "compa2(l,": 8739,
        "arr[2][maxn],": 8740,
        "dp[2][maxn][maxn],": 8741,
        "input()": 8742,
        "arr[k][i];": 8743,
        "cal_dp()": 8744,
        "dp[k][i][i]": 8745,
        "dp[k][i][j]": 8746,
        "dp[k][i][j": 8747,
        "arr[k][j];": 8748,
        "input();": 8749,
        "cal_dp();": 8750,
        "dp[0][i][j]": 8751,
        "dp[1][i][j]);": 8752,
        "a(n),": 8753,
        "b(n);": 8754,
        "ansa": 8755,
        "ansb": 8756,
        "b[l];": 8757,
        "a[r];": 8758,
        "b[r];": 8759,
        "max(MAX,": 8760,
        "ansb);": 8761,
        "a[1005],": 8762,
        "b[1005];": 8763,
        "maks": 8764,
        "sumb": 8765,
        "max(maks,": 8766,
        "sumb);": 8767,
        "k[1005],": 8768,
        "l[1005];": 8769,
        "b[n];": 8770,
        "answer1": 8771,
        "answer2": 8772,
        "(tmp1": 8773,
        "a[j]);": 8774,
        "b[j]);": 8775,
        "MAX)": 8776,
        "max(s,": 8777,
        "~a[pre];": 8778,
        "~b[pre];": 8779,
        "sign1,": 8780,
        "sign2;": 8781,
        "sign1": 8782,
        "sign2": 8783,
        "(sign1": 8784,
        "(sign2": 8785,
        "arr1[1000],": 8786,
        "arr2[1000],": 8787,
        "arr1[i];": 8788,
        "suck;": 8789,
        "calc(int": 8790,
        "c[],": 8791,
        "INT_MIN,": 8792,
        "INT_MIN;": 8793,
        "calc(a,": 8794,
        "j));": 8795,
        "max(y,": 8796,
        "calc(b,": 8797,
        "ans2;": 8798,
        "sumA": 8799,
        "sumB": 8800,
        "sumA;": 8801,
        "sumB;": 8802,
        "a[maxn],": 8803,
        "b[maxn],": 8804,
        "fa[maxn],": 8805,
        "fb[maxn];": 8806,
        "fa[i]": 8807,
        "fa[i": 8808,
        "fb[i]": 8809,
        "fb[i": 8810,
        "fa[j": 8811,
        "fb[j": 8812,
        "max(res,": 8813,
        "a[1001],": 8814,
        "b[1001];": 8815,
        "LONG_MAX;": 8816,
        "1000000;": 8817,
        "a(arr,": 8818,
        "b(arr,": 8819,
        "fa(int": 8820,
        "fb(int": 8821,
        "max(fa(i,": 8822,
        "fb(i,": 8823,
        "brr[n];": 8824,
        "brr[i];": 8825,
        "var1": 8826,
        "var2": 8827,
        "arr[k];": 8828,
        "brr[k];": 8829,
        "var2);": 8830,
        "PI": 8831,
        "3.14159265358979323846264338;": 8832,
        "a[100009],": 8833,
        "b[100009],": 8834,
        "ans1);": 8835,
        "a[1500];": 8836,
        "b[1500];": 8837,
        "b[1];": 8838,
        "b[N],": 8839,
        "pa[N],": 8840,
        "pb[N];": 8841,
        "pa[0]": 8842,
        "pb[0]": 8843,
        "(pa[i": 8844,
        "pb[i": 8845,
        "pa[i]": 8846,
        "pa[i": 8847,
        "pb[i]": 8848,
        "pb[0];": 8849,
        "pb[i]);": 8850,
        "max(tmp1": 8851,
        "b[n]": 8852,
        "cur);": 8853,
        "MAX;": 8854,
        "a[k];": 8855,
        "b[k];": 8856,
        "ai": 8857,
        "sum(int": 8858,
        "v1[j];": 8859,
        "v2[j];": 8860,
        "(aux--)": 8861,
        "v1.push_back(a);": 8862,
        "v2.push_back(a);": 8863,
        "sum(k,": 8864,
        "arr1[n];": 8865,
        "arr2[n];": 8866,
        "(int)5e5": 8867,
        "7,": 8868,
        "b[MAXN];": 8869,
        "a[],": 8870,
        "++r)": 8871,
        "n));": 8872,
        "func(long": 8873,
        "a.resize(n);": 8874,
        "b.resize(n);": 8875,
        "func(i,": 8876,
        "(char": 8877,
        "aux++)": 8878,
        "aux)": 8879,
        "s[x": 8880,
        "x;)": 8881,
        "s[i--]": 8882,
        "s[i]++": 8883,
        "2]))": 8884,
        "s[i]++;": 8885,
        "x[1050],": 8886,
        "y[1050];": 8887,
        "a[1050];": 8888,
        "y[n]": 8889,
        "(strcmp(x,": 8890,
        "get_ans(int": 8891,
        "s[pos]": 8892,
        "s[pos]++)": 8893,
        "s[pos": 8894,
        "s[pos])": 8895,
        "(get_ans(pos": 8896,
        "++s[strlen(s)": 8897,
        "(get_ans(0))": 8898,
        "fail()": 8899,
        "fail();": 8900,
        "\"ab\")": 8901,
        "\"ba\\n\";": 8902,
        "\"a\")": 8903,
        "\"b\\n\";": 8904,
        "good": 8905,
        "(good": 8906,
        "good;": 8907,
        "'c';": 8908,
        "set<char>::iterator": 8909,
        "st.insert(j);": 8910,
        "st.find(s[i": 8911,
        "st.end())": 8912,
        "st.erase(it);": 8913,
        "2]);": 8914,
        "(st.size())": 8915,
        "1011;": 8916,
        "cel[N];": 8917,
        "ans[N];": 8918,
        "encontrado(long": 8919,
        "ans[pos]": 8920,
        "pos--;": 8921,
        "ans[pos": 8922,
        "encontrado(pos,": 8923,
        "brute_force(long": 8924,
        "cel[pos]": 8925,
        "cel[pos": 8926,
        "(!ok": 8927,
        "brute_force(pos": 8928,
        "cel[i]": 8929,
        "cel[i];": 8930,
        "brute_force(0);": 8931,
        "char(ans[i]": 8932,
        "'a');": 8933,
        "helper(int": 8934,
        "(helper(i,": 8935,
        "success": 8936,
        "(!helper(j,": 8937,
        "'a'))": 8938,
        "(success)": 8939,
        "(idx)": 8940,
        "s[idx]": 8941,
        "s[idx": 8942,
        "(char)((long": 8943,
        "long)'a'": 8944,
        "string(s.begin()": 8945,
        "bigmod(long": 8946,
        "bigmod(a,": 8947,
        "s[i]++)": 8948,
        "(f(i": 8949,
        "k))": 8950,
        "s[s.size()": 8951,
        "(f(0,": 8952,
        "A[N];": 8953,
        "(char)(A[0]": 8954,
        "beginat": 8955,
        "beginat;": 8956,
        "(!t)": 8957,
        "old_t": 8958,
        "old_t)": 8959,
        "oldai": 8960,
        "A[i])": 8961,
        "(beginat": 8962,
        "im": 8963,
        "(im)": 8964,
        "max_idx": 8965,
        "(mark)": 8966,
        "(char)(A[i]": 8967,
        "s[MAXN];": 8968,
        "work2(int": 8969,
        "(char)(s[i]": 8970,
        "s[x]": 8971,
        "work2(x": 8972,
        "work(int": 8973,
        "(s[x]": 8974,
        "s[x]++;": 8975,
        "s[x]);": 8976,
        "work(i);": 8977,
        "relax(int": 8978,
        "(relax(ed,": 8979,
        "s[ed]": 8980,
        "succ": 8981,
        "ne": 8982,
        "ne++)": 8983,
        "(!relax(ne,": 8984,
        "(succ)": 8985,
        "makeChanges(char": 8986,
        "*s,": 8987,
        "whichPosn,": 8988,
        "size,": 8989,
        "adj,": 8990,
        "nadj)": 8991,
        "(whichPosn": 8992,
        "thisChar": 8993,
        "s[whichPosn];": 8994,
        "adj": 8995,
        "s[whichPosn]": 8996,
        "s[whichPosn": 8997,
        "(makeChanges(s,": 8998,
        "whichPosn": 8999,
        "adj))": 9000,
        "thisChar;": 9001,
        "nadj": 9002,
        "nadj));": 9003,
        "nadj))": 9004,
        "c[2000],": 9005,
        "s[2000];": 9006,
        "c[n]": 9007,
        "sc;": 9008,
        "idx)": 9009,
        "(sc[idx]": 9010,
        "sc[idx]": 9011,
        "sc[idx": 9012,
        "sc[idx]++;": 9013,
        "(solve(idx": 9014,
        "solve(idx);": 9015,
        "sc.resize(n);": 9016,
        "sc[i]": 9017,
        "sc[n": 9018,
        "(solve(n": 9019,
        "char('a'": 9020,
        "sc[i]);": 9021,
        "T.size();": 9022,
        "a[s];": 9023,
        "(T[i]": 9024,
        "init": 9025,
        "--ind;": 9026,
        "(init)": 9027,
        "\"abcdefghijklmnopqrstuvwxyz\"[a[i]];": 9028,
        "(a[ind]": 9029,
        "a[ind]": 9030,
        "++a[ind])": 9031,
        "(!(ind": 9032,
        "a[ind": 9033,
        "a[ind--]": 9034,
        "++ind;": 9035,
        "safe(char": 9036,
        "(safe(c,": 9037,
        "ok(int": 9038,
        "tem": 9039,
        "(calc(i))": 9040,
        "tem;": 9041,
        "(ok(i))": 9042,
        "sort(s1.begin(),": 9043,
        "s1.end());": 9044,
        "reverse(s1.begin(),": 9045,
        "x))": 9046,
        "dp": 9047,
        "('a'": 9048,
        "ALPH": 9049,
        "31;": 9050,
        "used[MAX][2][ALPH][ALPH];": 9051,
        "termina": 9052,
        "getChar(long": 9053,
        "upper": 9054,
        "ant1": 9055,
        "30,": 9056,
        "ant2": 9057,
        "(termina)": 9058,
        "(upper": 9059,
        "(used[pos][upper][ant1][ant2])": 9060,
        "used[pos][upper][ant1][ant2]": 9061,
        "ant2)": 9062,
        "(f(pos": 9063,
        "ant2,": 9064,
        "getChar(i);": 9065,
        "(f())": 9066,
        "resp.size()": 9067,
        "resp[i];": 9068,
        "(e)": 9069,
        "strlen(s)": 9070,
        "reverse(string": 9071,
        "mystr)": 9072,
        "mystr.length()": 9073,
        "mystr[i];": 9074,
        "count(str.begin(),": 9075,
        "str.end(),": 9076,
        "str[0]);": 9077,
        "(str.length()": 9078,
        "ms;": 9079,
        "ms": 9080,
        "str[j];": 9081,
        "(reverse(ms)": 9082,
        "ms)": 9083,
        "x[100];": 9084,
        "cin.get(x,": 9085,
        "100);": 9086,
        "strlen(x);": 9087,
        "x[j])": 9088,
        "x[0])": 9089,
        "Sr": 9090,
        "reverse(Sr.begin(),": 9091,
        "Sr.end());": 9092,
        "(count(S.begin(),": 9093,
        "S.end(),": 9094,
        "S.size())": 9095,
        "Sr)": 9096,
        "S.size()": 9097,
        "S.size();": 9098,
        "sort(s.begin(),": 9099,
        "buhuiwen(int": 9100,
        "s[y])": 9101,
        "(buhuiwen(i,": 9102,
        "maxn)": 9103,
        "(maxn": 9104,
        "s.erase(s.end()": 9105,
        "MN": 9106,
        "-1e9": 9107,
        "c2,": 9108,
        "bl": 9109,
        "pr;": 9110,
        "propblem(string": 9111,
        "s1.push_back(s[j]);": 9112,
        "propblem(x);": 9113,
        "ceil(l": 9114,
        "A[j])": 9115,
        "puts(\"0\");": 9116,
        "(flag1)": 9117,
        "sub_str(int": 9118,
        "en)": 9119,
        "S[i];": 9120,
        "works": 9121,
        "sub_str(i,": 9122,
        "sub.size()": 9123,
        "(sub[k]": 9124,
        "sub[sub.size()": 9125,
        "sub.size();": 9126,
        "(S[i]": 9127,
        "S[S.size()": 9128,
        "(b2)": 9129,
        "(works)": 9130,
        "judge(const": 9131,
        "&s)": 9132,
        "(s[h]": 9133,
        "s[t])": 9134,
        "++h;": 9135,
        "(int)s.size();": 9136,
        "(judge(s))": 9137,
        "a[60];": 9138,
        "a[strlen(a)": 9139,
        "strlen(a))": 9140,
        "strlen(a)": 9141,
        "a[e])": 9142,
        "s.length(),": 9143,
        "(check(a)": 9144,
        "s.replace(s.size()": 9145,
        "\"\\0\");": 9146,
        "mapa;": 9147,
        "mapa[s[i]]": 9148,
        "(mapa.size()": 9149,
        "(name[i]": 9150,
        "name[i": 9151,
        "name[j])": 9152,
        "pan(int": 9153,
        "zs,": 9154,
        "ys;": 9155,
        "zs": 9156,
        "zs;": 9157,
        "s--)": 9158,
        "(zs": 9159,
        "(pan(s,": 9160,
        "(pan(0,": 9161,
        "(s[l": 9162,
        "s[r": 9163,
        "(!check(0,": 9164,
        "(!check(l,": 9165,
        "s2.size()": 9166,
        "sort(s3.begin(),": 9167,
        "s3.end());": 9168,
        "s3.size()": 9169,
        "so_far": 9170,
        "(!f(s.substr(i,": 9171,
        "2e6,": 9172,
        "read_input()": 9173,
        "output()": 9174,
        "read_input(),": 9175,
        "solve(),": 9176,
        "output();": 9177,
        "palindrome(string": 9178,
        "s[l": 9179,
        "t(s.begin()": 9180,
        "s.begin()": 9181,
        "palindrome(t);": 9182,
        "(palindrome(s))": 9183,
        "string(s.begin(),": 9184,
        "sl": 9185,
        "s[len": 9186,
        "flag_a": 9187,
        "(!flag_a)": 9188,
        "(t[k]": 9189,
        "t[m": 9190,
        "rs;": 9191,
        "rs": 9192,
        "reverse(rs.begin(),": 9193,
        "rs.end());": 9194,
        "(rs": 9195,
        "s.erase(s.begin());": 9196,
        "isPalindrome(string": 9197,
        "(s[l++]": 9198,
        "s[r--])": 9199,
        "(int)s.length();": 9200,
        "(!isPalindrome(s,": 9201,
        "INT_MIN)": 9202,
        "s[2": 9203,
        "str[60];": 9204,
        "ispalin(int": 9205,
        "count--)": 9206,
        "str[k])": 9207,
        "palindrome(char": 9208,
        "sameletter(char": 9209,
        "s[60],": 9210,
        "t[60];": 9211,
        "(sameletter(s))": 9212,
        "(!palindrome(s))": 9213,
        "strcpy(t,": 9214,
        "(!palindrome(t))": 9215,
        "strlen(t)": 9216,
        "st.length(),": 9217,
        "mar": 9218,
        "marr": 9219,
        "st[len": 9220,
        "(mar": 9221,
        "(marr": 9222,
        "x[500],": 9223,
        "y[500];": 9224,
        "x[--l];": 9225,
        "x[i])": 9226,
        "a[55],": 9227,
        "b[55],": 9228,
        "c[55];": 9229,
        "(strcmp(a,": 9230,
        "--j;": 9231,
        "MaxN": 9232,
        "1e8;": 9233,
        "mp[s[i]]++;": 9234,
        "(mp[s[0]]": 9235,
        "length,": 9236,
        "maxnum": 9237,
        "exam[100];": 9238,
        "IfHuiwen()": 9239,
        "strlen(exam);": 9240,
        "(exam[i]": 9241,
        "exam[j])": 9242,
        "numx": 9243,
        "exam[numx--])": 9244,
        "memset(exam,": 9245,
        "sizeof(exam));": 9246,
        "exam[flag++]": 9247,
        "str[k];": 9248,
        "(IfHuiwen()": 9249,
        "maxnum)": 9250,
        "pal(string": 9251,
        "(!pal(s))": 9252,
        "(!pal(n))": 9253,
        "n.size()": 9254,
        "flagee": 9255,
        "(!flagee)": 9256,
        "(flagee)": 9257,
        "str[55];": 9258,
        "stack<char>": 9259,
        "strlen(str),": 9260,
        "s.push(str[i]);": 9261,
        "s.top())": 9262,
        "s.pop();": 9263,
        "lat": 9264,
        "(lat": 9265,
        "str[lat])": 9266,
        "--lat;": 9267,
        "m[26];": 9268,
        "m[index]++;": 9269,
        "(m[i]": 9270,
        "s[s.length()": 9271,
        "st.insert(a": 9272,
        "st.size()": 9273,
        "str);": 9274,
        "se.insert(s);": 9275,
        "s1[110],": 9276,
        "s2[110];": 9277,
        "book[110];": 9278,
        "s1[i]": 9279,
        "s2[i];": 9280,
        "s1[j]": 9281,
        "s2[j])": 9282,
        "(book[j])": 9283,
        "set1;": 9284,
        "set2;": 9285,
        "map2;": 9286,
        "cp[101][101];": 9287,
        "mc1;": 9288,
        "mc2;": 9289,
        "malloc_1(string": 9290,
        "(set1.count(a)": 9291,
        "map1[a];": 9292,
        "set1.insert(a);": 9293,
        "map1[a]": 9294,
        "mc1++;": 9295,
        "malloc_2(string": 9296,
        "(set2.count(a)": 9297,
        "map2[a];": 9298,
        "set2.insert(a);": 9299,
        "map2[a]": 9300,
        "mc2++;": 9301,
        "set1.clear();": 9302,
        "set2.clear();": 9303,
        "mc1": 9304,
        "mc2": 9305,
        "map1.clear();": 9306,
        "memset(cp,": 9307,
        "sizeof(cp));": 9308,
        "map2.clear();": 9309,
        "malloc_1(a);": 9310,
        "malloc_2(b);": 9311,
        "(cp[c][d]": 9312,
        "cp[c][d]": 9313,
        "p[s]++;": 9314,
        "p.size()": 9315,
        "(map<string,": 9316,
        "++it)": 9317,
        "c[105],": 9318,
        "zs++;": 9319,
        "asd;": 9320,
        "dsa;": 9321,
        "dataa[105];": 9322,
        "itung": 9323,
        "(z--)": 9324,
        "(asd[a]": 9325,
        "asd[a]": 9326,
        "(dsa[s]": 9327,
        "dsa[s]": 9328,
        "(dataa[asd[a]][dsa[s]]": 9329,
        "dataa[asd[a]][dsa[s]]++;": 9330,
        "itung++;": 9331,
        "m.insert(make_pair(str,": 9332,
        "m.size();": 9333,
        "leaves;": 9334,
        "leaves.insert(l1": 9335,
        "l2);": 9336,
        "leaves.size()": 9337,
        "leafName;": 9338,
        "name);": 9339,
        "leafName.insert(name);": 9340,
        "leafName.size()": 9341,
        "values;": 9342,
        "values.insert(a);": 9343,
        "values.size()": 9344,
        "cek;": 9345,
        "(!cek[s])": 9346,
        "cek[s]": 9347,
        "s.insert(str);": 9348,
        "(int)s.size()": 9349,
        "alana;": 9350,
        "inp,": 9351,
        "inp": 9352,
        "alana.insert(inp);": 9353,
        "alana.size()": 9354,
        "myset;": 9355,
        "myset.clear();": 9356,
        "leaf;": 9357,
        "leaf);": 9358,
        "myset.insert(leaf);": 9359,
        "myset.size()": 9360,
        "str[105][25];": 9361,
        "gets(str[i]);": 9362,
        "(strcmp(str[i],": 9363,
        "solution(vector<string>": 9364,
        "input,": 9365,
        "stack;": 9366,
        "(find(stack.begin(),": 9367,
        "stack.end(),": 9368,
        "stack.end())": 9369,
        "stack.push_back(input[i]);": 9370,
        "stack.size()": 9371,
        "input.push_back(str);": 9372,
        "solution(input,": 9373,
        "total);": 9374,
        "st[102];": 9375,
        "st[i]);": 9376,
        "sort(st": 9377,
        "st[i].size()": 9378,
        "1].size())": 9379,
        "cin.clear();": 9380,
        "strr;": 9381,
        "strr);": 9382,
        "(strr.length()": 9383,
        "(str[strr]": 9384,
        "str[strr]++;": 9385,
        "(itr": 9386,
        "str.begin();": 9387,
        "itr": 9388,
        "str.end();": 9389,
        "itr++)": 9390,
        "pict;": 9391,
        "pict.insert(a": 9392,
        "pict.size()": 9393,
        "m.size()": 9394,
        "maxx,": 9395,
        "s2[10000],": 9396,
        "s1[10000];": 9397,
        "s2[j]": 9398,
        "1e3;": 9399,
        "st.insert(s);": 9400,
        "a[101][3];": 9401,
        "a[i][2];": 9402,
        "(a[i][1]": 9403,
        "a[j][1]": 9404,
        "a[i][2]": 9405,
        "a[j][2])": 9406,
        "map<pair<string,": 9407,
        "string>,": 9408,
        "p(y,": 9409,
        "(a.find(p)": 9410,
        "a.end())": 9411,
        "a[p]": 9412,
        "sir[1000];": 9413,
        "nr;": 9414,
        "(s.find(a)": 9415,
        "nr++;": 9416,
        "s.insert(a);": 9417,
        "nr": 9418,
        "s.insert(a": 9419,
        "(!mp.count(str))": 9420,
        "mp[str]": 9421,
        "s[k++]": 9422,
        "1e-12;": 9423,
        "(m[make_pair(s,": 9424,
        "str)]": 9425,
        "m[make_pair(s,": 9426,
        "str)]++;": 9427,
        "arr[i].first": 9428,
        "arr[i].second;": 9429,
        "(arr[i].second": 9430,
        "\"rat\")": 9431,
        "\"woman\"": 9432,
        "arr[i].second": 9433,
        "\"child\")": 9434,
        "\"man\")": 9435,
        "\"captain\")": 9436,
        "urut[7]": 9437,
        "{\"rat\",": 9438,
        "\"woman\",": 9439,
        "\"child\",": 9440,
        "\"man\",": 9441,
        "\"captain\"};": 9442,
        "nama[105],": 9443,
        "tipe[105];": 9444,
        "nama[a]": 9445,
        "tipe[a];": 9446,
        "(tipe[b]": 9447,
        "urut[a]": 9448,
        "tipe[b]": 9449,
        "urut[a": 9450,
        "nama[b]": 9451,
        "urut[a])": 9452,
        "s[1000][500];": 9453,
        "b[1000];": 9454,
        "kd[500];": 9455,
        "kd;": 9456,
        "(strcmp(kd,": 9457,
        "s1[n],": 9458,
        "name[101][11];": 9459,
        "pos[101][6];": 9460,
        "pos[i];": 9461,
        "(strcmp(pos[i],": 9462,
        "num[i]": 9463,
        "\"woman\")": 9464,
        "name[i]": 9465,
        "a[i].first": 9466,
        "a[i].second;": 9467,
        "(a[i].second": 9468,
        "v.push_back(a[i].first);": 9469,
        "q[10000],": 9470,
        "w[10000],": 9471,
        "e[10000],": 9472,
        "r[10000];": 9473,
        "w[s]": 9474,
        "e[d]": 9475,
        "r[f]": 9476,
        "q[i]": 9477,
        "w[i]": 9478,
        "function_sort_down(int": 9479,
        "mas[5000000],": 9480,
        "number,": 9481,
        "rat[105],": 9482,
        "woman[210],": 9483,
        "man[105],": 9484,
        "captain[105],": 9485,
        "maxe;": 9486,
        "number;": 9487,
        "rat[i]": 9488,
        "woman[i]": 9489,
        "man[i]": 9490,
        "captain[i]": 9491,
        "(rat[i]": 9492,
        "number": 9493,
        "(woman[i]": 9494,
        "(man[i]": 9495,
        "(captain[i]": 9496,
        "rats;": 9497,
        "WandC;": 9498,
        "men;": 9499,
        "captain;": 9500,
        "rats.push_back(s);": 9501,
        "WandC.push_back(s);": 9502,
        "men.push_back(s);": 9503,
        "captain.push_back(s);": 9504,
        "rats.size();": 9505,
        "rats[i]": 9506,
        "WandC.size();": 9507,
        "WandC[i]": 9508,
        "men.size();": 9509,
        "men[i]": 9510,
        "captain.size();": 9511,
        "2],": 9512,
        "s1[n": 9513,
        "s2[n": 9514,
        "s3[n": 9515,
        "z1": 9516,
        "p[i].first": 9517,
        "p[i].second;": 9518,
        "(p[i].second": 9519,
        "p[i].first;": 9520,
        "p[i].second": 9521,
        "s1[y]": 9522,
        "s2[z]": 9523,
        "s3[z1]": 9524,
        "z1++;": 9525,
        "z1;": 9526,
        "s3[j]": 9527,
        "s1};": 9528,
        "{2,": 9529,
        "{3,": 9530,
        "{4,": 9531,
        "(p[j].first": 9532,
        "p[j].second": 9533,
        "name,": 9534,
        "spec;": 9535,
        "name.assign(n,": 9536,
        "\"0\");": 9537,
        "spec.assign(n,": 9538,
        "spec[i];": 9539,
        "(spec[i]": 9540,
        "spec[i]": 9541,
        "kw,": 9542,
        "vector<string>::iterator": 9543,
        "kw.push_back(s);": 9544,
        "r.push_back(s);": 9545,
        "m.push_back(s);": 9546,
        "c.push_back(s);": 9547,
        "r.begin();": 9548,
        "r.end();": 9549,
        "*it": 9550,
        "kw.begin();": 9551,
        "kw.end();": 9552,
        "c.begin();": 9553,
        "c.end();": 9554,
        "crew[4];": 9555,
        "feature;": 9556,
        "(feature": 9557,
        "crew[0].push_back(name);": 9558,
        "feature": 9559,
        "crew[1].push_back(name);": 9560,
        "crew[2].push_back(name);": 9561,
        "crew[3].push_back(name);": 9562,
        "crew[i].size();": 9563,
        "crew[i][j]": 9564,
        "\"child\"": 9565,
        "s[n],": 9566,
        "d[n];": 9567,
        "d[i];": 9568,
        "queue<string>": 9569,
        "ans[5];": 9570,
        "t[15];": 9571,
        "(t[2]": 9572,
        "ans[1].push(s);": 9573,
        "'m'": 9574,
        "'i')": 9575,
        "ans[2].push(s);": 9576,
        "ans[3].push(s);": 9577,
        "ans[4].push(s);": 9578,
        "(!ans[i].empty())": 9579,
        "ans[i].front();": 9580,
        "ans[i].pop();": 9581,
        "name[105];": 9582,
        "status[105];": 9583,
        "str1[105];": 9584,
        "str2[105];": 9585,
        "str3[105];": 9586,
        "status[i];": 9587,
        "(status[j]": 9588,
        "str1[q]": 9589,
        "status[j]": 9590,
        "str2[w]": 9591,
        "captain": 9592,
        "str3[t]": 9593,
        "str1[i]": 9594,
        "str2[i]": 9595,
        "str3[i]": 9596,
        "a[100][2];": 9597,
        "a[i][1];": 9598,
        "1][1];": 9599,
        "1][1]": 9600,
        "a[i][0];": 9601,
        "1][0];": 9602,
        "1][0]": 9603,
        "(a[j": 9604,
        "a[j][1];": 9605,
        "a[j][0];": 9606,
        "a[j][0]": 9607,
        "crew;": 9608,
        "rat,": 9609,
        "woch,": 9610,
        "men,": 9611,
        "cap;": 9612,
        "(crew": 9613,
        "rat.push_back(name);": 9614,
        "crew": 9615,
        "woch.push_back(name);": 9616,
        "men.push_back(name);": 9617,
        "cap.push_back(name);": 9618,
        "rat.size();": 9619,
        "woch.size();": 9620,
        "woch[i]": 9621,
        "cap.size();": 9622,
        "cap[i]": 9623,
        "arr[n][2];": 9624,
        "arr[i][0]": 9625,
        "arr[i][1];": 9626,
        "(arr[i][1]": 9627,
        "arr[i][1]": 9628,
        "\"2\";": 9629,
        "\"3\";": 9630,
        "swap(arr[i][0],": 9631,
        "swap(arr[i][1],": 9632,
        "1][1]);": 9633,
        "b[100];": 9634,
        "pple[100];": 9635,
        "pple[i]": 9636,
        "s[100],": 9637,
        "name[101],": 9638,
        "rank;": 9639,
        "rat[100],": 9640,
        "wc[100],": 9641,
        "men[100],": 9642,
        "cap[100];": 9643,
        "(rank": 9644,
        "cap[c]": 9645,
        "rank": 9646,
        "wc[w]": 9647,
        "men[m]": 9648,
        "rat[r]": 9649,
        "name[rat[i]]": 9650,
        "name[wc[i]]": 9651,
        "name[men[i]]": 9652,
        "name[cap[i]]": 9653,
        "position,": 9654,
        "captin;": 9655,
        "rat;": 9656,
        "wc;": 9657,
        "man;": 9658,
        "wc.push_back(name);": 9659,
        "man.push_back(name);": 9660,
        "captin": 9661,
        "wc.size();": 9662,
        "wc[i]": 9663,
        "man.size();": 9664,
        "priority[101];": 9665,
        "status;": 9666,
        "CASE;": 9667,
        "(status": 9668,
        "CASE": 9669,
        "status": 9670,
        "priority[i]": 9671,
        "make_pair(CASE,": 9672,
        "sort(priority,": 9673,
        "priority": 9674,
        "name[priority[i].second]": 9675,
        "s[110],": 9676,
        "t[110];": 9677,
        "last;": 9678,
        "women,": 9679,
        "rat.push_back(s1);": 9680,
        "women.push_back(s1);": 9681,
        "men.push_back(s1);": 9682,
        "rat[j]": 9683,
        "women.size();": 9684,
        "women[k]": 9685,
        "men[l]": 9686,
        "str1[n],": 9687,
        "str2[n];": 9688,
        "str2[i];": 9689,
        "(str2[i]": 9690,
        "str1[a]": 9691,
        "a[0].push_back(x);": 9692,
        "a[1].push_back(x);": 9693,
        "a[2].push_back(x);": 9694,
        "a[3].push_back(x);": 9695,
        "a[i].size();": 9696,
        "ut[4];": 9697,
        "ut[0].push_back(a);": 9698,
        "ut[1].push_back(a);": 9699,
        "ut[2].push_back(a);": 9700,
        "ut[3].push_back(a);": 9701,
        "ut[i].size();": 9702,
        "ut[i][j]": 9703,
        "x[100000];": 9704,
        "speed()": 9705,
        "multimap<string,": 9706,
        "speed();": 9707,
        "fun(vector<string>": 9708,
        "&v)": 9709,
        "r.push_back(a);": 9710,
        "'w'": 9711,
        "w.push_back(a);": 9712,
        "'m')": 9713,
        "m.push_back(a);": 9714,
        "c.push_back(a);": 9715,
        "fun(r);": 9716,
        "fun(w);": 9717,
        "fun(m);": 9718,
        "fun(c);": 9719,
        "woman;": 9720,
        "child;": 9721,
        "woman.push_back(name);": 9722,
        "woman.size();": 9723,
        "name[n": 9724,
        "5],": 9725,
        "tag[n": 9726,
        "tag[i];": 9727,
        "tag[j]": 9728,
        "name[j]": 9729,
        "2e4": 9730,
        "OO": 9731,
        "1e-6;": 9732,
        "captain,": 9733,
        "child,": 9734,
        "child.push_back(s1);": 9735,
        "man.push_back(s1);": 9736,
        "captain.push_back(s1);": 9737,
        "child.size();": 9738,
        "child[j]": 9739,
        "man[m]": 9740,
        "captain[k]": 9741,
        "status(n),": 9742,
        "name(n);": 9743,
        "(status[i]": 9744,
        "status[i]": 9745,
        "min(p": 9746,
        "(s[p]": 9747,
        "ans[110];": 9748,
        "memset(ans,": 9749,
        "ans[1]": 9750,
        "min(ans[i],": 9751,
        "(ans[n]": 9752,
        "0x3f3f3f3f)": 9753,
        "ans[n]": 9754,
        "\"-1\"": 9755,
        "k[101];": 9756,
        "getchar()": 9757,
        "(!k[1]": 9758,
        "!k[n])": 9759,
        "(k[i])": 9760,
        "(k[j])": 9761,
        "min(a[j],": 9762,
        "1061109567)": 9763,
        "v(n,": 9764,
        "1e9);": 9765,
        "min(v[i],": 9766,
        "1e9)": 9767,
        "101;": 9768,
        "dp[MAXN][MAXN];": 9769,
        "used[MAXN][MAXN];": 9770,
        "flower[MAXN];": 9771,
        "pasos)": 9772,
        "pasos;": 9773,
        "(used[position][pasos])": 9774,
        "dp[position][pasos];": 9775,
        "flower[position": 9776,
        "f(position": 9777,
        "pasos": 9778,
        "used[position][pasos]": 9779,
        "dp[position][pasos]": 9780,
        "flower[i];": 9781,
        "f(1,": 9782,
        "INT_MAX)": 9783,
        "d]": 9784,
        "dist[101];": 9785,
        "memset(dist,": 9786,
        "0x3f3f3f3f,": 9787,
        "sizeof(dist));": 9788,
        "dist[0]": 9789,
        "dist[j]": 9790,
        "min(dist[j],": 9791,
        "dist[i]": 9792,
        "(dist[n": 9793,
        "0x3f3f3f3f": 9794,
        "dist[n": 9795,
        "A[200];": 9796,
        "dp[n];": 9797,
        "dp[i]": 9798,
        "dp[0]": 9799,
        "min(dp[j]": 9800,
        "dp[i]);": 9801,
        "(dp[n": 9802,
        "dp[n": 9803,
        "L.push_back(i);": 9804,
        "dp[L.size()];": 9805,
        "memset(dp,": 9806,
        "sizeof(dp));": 9807,
        "L.size();": 9808,
        "L.size()": 9809,
        "L[j]": 9810,
        "L[i]": 9811,
        "(dp[j]": 9812,
        "dp[j]": 9813,
        "min(dp[i]": 9814,
        "dp[j]);": 9815,
        "dp[i": 9816,
        "dp[L.size()": 9817,
        "vis[200],": 9818,
        "lvl[200];": 9819,
        "bfs()": 9820,
        "Q.push(0);": 9821,
        "lvl[0]": 9822,
        "(!Q.empty())": 9823,
        "Q.front();": 9824,
        "lvl[u];": 9825,
        "lvl[i]": 9826,
        "lvl[u]": 9827,
        "Q.push(i);": 9828,
        "adj[N],": 9829,
        "l(N,": 9830,
        "vis(N);": 9831,
        "vis[s]": 9832,
        "q.push(s);": 9833,
        "l[s]": 9834,
        "q.front();": 9835,
        "adj[p].size();": 9836,
        "(vis[adj[p][i]]": 9837,
        "l[adj[p][i]]": 9838,
        "min(l[adj[p][i]],": 9839,
        "l[p]": 9840,
        "vis[adj[p][i]]": 9841,
        "q.push(adj[p][i]);": 9842,
        "adj[i].push_back(j),": 9843,
        "adj[j].push_back(i);": 9844,
        "(l[n": 9845,
        "l[n": 9846,
        "dp[101];": 9847,
        "q.push(i);": 9848,
        "(q.front()": 9849,
        "(dp[q.front()]": 9850,
        "recurse(string": 9851,
        "dp[])": 9852,
        "min(dp[j],": 9853,
        "recurse(s,": 9854,
        "dp);": 9855,
        "jump(char": 9856,
        "x[],": 9857,
        "jump(s,": 9858,
        "maxid;": 9859,
        "maxid": 9860,
        "dist(n,": 9861,
        "camino;": 9862,
        "kiu;": 9863,
        "kiu.push(0);": 9864,
        "(!kiu.empty())": 9865,
        "kiu.front();": 9866,
        "kiu.pop();": 9867,
        "(camino[a": 9868,
        "dist[a": 9869,
        "kiu.push(a": 9870,
        "dist[a]": 9871,
        "dp[105];": 9872,
        "min(dp[i],": 9873,
        "step(n);": 9874,
        "step[i]": 9875,
        "step[0]": 9876,
        "min(step[i],": 9877,
        "step[j]": 9878,
        "(step[n": 9879,
        "step[n": 9880,
        "mmap[105];": 9881,
        "gets(mmap);": 9882,
        "(mmap[a": 9883,
        "(mmap[i]": 9884,
        "k:;": 9885,
        "inf;": 9886,
        "\"-1\\n\"": 9887,
        "dist.push(i);": 9888,
        "fill(dp,": 9889,
        "1e6);": 9890,
        "dist.front())": 9891,
        "dist.pop();": 9892,
        "dp[dist.front()]": 9893,
        "1e6)": 9894,
        "\"-1\\n\";": 9895,
        "(s[pos": 9896,
        "data[MAXN];": 9897,
        "dp[MAXN];": 9898,
        "dp[1]": 9899,
        "(data[i]": 9900,
        "min(i": 9901,
        "(data[j]": 9902,
        "(dp[n]": 9903,
        "dp[n]": 9904,
        "1;)": 9905,
        "min(n": 9906,
        "(v[x]": 9907,
        "shu[1000];": 9908,
        "shu;": 9909,
        "(shu[j]": 9910,
        "(str[i": 9911,
        "dp[105],": 9912,
        "INT_MAX": 9913,
        "ans(string": 9914,
        "(current": 9915,
        "s[current": 9916,
        "ans(s,": 9917,
        "p[103];": 9918,
        "fill(p,": 9919,
        "103,": 9920,
        "min(p[i": 9921,
        "j],": 9922,
        "(p[n": 9923,
        "(dp[i": 9924,
        "1000000)": 9925,
        "(ar[i]": 9926,
        "count++)": 9927,
        "(ar[j]": 9928,
        "\"-1\";": 9929,
        "dp[N];": 9930,
        "inf)": 9931,
        "dp[110];": 9932,
        "10000;": 9933,
        "10000)": 9934,
        "MJ(string": 9935,
        "nums,": 9936,
        "jumps[n];": 9937,
        "jumps[i]": 9938,
        "jumps[0]": 9939,
        "result[n];": 9940,
        "result[i]": 9941,
        "result[0]": 9942,
        "result[2];": 9943,
        "(nums[i]": 9944,
        "(nums[j]": 9945,
        "(jumps[j]": 9946,
        "jumps[i])": 9947,
        "jumps[j]": 9948,
        "(result[i]": 9949,
        "jumps[n": 9950,
        "minjumps": 9951,
        "MJ(nums,": 9952,
        "nmax": 9953,
        "v[nmax];": 9954,
        "visited[nmax][nmax];": 9955,
        "visited[i][j]": 9956,
        "(!visited[v[i][k]][j": 9957,
        "dfs(v[i][k],": 9958,
        "v[i].push_back(i": 9959,
        "dfs(0,": 9960,
        "100)": 9961,
        "u[1005],": 9962,
        "gov[1005];": 9963,
        "u[x]": 9964,
        "a[x].size();": 9965,
        "(!u[a[x][i]])": 9966,
        "dfs(a[x][i]);": 9967,
        "memset(u,": 9968,
        "sizeof(u));": 9969,
        "gov[i];": 9970,
        "a[x].push_back(y);": 9971,
        "a[y].push_back(x);": 9972,
        "dfs(gov[i]);": 9973,
        "f[1000];": 9974,
        "(f[x]": 9975,
        "find(f[x]);": 9976,
        "unionn(int": 9977,
        "find(a);": 9978,
        "find(b);": 9979,
        "s[1000],": 9980,
        "num[1000];": 9981,
        "unionn(x,": 9982,
        "num[find(i)]++;": 9983,
        "num[s[i]]": 9984,
        "num[find(s[i])];": 9985,
        "max(Max,": 9986,
        "num[s[i]]);": 9987,
        "num[s[i]];": 9988,
        "(num[s[i]])": 9989,
        "(num[s[i]]": 9990,
        "(ss": 9991,
        "pre[1005],": 9992,
        "tree[1005],": 9993,
        "ki[1005];": 9994,
        "gover[1005];": 9995,
        "nogover;": 9996,
        "pre[x]": 9997,
        "find(pre[x]);": 9998,
        "Union(int": 9999,
        "fa": 10000,
        "find(x),": 10001,
        "fb": 10002,
        "find(y);": 10003,
        "(fa": 10004,
        "fb)": 10005,
        "pre[fa]": 10006,
        "fb;": 10007,
        "memset(tree,": 10008,
        "sizeof(tree));": 10009,
        "memset(gover,": 10010,
        "sizeof(gover));": 10011,
        "nogover.clear();": 10012,
        "ki[i];": 10013,
        "Union(a,": 10014,
        "gover[find(ki[i])]": 10015,
        "tree[find(i)]++;": 10016,
        "(find(i)": 10017,
        "(gover[i])": 10018,
        "tree[i]": 10019,
        "tree[max]": 10020,
        "nogover.push_back(tree[i]);": 10021,
        "(tree[i]": 10022,
        "nogover.size();": 10023,
        "nogover[i]": 10024,
        "nogover[j];": 10025,
        "tree[max];": 10026,
        "father[1005];": 10027,
        "father[x]": 10028,
        "find(father[x]);": 10029,
        "node[1005];": 10030,
        "fathercnt[1005];": 10031,
        "isgro[1005];": 10032,
        "memset(isgro,": 10033,
        "sizeof(isgro));": 10034,
        "gro;": 10035,
        "father[j]": 10036,
        "isgro[g]": 10037,
        "gro": 10038,
        "fathercnt[j]": 10039,
        "(isgro[p])": 10040,
        "find(q);": 10041,
        "(father[find(q)]": 10042,
        "father[find(p)])": 10043,
        "father[find(q)]": 10044,
        "father[find(p)];": 10045,
        "fathercnt[find(p)]": 10046,
        "fathercnt[x];": 10047,
        "fathercnt[x]": 10048,
        "(isgro[q])": 10049,
        "find(p);": 10050,
        "(father[find(p)]": 10051,
        "father[find(q)])": 10052,
        "father[find(p)]": 10053,
        "father[find(q)];": 10054,
        "fathercnt[find(q)]": 10055,
        "(isgro[father[find(p)]])": 10056,
        "maxfather": 10057,
        "strunity;": 10058,
        "(fathercnt[i]": 10059,
        "maxfather)": 10060,
        "fathercnt[i];": 10061,
        "strunity": 10062,
        "maxgro": 10063,
        "strgro": 10064,
        "(isgro[i]": 10065,
        "fathercnt[i]": 10066,
        "maxgro)": 10067,
        "(isgro[find(i)]": 10068,
        "fathercnt[strgro]": 10069,
        "(isgro[i])": 10070,
        "2e9": 10071,
        "g[1005];": 10072,
        "used[1005];": 10073,
        "deg[1005];": 10074,
        "isHome[1005];": 10075,
        "ver": 10076,
        "used[v]": 10077,
        "deg[v];": 10078,
        "ver++;": 10079,
        "(isHome[v])": 10080,
        "g[v].size();": 10081,
        "(!used[g[v][i]])": 10082,
        "dfs(g[v][i]);": 10083,
        "home[k];": 10084,
        "isHome[x]": 10085,
        "g[u].push_back(v);": 10086,
        "g[v].push_back(u);": 10087,
        "deg[u]++;": 10088,
        "deg[v]++;": 10089,
        "(!used[i])": 10090,
        "(ver": 10091,
        "no.push_back(ver);": 10092,
        "ok.push_back(ver);": 10093,
        "ok.size();": 10094,
        "sort((no).begin(),": 10095,
        "(no).end());": 10096,
        "no[no.size()": 10097,
        "edges[1004][1004];": 10098,
        "degree[1004];": 10099,
        "cap,": 10100,
        "*numedges,": 10101,
        "*numver,": 10102,
        "numedges[cap]": 10103,
        "degree[i];": 10104,
        "numver[cap]++;": 10105,
        "visited,": 10106,
        "numedges,": 10107,
        "numver,": 10108,
        "cap[k];": 10109,
        "cap[i];": 10110,
        "cap[i]--;": 10111,
        "degree[i]": 10112,
        "degree[a]++;": 10113,
        "degree[b]++;": 10114,
        "numedges[k": 10115,
        "numver[k": 10116,
        "numedges[i]": 10117,
        "numver[i]": 10118,
        "dfs(cap[i],": 10119,
        "degree[cap[i]];": 10120,
        "numedges[k]": 10121,
        "numver[k]++;": 10122,
        "maxindex": 10123,
        "(numver[i]": 10124,
        "maxm)": 10125,
        "numver[i];": 10126,
        "maxindex)": 10127,
        "numver[maxindex]": 10128,
        "numver[k];": 10129,
        "numedges[maxindex]": 10130,
        "p[1005];": 10131,
        "f[1005];": 10132,
        "uion(int": 10133,
        "f1,": 10134,
        "f2;": 10135,
        "find(p1);": 10136,
        "find(p2);": 10137,
        "(f1": 10138,
        "f2)": 10139,
        "f[f1]": 10140,
        "c[1005];": 10141,
        "uion(p1,": 10142,
        "p2);": 10143,
        "p[find(i)]++;": 10144,
        "lef": 10145,
        "p[c[i]]": 10146,
        "p[find(c[i])];": 10147,
        "p[c[i]]);": 10148,
        "p[c[i]];": 10149,
        "(p[c[i]]": 10150,
        "(p[c[i]])": 10151,
        "(lef": 10152,
        "clear()": 10153,
        "memset(g,": 10154,
        "sizeof(g));": 10155,
        "clear();": 10156,
        "gov;": 10157,
        "g[gov]": 10158,
        "(g[x]": 10159,
        "f[find(y)]": 10160,
        "(g[y]": 10161,
        "f[find(x)]": 10162,
        "(g[find(x)]": 10163,
        "f[find(x)];": 10164,
        "(g[find(y)]": 10165,
        "f[find(y)];": 10166,
        "!g[j]": 10167,
        "f[find(j)]": 10168,
        "(!g[i]": 10169,
        "!g[f[find(i)]])": 10170,
        "pre[100005],": 10171,
        "cnt[100005];": 10172,
        "cap[100005];": 10173,
        "(pre[x]": 10174,
        "find(pre[x]));": 10175,
        "find(a),": 10176,
        "cnt[fb]": 10177,
        "cnt[fa];": 10178,
        "c[100005],": 10179,
        "memset(cap,": 10180,
        "sizeof(cap));": 10181,
        "uion(u,": 10182,
        "cap[find(c[i])]": 10183,
        "(cap[i])": 10184,
        "cnt[i]);": 10185,
        "mp.push_back(cnt[i]);": 10186,
        "mp.size();": 10187,
        "mp[i]": 10188,
        "mp[j];": 10189,
        "mp[i];": 10190,
        "fa[202002];": 10191,
        "sum[202002];": 10192,
        "c[202002];": 10193,
        "max(int": 10194,
        "findfa(int": 10195,
        "(fa[x]": 10196,
        "findfa(fa[x]);": 10197,
        "joint(int": 10198,
        "rx": 10199,
        "findfa(x);": 10200,
        "ry": 10201,
        "findfa(y);": 10202,
        "(rx": 10203,
        "ry)": 10204,
        "fa[rx]": 10205,
        "ry;": 10206,
        "sum[ry]": 10207,
        "sum[rx];": 10208,
        "vis[202002];": 10209,
        "vec.clear();": 10210,
        "sum[i]": 10211,
        "joint(x,": 10212,
        "vis[findfa(c[i])]": 10213,
        "(fa[i]": 10214,
        "sum[i]);": 10215,
        "vec.push_back(sum[i]);": 10216,
        "(sum[i]": 10217,
        "vec[j];": 10218,
        "v[1001],": 10219,
        "ll;": 10220,
        "vis[1001];": 10221,
        "mp[1001];": 10222,
        "bfs(long": 10223,
        "queue<long": 10224,
        "vis[r]": 10225,
        "q.push(r);": 10226,
        "p.push_back(r);": 10227,
        "v[t].begin();": 10228,
        "v[t].end();": 10229,
        "*l;": 10230,
        "(vis[u]": 10231,
        "q.push(u);": 10232,
        "p.push_back(u);": 10233,
        "cou,": 10234,
        "nas;": 10235,
        "ara[k];": 10236,
        "pq[m];": 10237,
        "pq[i": 10238,
        "1].first": 10239,
        "1].second": 10240,
        "bfs(ara[i]);": 10241,
        "p.begin();": 10242,
        "p.end();": 10243,
        "(ll": 10244,
        "v[f].begin();": 10245,
        "ll": 10246,
        "v[f].end();": 10247,
        "ll++)": 10248,
        "*ll;": 10249,
        "(mp[f][r]": 10250,
        "mp[f][r]": 10251,
        "mp[r][f]": 10252,
        "cou);": 10253,
        "p.clear();": 10254,
        "nas": 10255,
        "(nas": 10256,
        "((o": 10257,
        "(vis[pq[i].first]": 10258,
        "nas--;": 10259,
        "v[1100];": 10260,
        "visited[1100];": 10261,
        "edges": 10262,
        "edge": 10263,
        "parent)": 10264,
        "visited[x]": 10265,
        "(!visited[v[x][i]])": 10266,
        "dfs(v[x][i],": 10267,
        "home;": 10268,
        "home.push_back(x);": 10269,
        "(!visited[home[i]])": 10270,
        "node": 10271,
        "dfs(home[i],": 10272,
        "edges;": 10273,
        "node);": 10274,
        "((node": 10275,
        "(node))": 10276,
        "node;": 10277,
        "sum))": 10278,
        "edge);": 10279,
        "U(int": 10280,
        "U(x,": 10281,
        "ind,": 10282,
        "a[1009],": 10283,
        "visited[1005],": 10284,
        "s[1005],": 10285,
        "adj[1005];": 10286,
        "visited[u]": 10287,
        "s[x].push_back(u);": 10288,
        "st.insert(u);": 10289,
        "adj[u].size();": 10290,
        "(visited[adj[u][i]]": 10291,
        "DFS(adj[u][i],": 10292,
        "adj[u].push_back(v);": 10293,
        "adj[v].push_back(u);": 10294,
        "DFS(a[i],": 10295,
        "s[a[i]].size();": 10296,
        "adj[s[a[i]][j]].size();": 10297,
        "(st.find(i)": 10298,
        "adj[i].size();": 10299,
        "(mx": 10300,
        "dx[8]": 10301,
        "dy[8]": 10302,
        "v[1005];": 10303,
        "vis[1005];": 10304,
        "dd[1005];": 10305,
        "(dd[s])": 10306,
        "v[s].size();": 10307,
        "(!vis[v[s][i]])": 10308,
        "dfs(v[s][i]);": 10309,
        "dd[a]": 10310,
        "(m1--)": 10311,
        "vec.push_back(cnt);": 10312,
        "maxx++;": 10313,
        "num[1005];": 10314,
        "r[1005];": 10315,
        "(r[x]": 10316,
        "r[x]": 10317,
        "find(r[x]);": 10318,
        "setunion(int": 10319,
        "find(x);": 10320,
        "r[rx]": 10321,
        "setunion(x,": 10322,
        "num[gov[i]]": 10323,
        "num[find(gov[i])];": 10324,
        "max(maxs,": 10325,
        "num[gov[i]]);": 10326,
        "num[gov[i]];": 10327,
        "(num[gov[i]]": 10328,
        "maxs)": 10329,
        "(maxs": 10330,
        "d[1005];": 10331,
        "need)": 10332,
        "fill": 10333,
        "d[1001],": 10334,
        "maxn;": 10335,
        "dis[1200],": 10336,
        "sup[1200];": 10337,
        "dis[i];": 10338,
        "sup[i];": 10339,
        "tank": 10340,
        "sup[0];": 10341,
        "sup[m]": 10342,
        "(tank": 10343,
        "dis[i": 10344,
        "(sup[i]": 10345,
        "mn)": 10346,
        "d[3010],": 10347,
        "s[3010];": 10348,
        "is": 10349,
        "bak": 10350,
        "(is": 10351,
        "s[is];": 10352,
        "s[g]": 10353,
        "s[is])": 10354,
        "dsum": 10355,
        "d[is];": 10356,
        "(dsum": 10357,
        "bak)": 10358,
        "dsum;": 10359,
        "is;": 10360,
        "dist[MAXN];": 10361,
        "fuel[MAXN];": 10362,
        "dist[i];": 10363,
        "fuel[i];": 10364,
        "fuel[i]);": 10365,
        "d[1010],": 10366,
        "s[1010];": 10367,
        "d[i])": 10368,
        "d[i]);": 10369,
        "c[MAXN],": 10370,
        "acum": 10371,
        "pq.push(S);": 10372,
        "(C": 10373,
        "acum)": 10374,
        "acum;": 10375,
        "many": 10376,
        "ceil(need": 10377,
        "((double)pq.top()));": 10378,
        "2147483647,": 10379,
        "dist[1010],": 10380,
        "bak[1010];": 10381,
        "dist_sum": 10382,
        "bak[i];": 10383,
        "mybak": 10384,
        "cur++)": 10385,
        "bak[cur];": 10386,
        "(bak[cur]": 10387,
        "best)": 10388,
        "(mybak": 10389,
        "dist[cur])": 10390,
        "best;": 10391,
        "dist[cur];": 10392,
        "maxn,": 10393,
        "t0,": 10394,
        "d[1005],": 10395,
        "sum1)": 10396,
        "t0": 10397,
        "(abs(sum2": 10398,
        "sum1))": 10399,
        "t0++;": 10400,
        "t0;": 10401,
        "t0);": 10402,
        "d[1500],": 10403,
        "s[1500];": 10404,
        "maxi,": 10405,
        "bool(nd": 10406,
        "dist(n);": 10407,
        "fuel(n);": 10408,
        "q.push(fuel[i]);": 10409,
        "dist[i])": 10410,
        "maxm;": 10411,
        "d[2002],": 10412,
        "s[2002];": 10413,
        "pet": 10414,
        "max(maxm,": 10415,
        "(pet": 10416,
        "req": 10417,
        "pet;": 10418,
        "(req": 10419,
        "s[1001],": 10420,
        "solution": 10421,
        "s[t];": 10422,
        "distance": 10423,
        "freefuel": 10424,
        "s[t]": 10425,
        "distance)": 10426,
        "d[t];": 10427,
        "ds[1000];": 10428,
        "ss[1000];": 10429,
        "ds[i];": 10430,
        "ss[i];": 10431,
        "time": 10432,
        "fuel": 10433,
        "ss[i]);": 10434,
        "(fuel": 10435,
        "(!b)": 10436,
        "c[1000],": 10437,
        "d[1000],": 10438,
        "(int(i)": 10439,
        "oil": 10440,
        "(oil": 10441,
        "req;": 10442,
        "1007;": 10443,
        "d[N];": 10444,
        "timer": 10445,
        "bz": 10446,
        "mxl": 10447,
        "max(mxl,": 10448,
        "(bz": 10449,
        "mxl;": 10450,
        "d[m];": 10451,
        "s[m];": 10452,
        "dp[m];": 10453,
        "dp[i];": 10454,
        "fuel;": 10455,
        "dif;": 10456,
        "d[1004],": 10457,
        "s[1004];": 10458,
        "d[N],": 10459,
        "s[N],": 10460,
        "Ans,": 10461,
        "d[i],": 10462,
        "Ans": 10463,
        "D(m),": 10464,
        "second(m);": 10465,
        "D[i];": 10466,
        "second[i];": 10467,
        "second[0],": 10468,
        "tm": 10469,
        "second[i]);": 10470,
        "(D[i]": 10471,
        "fuel)": 10472,
        "((D[i]": 10473,
        "ttl": 10474,
        "d[m],": 10475,
        "tiempo": 10476,
        "maxi);": 10477,
        "falta": 10478,
        "(falta": 10479,
        "falta++;": 10480,
        "dist(m);": 10481,
        "gas(m);": 10482,
        "gas[i];": 10483,
        "gas[0];": 10484,
        "actual": 10485,
        "max(G,": 10486,
        "gas[i]);": 10487,
        "(actual": 10488,
        "d[1000": 10489,
        "s[1000": 10490,
        "big": 10491,
        "etime": 10492,
        "liter": 10493,
        "load": 10494,
        "big)": 10495,
        "(load": 10496,
        "liter)": 10497,
        "load;": 10498,
        "ceil(double(load": 10499,
        "double(big))": 10500,
        "d[300300],": 10501,
        "second[300300];": 10502,
        "ANS": 10503,
        "second[1];": 10504,
        "(second[j]": 10505,
        "second[pos])": 10506,
        "d[j];": 10507,
        "second[j];": 10508,
        "max(need,": 10509,
        "CUR": 10510,
        "(need": 10511,
        "second[pos]": 10512,
        "CUR;": 10513,
        "second[w];": 10514,
        "distance(m),": 10515,
        "cap(m);": 10516,
        "distance[i];": 10517,
        "cap[i]);": 10518,
        "distance[i])": 10519,
        "INFLL": 10520,
        "0x3f3f3f3f3f3f3f3fLL;": 10521,
        "d[maxn],": 10522,
        "mx[maxn],": 10523,
        "mx[i]": 10524,
        "max(mx[i": 10525,
        "s[1];": 10526,
        "mx[i],": 10527,
        "s[1002],": 10528,
        "d[1002];": 10529,
        "sup)": 10530,
        "s[p]": 10531,
        "s[p];": 10532,
        "ans[1005],": 10533,
        "(s[y]": 10534,
        "s[y];": 10535,
        "(d[j": 10536,
        "d[j": 10537,
        "s[f]": 10538,
        "ans[j]": 10539,
        "ans[j": 10540,
        "s[f];": 10541,
        "((e": 10542,
        "ans[m": 10543,
        "sufmax[1005],": 10544,
        "mxpos[1005],": 10545,
        "pred[1005];": 10546,
        "sufmax[i": 10547,
        "mxpos[i]": 10548,
        "sufmax[i]": 10549,
        "mxpos[i": 10550,
        "pred[i]": 10551,
        "pred[i": 10552,
        "tott": 10553,
        "++j;": 10554,
        "pred[n": 10555,
        "a[2000];": 10556,
        "x[n];": 10557,
        "m2++;": 10558,
        "index1,": 10559,
        "index2;": 10560,
        "ans1++;": 10561,
        "ans2++;": 10562,
        "LastoddPos,": 10563,
        "LastevenPos,": 10564,
        "evenCount": 10565,
        "LastoddPos": 10566,
        "evenCount--;": 10567,
        "LastevenPos": 10568,
        "evenCount++;": 10569,
        "(evenCount": 10570,
        "LastevenPos)": 10571,
        "v.push_back(p);": 10572,
        "mainvector;": 10573,
        "even": 10574,
        "mainvector.push_back(a);": 10575,
        "(mainvector[i]": 10576,
        "even)": 10577,
        "par,": 10578,
        "indpar,": 10579,
        "indimpar,": 10580,
        "impar,": 10581,
        "npar": 10582,
        "nimpar": 10583,
        "par": 10584,
        "npar++;": 10585,
        "indpar": 10586,
        "impar": 10587,
        "nimpar++;": 10588,
        "indimpar": 10589,
        "(nimpar": 10590,
        "(npar": 10591,
        "f1++;": 10592,
        "cnt1,": 10593,
        "cnt2,": 10594,
        "cOdd": 10595,
        "cEven": 10596,
        "lOdd,": 10597,
        "lEven;": 10598,
        "cEven++;": 10599,
        "lEven": 10600,
        "cOdd++;": 10601,
        "lOdd": 10602,
        "(cOdd": 10603,
        "ev,": 10604,
        "od;": 10605,
        "ar[n];": 10606,
        "even++;": 10607,
        "ev": 10608,
        "odd++;": 10609,
        "(even": 10610,
        "odd)": 10611,
        "arr[100000];": 10612,
        "sumeven": 10613,
        "sumodd": 10614,
        "sumeven++;": 10615,
        "sumodd++;": 10616,
        "(sumeven": 10617,
        "sumodd)": 10618,
        "arr,": 10619,
        "odd,": 10620,
        "even,": 10621,
        "(arr": 10622,
        "ep,": 10623,
        "ep": 10624,
        "evn": 10625,
        "v.push_back(arr[i]);": 10626,
        "evn++;": 10627,
        "flag,": 10628,
        "oCount": 10629,
        "eCount": 10630,
        "eCount++;": 10631,
        "oCount++;": 10632,
        "(eCount": 10633,
        "E": 10634,
        "O": 10635,
        "V.push_back(b);": 10636,
        "E++;": 10637,
        "O++;": 10638,
        "(E": 10639,
        "O)": 10640,
        "V.size();": 10641,
        "arr[101],": 10642,
        "arr[j];": 10643,
        "even;": 10644,
        "odd;": 10645,
        "ec": 10646,
        "oc": 10647,
        "++oc;": 10648,
        "++ec;": 10649,
        "(oc": 10650,
        "count2++;": 10651,
        "(count1": 10652,
        "count2)": 10653,
        "even.push_back(i": 10654,
        "odd.push_back(i": 10655,
        "(even.size()": 10656,
        "even[0]": 10657,
        "odd[0]": 10658,
        "counter1": 10659,
        "counter2": 10660,
        "counter1++;": 10661,
        "counter2++;": 10662,
        "(counter1": 10663,
        "counter2)": 10664,
        "pe,": 10665,
        "po;": 10666,
        "pe": 10667,
        "po": 10668,
        "ct)": 10669,
        "v1.size();": 10670,
        "(v2[i]": 10671,
        "v1[0])": 10672,
        "(v1.size()": 10673,
        "nn[105];": 10674,
        "nn[i]": 10675,
        "(nn[i]": 10676,
        "indE,": 10677,
        "indO,": 10678,
        "indE": 10679,
        "ev++;": 10680,
        "indO": 10681,
        "(ev": 10682,
        "lastodd": 10683,
        "lasteven": 10684,
        "lasteven)": 10685,
        "arr[9];": 10686,
        "'X')": 10687,
        "choose(long": 10688,
        "den": 10689,
        "numzero(long": 10690,
        "gcd(b": 10691,
        "(a[0][0]": 10692,
        "a[2][2])": 10693,
        "(a[0][1]": 10694,
        "(a[0][2]": 10695,
        "a[2][0])": 10696,
        "(a[1][0]": 10697,
        "a[9];": 10698,
        "a[9])": 10699,
        "a[8])": 10700,
        "(a[3]": 10701,
        "a[7])": 10702,
        "(a[4]": 10703,
        "a[6]))": 10704,
        "s[5][5];": 10705,
        "(s[0][i]": 10706,
        "s[2][j])": 10707,
        "(s[1][0]": 10708,
        "s[1][2])": 10709,
        "s[3];": 10710,
        "i][2": 10711,
        "str4": 10712,
        "((str1[0]": 10713,
        "str3[2])": 10714,
        "(str1[1]": 10715,
        "str3[1])": 10716,
        "(str1[2]": 10717,
        "str3[0]))": 10718,
        "((str2[0]": 10719,
        "str2[2])": 10720,
        "(str2[1]": 10721,
        "str2[1])": 10722,
        "(str2[2]": 10723,
        "str2[0]))": 10724,
        "b[2])": 10725,
        "(a[l][m]": 10726,
        "label:;": 10727,
        "s[2];": 10728,
        "(s[0][0]": 10729,
        "s[2][2])": 10730,
        "(s[0][1]": 10731,
        "s[2][1])": 10732,
        "(s[0][2]": 10733,
        "s[2][0])": 10734,
        "one[4];": 10735,
        "two[4];": 10736,
        "three[4];": 10737,
        "finall": 10738,
        "one": 10739,
        "two": 10740,
        "(one[i]": 10741,
        "(three[res]": 10742,
        "finall++;": 10743,
        "res--;": 10744,
        "(two[0]": 10745,
        "two[2])": 10746,
        "(finall": 10747,
        "rts": 10748,
        "rts)": 10749,
        "((n[0]": 10750,
        "s[2])": 10751,
        "(n[1]": 10752,
        "s[1])": 10753,
        "(n[2]": 10754,
        "(m[0]": 10755,
        "m[2]))": 10756,
        "b[3];": 10757,
        "reverse(a[2].begin(),": 10758,
        "a[2].end());": 10759,
        "reverse(a[1].begin(),": 10760,
        "a[1].end());": 10761,
        "A[9],": 10762,
        "B[9];": 10763,
        "B[x]": 10764,
        "B[i])": 10765,
        "a[8": 10766,
        "graph[4][5];": 10767,
        "graph[i]": 10768,
        "graph[4": 10769,
        "i][4": 10770,
        "x[9];": 10771,
        "x[8": 10772,
        "a[17];": 10773,
        "(a[2": 10774,
        "5": 10775,
        "v[3][3]": 10776,
        "{'\\0'};": 10777,
        "v[2": 10778,
        "x[i][k];": 10779,
        "(x[i][k]": 10780,
        "x[2": 10781,
        "data[3][3];": 10782,
        "(data[0][0]": 10783,
        "data[2][2])": 10784,
        "(data[0][1]": 10785,
        "data[2][1])": 10786,
        "(data[0][2]": 10787,
        "data[2][0])": 10788,
        "(data[1][0]": 10789,
        "data[1][2])": 10790,
        "m[10];": 10791,
        "m[i];": 10792,
        "m[10": 10793,
        "e[3][3];": 10794,
        "(e[i][j]": 10795,
        "e[2": 10796,
        "disC": 10797,
        "(s2[0]": 10798,
        "s2[2])": 10799,
        "(s1[c]": 10800,
        "s3[2": 10801,
        "(!disC)": 10802,
        "oo": 10803,
        "_cnt": 10804,
        "_p": 10805,
        "o(long": 10806,
        "_p;": 10807,
        "lcm(int": 10808,
        "file_put()": 10809,
        "freopen(\"filename.in\",": 10810,
        "freopen(\"filename.out\",": 10811,
        "st[3];": 10812,
        "st[2": 10813,
        "a[9]": 10814,
        "a[6])": 10815,
        "rotate90(int": 10816,
        "start[10][10],": 10817,
        "end[10][10])": 10818,
        "end[j][N": 10819,
        "start[i][j];": 10820,
        "areSame(int": 10821,
        "(end[i][j]": 10822,
        "start[i][j])": 10823,
        "resultsquare[10][10],": 10824,
        "newsquare[10][10],": 10825,
        "originalsquare[10][10];": 10826,
        "originalsquare[i][j]": 10827,
        "hi[10][10];": 10828,
        "rotate90(3,": 10829,
        "originalsquare,": 10830,
        "newsquare);": 10831,
        "newsquare,": 10832,
        "hi);": 10833,
        "(areSame(3,": 10834,
        "hi))": 10835,
        "**c;": 10836,
        "*[3];": 10837,
        "char[3];": 10838,
        "(c[0][i]": 10839,
        "c[2][j])": 10840,
        "(c[1][0]": 10841,
        "c[1][2])": 10842,
        "(c[j]": 10843,
        "mp[5][5];": 10844,
        "gets(mp[i]);": 10845,
        "(mp[i][j]": 10846,
        "mp[2": 10847,
        "table;": 10848,
        "table.push_back(row);": 10849,
        "(table[i][j]": 10850,
        "table[3": 10851,
        "1][3": 10852,
        "quickpow(long": 10853,
        "1ll)": 10854,
        "MOD,": 10855,
        "op[200005],": 10856,
        "vis[200005];": 10857,
        "memset((vis),": 10858,
        "(0),": 10859,
        "(sizeof(vis)));": 10860,
        "vis[op[i]]": 10861,
        "s1.length();": 10862,
        "s1[i];": 10863,
        "len1": 10864,
        "temp.length(),": 10865,
        "len2": 10866,
        "s2.length();": 10867,
        "(p1": 10868,
        "len2)": 10869,
        "(temp[p1]": 10870,
        "s2[p2])": 10871,
        "p2++;": 10872,
        "p1++;": 10873,
        "len2;": 10874,
        "op[i];": 10875,
        "op[i]--;": 10876,
        "(judge(mid))": 10877,
        "Arr[MAX_N];": 10878,
        "Mark[MAX_N];": 10879,
        "del(int": 10880,
        "Mark[Arr[i]]": 10881,
        "(!Mark[i])": 10882,
        "in(string": 10883,
        "tmp.size();": 10884,
        "T.size()": 10885,
        "tmp[i]": 10886,
        "T[ind])": 10887,
        "ind++;": 10888,
        "T.size());": 10889,
        "Arr[i]--;": 10890,
        "del(mid);": 10891,
        "(in(tmp))": 10892,
        "record.push_back(num[i]);": 10893,
        "sort(record.begin(),": 10894,
        "record.end());": 10895,
        "record.size();": 10896,
        "s1[record[i]": 10897,
        "s2.size();": 10898,
        "s3.find(s2[i],": 10899,
        "num.push_back(x);": 10900,
        "s1.size(),": 10901,
        "(check(mid))": 10902,
        "s1.size()": 10903,
        "mid,": 10904,
        "wa,": 10905,
        "lulz,": 10906,
        "lower;": 10907,
        "v.push_back(temp": 10908,
        "200000;": 10909,
        "ss[v[i]]": 10910,
        "s1[current])": 10911,
        "current++;": 10912,
        "s1.size())": 10913,
        "200010;": 10914,
        "op[Max];": 10915,
        "vis[Max];": 10916,
        "(judge(i))": 10917,
        "isSubSequence(string": 10918,
        "(str1[j]": 10919,
        "str2[i])": 10920,
        "ar[200001];": 10921,
        "check(long": 10922,
        "vi[n]": 10923,
        "vi[ar[i]]": 10924,
        "(!vi[i])": 10925,
        "isSubSequence(t,": 10926,
        "t.length(),": 10927,
        "h.length());": 10928,
        "ar[i]--;": 10929,
        "(check(mi))": 10930,
        "mi);": 10931,
        "BS(int": 10932,
        "low,": 10933,
        "high)": 10934,
        "(low": 10935,
        "low": 10936,
        "(high": 10937,
        "low)": 10938,
        "t.push_back(v[i]);": 10939,
        "sort(t.begin(),": 10940,
        "a[t[i]": 10941,
        "(temp[i]": 10942,
        "BS(mid": 10943,
        "high);": 10944,
        "BS(low,": 10945,
        "BS(0,": 10946,
        "fim": 10947,
        "ini": 10948,
        "(fim": 10949,
        "ceil((fim": 10950,
        "ini)": 10951,
        "nao_usa[n": 10952,
        "memset(nao_usa,": 10953,
        "nao_usa);": 10954,
        "nao_usa[arr[i]": 10955,
        "(!nao_usa[i])": 10956,
        "t.length();": 10957,
        "eh": 10958,
        "(usa[i]": 10959,
        "t[pos])": 10960,
        "n2)": 10961,
        "(eh)": 10962,
        "predicate(string": 10963,
        "&v,": 10964,
        "memo(s1.size(),": 10965,
        "memo[v[i]": 10966,
        "(!memo[i])": 10967,
        "temp.size();": 10968,
        "s2[k])": 10969,
        "s2.size())": 10970,
        "s.size(),": 10971,
        "p.push_back(temp);": 10972,
        "(predicate(s,": 10973,
        "mid))": 10974,
        "exist[n];": 10975,
        "memset(exist,": 10976,
        "sizeof(exist));": 10977,
        "exist[arr[i]]": 10978,
        "p.length();": 10979,
        "exist[i]": 10980,
        "p.length())": 10981,
        "p[200005],": 10982,
        "fg": 10983,
        "chec(long": 10984,
        "c[p[i]": 10985,
        "b[fg])": 10986,
        "fg++;": 10987,
        "(fg": 10988,
        "(chec(m))": 10989,
        "t[N],": 10990,
        "taken[N];": 10991,
        "t1.size(),": 10992,
        "t[i": 10993,
        "moves_so_far)": 10994,
        "sort(p": 10995,
        "moves_so_far": 10996,
        "s[p[i]];": 10997,
        "curr": 10998,
        "(t[curr]": 10999,
        "curr++;": 11000,
        "(check(mid)": 11001,
        "pal[200100];": 11002,
        "busca[200100];": 11003,
        "seq[200100];": 11004,
        "deleta[200100];": 11005,
        "qtd)": 11006,
        "deleta[i]": 11007,
        "qtd;": 11008,
        "deleta[seq[i]]": 11009,
        "(!deleta[i]": 11010,
        "pal[i]": 11011,
        "busca[j])": 11012,
        "&pal[1];": 11013,
        "&busca[1];": 11014,
        "(int)strlen(&pal[1]);": 11015,
        "(int)strlen(&busca[1]);": 11016,
        "seq[i];": 11017,
        "meio;": 11018,
        "meio": 11019,
        "(solve(meio))": 11020,
        "a[200000];": 11021,
        "judge()": 11022,
        "lp": 11023,
        "lp;": 11024,
        "p[j])": 11025,
        "lp)": 11026,
        "T[a[i]": 11027,
        "judge();": 11028,
        "possible(string": 11029,
        "*edits,": 11030,
        "changeIndex)": 11031,
        "firstPointer": 11032,
        "secondPointer": 11033,
        "(firstPointer": 11034,
        "t.size()": 11035,
        "p.size())": 11036,
        "(t[firstPointer]": 11037,
        "p[secondPointer]": 11038,
        "edits[firstPointer]": 11039,
        "firstPointer++;": 11040,
        "secondPointer++;": 11041,
        "(secondPointer": 11042,
        "p.size());": 11043,
        "moves[t.size()];": 11044,
        "moves[i];": 11045,
        "edits[t.size()];": 11046,
        "edits[i]": 11047,
        "edits[moves[i]": 11048,
        "high": 11049,
        "(!possible(t,": 11050,
        "edits,": 11051,
        "(possible(t,": 11052,
        "200005;": 11053,
        "s1[maxn],": 11054,
        "s2[maxn];": 11055,
        "flag[maxn];": 11056,
        "check(void)": 11057,
        "(flag[i])": 11058,
        "s2[p])": 11059,
        "strlen(s1": 11060,
        "strlen(s2": 11061,
        "memset(flag,": 11062,
        "flag);": 11063,
        "flag[a[i]]": 11064,
        "(check())": 11065,
        "a[210000];": 11066,
        "s1.find(s2[i],": 11067,
        "fun(int": 11068,
        "s1[v[i]": 11069,
        "fun(mid);": 11070,
        "(check(s,": 11071,
        "s2))": 11072,
        "r;;": 11073,
        "(check(fun(i),": 11074,
        "num[maxn];": 11075,
        "del[maxn];": 11076,
        "memset(del,": 11077,
        "sizeof(del));": 11078,
        "del[num[i]]": 11079,
        "(del[i": 11080,
        "1e12;": 11081,
        "a[MAX],": 11082,
        "b[MAX],": 11083,
        "maps[600][600];": 11084,
        "s[a[i]": 11085,
        "ptr": 11086,
        "t.length()": 11087,
        "p[ptr])": 11088,
        "ptr++;": 11089,
        "(ptr": 11090,
        "p.length());": 11091,
        "(check(m))": 11092,
        "2e6": 11093,
        "casn,": 11094,
        "x[maxn];": 11095,
        "vis);": 11096,
        "vis[x[i]]": 11097,
        "(vis[i])": 11098,
        "b[pos])": 11099,
        "x[i],": 11100,
        "x[i]--;": 11101,
        "200": 11102,
        "arr[MAXN": 11103,
        "good(int": 11104,
        "(int)str2.size();": 11105,
        "(int)str1.size()": 11106,
        "(arr[cnt]": 11107,
        "str1[cnt]": 11108,
        "str2[i]))": 11109,
        "(int)str1.size())": 11110,
        "(int)str1.size();": 11111,
        "arr[a": 11112,
        "(!good(mid))": 11113,
        "a[200005];": 11114,
        "lenp": 11115,
        "lens,": 11116,
        "t[a[i]": 11117,
        "lenp)": 11118,
        "1e5;": 11119,
        "lenA,": 11120,
        "lenB,": 11121,
        "arr[2": 11122,
        "c[arr[i]": 11123,
        "'`';": 11124,
        "lenA": 11125,
        "lenB;": 11126,
        "b[idx])": 11127,
        "lenB": 11128,
        "b.length();": 11129,
        "lenA;": 11130,
        "(lo": 11131,
        "vis[200010],": 11132,
        "a[200010];": 11133,
        "vis[a[i]": 11134,
        "str1.length();": 11135,
        "str2[j]": 11136,
        "str1[i])": 11137,
        "str2.length())": 11138,
        "READ(string": 11139,
        "INPUT": 11140,
        "\"NO\",": 11141,
        "OUTPUT": 11142,
        "(INPUT": 11143,
        "freopen(INPUT.c_str(),": 11144,
        "(OUTPUT": 11145,
        "freopen(OUTPUT.c_str(),": 11146,
        "A[200001];": 11147,
        "mp[A[i]]": 11148,
        "(int)b.size()": 11149,
        "(int)a.size();": 11150,
        "(mp[i])": 11151,
        "b[id])": 11152,
        "id++;": 11153,
        "(int)b.size();": 11154,
        "A[i]--;": 11155,
        "(int)a.size(),": 11156,
        "(ok(m))": 11157,
        "2e5;": 11158,
        "sp": 11159,
        "p[cnt]": 11160,
        "sp)": 11161,
        "sub(int": 11162,
        "b[y]": 11163,
        "v.resize(a.size());": 11164,
        "v[a]": 11165,
        "le": 11166,
        "ri": 11167,
        "(le": 11168,
        "ri)": 11169,
        "(ri": 11170,
        "le)": 11171,
        "(sub(mi))": 11172,
        "take[200000];": 11173,
        "pp,": 11174,
        "x[200000];": 11175,
        "take[i]": 11176,
        "take[x[i]]": 11177,
        "(take[l])": 11178,
        "(t[l]": 11179,
        "p[r])": 11180,
        "pp)": 11181,
        "pp": 11182,
        "p[5],": 11183,
        "t[3],": 11184,
        "l[200],": 11185,
        "r[200];": 11186,
        "p[2]": 11187,
        "l[0]": 11188,
        "r[0];": 11189,
        "(r[0]": 11190,
        "l[0])": 11191,
        "p[0];": 11192,
        "r[i];": 11193,
        "l[i])": 11194,
        "p[2];": 11195,
        "p3,": 11196,
        "p3": 11197,
        "e1": 11198,
        "e2": 11199,
        "e1;": 11200,
        "p1;": 11201,
        "l[105],": 11202,
        "gap;": 11203,
        "t1);": 11204,
        "P1,": 11205,
        "P2,": 11206,
        "P3,": 11207,
        "T1,": 11208,
        "T2;": 11209,
        "P1": 11210,
        "P2": 11211,
        "P3": 11212,
        "T1": 11213,
        "rprev": 11214,
        "tdiff": 11215,
        "tp1": 11216,
        "tp2": 11217,
        "tp3": 11218,
        "(rprev": 11219,
        "rprev;": 11220,
        "(tdiff": 11221,
        "(T1": 11222,
        "T2))": 11223,
        "T1;": 11224,
        "T2);": 11225,
        "T1)": 11226,
        "tdiff;": 11227,
        "T2)": 11228,
        "T2": 11229,
        "P1;": 11230,
        "r0,": 11231,
        "r0": 11232,
        "r0;": 11233,
        "consume": 11234,
        "prer": 11235,
        "(-1": 11236,
        "prer)": 11237,
        "prer;": 11238,
        "min(t1,": 11239,
        "min(l": 11240,
        "l[1000],": 11241,
        "r[1000];": 11242,
        "k[1440],": 11243,
        "k[j]": 11244,
        "max1;": 11245,
        "l[n],": 11246,
        "r[n];": 11247,
        "v.push_back(b);": 11248,
        "(t1)": 11249,
        "(t2)": 11250,
        "l[1440]": 11251,
        "r[1440]": 11252,
        "P2;": 11253,
        "P3;": 11254,
        "clock": 11255,
        "(clock;": 11256,
        "clock++)": 11257,
        "(ct": 11258,
        "((en": 11259,
        "p1);": 11260,
        "28;": 11261,
        "1e-7;": 11262,
        "(N);": 11263,
        "min(t,": 11264,
        "T1);": 11265,
        "workTime": 11266,
        "midTime": 11267,
        "sleepTime": 11268,
        "l[110],": 11269,
        "r[110];": 11270,
        "e[n];": 11271,
        "e[i];": 11272,
        "(e[i]": 11273,
        "s[i]));": 11274,
        "p1)": 11275,
        "(t2": 11276,
        "((diff": 11277,
        "p3);": 11278,
        "s[105],": 11279,
        "e[105];": 11280,
        "r[110],": 11281,
        "last_time": 11282,
        "end;": 11283,
        "interval": 11284,
        "last_time;": 11285,
        "(interval": 11286,
        "interval;": 11287,
        "(end": 11288,
        "begin)": 11289,
        "qi": 11290,
        "++qi)": 11291,
        "\"YES\\n2\\n\"": 11292,
        "s.substr(1)": 11293,
        "amount": 11294,
        "request": 11295,
        "request;": 11296,
        "amounts;": 11297,
        "gs;": 11298,
        "amounts.push_back(a);": 11299,
        "gs.push_back(g);": 11300,
        "amounts[y];": 11301,
        "gs[y][j];": 11302,
        "a.push_back((int)t": 11303,
        "(amounts[y]": 11304,
        "\"2\"": 11305,
        "amounts[0];": 11306,
        "compare(string": 11307,
        "b.erase(0,": 11308,
        "(a.size()": 11309,
        "a.substr(0,": 11310,
        "(compare(b,": 11311,
        "a.substr(1,": 11312,
        "(a).substr(1,": 11313,
        "arr[q];": 11314,
        "b.append(s,": 11315,
        "c.append(s,": 11316,
        "b.erase();": 11317,
        "c.erase();": 11318,
        "s.erase(0,": 11319,
        "x[1])": 11320,
        "n[300],": 11321,
        "s[300][300];": 11322,
        "(n[i]": 11323,
        "(int(s[i][0])": 11324,
        "int(s[i][1]))": 11325,
        "\"2\\n\";": 11326,
        "ans1[2],": 11327,
        "ans2[n": 11328,
        "ans1[0]": 11329,
        "ans1[1]": 11330,
        "ans2[i": 11331,
        "a[305];": 11332,
        "str[1])": 11333,
        "in[400];": 11334,
        "in[0]": 11335,
        "in[1])": 11336,
        "3.141592;": 11337,
        "mod1": 11338,
        "((s[0]": 11339,
        "freopen(\"TEMP.inp\",": 11340,
        "freopen(\"TEMP.out\",": 11341,
        "str[310];": 11342,
        "str[0]))": 11343,
        "ans(q);": 11344,
        "s(q);": 11345,
        "s[i][1];": 11346,
        "(ans[i])": 11347,
        "s[i].length()": 11348,
        "(S.length()": 11349,
        "S.length();": 11350,
        "S[j];": 11351,
        "a[300];": 11352,
        "s.insert(1,": 11353,
        "*)malloc(302);": 11354,
        "free(s);": 11355,
        "a[500];": 11356,
        "(x.size()": 11357,
        "y.size()": 11358,
        "2e9;": 11359,
        "(1e6": 11360,
        "(1e9": 11361,
        "7);": 11362,
        "k[400];": 11363,
        "\"YES\\n2\\n\";": 11364,
        "k[1]": 11365,
        "k[j];": 11366,
        "(k[1]": 11367,
        "k[2])": 11368,
        "k[2]": 11369,
        "work();": 11370,
        "((a.size()": 11371,
        "(int(s.length())": 11372,
        "string::iterator": 11373,
        "(*i": 11374,
        "*(i": 11375,
        "s[1]))": 11376,
        "&s[1]": 11377,
        "n[q];": 11378,
        "s[n[i]];": 11379,
        "205;": 11380,
        "in[N],": 11381,
        "tin[N],": 11382,
        "e[N];": 11383,
        "bfs(int": 11384,
        "Q[5];": 11385,
        "(!in[i])": 11386,
        "Q[a[i]].push(i);": 11387,
        "tin[i]": 11388,
        "(!Q[1].empty()": 11389,
        "!Q[2].empty()": 11390,
        "!Q[3].empty())": 11391,
        "step++;": 11392,
        "(!Q[k].empty())": 11393,
        "Q[k].front();": 11394,
        "Q[k].pop();": 11395,
        "e[u].size();": 11396,
        "e[u][i];": 11397,
        "tin[v]--;": 11398,
        "(!tin[v])": 11399,
        "Q[a[v]].push(v);": 11400,
        "in[i]": 11401,
        "e[x].push_back(i);": 11402,
        "bfs(i));": 11403,
        "pc(210),": 11404,
        "adj[210],": 11405,
        "req(210),": 11406,
        "creq(210),": 11407,
        "vis(210,": 11408,
        "0),": 11409,
        "empty(210,": 11410,
        "(pc[i]": 11411,
        "!creq[i]": 11412,
        "!vis[i])": 11413,
        "creq[adj[i][j]]--,": 11414,
        "solve(cur": 11415,
        "pc[i];": 11416,
        "req[i]": 11417,
        "adj[a].push_back(i);": 11418,
        "creq": 11419,
        "req,": 11420,
        "empty,": 11421,
        "min(mn,": 11422,
        "solve(i)": 11423,
        "mo[3][3]": 11424,
        "2},": 11425,
        "a[205],": 11426,
        "ind[205],": 11427,
        "t[205];": 11428,
        "vis[205],": 11429,
        "G[205][205];": 11430,
        "(!ind[i]": 11431,
        "!vis[i]": 11432,
        "(!vis[j]": 11433,
        "G[i][j])": 11434,
        "ind[j]--;": 11435,
        "(f);": 11436,
        "mo[x][a[i]]": 11437,
        "F(a[i]);": 11438,
        "G[u": 11439,
        "1][i]": 11440,
        "0xfffffff;": 11441,
        "(!t[j]": 11442,
        "ind[k]": 11443,
        "min(F(i),": 11444,
        "c[n": 11445,
        "d[n": 11446,
        "g[n": 11447,
        "cc[5];": 11448,
        "c[i]--;": 11449,
        "cc[c[i]].push_back(i);": 11450,
        "g[a": 11451,
        "d[i]++;": 11452,
        "(d[k]": 11453,
        "c[k],": 11454,
        "an": 11455,
        "cc[p].size();": 11456,
        "(d[cc[p][i]]": 11457,
        "d[cc[p][i]]--;": 11458,
        "ok++;": 11459,
        "g[cc[p][i]].size();": 11460,
        "g[cc[p][i]][j];": 11461,
        "d[u]--;": 11462,
        "an++;": 11463,
        "min(mx,": 11464,
        "an);": 11465,
        "2e2": 11466,
        "c[N],": 11467,
        "vis[N];": 11468,
        "ned[N],": 11469,
        "mk": 11470,
        "(mk)": 11471,
        "a[x][i],": 11472,
        "(vis[id])": 11473,
        "ned[id].size();": 11474,
        "(vis[ned[id][j]])": 11475,
        "ned[id].size())": 11476,
        "res++,": 11477,
        "vis[id]": 11478,
        "flag--;": 11479,
        "-4)": 11480,
        "c[i],": 11481,
        "a[c[i]].push_back(i);": 11482,
        "ned[i].push_back(x);": 11483,
        "solve(i));": 11484,
        "computer[201],": 11485,
        "check[3][201],": 11486,
        "vis[201];": 11487,
        "vv[201];": 11488,
        "(check[num][i]": 11489,
        "(vis[head]": 11490,
        "q.push(head);": 11491,
        "vis[head]++;": 11492,
        "(computer[head]": 11493,
        "vv[head].size();": 11494,
        "vv[head][i];": 11495,
        "check[num][v]--;": 11496,
        "(check[num][v]": 11497,
        "q.push(v);": 11498,
        "memset(check,": 11499,
        "sizeof(check));": 11500,
        "vv[i].clear();": 11501,
        "computer[i];": 11502,
        "ki;": 11503,
        "aj;": 11504,
        "vv[aj].push_back(i);": 11505,
        "check[0][i]++,": 11506,
        "check[1][i]++,": 11507,
        "check[2][i]++;": 11508,
        "bfs(i": 11509,
        "a[200],": 11510,
        "c[200];": 11511,
        "edges[200];": 11512,
        "simulate(int": 11513,
        "int(N);": 11514,
        "int(edges[i].size());": 11515,
        "c[edges[i][j]]++;": 11516,
        "q[3];": 11517,
        "q[a[i]].push(i);": 11518,
        "poped": 11519,
        "(poped": 11520,
        "(!q[s].empty())": 11521,
        "q[s].front();": 11522,
        "q[s].pop();": 11523,
        "poped++;": 11524,
        "int(edges[f].size());": 11525,
        "next": 11526,
        "edges[f][i];": 11527,
        "(!--c[next])": 11528,
        "q[a[next]].push(next);": 11529,
        "edges[i].clear();": 11530,
        "int(k);": 11531,
        "edges[t": 11532,
        "1000000000;": 11533,
        "int(3);": 11534,
        "simulate(i));": 11535,
        "vv[210];": 11536,
        "computer[210],": 11537,
        "in[210],": 11538,
        "bk[210],": 11539,
        "temp[210];": 11540,
        "(in[i]": 11541,
        "memset(bk,": 11542,
        "sizeof(bk));": 11543,
        "(bk[head]": 11544,
        "bk[head]++;": 11545,
        "in[v]--;": 11546,
        "(in[v]": 11547,
        "memset(in,": 11548,
        "sizeof(in));": 11549,
        "in[i]++;": 11550,
        "temp[i]": 11551,
        "in[j]": 11552,
        "temp[j];": 11553,
        "check[num][vv[head][i]]--;": 11554,
        "(check[num][vv[head][i]]": 11555,
        "q.push(vv[head][i]);": 11556,
        "tu[1005];": 11557,
        "cnt[1005],": 11558,
        "checks[1005];": 11559,
        "qua[5];": 11560,
        "qua[a[i]].push(i);": 11561,
        "(qua[1].size()": 11562,
        "qua[2].size()": 11563,
        "qua[3].size()": 11564,
        "(!qua[x].empty())": 11565,
        "qua[x].front();": 11566,
        "qua[x].pop();": 11567,
        "tu[k].size();": 11568,
        "tu[k][i];": 11569,
        "cnt[xx]--;": 11570,
        "(cnt[xx]": 11571,
        "qua[a[xx]].push(xx);": 11572,
        "memset(tu,": 11573,
        "sizeof(tu));": 11574,
        "memset(cnt,": 11575,
        "sizeof(cnt));": 11576,
        "tu[x].push_back(i);": 11577,
        "checks[i]++;": 11578,
        "cnt[j]": 11579,
        "checks[j];": 11580,
        "check(i));": 11581,
        "(check[k][i]": 11582,
        "check[k][vv[head][i]]--;": 11583,
        "(check[k][vv[head][i]]": 11584,
        "fast_pow(int": 11585,
        "(ret": 11586,
        "g[200][200];": 11587,
        "u--;": 11588,
        "g[u][i]": 11589,
        "++start)": 11590,
        "ok[200];": 11591,
        "memset(ok,": 11592,
        "sizeof(ok));": 11593,
        "kpyto": 11594,
        "(ok[i]": 11595,
        "win": 11596,
        "(g[j][i]": 11597,
        "(!ok[j]))": 11598,
        "(win)": 11599,
        "ok[i]": 11600,
        "(!kpyto)": 11601,
        "300;": 11602,
        "c[maxN],": 11603,
        "mark[maxN];": 11604,
        "need[maxN],": 11605,
        "dist(int": 11606,
        "nowp)": 11607,
        "mc": 11608,
        "(!mark[i])": 11609,
        "nsp;": 11610,
        "need[i].size();": 11611,
        "(!mark[need[i][j]])": 11612,
        "nsp.push_back(i);": 11613,
        "nsp.size();": 11614,
        "(mc": 11615,
        "c[nsp[i]]": 11616,
        "dist(nowp,": 11617,
        "c[nsp[i]])": 11618,
        "c[nsp[i]]);": 11619,
        "c[nsp[i]];": 11620,
        "mark[nsp[i]]": 11621,
        "solve(n,": 11622,
        "mc);": 11623,
        "mans": 11624,
        "sp.push_back(i);": 11625,
        "need[i].push_back(l);": 11626,
        "sp.size()": 11627,
        "sp.size();": 11628,
        "mark[sp[i]]": 11629,
        "min(mans,": 11630,
        "c[sp[i]])": 11631,
        "check[3][201];": 11632,
        "bk[201];": 11633,
        "bfs(i,": 11634,
        "visit[204];": 11635,
        "dependency[204];": 11636,
        "col[203];": 11637,
        "dependency[i].push_back(m);": 11638,
        "hours": 11639,
        "visit[i]": 11640,
        "(vis": 11641,
        "cvis": 11642,
        "(!visit[i]": 11643,
        "cr": 11644,
        "dependency[i].size();": 11645,
        "(!visit[dependency[i][j]])": 11646,
        "(cr)": 11647,
        "hours++;": 11648,
        "(!cvis)": 11649,
        "(cur)": 11650,
        "hours);": 11651,
        "A[201],": 11652,
        "fix[201],": 11653,
        "K[201],": 11654,
        "B[201][201];": 11655,
        "dist[3][3]": 11656,
        "K[i];": 11657,
        "B[i][j];": 11658,
        "T++)": 11659,
        "fix[i]": 11660,
        "mndist": 11661,
        "(!fix[i])": 11662,
        "(!fix[B[i][j]": 11663,
        "(mndist": 11664,
        "dist[cur": 11665,
        "1][A[i]": 11666,
        "mndist;": 11667,
        "A[ind];": 11668,
        "fix[ind]": 11669,
        "N++;": 11670,
        "(ANS": 11671,
        "desperate_optimization(int": 11672,
        "precision)": 11673,
        "cout.setf(ios::showpoint);": 11674,
        "cout.precision(precision);": 11675,
        "vec[250];": 11676,
        "qq[3];": 11677,
        "type[250];": 11678,
        "outt[250];": 11679,
        "toutt[250];": 11680,
        "desperate_optimization(20);": 11681,
        "type[i];": 11682,
        "type[i]--;": 11683,
        "outt[i]": 11684,
        "vec[u].push_back(i);": 11685,
        "(outt[i]": 11686,
        "q[type[i]].push(i);": 11687,
        "qq[i]": 11688,
        "toutt[i]": 11689,
        "outt[i];": 11690,
        "(qq[i].empty()": 11691,
        "q[j]": 11692,
        "qq[j];": 11693,
        "outt[j]": 11694,
        "toutt[j];": 11695,
        "(!q[0].empty()": 11696,
        "!q[1].empty()": 11697,
        "!q[2].empty())": 11698,
        "(!q[start].empty())": 11699,
        "q[start].front();": 11700,
        "q[start].pop();": 11701,
        "vec[pos].size();": 11702,
        "nx": 11703,
        "vec[pos][i];": 11704,
        "outt[nx]--;": 11705,
        "(outt[nx]": 11706,
        "q[type[nx]].push(nx);": 11707,
        "x[10000000];": 11708,
        "w1": 11709,
        "w2": 11710,
        "done2": 11711,
        "(x1[p1]": 11712,
        "'P'": 11713,
        "x2[p2]": 11714,
        "'R')": 11715,
        "x[count]": 11716,
        "'R'": 11717,
        "'P')": 11718,
        "'S'": 11719,
        "x1.size())": 11720,
        "(p2": 11721,
        "x2.size())": 11722,
        "(done": 11723,
        "done2)": 11724,
        "w2++;": 11725,
        "((x[i]": 11726,
        "w1++;": 11727,
        "count);": 11728,
        "D[256][256];": 11729,
        "D[int('R')][int('S')]": 11730,
        "D[int('S')][int('P')]": 11731,
        "D[int('P')][int('R')]": 11732,
        "br": 11733,
        "am": 11734,
        "bm": 11735,
        "a];": 11736,
        "b];": 11737,
        "D[int(bb)][int(aa)];": 11738,
        "D[int(aa)][int(bb)];": 11739,
        "beat(char": 11740,
        "tims": 11741,
        "(beat(a[i": 11742,
        "a.size()],": 11743,
        "b.size()]))": 11744,
        "tims;": 11745,
        "(beat(b[i": 11746,
        "b.size()],": 11747,
        "a.size()]))": 11748,
        "k];": 11749,
        "Mininum(long": 11750,
        "both": 11751,
        "Mininum(l1,": 11752,
        "prog[both]": 11753,
        "both;": 11754,
        "l1]": 11755,
        "l2]": 11756,
        "prog[i]": 11757,
        "loss1": 11758,
        "loss2": 11759,
        "rl1,": 11760,
        "rl2;": 11761,
        "(prog[i]": 11762,
        "loss2++;": 11763,
        "loss1++;": 11764,
        "rl1": 11765,
        "loss1;": 11766,
        "rl2": 11767,
        "loss2;": 11768,
        "rl2++;": 11769,
        "rl1++;": 11770,
        "LINF": 11771,
        "1e18": 11772,
        "ITER": 11773,
        "100000007;": 11774,
        "cyc": 11775,
        "__gcd(m,": 11776,
        "cyc;": 11777,
        "(aa[i]": 11778,
        "bb[i]": 11779,
        "++f;": 11780,
        "++s;": 11781,
        "tn": 11782,
        "++tn)": 11783,
        "power(x,": 11784,
        "prime[10000000];": 11785,
        "10000000;": 11786,
        "(s1[i": 11787,
        "n]": 11788,
        "(s2[i": 11789,
        "c2++;": 11790,
        "win(char": 11791,
        "p[3]": 11792,
        "s[win(a[i": 11793,
        "m],": 11794,
        "k])]++;": 11795,
        "p[win(a[i": 11796,
        "k));": 11797,
        "A.size(),": 11798,
        "s[win(A[i": 11799,
        "a],": 11800,
        "b])]++;": 11801,
        "p[win(A[i": 11802,
        "nike": 11803,
        "poly": 11804,
        "losn": 11805,
        "losp": 11806,
        "mp[\"RR\"]": 11807,
        "mp[\"RP\"]": 11808,
        "mp[\"RS\"]": 11809,
        "mp[\"PR\"]": 11810,
        "mp[\"PP\"]": 11811,
        "mp[\"PS\"]": 11812,
        "mp[\"SR\"]": 11813,
        "mp[\"SP\"]": 11814,
        "mp[\"SS\"]": 11815,
        "P;": 11816,
        "match": 11817,
        "N.size()": 11818,
        "P.size();": 11819,
        "match)": 11820,
        "N[nike];": 11821,
        "P[poly];": 11822,
        "nike++;": 11823,
        "(nike": 11824,
        "N.size())": 11825,
        "poly++;": 11826,
        "(poly": 11827,
        "P.size())": 11828,
        "match;": 11829,
        "dp1[1000100];": 11830,
        "dp2[1000100];": 11831,
        "get(char": 11832,
        "1;;": 11833,
        "dp1[i]": 11834,
        "get(a[x],": 11835,
        "b[y])": 11836,
        "dp1[i": 11837,
        "dp2[i]": 11838,
        "get(b[y],": 11839,
        "a[x])": 11840,
        "dp2[i": 11841,
        "dp1[cnt]": 11842,
        "1ll": 11843,
        "dp1[k": 11844,
        "cnt];": 11845,
        "dp2[cnt]": 11846,
        "dp2[k": 11847,
        "bark(char": 11848,
        "(bark(a[i": 11849,
        "k]))": 11850,
        "res1++;": 11851,
        "(bark(b[i": 11852,
        "k],": 11853,
        "m]))": 11854,
        "make_pair(a1,": 11855,
        "gcd(a.size(),": 11856,
        "solve(c);": 11857,
        "t.first": 11858,
        "t.second": 11859,
        "solve(n": 11860,
        "c).first,": 11861,
        "c).second;": 11862,
        "sa": 11863,
        "sb": 11864,
        "sb++;": 11865,
        "sa++;": 11866,
        "b.size()));": 11867,
        "b.size());": 11868,
        "C[2005][2005];": 11869,
        "fact[2005];": 11870,
        "win[1000004];": 11871,
        "getDivisors(long": 11872,
        "&vt)": 11873,
        "vt.push_back(i);": 11874,
        "vt.push_back(n": 11875,
        "nCrModp()": 11876,
        "2002;": 11877,
        "C[i][0]": 11878,
        "C[i][j]": 11879,
        "(C[i": 11880,
        "C[i": 11881,
        "s2[i": 11882,
        "r2++;": 11883,
        "g['P']['S']": 11884,
        "g['P']['R']": 11885,
        "g['P']['P']": 11886,
        "g['S']['S']": 11887,
        "g['S']['R']": 11888,
        "g['S']['P']": 11889,
        "g['R']['S']": 11890,
        "g['R']['P']": 11891,
        "g['R']['R']": 11892,
        "la": 11893,
        "lb": 11894,
        "pa": 11895,
        "pb": 11896,
        "(la": 11897,
        "lb))": 11898,
        "min(la": 11899,
        "lb,": 11900,
        "(g[a[pa]][b[pb]]": 11901,
        "(pa": 11902,
        "(pb": 11903,
        "max(1,": 11904,
        "lb));": 11905,
        "lb);": 11906,
        "who(char": 11907,
        "games;": 11908,
        "cnt[3];": 11909,
        "games": 11910,
        "((a.size())": 11911,
        "(b.size()));": 11912,
        "cnt[who(a[i": 11913,
        "(a.size())],": 11914,
        "(b.size())])]++;": 11915,
        "mk;": 11916,
        "res1,": 11917,
        "res2;": 11918,
        "Loses(char": 11919,
        "Loses(a[i": 11920,
        "a.length()],": 11921,
        "b.length()])": 11922,
        "Loses(b[i": 11923,
        "b.length()],": 11924,
        "a.length()])": 11925,
        "map<pair<char,": 11926,
        "char>,": 11927,
        "loser;": 11928,
        "loser[pair<char,": 11929,
        "char>('R',": 11930,
        "'P')]": 11931,
        "char>('P',": 11932,
        "'R')]": 11933,
        "'S')]": 11934,
        "char>('S',": 11935,
        "lcm(s.size(),": 11936,
        "char>(s[i": 11937,
        "s.size()],": 11938,
        "t.size()])];": 11939,
        "t.size()),": 11940,
        "bs++;": 11941,
        "as++;": 11942,
        "k),": 11943,
        "'L')": 11944,
        "'U')": 11945,
        "coun1": 11946,
        "coun2": 11947,
        "coun1++;": 11948,
        "coun2++;": 11949,
        "coun1--;": 11950,
        "coun2--;": 11951,
        "(coun1": 11952,
        "++l;": 11953,
        "++u;": 11954,
        "++d;": 11955,
        "cad;": 11956,
        "T.insert(pair<int,": 11957,
        "int>(0,": 11958,
        "(cad[i]": 11959,
        "T.find(k);": 11960,
        "T.end())": 11961,
        "int>(k,": 11962,
        "it->second": 11963,
        "T.begin();": 11964,
        "T.end();": 11965,
        "it->second;": 11966,
        "a.substr(i,": 11967,
        "count(t.begin(),": 11968,
        "t.end(),": 11969,
        "'L');": 11970,
        "(!r": 11971,
        "!u)": 11972,
        "H": 11973,
        "V": 11974,
        "V++;": 11975,
        "V--;": 11976,
        "H++;": 11977,
        "H--;": 11978,
        "(H": 11979,
        "rcont": 11980,
        "ucont": 11981,
        "rcont++;": 11982,
        "ucont++;": 11983,
        "rcont--;": 11984,
        "ucont--;": 11985,
        "(rcont": 11986,
        "(check(cur))": 11987,
        "a[201],": 11988,
        "sum[201],": 11989,
        "201;": 11990,
        "-201;": 11991,
        "sum[i": 11992,
        "(sum[j]": 11993,
        "c[MAX];": 11994,
        "u[210],": 11995,
        "d[210],": 11996,
        "r[210],": 11997,
        "l[210];": 11998,
        "d[i": 11999,
        "u[i": 12000,
        "(u[j]": 12001,
        "d[j]": 12002,
        "r[j]": 12003,
        "l[j]": 12004,
        "bisa(string": 12005,
        "subs)": 12006,
        "subs.length();": 12007,
        "(subs[i]": 12008,
        "kata;": 12009,
        "pjg": 12010,
        "imulai": 12011,
        "(imulai": 12012,
        "pjg)": 12013,
        "imulai++)": 12014,
        "(bisa(kata.substr(imulai,": 12015,
        "pjg)))": 12016,
        "(s[jj]": 12017,
        "(int)0;": 12018,
        "(int)(int)((s).size())": 12019,
        "(int)i": 12020,
        "(int)i;": 12021,
        "(int)j;": 12022,
        "(make_pair(x,": 12023,
        "make_pair(0,": 12024,
        "0));": 12025,
        "mapper;": 12026,
        "mapper['R']": 12027,
        "mapper['U']": 12028,
        "mapper['L']": 12029,
        "mapper['D']": 12030,
        "mx[]": 12031,
        "my[]": 12032,
        "mx[mapper[s[j]]];": 12033,
        "my[mapper[s[j]]];": 12034,
        "(cx": 12035,
        "(s1[k]": 12036,
        "p.first++;": 12037,
        "p.first--;": 12038,
        "p.second--;": 12039,
        "p.second++;": 12040,
        "(p.first": 12041,
        "p.second": 12042,
        "ud,": 12043,
        "lr,": 12044,
        "lr": 12045,
        "'U'": 12046,
        "M[500][500];": 12047,
        "250;": 12048,
        "cad.size();": 12049,
        "(cad[l]": 12050,
        "M[i][j];": 12051,
        "M[i][j]++;": 12052,
        "st(string": 12053,
        "\",": 12054,
        "(st(a)": 12055,
        "size_n;": 12056,
        "com": 12057,
        "\"UDRL\";": 12058,
        "cx[4]": 12059,
        "cy[4]": 12060,
        "ind(char": 12061,
        "letter);": 12062,
        "ii,": 12063,
        "jj;": 12064,
        "curX,": 12065,
        "curY;": 12066,
        "(ii": 12067,
        "curX": 12068,
        "curY": 12069,
        "ind(str[jj]);": 12070,
        "cx[tmp];": 12071,
        "cy[tmp];": 12072,
        "((curX": 12073,
        "(curY": 12074,
        "com[ii])": 12075,
        "(st[j]": 12076,
        "is_return(string": 12077,
        "(is_return(t))": 12078,
        "a.clear();": 12079,
        "a[s[j]]++;": 12080,
        "(a['U']": 12081,
        "a['D']": 12082,
        "a['L']": 12083,
        "a['R'])": 12084,
        "mx[4]": 12085,
        "my[4]": 12086,
        "&s,": 12087,
        "&dir)": 12088,
        "mx[dir[s[i]]];": 12089,
        "my[dir[s[i]]];": 12090,
        "dir['R']": 12091,
        "dir['U']": 12092,
        "dir['L']": 12093,
        "dir['D']": 12094,
        "sim": 12095,
        "simulate(0,": 12096,
        "sim,": 12097,
        "dir);": 12098,
        "((sum1": 12099,
        "(str[m]": 12100,
        "marks[n];": 12101,
        "h_marks[m],": 12102,
        "s[111],": 12103,
        "marks[i];": 12104,
        "h_marks[i]": 12105,
        "max(h_marks[i],": 12106,
        "marks[j][i]": 12107,
        "(marks[j][i]": 12108,
        "h_marks[i])": 12109,
        "s[j]++;": 12110,
        "a[10005],": 12111,
        "b[10005];": 12112,
        "c[1005][1005];": 12113,
        "max(a[j": 12114,
        "b[j": 12115,
        "A[200][200],": 12116,
        "B[200];": 12117,
        "max(B[i],": 12118,
        "A[j][i]);": 12119,
        "B[j])": 12120,
        "h_marks,": 12121,
        "h_marks": 12122,
        "max(marks[k][j]": 12123,
        "h_marks);": 12124,
        "(h_marks": 12125,
        "marks[i][j]": 12126,
        "(best)": 12127,
        "a[300][300],": 12128,
        "b[9000];": 12129,
        "a[0][j];": 12130,
        "ma[n][m];": 12131,
        "ma[i][j];": 12132,
        "misa": 12133,
        "((int)ma[j][i]": 12134,
        "(int)ma[j][i]": 12135,
        "ans.insert(j);": 12136,
        "maxi[m]": 12137,
        "stu[n][m];": 12138,
        "stu[i][j];": 12139,
        "(maxi[j]": 12140,
        "(stu[i][j]": 12141,
        "maxi[j]": 12142,
        "stu[i][j]": 12143,
        "maxi[j])": 12144,
        "a[110][110];": 12145,
        "check[101]": 12146,
        "check1[101]": 12147,
        "a[max][i])": 12148,
        "memset(check1,": 12149,
        "sizeof(check1));": 12150,
        "check1[max]": 12151,
        "check1[j]": 12152,
        "(check1[j])": 12153,
        "check[j]++;": 12154,
        "(check[i])": 12155,
        "a[N][N],": 12156,
        "best[N];": 12157,
        "best[i]": 12158,
        "max(best[i],": 12159,
        "a[j][i]);": 12160,
        "best[j])": 12161,
        "marks(n);": 12162,
        "suc(n,": 12163,
        "++sub)": 12164,
        "(marks[i][sub]": 12165,
        "marks[i][sub];": 12166,
        "suc[i]": 12167,
        "count(suc.begin(),": 12168,
        "suc.end(),": 12169,
        "a[n][m],": 12170,
        "ch[n],": 12171,
        "ch[j]": 12172,
        "(ch[k]": 12173,
        "ch[l])": 12174,
        "ch[k];": 12175,
        "ch[k]": 12176,
        "ch[l];": 12177,
        "ch[l]": 12178,
        "(ch[n": 12179,
        "mx[101];": 12180,
        "vc.resize(n);": 12181,
        "memset(mx,": 12182,
        "vc[i];": 12183,
        "mx[j]": 12184,
        "max(mx[j],": 12185,
        "(vc[i][j]": 12186,
        "'0'));": 12187,
        "(mx[j]": 12188,
        "st.insert(i);": 12189,
        "(s[j].at(i)": 12190,
        "s[j].at(i);": 12191,
        "s[j].at(i)": 12192,
        "s[i].find('0');": 12193,
        "++c;": 12194,
        "s[101];": 12195,
        "s[j][i];": 12196,
        "s[i][j])": 12197,
        "s[t][j])": 12198,
        "suc[101];": 12199,
        "gr[101][101];": 12200,
        "g[101][101],": 12201,
        "maxk[101],": 12202,
        "gr[i][j];": 12203,
        "gr[i][j]": 12204,
        "maxk[j]": 12205,
        "max(maxk[j],": 12206,
        "g[i][j]);": 12207,
        "(maxk[j]": 12208,
        "g[i][j])": 12209,
        "nas++;": 12210,
        "mm[n][m];": 12211,
        "mm[i][j];": 12212,
        "may": 12213,
        "mm[0][0],": 12214,
        "mejor": 12215,
        "sw": 12216,
        "sww": 12217,
        "(may": 12218,
        "mm[i][j])": 12219,
        "(sww": 12220,
        "(mm[i][j]": 12221,
        "mm[k][j]": 12222,
        "mejor++;": 12223,
        "(mejor": 12224,
        "best++;": 12225,
        "max(k,": 12226,
        "(int)s[j][i]);": 12227,
        "((int)s[j][i]": 12228,
        "s[110][110]": 12229,
        "a[110]": 12230,
        "v[110]": 12231,
        "s[j][i]);": 12232,
        "arr[1000][1000];": 12233,
        "arr[j][i];": 12234,
        "(!s.count(j))": 12235,
        "s.insert(j);": 12236,
        "102;": 12237,
        "a[MAX][MAX],": 12238,
        "a[100": 12239,
        "2][100": 12240,
        "v[n];": 12241,
        "v[j][i])": 12242,
        "v[j][i];": 12243,
        "ss[k].insert(i);": 12244,
        "ss[k].clear();": 12245,
        "ss[i].begin();": 12246,
        "ss[i].end())": 12247,
        "(sss.find(*it)": 12248,
        "sss.end())": 12249,
        "sss.insert(*it);": 12250,
        "a[110][110],": 12251,
        "flag[101]": 12252,
        "students": 12253,
        "mp[j])": 12254,
        "students++;": 12255,
        "maxi[101];": 12256,
        "max(a[i][j],": 12257,
        "maxi[j]);": 12258,
        "S[110],": 12259,
        "N[110];": 12260,
        "((int)(a[i][j]": 12261,
        "N[j])": 12262,
        "N[j]": 12263,
        "(int)(a[i][j]": 12264,
        "S[i]++;": 12265,
        "k[1000]": 12266,
        "(!k[j]": 12267,
        "mp[109][109];": 12268,
        "used[109];": 12269,
        "mp[i][j];": 12270,
        "maxV": 12271,
        "(mp[j][i]": 12272,
        "maxV)": 12273,
        "mp[j][i];": 12274,
        "(!used[j]": 12275,
        "mp[j][i]": 12276,
        "used[j]": 12277,
        "s[0][i];": 12278,
        "M)": 12279,
        "arr[i])": 12280,
        "x.insert(j);": 12281,
        "long)x.size()": 12282,
        "ans[110],": 12283,
        "num[110][110],": 12284,
        "mp[110];": 12285,
        "mp[i]);": 12286,
        "ans[j])": 12287,
        "mp[i][j]": 12288,
        "a[105][105];": 12289,
        "b[105]": 12290,
        "a[j][k];": 12291,
        "(a[j][k]": 12292,
        "a[115][115];": 12293,
        "wasBest": 12294,
        "isBest": 12295,
        "(a[k][j]": 12296,
        "(isBest)": 12297,
        "(wasBest)": 12298,
        "g[n];": 12299,
        "ara[n][m];": 12300,
        "maxn[m];": 12301,
        "g[w];": 12302,
        "(int)g[w][q]": 12303,
        "memset(maxn,": 12304,
        "sizeof(maxn));": 12305,
        "(ara[w][q]": 12306,
        "maxn[q])": 12307,
        "maxn[q]": 12308,
        "ara[w][q];": 12309,
        "mark[n];": 12310,
        "(maxn[q]": 12311,
        "ara[w][q])": 12312,
        "mark[w]": 12313,
        "(mark[w])": 12314,
        "str[n];": 12315,
        "highest[n]": 12316,
        "high[m]": 12317,
        "high[j])": 12318,
        "high[j]": 12319,
        "highest[i]": 12320,
        "(highest[i]": 12321,
        "best[n];": 12322,
        "best_score": 12323,
        "(s[k][i]": 12324,
        "best_score)": 12325,
        "s[k][i];": 12326,
        "best[k]++;": 12327,
        "(best[i]": 12328,
        "s[k][j])": 12329,
        "(!p)": 12330,
        "!b": 12331,
        "nn,": 12332,
        "(nn)": 12333,
        "gcd(ans,": 12334,
        "\"/\"": 12335,
        "su": 12336,
        "su2": 12337,
        "su;": 12338,
        "(su2": 12339,
        "su2;": 12340,
        "rem,": 12341,
        "rem;": 12342,
        "__gcd(sum,": 12343,
        "ct,": 12344,
        "ct;": 12345,
        "gcd(s,": 12346,
        "ct);": 12347,
        "lcm(b,": 12348,
        "su,": 12349,
        "(tem": 12350,
        "lcm(sum,": 12351,
        "x(0),": 12352,
        "y(m": 12353,
        "n(m),": 12354,
        "z(0);": 12355,
        "GCD(x,": 12356,
        "__gcd(ans,": 12357,
        "add(n,": 12358,
        "div": 12359,
        "gcd(sum,": 12360,
        "'/'": 12361,
        "base(int": 12362,
        "base(n,": 12363,
        "gcd(A": 12364,
        "gcd(res,": 12365,
        "numerator": 12366,
        "base++)": 12367,
        "denominator": 12368,
        "(numerator": 12369,
        "S(int": 12370,
        "S(a,": 12371,
        "min(sum,": 12372,
        "fraction(int": 12373,
        "fra;": 12374,
        "base(a,": 12375,
        "fra": 12376,
        "fraction(sum,": 12377,
        "2000000007ll;": 12378,
        "2005;": 12379,
        "sumit(long": 12380,
        "den;": 12381,
        "sumit(a,": 12382,
        "den++;": 12383,
        "gcd(num,": 12384,
        "den);": 12385,
        "__gcd(k,": 12386,
        "__gcd(s,": 12387,
        "digitsum(int": 12388,
        "digitsum(a,": 12389,
        "(tmp)": 12390,
        "fpb": 12391,
        "gcd(x,": 12392,
        "sumaEnOtraBase(int": 12393,
        "numerador": 12394,
        "sumaEnOtraBase(n,": 12395,
        "denominador": 12396,
        "(numerador": 12397,
        "number(int": 12398,
        "number(n,": 12399,
        "__gcd(p,": 12400,
        "convert(int": 12401,
        "convert(n,": 12402,
        "__gcd(fin,": 12403,
        "fin1": 12404,
        "(temp)": 12405,
        "nominator": 12406,
        "getDigits(int": 12407,
        "nok(int": 12408,
        "nok(b,": 12409,
        "getDigits(A,": 12410,
        "denominator++;": 12411,
        "nk": 12412,
        "nok(nominator,": 12413,
        "denominator);": 12414,
        "(nominator": 12415,
        "nk)": 12416,
        "(denominator": 12417,
        "sum(n,": 12418,
        "gcd(cnt,": 12419,
        "runn()": 12420,
        "runn();": 12421,
        "a[n][n]": 12422,
        "table[20][20];": 12423,
        "table[1][i]": 12424,
        "table[i": 12425,
        "table[i][j": 12426,
        "table[n][n]": 12427,
        "in[10][10];": 12428,
        "in[i][j]": 12429,
        "in[i": 12430,
        "in[i][j": 12431,
        "a[105][105]": 12432,
        "v.back()": 12433,
        "a[15][15];": 12434,
        "n[11][11];": 12435,
        "n[1][i]": 12436,
        "n[m][m]": 12437,
        "tabla[x][x];": 12438,
        "tabla[0][i]": 12439,
        "tabla[i][0]": 12440,
        "tabla[i][a]": 12441,
        "tabla[i": 12442,
        "1][a]": 12443,
        "tabla[i][a": 12444,
        "tabla[x": 12445,
        "1][x": 12446,
        "A[15][15];": 12447,
        "A[0][b]": 12448,
        "A[b][0]": 12449,
        "A[c][d]": 12450,
        "A[c": 12451,
        "1][d]": 12452,
        "A[c][d": 12453,
        "A[a": 12454,
        "1][a": 12455,
        "a[11][11];": 12456,
        "a[u][j": 12457,
        "sum[15]": 12458,
        "20,": 12459,
        "70,": 12460,
        "252,": 12461,
        "924,": 12462,
        "3432,": 12463,
        "12870,": 12464,
        "48620};": 12465,
        "f(x": 12466,
        "f(x,": 12467,
        "f(n": 12468,
        "f[11]": 12469,
        "f[n]": 12470,
        "a[10][10]": 12471,
        "1][v": 12472,
        "1][m": 12473,
        "table[10][10];": 12474,
        "table[0][i]": 12475,
        "table[i][0]": 12476,
        "table[N": 12477,
        "1][N": 12478,
        "grid[20][20];": 12479,
        "grid[0][i]": 12480,
        "grid[i][0]": 12481,
        "grid[i][j]": 12482,
        "grid[i": 12483,
        "grid[i][j": 12484,
        "grid[i][j]);": 12485,
        "g[11][11];": 12486,
        "g[1][i]": 12487,
        "g[i": 12488,
        "g[i][j": 12489,
        "g[n][n]": 12490,
        "(dfs(i": 12491,
        "dfs(n": 12492,
        "a[12][12];": 12493,
        "a[11][11]": 12494,
        "a[0][j]": 12495,
        "**a": 12496,
        "*[size];": 12497,
        "int[size];": 12498,
        "a[size": 12499,
        "1][size": 12500,
        "70": 12501,
        "252": 12502,
        "924": 12503,
        "3432": 12504,
        "12870": 12505,
        "48620": 12506,
        "arr[11][11],": 12507,
        "s[n][n]": 12508,
        "-500;": 12509,
        "ar[11][11];": 12510,
        "ar[n": 12511,
        "a[101][11];": 12512,
        "nin": 12513,
        "nin)": 12514,
        "c(long": 12515,
        "c(n,": 12516,
        "arr[20][20];": 12517,
        "arr[n][n]": 12518,
        "a[100010];": 12519,
        "\"6\"": 12520,
        "\"20\"": 12521,
        "\"70\"": 12522,
        "\"252\"": 12523,
        "\"924\"": 12524,
        "\"3432\"": 12525,
        "\"12870\"": 12526,
        "\"48620\"": 12527,
        "mat[n": 12528,
        "mat[1][i]": 12529,
        "mat[i][1]": 12530,
        "mat[i][j": 12531,
        "mat[n][n]": 12532,
        "table[15][15];": 12533,
        "memset(table,": 12534,
        "sizeof(table));": 12535,
        "dp[11][11]": 12536,
        "dp[0][i]": 12537,
        "dp[i][0]": 12538,
        "dp[i][j]": 12539,
        "dp[i][j": 12540,
        "a[10][10],": 12541,
        "a[11][11],": 12542,
        "n1[20];": 12543,
        "19;": 12544,
        "n1[i]": 12545,
        "nul,": 12546,
        "(--p)": 12547,
        "nul": 12548,
        "n1[nul];": 12549,
        "n1[n]": 12550,
        "ar[10][10]": 12551,
        "ar[i][0]": 12552,
        "ar[0][i]": 12553,
        "ar[i][k]": 12554,
        "ar[w][j];": 12555,
        "ar[o][o]": 12556,
        "find();": 12557,
        "find()": 12558,
        "ar[i][j])": 12559,
        "dis": 12560,
        "t[4];": 12561,
        "zhuangtai": 12562,
        "time++)": 12563,
        "(zhuangtai": 12564,
        "(t[zhuangtai]": 12565,
        "minn": 12566,
        "sr": 12567,
        "minn)": 12568,
        "minn;": 12569,
        "(min(min(a,": 12570,
        "(--n)": 12571,
        "puts(\"0\"),": 12572,
        "print(long": 12573,
        "m(long": 12574,
        "p(long": 12575,
        "p(a,": 12576,
        "vv": 12577,
        "vv;": 12578,
        "ish": 12579,
        "(ish": 12580,
        "d[4][4];": 12581,
        "d[r][o]": 12582,
        "d[o][r]": 12583,
        "d[r][e]": 12584,
        "d[e][r]": 12585,
        "d[e][o]": 12586,
        "d[o][e]": 12587,
        "d[r][r]": 12588,
        "d[o][o]": 12589,
        "d[e][e]": 12590,
        "min(min(d[p][0],": 12591,
        "d[p][1]),": 12592,
        "d[p][2]);": 12593,
        "(d[p][i]": 12594,
        "(t[z]": 12595,
        "dp[120][4];": 12596,
        "dp[1][2]": 12597,
        "dp[1][3]": 12598,
        "dp[i][1]": 12599,
        "min(dp[i": 12600,
        "1][2]": 12601,
        "1][3]": 12602,
        "dp[i][2]": 12603,
        "dp[i][3]": 12604,
        "min(dp[n][1],": 12605,
        "min(dp[n][2],": 12606,
        "dp[n][3]))": 12607,
        "min(d,": 12608,
        "(min(b,": 12609,
        "(min(d,": 12610,
        "(min(c,": 12611,
        "minx(int": 12612,
        "*x)": 12613,
        "'r';": 12614,
        "minx(a[0],": 12615,
        "a[1],": 12616,
        "&t);": 12617,
        "'e';": 12618,
        "'o';": 12619,
        "'e')": 12620,
        "minx(a[1],": 12621,
        "c)))": 12622,
        "max(min(min(a,": 12623,
        "2)),": 12624,
        "(location": 12625,
        "lo,": 12626,
        "vis[100005];": 12627,
        "before,": 12628,
        "after;": 12629,
        "before": 12630,
        "min(abs(before[i]": 12631,
        "after[i]),": 12632,
        "abs((before[i]": 12633,
        "after[i])));": 12634,
        "min(9": 12635,
        "mini);": 12636,
        "num[n];": 12637,
        "lock[n];": 12638,
        "lock[i]": 12639,
        "lock[i])": 12640,
        "min(abs(num[i]": 12641,
        "lock[i]),": 12642,
        "abs(9": 12643,
        "num[i])": 12644,
        "lock[i]);": 12645,
        "num[i]);": 12646,
        "min(10": 12647,
        "abs(a[i]": 12648,
        "b[i]),": 12649,
        "b[i]));": 12650,
        "comp1": 12651,
        "comp2": 12652,
        "b[x];": 12653,
        "num1[i];": 12654,
        "atoi(num.c_str());": 12655,
        "num2[i];": 12656,
        "(comp2": 12657,
        "comp1)": 12658,
        "comp2;": 12659,
        "comp1;": 12660,
        "ori,": 12661,
        "pas,": 12662,
        "originalState,": 12663,
        "passCode;": 12664,
        "originalState": 12665,
        "originalState.length();": 12666,
        "ori": 12667,
        "originalState[i]": 12668,
        "pas": 12669,
        "passCode[i]": 12670,
        "pas;": 12671,
        "ori)": 12672,
        "temp--;": 12673,
        "min(abs(x": 12674,
        "dist(char": 12675,
        "min(y": 12676,
        "dist(i[k],": 12677,
        "j[k]);": 12678,
        "simb[]": 12679,
        "{'1',": 12680,
        "'2',": 12681,
        "'3',": 12682,
        "'4',": 12683,
        "'5',": 12684,
        "'6',": 12685,
        "'7',": 12686,
        "'8',": 12687,
        "'9'};": 12688,
        "D(\"duom.txt\");": 12689,
        "R(\"rez.txt\");": 12690,
        "mas[1000];": 12691,
        "mas2[1000];": 12692,
        "mas2[i]": 12693,
        "kiekis": 12694,
        "abs(mas[i]": 12695,
        "mas2[i]);": 12696,
        "suma)": 12697,
        "a[1069],": 12698,
        "b[1069],": 12699,
        "pertama,": 12700,
        "kedua,": 12701,
        "jumlah": 12702,
        "pertama": 12703,
        "kedua": 12704,
        "(pertama": 12705,
        "kedua)": 12706,
        "kedua;": 12707,
        "pertama;": 12708,
        "(abs(s1[i]": 12709,
        "abs(s1[i]": 12710,
        "s2[i]);": 12711,
        "min(((10": 12712,
        "y)));": 12713,
        "hasil": 12714,
        "tmpA,": 12715,
        "tmpB;": 12716,
        "tmpA": 12717,
        "tmpB": 12718,
        "min(abs(a[i]": 12719,
        "abs(tmpA": 12720,
        "tmpB));": 12721,
        "awal,": 12722,
        "asli;": 12723,
        "gede,": 12724,
        "cilik;": 12725,
        "awal;": 12726,
        "gede": 12727,
        "max(awal[i],": 12728,
        "asli[i]);": 12729,
        "cilik": 12730,
        "min(awal[i],": 12731,
        "cilik);": 12732,
        "fcount": 12733,
        "bcount": 12734,
        "minsteps;": 12735,
        "os;": 12736,
        "comb;": 12737,
        "os": 12738,
        "os[i];": 12739,
        "comb[i])": 12740,
        "fcount++;": 12741,
        "57;": 12742,
        "bcount++;": 12743,
        "(fcount": 12744,
        "bcount)": 12745,
        "minsteps": 12746,
        "bcount;": 12747,
        "fcount;": 12748,
        "s1[i])": 12749,
        "swap(s[i],": 12750,
        "s1[i]);": 12751,
        "min(x": 12752,
        "min(abs(a[n]": 12753,
        "b[n]),": 12754,
        "b[n]));": 12755,
        "org[1001],": 12756,
        "dst[1001];": 12757,
        "org;": 12758,
        "dst;": 12759,
        "min(abs(org[i]": 12760,
        "dst[i]),": 12761,
        "abs(org[i]": 12762,
        "dst[i]));": 12763,
        "(9": 12764,
        "min(b": 12765,
        "min(a": 12766,
        "n.size();": 12767,
        "abs(n[i]": 12768,
        "m[j]);": 12769,
        "abs((n[i]": 12770,
        "abs(m[j]": 12771,
        "n[i]);": 12772,
        "e)));": 12773,
        "s2[n],": 12774,
        "s12[n];": 12775,
        "s12[i]": 12776,
        "abs(s2[i]": 12777,
        "s12[i]);": 12778,
        "abs(10": 12779,
        "s12[i]));": 12780,
        "a[5000],": 12781,
        "b[5000];": 12782,
        "(abs(a[i]": 12783,
        "max(a[i]": 12784,
        "min(a[i]": 12785,
        "pass;": 12786,
        "store": 12787,
        "abs(pass[i]": 12788,
        "str[i]);": 12789,
        "(store": 12790,
        "store;": 12791,
        "(int)s1[i];": 12792,
        "(int)s2[i];": 12793,
        "dif1": 12794,
        "dif1)": 12795,
        "dif1;": 12796,
        "abs(x))": 12797,
        "min(abs(s1[i]": 12798,
        "s2[i]),": 12799,
        "abs((s1[i]": 12800,
        "s2[i])));": 12801,
        "s2[n];": 12802,
        "min(s1[i],": 12803,
        "(s2[i]": 12804,
        "'0')));": 12805,
        "sch": 12806,
        "a[1010],": 12807,
        "b[1010];": 12808,
        "('9'": 12809,
        "47;": 12810,
        "ori;": 12811,
        "(ori[i]": 12812,
        "'\\0'": 12813,
        "ope[i]": 12814,
        "(ope[i]": 12815,
        "ori[i]": 12816,
        "ope[i];": 12817,
        "ori[i])": 12818,
        "ori[i];": 12819,
        "min(abs(s[i]": 12820,
        "t[i]),": 12821,
        "abs(min(s[i],": 12822,
        "t[i])": 12823,
        "t[i])));": 12824,
        "da": 12825,
        "db": 12826,
        "min((da": 12827,
        "(db": 12828,
        "item,": 12829,
        "item": 12830,
        "(item": 12831,
        "(-1)": 12832,
        "item;": 12833,
        "min(abs(b[i]": 12834,
        "a[i]),": 12835,
        "abs(b[i]": 12836,
        "a[i]));": 12837,
        "min(s,": 12838,
        "s1[i]),": 12839,
        "s1[i]));": 12840,
        "10001;": 12841,
        "min(abs((s1[i]": 12842,
        "'0')),": 12843,
        "min(abs((s2[i]": 12844,
        "cur_pos;": 12845,
        "cur_pos": 12846,
        "signed": 12847,
        "the_same(string": 12848,
        "s2[1]);": 12849,
        "**p;": 12850,
        "long[3];": 12851,
        "(p[i][2]": 12852,
        "p[i][2]": 12853,
        "p[i][0]": 12854,
        "p[i][1]": 12855,
        "ans[1000];": 12856,
        "arr[t];": 12857,
        "arr[n]": 12858,
        "times;": 12859,
        "(times": 12860,
        "fastpow(long": 12861,
        "exp)": 12862,
        "(exp": 12863,
        "exp": 12864,
        "ask(long": 12865,
        "testcases;": 12866,
        "(testcases--)": 12867,
        "((num": 12868,
        "**p,": 12869,
        "*[x];": 12870,
        "int[3];": 12871,
        "(p[i][0]": 12872,
        "sm;": 12873,
        "**A,": 12874,
        "(A[i][2]": 12875,
        "A[i][2]": 12876,
        "A[i][0]": 12877,
        "A[i][1]": 12878,
        "(a);": 12879,
        "b[1005],": 12880,
        "la,": 12881,
        "ra;": 12882,
        "ra": 12883,
        "(temp1)*a": 12884,
        "(temp2)*b;": 12885,
        "value)": 12886,
        "v.push_back((c": 12887,
        "v1.push_back((a": 12888,
        "2)))": 12889,
        "ar[(int)(1e6": 12890,
        "(rep--)": 12891,
        "a[10000],": 12892,
        "b[10000],": 12893,
        "k[10000],": 12894,
        "99999999999,": 12895,
        "min1)": 12896,
        "arr[1000000];": 12897,
        "999999999,": 12898,
        "min(minn,": 12899,
        "v[s]": 12900,
        "v[s];": 12901,
        "1000000003;": 12902,
        "jum": 12903,
        "arr[100009];": 12904,
        "(jum": 12905,
        "A);": 12906,
        "a1[k]": 12907,
        "a1[0];": 12908,
        "(a1[i]": 12909,
        "a1[i];": 12910,
        "odds;": 12911,
        "odds.push_back(x);": 12912,
        "sort(odds.begin(),": 12913,
        "odds.end());": 12914,
        "odds.size();": 12915,
        "odds[i];": 12916,
        "1999999999;": 12917,
        "min(num,": 12918,
        "a[100005],": 12919,
        "a[e]": 12920,
        "((v.size()": 12921,
        "ganjil": 12922,
        "999999999;": 12923,
        "ganjil)": 12924,
        "(total": 12925,
        "(min": 12926,
        "a[100000],": 12927,
        "ganjilterkecil": 12928,
        "1000000001;": 12929,
        "jumlahgenap": 12930,
        "jumlahganjil": 12931,
        "banyakganjil": 12932,
        "banyakganjil++;": 12933,
        "(ganjilterkecil": 12934,
        "(banyakganjil": 12935,
        "v1.push_back(a[i]);": 12936,
        "sort(v1.begin(),": 12937,
        "v1.end());": 12938,
        "v1[0]": 12939,
        "100100;": 12940,
        "v[MAXN];": 12941,
        "INF;": 12942,
        "soma": 12943,
        "(soma": 12944,
        "a[10000005];": 12945,
        "temp1;": 12946,
        "a[temp2]": 12947,
        "temp2++;": 12948,
        "temp2);": 12949,
        "(temp2": 12950,
        "dans,": 12951,
        "9999999999998,": 12952,
        "dans++;": 12953,
        "(dans": 12954,
        "minodd": 12955,
        "69696969696,": 12956,
        "blyat,": 12957,
        "(blyat": 12958,
        "odds++;": 12959,
        "(minodd": 12960,
        "blyat": 12961,
        "odds": 12962,
        "(odds": 12963,
        "a[100001],": 12964,
        "a[200000],": 12965,
        "b[100000];": 12966,
        "b[t]": 12967,
        "swap(b[i],": 12968,
        "b[t": 12969,
        "mn,": 12970,
        "b.push_back(a[i]);": 12971,
        "sort(b.begin(),": 12972,
        "a[100100];": 12973,
        "menor": 12974,
        "min((a[i]": 12975,
        "0x3f3f3f3f),": 12976,
        "menor);": 12977,
        "long)a[i];": 12978,
        "long)menor)": 12979,
        "a[1000005],": 12980,
        "((suma": 12981,
        "sumb)": 12982,
        "sumb;": 12983,
        "ar[100005],": 12984,
        "a[100005];": 12985,
        "ou": 12986,
        "ou++;": 12987,
        "(ji": 12988,
        "INFF,": 12989,
        "min(mi,": 12990,
        "a[100000]": 12991,
        "a[MAXN];": 12992,
        "first(4,": 12993,
        "first[second]": 12994,
        "first[x]": 12995,
        "(first[i]": 12996,
        "(pos)": 12997,
        "ara[n": 12998,
        "(ara[i]": 12999,
        "ara[i]": 13000,
        "to[5][5];": 13001,
        "'9';": 13002,
        "to[1][2]": 13003,
        "to[2][1]": 13004,
        "to[1][3]": 13005,
        "to[3][1]": 13006,
        "to[2][3]": 13007,
        "to[3][2]": 13008,
        "wn": 13009,
        "wn)": 13010,
        "to[x][y];": 13011,
        "spec": 13012,
        "op1": 13013,
        "op2": 13014,
        "op1)": 13015,
        "op2;": 13016,
        "op2)": 13017,
        "op1;": 13018,
        "no": 13019,
        "(no)": 13020,
        "winner,": 13021,
        "spectator;": 13022,
        "spectator": 13023,
        "winner;": 13024,
        "(winner": 13025,
        "spectator)": 13026,
        "winner": 13027,
        "vis[4];": 13028,
        "(vis[x]": 13029,
        "(vis[k]": 13030,
        "(!vis[k])": 13031,
        "win;": 13032,
        "(win": 13033,
        "player1,": 13034,
        "player2,": 13035,
        "player3;": 13036,
        "player1": 13037,
        "player2": 13038,
        "player3": 13039,
        "player3)": 13040,
        "player1)": 13041,
        "swap(player3,": 13042,
        "player2);": 13043,
        "player1);": 13044,
        "exp(1);": 13045,
        "p[4];": 13046,
        "re[105];": 13047,
        "re[j];": 13048,
        "(p[re[k]]": 13049,
        "re[k])": 13050,
        "fi)": 13051,
        "used[5];": 13052,
        "u[4];": 13053,
        "u[1]": 13054,
        "u[2]": 13055,
        "(!u[x])": 13056,
        "(!u[j])": 13057,
        "u[j]": 13058,
        "swap(int": 13059,
        "*b)": 13060,
        "*b;": 13061,
        "*b": 13062,
        "ele;": 13063,
        "waiter": 13064,
        "(ele": 13065,
        "swap(&p2,": 13066,
        "&waiter);": 13067,
        "swap(&p1,": 13068,
        "game;": 13069,
        "game.first": 13070,
        "game.second": 13071,
        "spec)": 13072,
        "game.first)": 13073,
        "game.second;": 13074,
        "game.first;": 13075,
        "L)": 13076,
        "players[4];": 13077,
        "players[1]": 13078,
        "players[2]": 13079,
        "players[3]": 13080,
        "won;": 13081,
        "(!players[won])": 13082,
        "won)": 13083,
        "players[j]": 13084,
        "!players[j];": 13085,
        "win,": 13086,
        "spect": 13087,
        "spect)": 13088,
        "win);": 13089,
        "next)": 13090,
        "2};": 13091,
        "a[1": 13092,
        "(q.empty()": 13093,
        "cek": 13094,
        "(!cek)": 13095,
        "(cek)": 13096,
        "f(temp,": 13097,
        "(a[temp]": 13098,
        "arr[100],": 13099,
        "prohibited": 13100,
        "prohibited)": 13101,
        "((arr[i]": 13102,
        "first_p": 13103,
        "second_p": 13104,
        "third_p": 13105,
        "yeah": 13106,
        "second_p)": 13107,
        "first_p)": 13108,
        "second_p;": 13109,
        "third_p;": 13110,
        "first_p;": 13111,
        "((yeah)": 13112,
        "\"Mishka\"": 13113,
        "\"Chris\"": 13114,
        "\"Friendship": 13115,
        "magic!^^\"": 13116,
        "sm,": 13117,
        "sm++;": 13118,
        "sc++;": 13119,
        "(sm": 13120,
        "sc)": 13121,
        "(sc": 13122,
        "sm)": 13123,
        "winm": 13124,
        "winc": 13125,
        "winm++;": 13126,
        "winc++;": 13127,
        "(winm": 13128,
        "winc)": 13129,
        "(winc": 13130,
        "winm)": 13131,
        "nn)": 13132,
        "aa)": 13133,
        "tot)": 13134,
        "mishka": 13135,
        "chrish": 13136,
        "mishka++;": 13137,
        "chrish++;": 13138,
        "(mishka": 13139,
        "chrish)": 13140,
        "cp,": 13141,
        "mp,": 13142,
        "mp": 13143,
        "cp": 13144,
        "mp++;": 13145,
        "cp++;": 13146,
        "(mp": 13147,
        "cp)": 13148,
        "A++;": 13149,
        "B++;": 13150,
        "summ": 13151,
        "sumc": 13152,
        "summ++;": 13153,
        "sumc++;": 13154,
        "(summ": 13155,
        "sumc)": 13156,
        "M++;": 13157,
        "C++;": 13158,
        "C)": 13159,
        "a[10005];": 13160,
        "(sa": 13161,
        "sb)": 13162,
        "suma++;": 13163,
        "sumb++;": 13164,
        "(suma": 13165,
        "chris": 13166,
        "chris++;": 13167,
        "(chris": 13168,
        "mishka)": 13169,
        "rep": 13170,
        "mishkaCounter": 13171,
        "chrisCounter": 13172,
        "chris;": 13173,
        "chris)": 13174,
        "mishkaCounter++;": 13175,
        "chrisCounter++;": 13176,
        "(mishkaCounter": 13177,
        "chrisCounter)": 13178,
        "(chrisCounter": 13179,
        "mishkaCounter)": 13180,
        "mCount": 13181,
        "cCount": 13182,
        "mCount++;": 13183,
        "cCount++;": 13184,
        "(mCount": 13185,
        "cCount)": 13186,
        "\"Mishka\\n\";": 13187,
        "\"Chris\\n\";": 13188,
        "magic!^^\\n\";": 13189,
        "step1": 13190,
        "++step;": 13191,
        "++step1;": 13192,
        "step1)": 13193,
        "cntm": 13194,
        "cntc": 13195,
        "cntm++;": 13196,
        "cntc++;": 13197,
        "(cntm": 13198,
        "cntc)": 13199,
        "mis": 13200,
        "mis++;": 13201,
        "(mis": 13202,
        "mis)": 13203,
        "x[100000],": 13204,
        "y[100000];": 13205,
        "y[i])": 13206,
        "cn1": 13207,
        "cn1++;": 13208,
        "(cn": 13209,
        "cn1)": 13210,
        "(cn1": 13211,
        "cn)": 13212,
        "x2++;": 13213,
        "m[100],": 13214,
        "c[100],": 13215,
        "c[i])": 13216,
        "D++;": 13217,
        "(D": 13218,
        "mi,": 13219,
        "(mi": 13220,
        "(cCount": 13221,
        "mCount)": 13222,
        "(c2": 13223,
        "\"rock\"": 13224,
        "\"scissors\"": 13225,
        "\"M\"": 13226,
        "\"F\"": 13227,
        "\"S\"": 13228,
        "\"paper\"": 13229,
        "\"?\"": 13230,
        "x[3];": 13231,
        "m[3]": 13232,
        "{\"rock\",": 13233,
        "\"scissors\",": 13234,
        "\"paper\"};": 13235,
        "\"FMS\";": 13236,
        "cnt[x[i]]++;": 13237,
        "(cnt[m[i]]": 13238,
        "cnt[m[(i": 13239,
        "3]]": 13240,
        "win)": 13241,
        "\"rock\")": 13242,
        "\"scissors\")": 13243,
        "\"paper\")": 13244,
        "judge(s);": 13245,
        "judge(s1);": 13246,
        "judge(s2);": 13247,
        "-2)": 13248,
        "\"S\\n\";": 13249,
        "\"M\\n\";": 13250,
        "\"F\\n\";": 13251,
        "\"?\\n\";": 13252,
        "(check(a[0],": 13253,
        "check(a[0],": 13254,
        "check(a[1],": 13255,
        "(check(a[2],": 13256,
        "a[1]))": 13257,
        "F,": 13258,
        "C[2005],": 13259,
        "win(string": 13260,
        "'s'": 13261,
        "y[0]": 13262,
        "'p'": 13263,
        "'r'": 13264,
        "'s')": 13265,
        "F": 13266,
        "(win(F,": 13267,
        "win(F,": 13268,
        "S))": 13269,
        "(win(M,": 13270,
        "F)": 13271,
        "win(M,": 13272,
        "(win(S,": 13273,
        "win(S,": 13274,
        "M))": 13275,
        "winner[]": 13276,
        "{\"F\",": 13277,
        "\"M\",": 13278,
        "\"S\",": 13279,
        "\"?\"};": 13280,
        "getwin(string": 13281,
        "(getwin(a,": 13282,
        "getwin(a,": 13283,
        "c))": 13284,
        "winner[0]": 13285,
        "(getwin(b,": 13286,
        "getwin(b,": 13287,
        "winner[1]": 13288,
        "(getwin(c,": 13289,
        "getwin(c,": 13290,
        "winner[2]": 13291,
        "winner[3]": 13292,
        "person[4]{'F',": 13293,
        "'M',": 13294,
        "'S',": 13295,
        "'?'};": 13296,
        "battle(const": 13297,
        "wins(const": 13298,
        "battle(a,": 13299,
        "winA,": 13300,
        "winB,": 13301,
        "winC,": 13302,
        "maxWin": 13303,
        "winCounter": 13304,
        "winA": 13305,
        "wins(a,": 13306,
        "winB": 13307,
        "wins(b,": 13308,
        "winC": 13309,
        "wins(c,": 13310,
        "winA;": 13311,
        "(winB": 13312,
        "winA)": 13313,
        "winB;": 13314,
        "(winC": 13315,
        "winB)": 13316,
        "winC;": 13317,
        "(maxWin": 13318,
        "winC);": 13319,
        "(winCounter": 13320,
        "person[winner]": 13321,
        "c[0])": 13322,
        "used[111111];": 13323,
        "a[211111],": 13324,
        "((f": 13325,
        "puts(\"?\");": 13326,
        "puts(\"M\");": 13327,
        "puts(\"S\");": 13328,
        "puts(\"F\");": 13329,
        "ms[\"scissors\"]": 13330,
        "\"paper\";": 13331,
        "ms[\"paper\"]": 13332,
        "\"rock\";": 13333,
        "ms[\"rock\"]": 13334,
        "\"scissors\";": 13335,
        "(ms[f]": 13336,
        "ms[f]": 13337,
        "(ms[m]": 13338,
        "ms[m]": 13339,
        "(ms[s]": 13340,
        "ms[s]": 13341,
        "as,": 13342,
        "bs,": 13343,
        "cs;": 13344,
        "W": 13345,
        "(as": 13346,
        "(bs": 13347,
        "(cs": 13348,
        "'F';": 13349,
        "'M';": 13350,
        "'?'": 13351,
        "(win(f,": 13352,
        "win(f,": 13353,
        "(win(m,": 13354,
        "win(m,": 13355,
        "(win(s,": 13356,
        "win(s,": 13357,
        "f))": 13358,
        "winner(string": 13359,
        "(winner(x,": 13360,
        "z))": 13361,
        "(winner(y,": 13362,
        "(winner(z,": 13363,
        "nan": 13364,
        "(nan)": 13365,
        "checker(string": 13366,
        "(checker(F,": 13367,
        "S)": 13368,
        "(checker(S,": 13369,
        "(checker(M,": 13370,
        "gesture;": 13371,
        "gesture[\"rock\"]": 13372,
        "gesture[\"scissors\"]": 13373,
        "gesture[\"paper\"]": 13374,
        "(gesture[f]": 13375,
        "gesture[f]": 13376,
        "(gesture[m]": 13377,
        "gesture[m]": 13378,
        "(gesture[s]": 13379,
        "gesture[s]": 13380,
        "r.push_back(s[0]);": 13381,
        "r.push_back(t[0]);": 13382,
        "r.push_back(u[0]);": 13383,
        "sort(r.begin(),": 13384,
        "r.end());": 13385,
        "\"rrs\"": 13386,
        "\"ppr\"": 13387,
        "\"pss\")": 13388,
        "box": 13389,
        "r[0]": 13390,
        "r[1]": 13391,
        "r[2];": 13392,
        "box)": 13393,
        "(u[0]": 13394,
        "\"rock\",": 13395,
        "\"paper\",": 13396,
        "mp[s4]++;": 13397,
        "V.push_back(s4);": 13398,
        "(mp[s1]": 13399,
        "mp[s2]": 13400,
        "(mp[s3]": 13401,
        "mp[s1]": 13402,
        "(mp[s2]": 13403,
        "mp[s3]": 13404,
        "sss)": 13405,
        "(sss": 13406,
        "sss": 13407,
        "cmp(string": 13408,
        "cmp(a,": 13409,
        "cmp(b,": 13410,
        "cmp(c,": 13411,
        "\"F\",": 13412,
        "\"?\",": 13413,
        "ch[3]": 13414,
        "{'F',": 13415,
        "'S'};": 13416,
        "str[3];": 13417,
        "str[2];": 13418,
        "m[\"rock\"]": 13419,
        "m[\"paper\"]": 13420,
        "m[\"scissors\"]": 13421,
        "m[str[2]]": 13422,
        "ch[2]": 13423,
        "(str[2]": 13424,
        "m[str[1]]": 13425,
        "ch[1]": 13426,
        "m[str[0]]": 13427,
        "ch[0]": 13428,
        "'Q')": 13429,
        "'A')": 13430,
        "++sum;": 13431,
        "dp[3];": 13432,
        "dp[0];": 13433,
        "dp[2]": 13434,
        "dp[1];": 13435,
        "dp[0]++;": 13436,
        "QAQ_count": 13437,
        "(line.size()": 13438,
        "line.size()": 13439,
        "(line[j]": 13440,
        "line.size();": 13441,
        "(line[k]": 13442,
        "QAQ_count++;": 13443,
        "q1": 13444,
        "q1++;": 13445,
        "q1);": 13446,
        "s[300],": 13447,
        "s1[5];": 13448,
        "s1[2]": 13449,
        "s[k];": 13450,
        "s1[3]": 13451,
        "(!strcmp(s1,": 13452,
        "\"QAQ\"))": 13453,
        "QAQ": 13454,
        "'Q'": 13455,
        "'A'": 13456,
        "str[k]": 13457,
        "QAQ++;": 13458,
        "find_it(string": 13459,
        "t[j": 13460,
        "\"QAQ\";": 13461,
        "find_it(s,": 13462,
        "ss(\"QAQ\");": 13463,
        "dp[125][5];": 13464,
        "idx,": 13465,
        "ss.size())": 13466,
        "&ret": 13467,
        "dp[idx][cur];": 13468,
        "(~ret)": 13469,
        "(str[idx]": 13470,
        "ss[cur])": 13471,
        "solve(idx": 13472,
        "solve(0,": 13473,
        "dp(m": 13474,
        "C++)": 13475,
        "X--)": 13476,
        "(t[X]": 13477,
        "s[C])": 13478,
        "dp[X": 13479,
        "dp[X];": 13480,
        "dp[m]": 13481,
        "{'Q',": 13482,
        "'A',": 13483,
        "'Q'};": 13484,
        "FindString(string": 13485,
        "my[idx]": 13486,
        "my[idx])": 13487,
        "FindString(s,": 13488,
        "staus[2][101],": 13489,
        "ori[101];": 13490,
        "strlen(ori);": 13491,
        "staus[0][temp1++]": 13492,
        "staus[1][temp2++]": 13493,
        "(staus[0][i]": 13494,
        "staus[1][j])": 13495,
        "(staus[0][d]": 13496,
        "(a[z]": 13497,
        "(a[y]": 13498,
        "swap(a": 13499,
        "1000000007)": 13500,
        "1000000007))": 13501,
        "q[100];": 13502,
        "++t": 13503,
        "q[i]);": 13504,
        "tot2;": 13505,
        "(int)s1.length();": 13506,
        "(int)s2.length();": 13507,
        "(s2[j]": 13508,
        "dp[j": 13509,
        "dp[j];": 13510,
        "dp[3]": 13511,
        "lnum": 13512,
        "rnum": 13513,
        "lnum++;": 13514,
        "rnum++;": 13515,
        "rnum;": 13516,
        "pref[n],": 13517,
        "suff[n];": 13518,
        "pref[i]": 13519,
        "suff[i]": 13520,
        "pref[i": 13521,
        "suff[i": 13522,
        "suff[i];": 13523,
        "a_post[n": 13524,
        "q_post[n": 13525,
        "a_post[n]": 13526,
        "q_post[n]": 13527,
        "a_post[i]": 13528,
        "a_post[i": 13529,
        "q_post[i]": 13530,
        "q_post[i": 13531,
        "a_post[i]++;": 13532,
        "q_post[i]++;": 13533,
        "q_post[j": 13534,
        "countSubseq(string": 13535,
        "dp[m": 13536,
        "{{0}};": 13537,
        "dp[m][n];": 13538,
        "countSubseq(n,": 13539,
        "\"QAQ\")": 13540,
        "s[l]": 13541,
        "pref[105];": 13542,
        "pref[0]": 13543,
        "'Q');": 13544,
        "(pref[n": 13545,
        "pref[i]);": 13546,
        "ats": 13547,
        "ats++;": 13548,
        "f[b])": 13549,
        "dfs(i": 13550,
        "(arr[n": 13551,
        "arr[i]);": 13552,
        "q_count": 13553,
        "QA[n];": 13554,
        "QAQ[n];": 13555,
        "QAQ[0]": 13556,
        "QA[0]": 13557,
        "q_count++;": 13558,
        "QAQ[i]": 13559,
        "QAQ[i": 13560,
        "QA[i]": 13561,
        "QA[i": 13562,
        "q_count;": 13563,
        "QAQ[n": 13564,
        "cs[n": 13565,
        "ce[n": 13566,
        "cs[0]": 13567,
        "ce[n]": 13568,
        "cs[i": 13569,
        "cs[i]": 13570,
        "cs[i];": 13571,
        "ce[i]": 13572,
        "ce[i": 13573,
        "sum[205];": 13574,
        "memset(sum,": 13575,
        "sizeof(sum));": 13576,
        "(sum[len": 13577,
        "s[2333];": 13578,
        "x.length()": 13579,
        "QQ[len": 13580,
        "AQ[len": 13581,
        "Q[len": 13582,
        "Q[len]": 13583,
        "(x[len]": 13584,
        "AQ[len]": 13585,
        "QQ[len]": 13586,
        "AQ[i]": 13587,
        "AQ[i": 13588,
        "Q[i": 13589,
        "QQ[i]": 13590,
        "QQ[i": 13591,
        "Q[i]": 13592,
        "QQ[0]": 13593,
        "(str[k]": 13594,
        "(s[f]": 13595,
        "L[100];": 13596,
        "R[100];": 13597,
        "memset(L,": 13598,
        "sizeof(L));": 13599,
        "memset(R,": 13600,
        "sizeof(R));": 13601,
        "R[i]": 13602,
        "(L[i]": 13603,
        "R[i];": 13604,
        "flag++)": 13605,
        "a[flag]": 13606,
        "a[k]++;": 13607,
        "a[k": 13608,
        "st.length();": 13609,
        "st[j]": 13610,
        "st[k]": 13611,
        "solve(j": 13612,
        "q[101];": 13613,
        "(q[str.length()": 13614,
        "20);": 13615,
        "100};": 13616,
        "a[]": 13617,
        "{100,": 13618,
        "amount;": 13619,
        "bills[]": 13620,
        "(amount": 13621,
        "bills[i];": 13622,
        "bills[i++];": 13623,
        "kt(int": 13624,
        "&n,": 13625,
        "kt(n,": 13626,
        "1000000000)": 13627,
        "100))": 13628,
        "20))": 13629,
        "10))": 13630,
        "5))": 13631,
        "banyak": 13632,
        "ar[]": 13633,
        "ar[i])": 13634,
        "myC(long": 13635,
        "arr[]": 13636,
        "shengyu;": 13637,
        "shengyu": 13638,
        "k[]": 13639,
        "min1,": 13640,
        "max1,": 13641,
        "sum_n,": 13642,
        "index_max,": 13643,
        "index_min;": 13644,
        "arr1[1000][1000];": 13645,
        "arr3[100];": 13646,
        "arr[10000];": 13647,
        "display_vector(vector<int>": 13648,
        "min_max(vector<int>": 13649,
        "index_min": 13650,
        "max1)": 13651,
        "index_max": 13652,
        "sum_v(vector<int>": 13653,
        "sum_n": 13654,
        "sum_n;": 13655,
        "is_it_sorted_acs(vector<int>": 13656,
        "test1": 13657,
        "(v[i": 13658,
        "test1;": 13659,
        "is_it_sorted_des(vector<int>": 13660,
        "cost[5]": 13661,
        "cost[i];": 13662,
        "p[]": 13663,
        "p[i],": 13664,
        "(100": 13665,
        "100));": 13666,
        "(20": 13667,
        "20));": 13668,
        "10));": 13669,
        "(5": 13670,
        "5));": 13671,
        "d[5]": 13672,
        "hitung": 13673,
        "500000;": 13674,
        "max(ceil(1.0": 13675,
        "p)),": 13676,
        "p));": 13677,
        "MAXM": 13678,
        "1e7;": 13679,
        "1e-5;": 13680,
        "mceil(long": 13681,
        "!(first": 13682,
        "getans()": 13683,
        "mceil(first,": 13684,
        "mceil(second": 13685,
        "kek": 13686,
        "max(t,": 13687,
        "max(r1,": 13688,
        "x[1000006];": 13689,
        "2999999999ll,": 13690,
        "2999999999ll;": 13691,
        "2999999999ll)": 13692,
        "min(min1,": 13693,
        "(min1": 13694,
        "getInt(int": 13695,
        "*p);": 13696,
        "1000010;": 13697,
        "a2))": 13698,
        "*p)": 13699,
        "-(getchar()": 13700,
        "((ch": 13701,
        "max(ceil(x": 13702,
        "p),": 13703,
        "ceil(y": 13704,
        "q));": 13705,
        "long)ceil((y": 13706,
        "p)));": 13707,
        "(check(x,": 13708,
        "TESTS;": 13709,
        "(ceil((y": 13710,
        "((q": 13711,
        "1.0))": 13712,
        "ceil((y": 13713,
        "1.0)),": 13714,
        "1.0)));": 13715,
        "(!ok(1e9,": 13716,
        "ans.push_back(-1);": 13717,
        "(!ok(z": 13718,
        "ans.push_back((q": 13719,
        "maxx(long": 13720,
        "minn(long": 13721,
        "poww(long": 13722,
        "(result": 13723,
        "(mid)-x": 13724,
        "(l)-x": 13725,
        "id++)": 13726,
        "ulong": 13727,
        "a[len];": 13728,
        "(solve(mid))": 13729,
        "(tt--)": 13730,
        "max(t1,": 13731,
        "(!f(x,": 13732,
        "r))": 13733,
        "(f(x,": 13734,
        "md))": 13735,
        "(pp": 13736,
        "(te--)": 13737,
        "1000000004,": 13738,
        "1000000004)": 13739,
        "__gcd(q,": 13740,
        "((long": 13741,
        "long)1e18": 13742,
        "low;": 13743,
        "jav;": 13744,
        "jav": 13745,
        "Check(long": 13746,
        "Khela_Hobe()": 13747,
        "(Check(mid))": 13748,
        "mode1(long": 13749,
        "mode2(long": 13750,
        "gcdNum(long": 13751,
        "m1,": 13752,
        "mode2(x,": 13753,
        "gcd": 13754,
        "gcdNum(m2,": 13755,
        "mode1(x,": 13756,
        "gdc": 13757,
        "gcdNum(m1,": 13758,
        "GCD(long": 13759,
        "GCD(b,": 13760,
        "GCD(p,": 13761,
        "gcd;": 13762,
        "0x7fffffffffffffff;": 13763,
        "tinf": 13764,
        "k1);": 13765,
        "!(x": 13766,
        "max(ceil((long": 13767,
        "double)x": 13768,
        "double)p),": 13769,
        "ceil((long": 13770,
        "double)(y": 13771,
        "double)(q": 13772,
        "ceil(long": 13773,
        "max(ceil(x,": 13774,
        "triangleNumber[501]": 13775,
        "precomp()": 13776,
        "32;": 13777,
        "triangleNumber[(i": 13778,
        "precomp();": 13779,
        "(triangleNumber[N])": 13780,
        "puts(\"YES\"),": 13781,
        "arr[505];": 13782,
        "tambah": 13783,
        "tambah)": 13784,
        "tambah++;": 13785,
        "(arr[n])": 13786,
        "v[1000];": 13787,
        "prealoc()": 13788,
        "501;": 13789,
        "prealoc();": 13790,
        "(v[n])": 13791,
        "8": 13792,
        "sqrt(x);": 13793,
        "(int)x;": 13794,
        "minIncl": 13795,
        "maxExcl": 13796,
        "(minIncl": 13797,
        "maxExcl)": 13798,
        "tri[50000];": 13799,
        "tot;": 13800,
        "tri[tot]": 13801,
        "tri[num]": 13802,
        "(double": 13803,
        "f(n);": 13804,
        "!(cout": 13805,
        "v.push_back(0);": 13806,
        "v.insert(v.begin()": 13807,
        "(number": 13808,
        "++counter)": 13809,
        "number)": 13810,
        "set": 13811,
        "fix": 13812,
        "sqrt(val)": 13813,
        "(fix": 13814,
        "previous": 13815,
        "2;;": 13816,
        "file()": 13817,
        "file();": 13818,
        "(8": 13819,
        "(int(sqrt(i))": 13820,
        "int(sqrt(i))": 13821,
        "asd[temp]++;": 13822,
        "(asd[z]": 13823,
        "v.at(i)": 13824,
        "1.e3;": 13825,
        "a[mxn];": 13826,
        "((tri(n)": 13827,
        "\"NO\"))": 13828,
        "sqrt(8": 13829,
        "(int)y": 13830,
        "x.push_back(0);": 13831,
        "x.push_back(x.back()": 13832,
        "(k++": 13833,
        "x.back()": 13834,
        "505);": 13835,
        "(binary_search(x.begin(),": 13836,
        "x.end(),": 13837,
        "d1;": 13838,
        "d1)": 13839,
        "m[s]++;": 13840,
        "it->first;": 13841,
        "Team,": 13842,
        "Win;": 13843,
        "Goals": 13844,
        "(Goals": 13845,
        "Team;": 13846,
        "(Team": 13847,
        "Win)": 13848,
        "Goals++;": 13849,
        "Goals--;": 13850,
        "Win": 13851,
        "a[1001][1001],": 13852,
        "mm;": 13853,
        "mm[s]++;": 13854,
        "mm[s])": 13855,
        "mm[s];": 13856,
        "answer,": 13857,
        "S686;": 13858,
        "M249(int": 13859,
        "s[S686]++;": 13860,
        "s[S686])": 13861,
        "s[S686];": 13862,
        "M249(n);": 13863,
        "s[k]++;": 13864,
        "v.push_back(s);": 13865,
        "count(v.begin(),": 13866,
        "mmm;": 13867,
        "mmm[a]++;": 13868,
        "(mmm[a]": 13869,
        "mmm[a];": 13870,
        "100000000": 13871,
        "wt;": 13872,
        "ctr)": 13873,
        "wt": 13874,
        "v[wt]": 13875,
        "score1,": 13876,
        "score2;": 13877,
        "score1++;": 13878,
        "score2++;": 13879,
        "(score1": 13880,
        "score2)": 13881,
        "(score2": 13882,
        "score1)": 13883,
        "olds": 13884,
        "se.size();": 13885,
        "sort(s,": 13886,
        "co;": 13887,
        "s[102];": 13888,
        "(m[s]": 13889,
        "m[s];": 13890,
        "gx[]": 13891,
        "gy[]": 13892,
        "(m[last]": 13893,
        "m[s2])": 13894,
        "cn1,": 13895,
        "cn2,": 13896,
        "cn2++,": 13897,
        "cn2)": 13898,
        "-699999999;": 13899,
        "q[a]++;": 13900,
        "(q[a]": 13901,
        "y.insert(s[i]);": 13902,
        "set<string>::iterator": 13903,
        "setIt": 13904,
        "y.begin();": 13905,
        "*setIt)": 13906,
        "*setIt": 13907,
        "setIt++;": 13908,
        "a[12],": 13909,
        "b[12];": 13910,
        "(!p.count(a))": 13911,
        "p[a]": 13912,
        "p[a]++;": 13913,
        "(p[a]": 13914,
        "p[a];": 13915,
        "int(1e9);": 13916,
        "(1e9),": 13917,
        "maap;": 13918,
        "maap[s]++;": 13919,
        "(maap[s]": 13920,
        "maap[s];": 13921,
        "(cnt[0]": 13922,
        "cnt[0])": 13923,
        "ma[s]++;": 13924,
        "ma.begin();": 13925,
        "ma.end();": 13926,
        "*i;": 13927,
        "(it.second": 13928,
        "it.first;": 13929,
        "it.second;": 13930,
        "arr[0],": 13931,
        "n1++;": 13932,
        "n2++;": 13933,
        "(cont": 13934,
        "(sw)": 13935,
        "aux2)": 13936,
        "v0,": 13937,
        "v0": 13938,
        "day": 13939,
        "va": 13940,
        "v0;": 13941,
        "(va": 13942,
        "day++;": 13943,
        "min(v,": 13944,
        "v1);": 13945,
        "add": 13946,
        "(v0": 13947,
        "v1)": 13948,
        "(add": 13949,
        "add;": 13950,
        "read": 13951,
        "(read": 13952,
        "speed": 13953,
        "speed;": 13954,
        "min(speed": 13955,
        "1e-15;": 13956,
        "min(v0": 13957,
        "(min(v0,": 13958,
        "min(sp": 13959,
        "np,": 13960,
        "is,": 13961,
        "ms,": 13962,
        "rr;": 13963,
        "np": 13964,
        "cur_speed": 13965,
        "cur_speed;": 13966,
        "np)": 13967,
        "as;": 13968,
        "(cur_speed": 13969,
        "days++;": 13970,
        "min(v1": 13971,
        "l),": 13972,
        "v0);": 13973,
        "vl,": 13974,
        "vl": 13975,
        "c;)": 13976,
        "vl)": 13977,
        "vl;": 13978,
        "Max,": 13979,
        "last);": 13980,
        "300005;": 13981,
        "maxa": 13982,
        "powmod(long": 13983,
        "clock_t": 13984,
        "finish;": 13985,
        "duration;": 13986,
        "vm,": 13987,
        "vm": 13988,
        "min(vm,": 13989,
        "((v0": 13990,
        "curr);": 13991,
        "min(sp,": 13992,
        "ddd,": 13993,
        "infint64_t": 13994,
        "pagesRead": 13995,
        "(pagesRead": 13996,
        "Day": 13997,
        "Page_Sum": 13998,
        "(Page_Sum": 13999,
        "Day++;": 14000,
        "(Day": 14001,
        "pages_read": 14002,
        "(min(v": 14003,
        "v1));": 14004,
        "(pages_read": 14005,
        "min(cnt": 14006,
        "K);": 14007,
        "stack<int>": 14008,
        "page;": 14009,
        "page.push(0);": 14010,
        "page.top();": 14011,
        "min(pre,": 14012,
        "page.push(now);": 14013,
        "total_page,": 14014,
        "acc,": 14015,
        "page_back;": 14016,
        "day_count,": 14017,
        "remaining;": 14018,
        "total_page": 14019,
        "acc": 14020,
        "day_count": 14021,
        "remaining": 14022,
        "(remaining": 14023,
        "acc))": 14024,
        "(acc": 14025,
        "day_count++;": 14026,
        "all,": 14027,
        "more,": 14028,
        "maxs,": 14029,
        "all": 14030,
        "more": 14031,
        "see": 14032,
        "(see": 14033,
        "all)": 14034,
        "min(maxs,": 14035,
        "more);": 14036,
        "(((sum": 14037,
        "(v0))": 14038,
        "v0)": 14039,
        "(maxv": 14040,
        "newpage": 14041,
        "newpage;": 14042,
        "curs": 14043,
        "min(curs,": 14044,
        "\":(\"": 14045,
        "sumd": 14046,
        "hred": 14047,
        "hred)": 14048,
        "sumd)": 14049,
        "(sumd": 14050,
        "sumd++;": 14051,
        "at": 14052,
        "(at": 14053,
        "min(max,": 14054,
        "page": 14055,
        "(day": 14056,
        "(page": 14057,
        "000000);": 14058,
        "sol++;": 14059,
        "sc": 14060,
        "write(long": 14061,
        "-x,": 14062,
        "putchar('-');": 14063,
        "write(x": 14064,
        "putchar(x": 14065,
        "writeln(long": 14066,
        "write(x);": 14067,
        "6100,": 14068,
        "4610000;": 14069,
        "ind[N],": 14070,
        "ver[N],": 14071,
        "nxt[N],": 14072,
        "head[N],": 14073,
        "ver[++en]": 14074,
        "nxt[en]": 14075,
        "head[x];": 14076,
        "head[x]": 14077,
        "++ind[y];": 14078,
        "q.push(i),": 14079,
        "add(x,": 14080,
        "nxt[i])": 14081,
        "ver[i];": 14082,
        "(d[y])": 14083,
        "d[y]": 14084,
        "d[x]": 14085,
        "d[y]);": 14086,
        "writeln(ans);": 14087,
        "getRank(int": 14088,
        "p[],": 14089,
        "r[])": 14090,
        "getRank(p[i],": 14091,
        "p[2001],": 14092,
        "r[2001]": 14093,
        "getRank(i,": 14094,
        "gr[2005],": 14095,
        "go(int": 14096,
        "(ans[gr[x]]": 14097,
        "go(gr[x]);": 14098,
        "ans[x]": 14099,
        "ans[gr[x]]": 14100,
        "sizeof(ans));": 14101,
        "gr[a];": 14102,
        "(gr[a]": 14103,
        "ans[a]": 14104,
        "(ans[a]": 14105,
        "go(a);": 14106,
        "ans[a];": 14107,
        "v[2002];": 14108,
        "dep": 14109,
        "dep)": 14110,
        "v[k].size();": 14111,
        "dfs(v[k][i],": 14112,
        "v[x].push_back(i);": 14113,
        "dfs(m[x],": 14114,
        "fa[2005];": 14115,
        "fa[i];": 14116,
        "fa[j])": 14117,
        "tmp);": 14118,
        "2e+3": 14119,
        "tree[MAXN];": 14120,
        "input[MAXN];": 14121,
        "tree[i].clear();": 14122,
        "memset(input,": 14123,
        "sizeof(input));": 14124,
        "(tree[pos].size()": 14125,
        "tree[pos].size();": 14126,
        "dfs(tree[pos][i],": 14127,
        "tree[input[i]].push_back(i);": 14128,
        "(num[x]": 14129,
        "(num[x])": 14130,
        "num[x];": 14131,
        "dfs(vis[x])": 14132,
        "degree[2000];": 14133,
        "maxlevel": 14134,
        "recur(int": 14135,
        "level)": 14136,
        "max(maxlevel,": 14137,
        "level);": 14138,
        "a[now].size();": 14139,
        "recur(a[now][i],": 14140,
        "level": 14141,
        "a[temp": 14142,
        "(degree[i])": 14143,
        "recur(i,": 14144,
        "a[2010];": 14145,
        "b[2010];": 14146,
        "b[j]++;": 14147,
        "a[t];": 14148,
        "*max_element(b,": 14149,
        "fth[maxN],": 14150,
        "vis[maxN]": 14151,
        "(fth[x]": 14152,
        "h);": 14153,
        "dfs(fth[x],": 14154,
        "fth[i];": 14155,
        "num[x]": 14156,
        "v[2003];": 14157,
        "lvl": 14158,
        "vis[2003];": 14159,
        "v[a].size();": 14160,
        "(!vis[v[a][i]])": 14161,
        "q.push(v[a][i]);": 14162,
        "vis[v[a][i]]": 14163,
        "max(lvl,": 14164,
        "vis[v[a][i]]);": 14165,
        "par;": 14166,
        "v[a].push_back(i);": 14167,
        "par.push_back(i);": 14168,
        "par.size();": 14169,
        "bfs(par[i]);": 14170,
        "xx[20005];": 14171,
        "(xx[x]": 14172,
        "xx[x];": 14173,
        "max(sum,": 14174,
        "find(i));": 14175,
        "visited[N];": 14176,
        "ar[N];": 14177,
        "sum[N];": 14178,
        "ar[i].size();": 14179,
        "solve(ar[i][j]));": 14180,
        "ar1[N],": 14181,
        "ar1[k++]": 14182,
        "ar[c].push_back(i);": 14183,
        "solve(ar1[i]);": 14184,
        "max(m2,": 14185,
        "dep[2005];": 14186,
        "boss;": 14187,
        "graph[2005];": 14188,
        "dep[u]": 14189,
        "dep[p]": 14190,
        "graph[u].size();": 14191,
        "(!dep[graph[u][i]])": 14192,
        "dfs(graph[u][i],": 14193,
        "memset(dep,": 14194,
        "sizeof(dep));": 14195,
        "graph[v].push_back(i);": 14196,
        "boss.push_back(i);": 14197,
        "boss.size();": 14198,
        "dfs(boss[i],": 14199,
        "boss[i]);": 14200,
        "dep[i]);": 14201,
        "dep[2001];": 14202,
        "seen[2001];": 14203,
        "adj[2001];": 14204,
        "dep[s]": 14205,
        "seen[s]": 14206,
        "adj[a].size();": 14207,
        "ngh": 14208,
        "adj[a][i];": 14209,
        "(!seen[ngh])": 14210,
        "seen[ngh]": 14211,
        "dep[ngh]": 14212,
        "dep[a]": 14213,
        "q.push(ngh);": 14214,
        "adj[v].push_back(i);": 14215,
        "BFS(i);": 14216,
        "xx[2005];": 14217,
        "arr[2005],": 14218,
        "depth[2005];": 14219,
        "(depth[i]": 14220,
        "depth[i];": 14221,
        "depth[i]": 14222,
        "dfs(arr[i])": 14223,
        "depth[i]);": 14224,
        "d[100005];": 14225,
        "fi(int": 14226,
        "(d[x]": 14227,
        "fi(d[x])": 14228,
        "fi(i));": 14229,
        "mp[2010];": 14230,
        "(mp[x]": 14231,
        "fun(mp[x]);": 14232,
        "fun(i));": 14233,
        "*adj;": 14234,
        "height(int": 14235,
        "list<int>::iterator": 14236,
        "adj[v].begin();": 14237,
        "adj[v].end();": 14238,
        "(*it": 14239,
        "height(*it);": 14240,
        "list<int>[n": 14241,
        "adj[temp].push_back(i);": 14242,
        "height(v);": 14243,
        "a[2001],": 14244,
        "max(f,": 14245,
        "ch[2001],": 14246,
        "ch[v]": 14247,
        "(p[cnt]": 14248,
        "p[cnt];": 14249,
        "a[2005];": 14250,
        "node,": 14251,
        "maxh;": 14252,
        "maxh": 14253,
        "(a[node]": 14254,
        "a[node];": 14255,
        "maxh)": 14256,
        "p[N];": 14257,
        "V[N];": 14258,
        "dep,": 14259,
        "V[u].size();": 14260,
        "max(dep,": 14261,
        "dfs(V[u][i]));": 14262,
        "dep;": 14263,
        "V[p[i]].push_back(i);": 14264,
        "dfs(i));": 14265,
        "visit(int);": 14266,
        "p(2001,": 14267,
        "large": 14268,
        "v.push_back(-1);": 14269,
        "fill(p.begin(),": 14270,
        "p.begin()": 14271,
        "visit(i);": 14272,
        "(large": 14273,
        "coun)": 14274,
        "visit(int": 14275,
        "p[v[i]]": 14276,
        "visit(v[i]);": 14277,
        "b[100005];": 14278,
        "dfs(a[x],": 14279,
        "p[2001];": 14280,
        "vis[2001]": 14281,
        "cnts)": 14282,
        "leaf": 14283,
        "p[k].size();": 14284,
        "(!vis[p[k][i]])": 14285,
        "dfs(p[k][i],": 14286,
        "cnts": 14287,
        "(maxi": 14288,
        "cnts;": 14289,
        "p[i].push_back(temp);": 14290,
        "p[temp].push_back(i);": 14291,
        "p[i].push_back(0);": 14292,
        "p[0].push_back(i);": 14293,
        "p[r];": 14294,
        "root.push_back(i);": 14295,
        "vis[n": 14296,
        "max_depth[root.size()];": 14297,
        "root.size();": 14298,
        "max_depth[i]": 14299,
        "level[n": 14300,
        "memset(level,": 14301,
        "sizeof(level));": 14302,
        "q.push(root[j]);": 14303,
        "vis[root[j]]": 14304,
        "level[root[j]]": 14305,
        "v[t].size();": 14306,
        "(vis[v[t][i]]": 14307,
        "vis[v[t][i]]": 14308,
        "level[v[t][i]]": 14309,
        "level[t]": 14310,
        "(max_depth[j]": 14311,
        "level[v[t][i]])": 14312,
        "max_depth[j]": 14313,
        "level[v[t][i]];": 14314,
        "q.push(v[t][i]);": 14315,
        "(max_depth[i]": 14316,
        "max_depth[i];": 14317,
        "employee[2001];": 14318,
        "dfs(employee[pos])": 14319,
        "employee[i];": 14320,
        "dfs(employee[i]);": 14321,
        "parent(2020,": 14322,
        "parent[i": 14323,
        "(parent[x]": 14324,
        "parent[x];": 14325,
        "max(length,": 14326,
        "z[1000005];": 14327,
        "pf(long": 14328,
        "long);": 14329,
        "bfs(vector<long": 14330,
        "v[],": 14331,
        "(a[v[i][j]]": 14332,
        "a[v[i][j]]": 14333,
        "bfs(v,": 14334,
        "v[i][j])": 14335,
        "vis[n]": 14336,
        "v[n],": 14337,
        "a.push_back(x);": 14338,
        "v[i].push_back(x": 14339,
        "v[x": 14340,
        "max(h,": 14341,
        "vis,": 14342,
        "a[100000];": 14343,
        "\"Anton\"": 14344,
        "\"Danik\"": 14345,
        "\"Friendship\"": 14346,
        "cnt2)": 14347,
        "\"Friendship\";": 14348,
        "\"Anton\";": 14349,
        "\"Danik\";": 14350,
        "r[100005];": 14351,
        "cnta,": 14352,
        "cntd;": 14353,
        "cnta++;": 14354,
        "cntd++;": 14355,
        "(cnta": 14356,
        "cntd)": 14357,
        "\"Anton\\n\";": 14358,
        "\"Danik\\n\";": 14359,
        "\"Friendship\\n\";": 14360,
        "s[100003];": 14361,
        "sum_A": 14362,
        "sum_D": 14363,
        "sum_A++;": 14364,
        "sum_D++;": 14365,
        "(sum_A": 14366,
        "sum_D)": 14367,
        "anton": 14368,
        "danik": 14369,
        "anton++;": 14370,
        "danik++;": 14371,
        "(anton": 14372,
        "danik)": 14373,
        "3.14159;": 14374,
        "*str1": 14375,
        "char[len];": 14376,
        "str1[i];": 14377,
        "(str1[i]": 14378,
        "numOfGames;": 14379,
        "65)": 14380,
        "68)": 14381,
        "cd": 14382,
        "(ca": 14383,
        "cd)": 14384,
        "counter_A": 14385,
        "counter_D": 14386,
        "counter_A++;": 14387,
        "counter_D++;": 14388,
        "(counter_A": 14389,
        "counter_D)": 14390,
        "(counter_D": 14391,
        "counter_A)": 14392,
        "mp['A']": 14393,
        "mp['D']": 14394,
        "(mp['D']": 14395,
        "mp['A'])": 14396,
        "(mp['A']": 14397,
        "mp['D'])": 14398,
        "++a1;": 14399,
        "++a2;": 14400,
        "(a2": 14401,
        "(danik": 14402,
        "anton)": 14403,
        "tota": 14404,
        "totd": 14405,
        "tota++;": 14406,
        "totd++;": 14407,
        "(tota": 14408,
        "totd)": 14409,
        "(totd": 14410,
        "tota)": 14411,
        "rount": 14412,
        "joy;": 14413,
        "(joy[i]": 14414,
        "rount++;": 14415,
        "rount)": 14416,
        "(rount": 14417,
        "cd++;": 14418,
        "(cd": 14419,
        "ca)": 14420,
        "arr[100010];": 14421,
        "x.length();": 14422,
        "ss(s);": 14423,
        "++c1;": 14424,
        "++c2;": 14425,
        "sumD": 14426,
        "++sumA;": 14427,
        "++sumD;": 14428,
        "(sumA": 14429,
        "sumD)": 14430,
        "(sumD": 14431,
        "sumA)": 14432,
        "game[n": 14433,
        "memset(game,": 14434,
        "sizeof(game));": 14435,
        "game[v]": 14436,
        "(game[i]": 14437,
        "\"Oh,": 14438,
        "my": 14439,
        "keyboard!\\n\";": 14440,
        "\"I": 14441,
        "become": 14442,
        "the": 14443,
        "guy.\\n\";": 14444,
        "guy.\"": 14445,
        "keyboard!\"": 14446,
        "x[100],": 14447,
        "y[100],": 14448,
        "s.insert(z);": 14449,
        "(can": 14450,
        "check[100": 14451,
        "check[x]++;": 14452,
        "b[100],": 14453,
        "levels;": 14454,
        "levels.insert(a[i]);": 14455,
        "levels.insert(b[i]);": 14456,
        "(levels.size()": 14457,
        "indx": 14458,
        "lv[200];": 14459,
        "lv[indx];": 14460,
        "indx++;": 14461,
        "indx;": 14462,
        "lv[j])": 14463,
        "value++;": 14464,
        "c[i]++;": 14465,
        "mp[temp]": 14466,
        "(mp[i]": 14467,
        "g[105];": 14468,
        "g[a[i]]++;": 14469,
        "g[b[i]]++;": 14470,
        "(g[i]": 14471,
        "a[111];": 14472,
        "Y,": 14473,
        "a1[105],": 14474,
        "a2[105];": 14475,
        "v.insert(a1[i]);": 14476,
        "a2[i];": 14477,
        "v.insert(a2[i]);": 14478,
        "v[120]": 14479,
        "*p,": 14480,
        "*q,": 14481,
        "high1,": 14482,
        "high2;": 14483,
        "high1;": 14484,
        "int[high1];": 14485,
        "int[high2];": 14486,
        "level,": 14487,
        "(level": 14488,
        "level++)": 14489,
        "(q[j]": 14490,
        "levels": 14491,
        "player_1": 14492,
        "player_2": 14493,
        "achivement_Player1_2": 14494,
        "pass[100]": 14495,
        "player_1;": 14496,
        "achivement_Player1_2;": 14497,
        "pass[achivement_Player1_2": 14498,
        "player_2;": 14499,
        "(pass[i]": 14500,
        "v1.push_back(j);": 14501,
        "v2.push_back(j);": 14502,
        "s.insert(v1[i]);": 14503,
        "s.insert(v2[i]);": 14504,
        "s.end();": 14505,
        "(*itr": 14506,
        "*r": 14507,
        "int[i": 14508,
        "1]();": 14509,
        "r[p];": 14510,
        "*u": 14511,
        "int[j": 14512,
        "u[p];": 14513,
        "*m": 14514,
        "m[p]": 14515,
        "m[t": 14516,
        "p]": 14517,
        "(m[y]": 14518,
        "myset.insert(y);": 14519,
        "(myset.size()": 14520,
        "levels(n,": 14521,
        "x_level;": 14522,
        "levels[x_level": 14523,
        "y_level;": 14524,
        "levels[y_level": 14525,
        "levels.size();": 14526,
        "(!levels[i])": 14527,
        "lk;": 14528,
        "a[lk": 14529,
        "st.insert(x);": 14530,
        "3.14159265359;": 14531,
        "x.insert(temp);": 14532,
        "m[u]++;": 14533,
        "(m.size()": 14534,
        "levels)": 14535,
        "a[2": 14536,
        "v(n": 14537,
        "v1.push_back(v[i]);": 14538,
        "sizeof(ar));": 14539,
        "ar[k]": 14540,
        "(!ar[i])": 14541,
        "yippee;": 14542,
        "yippee.insert(t);": 14543,
        "(yippee.size()": 14544,
        "a[200]": 14545,
        "a[aa]": 14546,
        "(vis[y]": 14547,
        "mymap[0]": 14548,
        "\"O-|-OOOO\";": 14549,
        "mymap[1]": 14550,
        "\"O-|O-OOO\";": 14551,
        "mymap[2]": 14552,
        "\"O-|OO-OO\";": 14553,
        "mymap[3]": 14554,
        "\"O-|OOO-O\";": 14555,
        "mymap[4]": 14556,
        "\"O-|OOOO-\";": 14557,
        "mymap[5]": 14558,
        "\"-O|-OOOO\";": 14559,
        "mymap[6]": 14560,
        "\"-O|O-OOO\";": 14561,
        "mymap[7]": 14562,
        "\"-O|OO-OO\";": 14563,
        "mymap[8]": 14564,
        "\"-O|OOO-O\";": 14565,
        "mymap[9]": 14566,
        "\"-O|OOOO-\";": 14567,
        "mymap[s[i]": 14568,
        "'0']": 14569,
        "\"O-|-OOOO\"": 14570,
        "\"O-|O-OOO\"": 14571,
        "\"O-|OO-OO\"": 14572,
        "\"O-|OOO-O\"": 14573,
        "\"O-|OOOO-\"": 14574,
        "\"-O|-OOOO\"": 14575,
        "\"-O|O-OOO\"": 14576,
        "\"-O|OO-OO\"": 14577,
        "\"-O|OOO-O\"": 14578,
        "\"-O|OOOO-\"": 14579,
        "DisplayBoard(int": 14580,
        "remainder)": 14581,
        "DisplayBoard(remainder);": 14582,
        "\"O-\",": 14583,
        "\"-O\";": 14584,
        "left[5]": 14585,
        "{\"|-OOOO\",": 14586,
        "\"|O-OOO\",": 14587,
        "\"|OO-OO\",": 14588,
        "\"|OOO-O\",": 14589,
        "\"|OOOO-\"};": 14590,
        "num.length()": 14591,
        "left[(num[i]": 14592,
        "left[num[i]": 14593,
        "godama": 14594,
        "ichdama": 14595,
        "(godama": 14596,
        "\"-O|\";": 14597,
        "\"O-|\";": 14598,
        "ichdama;": 14599,
        "fun(0);": 14600,
        "digits[10];": 14601,
        "digits[i]": 14602,
        "fun(digits[j]);": 14603,
        "hash;": 14604,
        "hash['0']": 14605,
        "hash['1']": 14606,
        "hash['2']": 14607,
        "hash['3']": 14608,
        "hash['4']": 14609,
        "hash['5']": 14610,
        "hash['6']": 14611,
        "hash['7']": 14612,
        "hash['8']": 14613,
        "hash['9']": 14614,
        "hash[input[i]]": 14615,
        "\"O-|-OOOO\\n\";": 14616,
        "\"O-|O-OOO\\n\";": 14617,
        "\"O-|OO-OO\\n\";": 14618,
        "\"O-|OOO-O\\n\";": 14619,
        "\"O-|OOOO-\\n\";": 14620,
        "\"-O|-OOOO\\n\";": 14621,
        "\"-O|O-OOO\\n\";": 14622,
        "\"-O|OO-OO\\n\";": 14623,
        "\"-O|OOO-O\\n\";": 14624,
        "\"-O|OOOO-\\n\";": 14625,
        "ones": 14626,
        "ones;": 14627,
        "dx[4]": 14628,
        "dy[4]": 14629,
        "'5')": 14630,
        "\"-OOOO\"": 14631,
        "\"O-OOO\"": 14632,
        "\"OO-OO\"": 14633,
        "\"OOO-O\"": 14634,
        "\"OOOO-\"": 14635,
        "'2')": 14636,
        "'3')": 14637,
        "'4')": 14638,
        "'6')": 14639,
        "'7')": 14640,
        "\"O-\";": 14641,
        "print(n);": 14642,
        "v.push_back(n": 14643,
        "print(v[i]);": 14644,
        "rec(unsigned": 14645,
        "(id": 14646,
        "s[id]": 14647,
        "swap(res[0],": 14648,
        "res[1]);": 14649,
        "\"-OOOO\";": 14650,
        "swap(res[i],": 14651,
        "res[i": 14652,
        "rec(id": 14653,
        "rec();": 14654,
        "soroban;": 14655,
        "soroban.clear();": 14656,
        "soroban[0]": 14657,
        "soroban[1]": 14658,
        "soroban[2]": 14659,
        "soroban[3]": 14660,
        "soroban[4]": 14661,
        "soroban[5]": 14662,
        "soroban[6]": 14663,
        "soroban[7]": 14664,
        "soroban[8]": 14665,
        "soroban[9]": 14666,
        "soroban[s[i]": 14667,
        "ans.push_back(\"O-|-OOOO\\n\");": 14668,
        "\"O-OOO\";": 14669,
        "\"OO-OO\";": 14670,
        "\"OOO-O\";": 14671,
        "\"OOOO-\";": 14672,
        "ans.push_back(s);": 14673,
        "keep": 14674,
        "(keep--)": 14675,
        "print(0);": 14676,
        "print(n": 14677,
        "m[0]": 14678,
        "m[1]": 14679,
        "m[2]": 14680,
        "m[4]": 14681,
        "m[5]": 14682,
        "m[6]": 14683,
        "m[7]": 14684,
        "m[8]": 14685,
        "m[9]": 14686,
        "m[n": 14687,
        "getSoroban(int": 14688,
        "getSoroban(n": 14689,
        "x[10];": 14690,
        "x[3]": 14691,
        "x[4]": 14692,
        "x[5]": 14693,
        "x[6]": 14694,
        "x[7]": 14695,
        "x[8]": 14696,
        "x[9]": 14697,
        "x[s[i]": 14698,
        "getNum(long": 14699,
        "getNum(0)": 14700,
        "getNum(r)": 14701,
        "s[n]": 14702,
        "ar[8];": 14703,
        "ar[3": 14704,
        "\"-\"": 14705,
        "all--;": 14706,
        "(all--)": 14707,
        "(rem": 14708,
        "n),": 14709,
        "gcd(y,": 14710,
        "__gcd(b,": 14711,
        "st_taken;": 14712,
        "st_taken": 14713,
        "_gcd(int": 14714,
        "_gcd(b,": 14715,
        "_gcd(a,": 14716,
        "w1;": 14717,
        "w2;": 14718,
        "gcd_s": 14719,
        "gcd_s;": 14720,
        "gcd_a": 14721,
        "gcd_a;": 14722,
        "lzl(m,": 14723,
        "lzl(n,": 14724,
        "game()": 14725,
        "game();": 14726,
        "lol[2];": 14727,
        "lol[0]": 14728,
        "lol[1]": 14729,
        "(__gcd(lol[x],": 14730,
        "__gcd(lol[x],": 14731,
        "simon,": 14732,
        "antisimon;": 14733,
        "simon": 14734,
        "(simon": 14735,
        "simon;": 14736,
        "antisimon": 14737,
        "(antisimon": 14738,
        "GCD(b": 14739,
        "Count": 14740,
        "(gcd": 14741,
        "Count++;": 14742,
        "(Count": 14743,
        "swap(i,": 14744,
        "gcd(j,": 14745,
        "temp++)": 14746,
        "sh(int": 14747,
        "sh(a,": 14748,
        "stone;": 14749,
        "stone": 14750,
        "pick": 14751,
        "pick;": 14752,
        "__gcd(a[i],": 14753,
        "fpb(int": 14754,
        "fpb(a,": 14755,
        "fpb(b,": 14756,
        "A(a,": 14757,
        "A(b,": 14758,
        "gcd(int,": 14759,
        "gcd(n,": 14760,
        "gcd(m,": 14761,
        "gcd(a[i": 14762,
        "take(int": 14763,
        "&k)": 14764,
        "take(i,": 14765,
        "take(j,": 14766,
        "!first;": 14767,
        "gc,": 14768,
        "q[100005];": 14769,
        "sort(q,": 14770,
        "q[0];": 14771,
        "(!pq.empty()": 14772,
        "pq.top(),": 14773,
        "pq.pop(),": 14774,
        "discount[m];": 14775,
        "min_require": 14776,
        "discount[i];": 14777,
        "min(min_require,": 14778,
        "discount[i]);": 14779,
        "price[n];": 14780,
        "price[i];": 14781,
        "sort(price,": 14782,
        "price": 14783,
        "best);": 14784,
        "V(n);": 14785,
        "V[i];": 14786,
        "sort(V.begin(),": 14787,
        "V.end());": 14788,
        "V.size()": 14789,
        "vv(m);": 14790,
        "vv[i];": 14791,
        "sort(vv.rbegin(),": 14792,
        "vv.rend());": 14793,
        "vv[j];": 14794,
        "V.end(),": 14795,
        "items[MAXN];": 14796,
        "d[MAXN];": 14797,
        "(int)Q;": 14798,
        "sort(d,": 14799,
        "Q);": 14800,
        "(int)N;": 14801,
        "items[i];": 14802,
        "sort(items,": 14803,
        "items": 14804,
        "N);": 14805,
        "reverse(items,": 14806,
        "items[lo++];": 14807,
        "lo++;": 14808,
        "arr[100100];": 14809,
        "reverse(arr": 14810,
        "q[nmax],": 14811,
        "a[nmax];": 14812,
        "sort(q": 14813,
        "q[1];": 14814,
        "p--)": 14815,
        "a[j--];": 14816,
        "MINN": 14817,
        "sort(b": 14818,
        "(a[1]);": 14819,
        "b[it];": 14820,
        "--it;": 14821,
        "(!it)": 14822,
        "q[200000],": 14823,
        "q[0])": 14824,
        "ff(\"file.txt\");": 14825,
        "s1.insert(v);": 14826,
        "v1(m);": 14827,
        "v1[i];": 14828,
        "s1.begin();": 14829,
        "kol--;": 14830,
        "greater<long": 14831,
        "long>());": 14832,
        "d(m);": 14833,
        "sort(d.begin(),": 14834,
        "d.end());": 14835,
        "p(n);": 14836,
        "sort(p.begin(),": 14837,
        "p.end(),": 14838,
        "dis;": 14839,
        "discountQuantity": 14840,
        "quantity;": 14841,
        "min(discountQuantity,": 14842,
        "quantity);": 14843,
        "prices;": 14844,
        "price;": 14845,
        "prices.push_back(price);": 14846,
        "sort(prices.begin(),": 14847,
        "prices.end());": 14848,
        "costToPay": 14849,
        "toPurchase": 14850,
        "(toPurchase": 14851,
        "purchaseQuantity": 14852,
        "discountQuantity;": 14853,
        "(purchaseQuantity": 14854,
        "prices[toPurchase];": 14855,
        "toPurchase--;": 14856,
        "purchaseQuantity--;": 14857,
        "min(p,": 14858,
        "dis.push_back(x);": 14859,
        "sort((dis).begin(),": 14860,
        "(dis).end());": 14861,
        "b.push_back(x);": 14862,
        "sort((b).begin(),": 14863,
        "(b).end());": 14864,
        "dis[0];": 14865,
        "reverse((b).begin(),": 14866,
        "(min(n,": 14867,
        "mn));": 14868,
        "coupons[100005],": 14869,
        "coupons[i];": 14870,
        "BestCoupon": 14871,
        "*min_element(coupons,": 14872,
        "coupons": 14873,
        "C);": 14874,
        "reverse(arr,": 14875,
        "BestCoupon;": 14876,
        "min(N,": 14877,
        "mpu;": 14878,
        "s[1000006]": 14879,
        "q[1000006]": 14880,
        "a[1000006]": 14881,
        "Minv": 14882,
        "Minv)": 14883,
        "Minv;": 14884,
        "md)": 14885,
        "(md": 14886,
        "discounts,": 14887,
        "aTypes[100000];": 14888,
        "aPrices[100000];": 14889,
        "discounts;": 14890,
        "aTypes[i];": 14891,
        "aPrices[j];": 14892,
        "sort(aTypes,": 14893,
        "aTypes": 14894,
        "discounts);": 14895,
        "sort(aPrices,": 14896,
        "aPrices": 14897,
        "prices);": 14898,
        "prices": 14899,
        "aTypes[0];": 14900,
        "q[m];": 14901,
        "(temp--": 14902,
        "disc(m);": 14903,
        "disc[i];": 14904,
        "cost(n);": 14905,
        "sort(disc.begin(),": 14906,
        "disc.end());": 14907,
        "sort(cost.begin(),": 14908,
        "cost.end());": 14909,
        "max(0ll,": 14910,
        "disc[0]": 14911,
        "cost[j];": 14912,
        "a[h];": 14913,
        "b[h];": 14914,
        "reverse(b,": 14915,
        "dis)": 14916,
        "vv[i],": 14917,
        "Doaa()": 14918,
        "Doaa();": 14919,
        "des(m);": 14920,
        "des[i];": 14921,
        "sort(des.begin(),": 14922,
        "des.end());": 14923,
        "des[0]": 14924,
        "v[k": 14925,
        "discounts[100005];": 14926,
        "memset(discounts,": 14927,
        "sizeof(discounts));": 14928,
        "discounts[i];": 14929,
        "sort(discounts,": 14930,
        "discounts": 14931,
        "items[100005];": 14932,
        "memset(items,": 14933,
        "sizeof(items));": 14934,
        "discounts[0])": 14935,
        "long)1e9;": 14936,
        "a[300300];": 14937,
        "lst": 14938,
        "(lst": 14939,
        "lst;": 14940,
        "q[100001];": 14941,
        "discounts[100005],": 14942,
        "min_discount": 14943,
        "min(min_discount,": 14944,
        "discounts[i]);": 14945,
        "countt": 14946,
        "(countt": 14947,
        "(min_discount": 14948,
        "min_discount)": 14949,
        "countt++;": 14950,
        "62)": 14951,
        "q[M],": 14952,
        "a[M];": 14953,
        "dix[]": 14954,
        "diy[]": 14955,
        "v[i],": 14956,
        "POWER[65];": 14957,
        "inv(long": 14958,
        "precompute()": 14959,
        "POWER[0]": 14960,
        "63;": 14961,
        "POWER[i]": 14962,
        "POWER[i": 14963,
        "std:": 14964,
        "long)v.size());": 14965,
        "q[100000];": 14966,
        "mycmp(int": 14967,
        "mq;": 14968,
        "mq": 14969,
        "min(mq,": 14970,
        "mycmp);": 14971,
        "(mq": 14972,
        "mq)": 14973,
        "numbers[1000];": 14974,
        "numbers2[1000];": 14975,
        "numbers[i];": 14976,
        "numbers2[i];": 14977,
        "\"Yes\"": 14978,
        "(numbers[i]": 14979,
        "numbers[i]": 14980,
        "numbers2[0];": 14981,
        "(numbers[i": 14982,
        "numbers[i])": 14983,
        "\"No\"": 14984,
        "c[1000];": 14985,
        "push(int": 14986,
        "(top": 14987,
        "top++;": 14988,
        "c[top]": 14989,
        "push(b[j],": 14990,
        "push(a[i],": 14991,
        "\"No\\n\";": 14992,
        "\"Yes\\n\";": 14993,
        "b(k);": 14994,
        "sort(b.rbegin(),": 14995,
        "b.rend());": 14996,
        "b[pos];": 14997,
        "vector<int64_t>": 14998,
        "minb": 14999,
        "infint64_t;": 15000,
        "maxb": 15001,
        "(int64_t": 15002,
        "minb)": 15003,
        "maxb)": 15004,
        "ar[k];": 15005,
        "ar[0];": 15006,
        "((flag": 15007,
        "\"Yes\")": 15008,
        "(K": 15009,
        "puts(\"Yes\");": 15010,
        "a[ind];": 15011,
        "puts(\"No\");": 15012,
        "(vis[0]": 15013,
        "arr[n],": 15014,
        "arr2[k],": 15015,
        "arr3[k],": 15016,
        "arr4[n];": 15017,
        "arr2[j];": 15018,
        "arr3[j]": 15019,
        "sort(arr3,": 15020,
        "arr3": 15021,
        "arr3[0]": 15022,
        "arr3[k": 15023,
        "arr2[0];": 15024,
        "arr4[i]": 15025,
        "sort(arr4,": 15026,
        "arr4": 15027,
        "arr4[i])": 15028,
        "zero": 15029,
        "zero++;": 15030,
        "(zero": 15031,
        "a[y])": 15032,
        "fast_io()": 15033,
        "(int)2e9;": 15034,
        "(double)1e-9;": 15035,
        "(double)acos(-1);": 15036,
        "long)1e9": 15037,
        "b[110],": 15038,
        "b[j--];": 15039,
        "decreasing": 15040,
        "b[201];": 15041,
        "mark;": 15042,
        "a[mark]": 15043,
        "h[a];": 15044,
        "k[b];": 15045,
        "h[i];": 15046,
        "h[i]": 15047,
        "k[0];": 15048,
        "(h[i]": 15049,
        "(k[j]": 15050,
        "h[i": 15051,
        "b[k": 15052,
        "A[105],": 15053,
        "B[105],": 15054,
        "sort(B": 15055,
        "(!A[i])": 15056,
        "B[x": 15057,
        "(A[i": 15058,
        "e[10000];": 15059,
        "d[b": 15060,
        "e[j]": 15061,
        "momo;": 15062,
        "momo:;": 15063,
        "sort(c,": 15064,
        "e[i])": 15065,
        "arr1[k];": 15066,
        "sort(arr1,": 15067,
        "arr1": 15068,
        "arr1[c];": 15069,
        "(arr1[i": 15070,
        "arr1[i])": 15071,
        "b[200],": 15072,
        "ya": 15073,
        "b.back();": 15074,
        "b.pop_back();": 15075,
        "(ya)": 15076,
        "b[100": 15077,
        "v.back();": 15078,
        "v.pop_back();": 15079,
        "ar[n],": 15080,
        "ar2[k];": 15081,
        "ar2[i];": 15082,
        "bitch;": 15083,
        "c[j++]": 15084,
        "b[j++];": 15085,
        "360": 15086,
        "(180": 15087,
        "((((d": 15088,
        "180)": 15089,
        "(360": 15090,
        "angleofpolygon(int": 15091,
        "(angleofpolygon(a)": 15092,
        "(float": 15093,
        "360;": 15094,
        "angle": 15095,
        "180": 15096,
        "(angle": 15097,
        "no1;": 15098,
        "360)": 15099,
        "(360.0": 15100,
        "360.0": 15101,
        "(180.0": 15102,
        "(int)(n)": 15103,
        "3.14159265358;": 15104,
        "alpha)": 15105,
        "3.0;": 15106,
        "0.0;": 15107,
        "2.0)": 15108,
        "180.0)": 15109,
        "t))": 15110,
        "ang;": 15111,
        "180;": 15112,
        "(3);": 15113,
        "(int)(400);": 15114,
        "ang.insert(sum": 15115,
        "curAng;": 15116,
        "(ang.find(curAng)": 15117,
        "ang.end())": 15118,
        "pow(long": 15119,
        "((float)360.0": 15120,
        "a[180];": 15121,
        "is_integer(float": 15122,
        "floor(k)": 15123,
        "(is_integer(360.0": 15124,
        "a[i])))": 15125,
        "angle;": 15126,
        "side;": 15127,
        "side1;": 15128,
        "side": 15129,
        "(180)": 15130,
        "angle);": 15131,
        "side1": 15132,
        "(side1": 15133,
        "he;": 15134,
        "he)": 15135,
        "c[1111];": 15136,
        "c[++k]": 15137,
        "(!pp)": 15138,
        "t;)": 15139,
        "a[e];": 15140,
        "a[q])": 15141,
        "mod2": 15142,
        "LL_INF": 15143,
        "yy1,": 15144,
        "yy2,": 15145,
        "ggg": 15146,
        "ggg++)": 15147,
        "99999;": 15148,
        "(!v)": 15149,
        "NAO": 15150,
        "(((mid": 15151,
        "(double)mid": 15152,
        "(((ini": 15153,
        "(double)ini": 15154,
        "(floor(n)": 15155,
        "a[400];": 15156,
        "v[200];": 15157,
        "memset(v,": 15158,
        "sizeof(v));": 15159,
        "400;": 15160,
        "180.0": 15161,
        "v[x]": 15162,
        "((360": 15163,
        "arr[181]": 15164,
        "(((i": 15165,
        "arr[val]": 15166,
        "(arr[angle]": 15167,
        "(360)": 15168,
        "factors;": 15169,
        "120;": 15170,
        "factors.push_back(i);": 15171,
        "printed": 15172,
        "!printed;": 15173,
        "factors[j])": 15174,
        "(!printed)": 15175,
        "ang)": 15176,
        "ang": 15177,
        "60)": 15178,
        "angle)": 15179,
        "nhap()": 15180,
        "(t);": 15181,
        "nhap();": 15182,
        "(nn--)": 15183,
        "angel;": 15184,
        "angel)": 15185,
        "c[200]": 15186,
        "203;": 15187,
        "c[f]": 15188,
        "179)": 15189,
        "a[310];": 15190,
        "(s.count(t))": 15191,
        "s.insert(t);": 15192,
        "arr[p]": 15193,
        "(arr[ele": 15194,
        "p])": 15195,
        "arr[ele": 15196,
        "p]++;": 15197,
        "gcd(a": 15198,
        "palin(string": 15199,
        "arr[310],": 15200,
        "(!arr[temp": 15201,
        "arr[temp": 15202,
        "an;": 15203,
        "an.size();": 15204,
        "an.insert(x": 15205,
        "an.size()": 15206,
        "visit[305]": 15207,
        "asd": 15208,
        "(visit[asd]": 15209,
        "dsa": 15210,
        "visit[asd]": 15211,
        "(cek": 15212,
        "(a[p]": 15213,
        "(find(v.begin(),": 15214,
        "v.end())": 15215,
        "v.push_back(t": 15216,
        "3e2": 15217,
        "arr[maxn],": 15218,
        "(arr[x])": 15219,
        "arr[x]++;": 15220,
        "a[333];": 15221,
        "(a[x": 15222,
        "a[301];": 15223,
        "(!a[x": 15224,
        "arr[p": 15225,
        "7];": 15226,
        "(arr[x": 15227,
        "arr[x": 15228,
        "x[n],": 15229,
        "y[p],": 15230,
        "x[j]": 15231,
        "(y[z]": 15232,
        "y[z]": 15233,
        "arr[305];": 15234,
        "udah": 15235,
        "(s.count(x": 15236,
        "!udah)": 15237,
        "(udah)": 15238,
        "vis[305];": 15239,
        "(vis[pos])": 15240,
        "vis[pos]": 15241,
        "biao[305];": 15242,
        "(biao[b]": 15243,
        "biao[b]": 15244,
        "a[301][2];": 15245,
        "301;": 15246,
        "(a[m": 15247,
        "p][1]": 15248,
        "p][0]": 15249,
        "flag[N": 15250,
        "desperate_optimization(10);": 15251,
        "(flag[x": 15252,
        "flag[x": 15253,
        "500)": 15254,
        "arr[300];": 15255,
        "arr[x]": 15256,
        "store[301];": 15257,
        "memset(store,": 15258,
        "sizeof(store));": 15259,
        "(store[x": 15260,
        "store[x": 15261,
        "used(p,": 15262,
        "(used[x": 15263,
        "used[x": 15264,
        "temp[number];": 15265,
        "(s.count(temp[i]": 15266,
        "s.insert(temp[i]": 15267,
        "a(p);": 15268,
        "(a[mod])": 15269,
        "a[mod]++;": 15270,
        "(st.find(x": 15271,
        "st.insert(x": 15272,
        "arr[310];": 15273,
        "arr[100000]": 15274,
        "z[n];": 15275,
        "z[i];": 15276,
        "(vis[x": 15277,
        "vis[x": 15278,
        "333;": 15279,
        "(a[x])": 15280,
        "b[301];": 15281,
        "a[400],": 15282,
        "s[400];": 15283,
        "ar[400],": 15284,
        "ar[k": 15285,
        "ada[305];": 15286,
        "(ada[x])": 15287,
        "ada[x]": 15288,
        "arr[307];": 15289,
        "(arr[inp": 15290,
        "arr[inp": 15291,
        "hash[305];": 15292,
        "memset(hash,": 15293,
        "sizeof(hash));": 15294,
        "(hash[x])": 15295,
        "++i": 15296,
        "hash[x]++;": 15297,
        "v(N);": 15298,
        "v[M": 15299,
        "N]++;": 15300,
        "(v[M": 15301,
        "N]": 15302,
        "bucket[305];": 15303,
        "(!bucket[a": 15304,
        "bucket[a": 15305,
        "2e9)": 15306,
        "hash[305]": 15307,
        "m[x": 15308,
        "p];": 15309,
        "a[3001];": 15310,
        "(a[k": 15311,
        "(mp[x": 15312,
        "mp[x": 15313,
        "c[305];": 15314,
        "(c[k]": 15315,
        "c[k]": 15316,
        "char>": 15317,
        "m['[']": 15318,
        "m['(']": 15319,
        "'[',": 15320,
        "m['8']": 15321,
        "'(';": 15322,
        "s1);": 15323,
        "s2);": 15324,
        "m[s1[i]])": 15325,
        "m[s2[i]])": 15326,
        "\"TEAM": 15327,
        "WINS\\n\";": 15328,
        "\"TIE\\n\";": 15329,
        "check(char": 15330,
        "'['": 15331,
        "']')": 15332,
        "'p';": 15333,
        "'s';": 15334,
        "check(s1[i],": 15335,
        "s1[i": 15336,
        "check(s2[i],": 15337,
        "win(c1,": 15338,
        "c2);": 15339,
        "first_team,": 15340,
        "second_team;": 15341,
        "first_points": 15342,
        "second_points": 15343,
        "first_team);": 15344,
        "second_team);": 15345,
        "first_team.length();": 15346,
        "(first_team[i]": 15347,
        "second_team[i])": 15348,
        "'[')": 15349,
        "(second_team[i]": 15350,
        "(first_points": 15351,
        "second_points)": 15352,
        "\"TIE\"": 15353,
        "WINS\"": 15354,
        "v(char": 15355,
        "'8'": 15356,
        "team2[10000];": 15357,
        "team1[10000];": 15358,
        "team1": 15359,
        "team2)": 15360,
        "strlen(team1);": 15361,
        "(v(team1[a],": 15362,
        "team2[a])": 15363,
        "puts(\"TIE\");": 15364,
        "puts(\"TEAM": 15365,
        "WINS\");": 15366,
        "ashu": 15367,
        "bshu": 15368,
        "']'": 15369,
        "ashu++;": 15370,
        "bshu++;": 15371,
        "'<')": 15372,
        "'<'": 15373,
        "(ashu": 15374,
        "bshu)": 15375,
        "arr1[3]": 15376,
        "{'(',": 15377,
        "'8'},": 15378,
        "arr2[3]": 15379,
        "{'8',": 15380,
        "'(',": 15381,
        "'['};": 15382,
        "str1.size();": 15383,
        "(arr1[j]": 15384,
        "(arr2[j]": 15385,
        "p[\"8<\"]": 15386,
        "p[\"()\"]": 15387,
        "p[\"[]\"]": 15388,
        "p[a.substr(i,": 15389,
        "2)],": 15390,
        "p[b.substr(i,": 15391,
        "check(s1[i]);": 15392,
        "check(s2[i]);": 15393,
        "scorea": 15394,
        "scoreb": 15395,
        "scoreb++;": 15396,
        "scorea++;": 15397,
        "(scorea": 15398,
        "scoreb)": 15399,
        "puts((scorea": 15400,
        "a[30],": 15401,
        "bb++;": 15402,
        "bb)": 15403,
        "(a.substr(i,": 15404,
        "\"[]\")": 15405,
        "\"8<\")": 15406,
        "\"()\")": 15407,
        "(b.substr(i,": 15408,
        "(ta": 15409,
        "tb)": 15410,
        "((ta": 15411,
        "!(tb": 15412,
        "bs)": 15413,
        "++now;": 15414,
        "--now;": 15415,
        "RPS(string": 15416,
        "s[0].size()": 15417,
        "s[0].substr(i": 15418,
        "s[1].substr(i": 15419,
        "RPS(one,": 15420,
        "two);": 15421,
        "(!sum)": 15422,
        "score": 15423,
        "score--;": 15424,
        "score++;": 15425,
        "(score": 15426,
        "wb;": 15427,
        "wa++;": 15428,
        "wb++;": 15429,
        "(wa": 15430,
        "wb)": 15431,
        "write(int": 15432,
        "putchar('-'),": 15433,
        "len1;": 15434,
        "s1.at(i);": 15435,
        "s1.at(i": 15436,
        "s2.at(i);": 15437,
        "s2.at(i": 15438,
        "p1[22],": 15439,
        "p2[22];": 15440,
        "strlen(p1);": 15441,
        "p1[i];": 15442,
        "p2[i];": 15443,
        "res2++;": 15444,
        "puts((res1": 15445,
        "(res1": 15446,
        "\"TIE\");": 15447,
        "b[20],": 15448,
        "c[20],": 15449,
        "((x.at(i)": 15450,
        "(y.at(i)": 15451,
        "'('))": 15452,
        "((y.at(i)": 15453,
        "'(')))": 15454,
        "(((x.at(i)": 15455,
        "'8')))": 15456,
        "'[')))": 15457,
        "bla()": 15458,
        "bla();": 15459,
        "t1.length();": 15460,
        "((t1.at(i)": 15461,
        "(t2.at(i)": 15462,
        "'['))": 15463,
        "'8'))": 15464,
        "win1": 15465,
        "win2": 15466,
        "win1++;": 15467,
        "win2++;": 15468,
        "(win1": 15469,
        "win2)": 15470,
        "rps(string": 15471,
        "rps(t1,": 15472,
        "tone": 15473,
        "ttwo": 15474,
        "(t1[i]": 15475,
        "tone++;": 15476,
        "ttwo++;": 15477,
        "(tone": 15478,
        "ttwo)": 15479,
        "who_wins(char": 15480,
        "na": 15481,
        "a[cnt]": 15482,
        "(a[cnt]": 15483,
        "who_wins(a[j],": 15484,
        "na++;": 15485,
        "nb++;": 15486,
        "(na": 15487,
        "nb)": 15488,
        "((double)a": 15489,
        "(double)d);": 15490,
        "((((long": 15491,
        "long)((double)n": 15492,
        "(double)b))": 15493,
        "3.1415926535;": 15494,
        "r[t];": 15495,
        "(((s": 15496,
        "1e1": 15497,
        "keyur": 15498,
        "mayur": 15499,
        "expo(long": 15500,
        "isPrime(long": 15501,
        "off": 15502,
        "chocs": 15503,
        "chocs;": 15504,
        "bonus": 15505,
        "A[100001];": 15506,
        "vis[5001];": 15507,
        "v.push_back(ans);": 15508,
        "total,": 15509,
        "get_free,": 15510,
        "get,": 15511,
        "get_free": 15512,
        "diff2": 15513,
        "div;": 15514,
        "((div": 15515,
        "1000001,": 15516,
        "v[N];": 15517,
        "free;": 15518,
        "free": 15519,
        "offers": 15520,
        "(offers": 15521,
        "bt": 15522,
        "C))": 15523,
        "son[101];": 15524,
        "son[i]": 15525,
        "Number;": 15526,
        "*Answers": 15527,
        "int[Number];": 15528,
        "Answers[i]": 15529,
        "z[100][4];": 15530,
        "z[i][j];": 15531,
        "z[i][0]": 15532,
        "z[i][3]": 15533,
        "z[i][1]": 15534,
        "z[i][2]": 15535,
        "extra": 15536,
        "(choc": 15537,
        "rest_money,": 15538,
        "i_ans": 15539,
        "f_ans": 15540,
        "rest_money": 15541,
        "(rest_money": 15542,
        "i_ans;": 15543,
        "srand(time(NULL));": 15544,
        "\"total": 15545,
        "\"times": 15546,
        "cout.flush();": 15547,
        "total[100];": 15548,
        "total[i]": 15549,
        "a[i]))": 15550,
        "(((r": 15551,
        "count,": 15552,
        "a[n][4];": 15553,
        "a[i][3];": 15554,
        "12": 15555,
        "\"Ciel\"": 15556,
        "\"Hanako\"": 15557,
        "debug": 15558,
        "(220": 15559,
        "puts(\"Hanako\");": 15560,
        "puts(\"Ciel\");": 15561,
        "DX[8]": 15562,
        "DY[8]": 15563,
        "Ciel()": 15564,
        "120)": 15565,
        "220)": 15566,
        "220;": 15567,
        "Hanako()": 15568,
        "Ciel();": 15569,
        "Hanako();": 15570,
        "turn": 15571,
        "(turn)": 15572,
        "22))": 15573,
        "\"Ciel\\n\";": 15574,
        "\"Hanako\\n\";": 15575,
        "!turn;": 15576,
        "22": 15577,
        "ciel()": 15578,
        "hanako()": 15579,
        "24);": 15580,
        "(!ciel())": 15581,
        "(!hanako())": 15582,
        "220": 15583,
        "29;": 15584,
        "--x,": 15585,
        "12,": 15586,
        "--x;": 15587,
        "players[2];": 15588,
        "players[0]": 15589,
        "\"empty\";": 15590,
        "players[index]": 15591,
        "\"win\";": 15592,
        "\"lose\";": 15593,
        "(players[0].compare(\"lose\")": 15594,
        "players[1].compare(\"lose\")": 15595,
        "(players[1].compare(\"lose\")": 15596,
        "\"Hanako\");": 15597,
        "rAmount;": 15598,
        "ciel": 15599,
        "rAmount": 15600,
        "(ciel)": 15601,
        "(two": 15602,
        "(turn": 15603,
        "a[x1]++;": 15604,
        "b[x2]++;": 15605,
        "abs(int": 15606,
        "arx[105],": 15607,
        "ary[105],": 15608,
        "arr[10],": 15609,
        "arrx[10],": 15610,
        "arx[i];": 15611,
        "arr[arx[i]]": 15612,
        "arrx[arx[i]]": 15613,
        "ary[i];": 15614,
        "arr[ary[i]]": 15615,
        "abs((arr[i]": 15616,
        "arrx[i]);": 15617,
        "A[6]": 15618,
        "B[6]": 15619,
        "A[x]++;": 15620,
        "B[x]++;": 15621,
        "abs(k": 15622,
        "A[i]);": 15623,
        "a[6],": 15624,
        "b[x]++;": 15625,
        "numa[6],": 15626,
        "numb[6];": 15627,
        "numa[a[i]]++;": 15628,
        "numb[b[i]]++;": 15629,
        "((numa[i]": 15630,
        "numb[i])": 15631,
        "abs(numa[i]": 15632,
        "puts(\"-1\");": 15633,
        "abs(sum": 15634,
        "x[a]++;": 15635,
        "y[b]++;": 15636,
        "abs(x[i]": 15637,
        "p[9],": 15638,
        "ap[9];": 15639,
        "p[a[i]]++;": 15640,
        "ap[a[i]]++;": 15641,
        "p[b[i]]++;": 15642,
        "(ap[i]": 15643,
        "ap[i]": 15644,
        "x[200000": 15645,
        "y[200000": 15646,
        "a[x[i]]++;": 15647,
        "y[i],": 15648,
        "b[y[i]]++;": 15649,
        "b[6],": 15650,
        "a[c]++;": 15651,
        "b[c]++;": 15652,
        "b[t]++;": 15653,
        "(abs((a[i]": 15654,
        "abs(((a[i]": 15655,
        "(judge": 15656,
        "a[m]++;": 15657,
        "c[m]++;": 15658,
        "b[m]++;": 15659,
        "abs(c[i]": 15660,
        "arr1[n],": 15661,
        "cnt[6];": 15662,
        "cnt[arr1[i]]++;": 15663,
        "cnt[arr2[i]]--;": 15664,
        "a[j]++;": 15665,
        "(mini": 15666,
        "v[102],": 15667,
        "t[103];": 15668,
        "v[c].push_back(0);": 15669,
        "t[c].push_back(0);": 15670,
        "(v[b].size()": 15671,
        "v[b].size()": 15672,
        "(t[b].size()": 15673,
        "v[b].size();": 15674,
        "t[b].size();": 15675,
        "2.;": 15676,
        "t[b].clear();": 15677,
        "v[b].clear();": 15678,
        "b[101],": 15679,
        "c[101];": 15680,
        "a[q]++;": 15681,
        "c[q]++;": 15682,
        "b[q]++;": 15683,
        "-2;": 15684,
        "\"-1\\n\",": 15685,
        "c1[7],": 15686,
        "c2[7];": 15687,
        "c1[a[i]]++;": 15688,
        "c2[b[i]]++;": 15689,
        "zong": 15690,
        "((c1[i]": 15691,
        "c2[i])": 15692,
        "abs((c1[i]": 15693,
        "c1[i]);": 15694,
        "a1[6]": 15695,
        "b1[6]": 15696,
        "a1[a[i]]++;": 15697,
        "b1[b[i]]++;": 15698,
        "((a1[i]": 15699,
        "b1[i])": 15700,
        "abs(b1[i]": 15701,
        "a1[i])": 15702,
        "aexc,": 15703,
        "bexc,": 15704,
        "exc,": 15705,
        "ac[6],": 15706,
        "bc[6];": 15707,
        "ac[i]": 15708,
        "bc[i]": 15709,
        "ac[a[i]]++;": 15710,
        "bc[b[i]]++;": 15711,
        "exc": 15712,
        "aexc": 15713,
        "bexc": 15714,
        "(ac[i]": 15715,
        "bc[i])": 15716,
        "bc[i]);": 15717,
        "(bc[i]": 15718,
        "ac[i]);": 15719,
        "(aexc": 15720,
        "(bexc": 15721,
        "bexc)": 15722,
        "exc;": 15723,
        "P,": 15724,
        "inv(P": 15725,
        "(P": 15726,
        "f[N],": 15727,
        "ff[N],": 15728,
        "++f[a[i]];": 15729,
        "b[i],": 15730,
        "++f[b[i]],": 15731,
        "++ff[b[i]];": 15732,
        "puts(\"-1\"),": 15733,
        "abs(ff[i]": 15734,
        "f[i]);": 15735,
        "MAXX": 15736,
        "maxInt": 15737,
        "ar[5]": 15738,
        "ca[5]": 15739,
        "ar[a[i]]++;": 15740,
        "ca[a[i]]++;": 15741,
        "b[i]--;": 15742,
        "ar[b[i]]++;": 15743,
        "(ar[i])": 15744,
        "abs(ca[i]": 15745,
        "2LL));": 15746,
        "ambos(5,": 15747,
        "a(5),": 15748,
        "b(5);": 15749,
        "a[num": 15750,
        "ambos[num": 15751,
        "b[num": 15752,
        "(ambos[i]": 15753,
        "d[maxn];": 15754,
        "d[b[i]]++;": 15755,
        "id;": 15756,
        "f[10],": 15757,
        "g[10];": 15758,
        "f[x]++;": 15759,
        "g[x]++;": 15760,
        "((f[i]": 15761,
        "g[i])": 15762,
        "abs(f[i]": 15763,
        "A[N],": 15764,
        "B[N],": 15765,
        "fA[6]": 15766,
        "fB[6]": 15767,
        "++fA[A[i]];": 15768,
        "++fB[B[i]];": 15769,
        "sort(A,": 15770,
        "sort(B,": 15771,
        "((fA[i]": 15772,
        "fB[i])": 15773,
        "abs(fA[i]": 15774,
        "arra[105],": 15775,
        "arrb[105],": 15776,
        "has": 15777,
        "memset(arra,": 15778,
        "sizeof(arra));": 15779,
        "memset(arrb,": 15780,
        "sizeof(arrb));": 15781,
        "arra[a]++;": 15782,
        "arrb[b]++;": 15783,
        "(abs(arra[x]": 15784,
        "arrb[x])": 15785,
        "slogan;": 15786,
        "\"PRINT": 15787,
        "slogan[i]": 15788,
        "\"RIGHT\\n\";": 15789,
        "\"LEFT\\n\";": 15790,
        "(k--": 15791,
        "string(\"": 15792,
        "k--,": 15793,
        "\"LEFT\"": 15794,
        "\"RIGHT\"": 15795,
        "left--;": 15796,
        "right++;": 15797,
        "toInt(string": 15798,
        "myString)": 15799,
        "mySS(myString);": 15800,
        "myInt;": 15801,
        "mySS": 15802,
        "parse(string": 15803,
        "substrings;": 15804,
        "(myString.find(\"": 15805,
        "substrings.push_back(myString);": 15806,
        "substrings.push_back(myString.substr(0,": 15807,
        "myString.find(\"": 15808,
        "\")));": 15809,
        "myString.erase(0,": 15810,
        "slogan);": 15811,
        "vec": 15812,
        "parse(slogan);": 15813,
        "toInt(vec[0]);": 15814,
        "toInt(vec[1]);": 15815,
        "slogan[k": 15816,
        "rf,": 15817,
        "lf": 15818,
        "rf": 15819,
        "(lf": 15820,
        "rf)": 15821,
        "lf;": 15822,
        "rf;": 15823,
        "long)INF;": 15824,
        "inside(int": 15825,
        "\"RIGHT\")": 15826,
        "(!inside(k))": 15827,
        "(--k)": 15828,
        "\"LEFT\",": 15829,
        "\"RIGHT\",": 15830,
        "acos(-1.);": 15831,
        "moveS(int": 15832,
        "dest,": 15833,
        "com,": 15834,
        "dest)": 15835,
        "\"PRINT\"": 15836,
        "moveS(k,": 15837,
        "str[1000000];": 15838,
        "(b--)": 15839,
        "memset(str,": 15840,
        "sizeof(str));": 15841,
        "str[cnt]": 15842,
        "s[k": 15843,
        "\"LEFT\\n\"": 15844,
        "\"RIGHT\\n\"": 15845,
        "++k;": 15846,
        "slg[MAX": 15847,
        "slg[i];": 15848,
        "slg[start]": 15849,
        "start--;": 15850,
        "i1;": 15851,
        "&arr)": 15852,
        "arr[a][b]": 15853,
        "step[4][2]": 15854,
        "{{-2,": 15855,
        "-2},": 15856,
        "{-2,": 15857,
        "2}};": 15858,
        "check1(vector<string>": 15859,
        "&arr,": 15860,
        "arr[y][x]": 15861,
        "(4);": 15862,
        "step[i][0];": 15863,
        "step[i][1];": 15864,
        "(check(y1,": 15865,
        "arr))": 15866,
        "(arr[y1][x1]": 15867,
        "'K')": 15868,
        "check1(arr,": 15869,
        "x1))": 15870,
        "srand(13);": 15871,
        "setprecision(15);": 15872,
        "--pos;": 15873,
        "++pos;": 15874,
        "(n)-1;": 15875,
        "10055;": 15876,
        "b)));": 15877,
        "modex(long": 15878,
        "modex(a,": 15879,
        "modi(long": 15880,
        "1000000007": 15881,
        "(a[n": 15882,
        "\"DOWN\"": 15883,
        "\"UP\"": 15884,
        "(a[b]": 15885,
        "\"DOWN\";": 15886,
        "\"UP\";": 15887,
        "a[b": 15888,
        "128;": 15889,
        "\"UP\\n\";": 15890,
        "\"DOWN\\n\";": 15891,
        "a[609];": 15892,
        "15": 15893,
        "ss[100000];": 15894,
        "ch[100000];": 15895,
        "x[n]": 15896,
        "(x[n]": 15897,
        "A(N);": 15898,
        "(int)(N);": 15899,
        "(A[N": 15900,
        "A[N": 15901,
        "a[99];": 15902,
        "14": 15903,
        "13": 15904,
        "moon[100];": 15905,
        "moon[i];": 15906,
        "(moon[1]": 15907,
        "(moon[n]": 15908,
        "moon[n": 15909,
        "(v[n": 15910,
        "cmp": 15911,
        "(cmp": 15912,
        "A[100],": 15913,
        "(A[N]": 15914,
        "a[150005]": 15915,
        "mm,": 15916,
        "x[105];": 15917,
        "pum": 15918,
        "arra[n];": 15919,
        "arra[i];": 15920,
        "jum)": 15921,
        "\"chest\"": 15922,
        "(pum": 15923,
        "\"biceps\"": 15924,
        "\"back\"": 15925,
        "plans(n);": 15926,
        "plans[i];": 15927,
        "ba": 15928,
        "bi)": 15929,
        "\"chest\\n\";": 15930,
        "(ba": 15931,
        "\"back\\n\";": 15932,
        "\"biceps\\n\";": 15933,
        "sum3)": 15934,
        "(sum3": 15935,
        "max(max(k1,": 15936,
        "k2),": 15937,
        "k3);": 15938,
        "k1)": 15939,
        "k2)": 15940,
        "tot4": 15941,
        "max(tot1,": 15942,
        "tot2);": 15943,
        "ZZ": 15944,
        "tot3);": 15945,
        "(ZZ": 15946,
        "tot1)": 15947,
        "tot2)": 15948,
        "ba,": 15949,
        "ba)": 15950,
        "a[25];": 15951,
        "chest": 15952,
        "biceps": 15953,
        "((x)": 15954,
        "((y)": 15955,
        "a[y];": 15956,
        "((z)": 15957,
        "a[z];": 15958,
        "(biceps": 15959,
        "chest)": 15960,
        "back)": 15961,
        "\"biceps\";": 15962,
        "(chest": 15963,
        "biceps)": 15964,
        "\"chest\";": 15965,
        "(back": 15966,
        "\"back\";": 15967,
        "back1": 15968,
        "back1)": 15969,
        "c[]": 15970,
        "c[(i": 15971,
        "3)]": 15972,
        "c[2])": 15973,
        "arr[30]": 15974,
        "c1);": 15975,
        "c3);": 15976,
        "in();": 15977,
        "(max(a,": 15978,
        "(max(max(a,": 15979,
        "s[20000][20];": 15980,
        "max(k1,": 15981,
        "max(k2,": 15982,
        "k3));": 15983,
        "(k2": 15984,
        "(k3": 15985,
        "chest(0),": 15986,
        "biceps(0),": 15987,
        "baack(0);": 15988,
        "baack": 15989,
        "baack)": 15990,
        "sumback": 15991,
        "(sumback": 15992,
        "(sumb": 15993,
        "arr[index]": 15994,
        "arr[1])": 15995,
        "a[1100];": 15996,
        "max(max(sa,": 15997,
        "sb),": 15998,
        "sc);": 15999,
        "puts(\"chest\");": 16000,
        "(sb": 16001,
        "puts(\"biceps\");": 16002,
        "puts(\"back\");": 16003,
        "totals[3]": 16004,
        "totals[i": 16005,
        "(totals[i": 16006,
        "a[50],": 16007,
        "chest,": 16008,
        "bic,": 16009,
        "back;": 16010,
        "bic": 16011,
        "aux1,": 16012,
        "aux2,": 16013,
        "aux3;": 16014,
        "aux3": 16015,
        "aux1;": 16016,
        "aux2;": 16017,
        "contBi": 16018,
        "contCh": 16019,
        "contBa": 16020,
        "band": 16021,
        "(band": 16022,
        "band++;": 16023,
        "max(contBi,": 16024,
        "contCh);": 16025,
        "contBa);": 16026,
        "contCh)": 16027,
        "contBa)": 16028,
        "contBi)": 16029,
        "cnt[2])": 16030,
        "(cnt[1]": 16031,
        "(cnt[2]": 16032,
        "cnt[1])": 16033,
        "exe[3]": 16034,
        "exe[i": 16035,
        "exe[i])": 16036,
        "exe[i];": 16037,
        "max2(int": 16038,
        "mark,": 16039,
        "lll": 16040,
        "max2(x,": 16041,
        "(lll": 16042,
        "biceps,": 16043,
        "back,": 16044,
        "v(2);": 16045,
        "v[(i": 16046,
        "Ex,": 16047,
        "Ex;": 16048,
        "maxc": 16049,
        "maxbi": 16050,
        "maxba": 16051,
        "(maxc": 16052,
        "maxba)": 16053,
        "(maxbi": 16054,
        "value,": 16055,
        "exe_A": 16056,
        "exe_B": 16057,
        "exe_C": 16058,
        "exe_B;": 16059,
        "exe_A)": 16060,
        "exe_B)": 16061,
        "p3)": 16062,
        "(p3": 16063,
        "A[3];": 16064,
        "max(max(A[0],": 16065,
        "A[1]),": 16066,
        "A[2]);": 16067,
        "A[0])": 16068,
        "A[1])": 16069,
        "A[2])": 16070,
        "a[10001];": 16071,
        "most": 16072,
        "max(chest,": 16073,
        "max(biceps,": 16074,
        "back));": 16075,
        "(most": 16076,
        "clo[35][2];": 16077,
        "clo[i][0]": 16078,
        "clo[i][1];": 16079,
        "(clo[i][0]": 16080,
        "clo[j][1]": 16081,
        "clo[i][1]": 16082,
        "clo[j][0])": 16083,
        "(arr[i][0]": 16084,
        "arr[j][1])": 16085,
        "y[n": 16086,
        "a[100000": 16087,
        "y[j])": 16088,
        "a[35][2]": 16089,
        "a[j][1])": 16090,
        "*H": 16091,
        "int[100];": 16092,
        "*A": 16093,
        "H[i];": 16094,
        "(H[i]": 16095,
        "h[100],": 16096,
        "Home[N],": 16097,
        "Guest[N];": 16098,
        "Home[i]": 16099,
        "Guest[i];": 16100,
        "Counter": 16101,
        "(Home[i]": 16102,
        "Guest[j])": 16103,
        "Counter++;": 16104,
        "arr1[30],": 16105,
        "arr2[30],": 16106,
        "arr1[i]": 16107,
        "(arr1[i]": 16108,
        "arr2[j])": 16109,
        "a[128],": 16110,
        "h[128],": 16111,
        "h[y]++;": 16112,
        "h[101]": 16113,
        "a[101]": 16114,
        "arr1[100]": 16115,
        "arr2[100]": 16116,
        "arr1[h": 16117,
        "arr2[a": 16118,
        "arr2[i]);": 16119,
        "h[105],": 16120,
        "g[105],": 16121,
        "g[i];": 16122,
        "g[j])": 16123,
        "b[101];": 16124,
        "(p[i].first": 16125,
        "p[g].second)": 16126,
        "p[120][3];": 16127,
        "p[i][2];": 16128,
        "(p[i][1]": 16129,
        "p[j][2])": 16130,
        "a[50]": 16131,
        "b[50]": 16132,
        "home[n],": 16133,
        "away[n];": 16134,
        "home[i]": 16135,
        "away[i];": 16136,
        "(home[i]": 16137,
        "away[j])": 16138,
        "s[35];": 16139,
        "s[i].first": 16140,
        "s[i].second;": 16141,
        "(s[i].first": 16142,
        "s[j].second)": 16143,
        "num[2][101],": 16144,
        "memset(num[0],": 16145,
        "sizeof(num[0]));": 16146,
        "memset(num[1],": 16147,
        "sizeof(num[1]));": 16148,
        "num[0][h]++;": 16149,
        "num[1][a]++;": 16150,
        "num[0][i]": 16151,
        "num[1][i];": 16152,
        "v.push_back(h);": 16153,
        "v1[j])": 16154,
        "h[n],": 16155,
        "ar[n][2];": 16156,
        "(ar[i][0]": 16157,
        "ar[j][1])": 16158,
        "a[3000];": 16159,
        "b[3000];": 16160,
        "arr1[31],": 16161,
        "arr2[31],": 16162,
        "a[31],": 16163,
        "b[31];": 16164,
        "G[i].first": 16165,
        "G[i].second;": 16166,
        "(G[i].second": 16167,
        "G[j].first)": 16168,
        "h[n];": 16169,
        "a[65],": 16170,
        "numOfteams": 16171,
        "numOfteams;": 16172,
        "arr[numOfteams][2];": 16173,
        "g[j]))": 16174,
        "h[30],": 16175,
        "g[30],": 16176,
        "g[j]": 16177,
        "b[50];": 16178,
        "int[2];": 16179,
        "p[i][0];": 16180,
        "p[i][1];": 16181,
        "p[j][1]": 16182,
        "c++": 16183,
        "guest[101];": 16184,
        "home[101];": 16185,
        "guest[a]": 16186,
        "guest[home[i]];": 16187,
        "number(0);": 16188,
        "h(n),": 16189,
        "h[j])": 16190,
        "ar[101],": 16191,
        "ar2[101],": 16192,
        "ar2[j])": 16193,
        "ar[i].first": 16194,
        "ar[i].second;": 16195,
        "(ar[i].first": 16196,
        "ar[j].second)": 16197,
        "g[n],": 16198,
        "h[31],": 16199,
        "a[31];": 16200,
        "a[35],": 16201,
        "b[35];": 16202,
        "ar[j])": 16203,
        "int[2": 16204,
        "n];": 16205,
        "ar[105],": 16206,
        "arr[k])": 16207,
        "C[n][2];": 16208,
        "(C[i][0]": 16209,
        "C[k][1])": 16210,
        "d[105];": 16211,
        "d[j])": 16212,
        "b[n][2];": 16213,
        "(b[i][0]": 16214,
        "b[j][1]": 16215,
        "*[c];": 16216,
        "a[n][2];": 16217,
        "(g[j]": 16218,
        "h[i])": 16219,
        "b[35],": 16220,
        "c[max_n],": 16221,
        "point,": 16222,
        "(a[point]": 16223,
        "point++;": 16224,
        "arr1[n": 16225,
        "(arr[p]": 16226,
        "cs,": 16227,
        "cs.push(a);": 16228,
        "as.push(a);": 16229,
        "(!cs.empty()": 16230,
        "!as.empty())": 16231,
        "cs.front(),": 16232,
        "as.front();": 16233,
        "cs.pop();": 16234,
        "as.pop();": 16235,
        "80005;": 16236,
        "q1,": 16237,
        "q2;": 16238,
        "q1.push(t);": 16239,
        "q2.push(t);": 16240,
        "(!q1.empty()": 16241,
        "!q2.empty())": 16242,
        "q1.front(),": 16243,
        "q2.front();": 16244,
        "q1.pop();": 16245,
        "q2.pop();": 16246,
        "c[1010],": 16247,
        "neo": 16248,
        "(neo": 16249,
        "c[neo])": 16250,
        "neo++;": 16251,
        "(c[neo]": 16252,
        "an[1001],": 16253,
        "am[1001];": 16254,
        "an[i];": 16255,
        "am[j];": 16256,
        "(am[j]": 16257,
        "an[i])": 16258,
        "b(m);": 16259,
        "b[cnt])": 16260,
        "b[1010],": 16261,
        "games,": 16262,
        "bills;": 16263,
        "prices(games);": 16264,
        "bills_(bills);": 16265,
        "prices[i];": 16266,
        "bills_.at(i);": 16267,
        "(bills_.size()": 16268,
        "bills_[0])": 16269,
        "bills_.pop_front();": 16270,
        "games[1010];": 16271,
        "wallet[1010];": 16272,
        "games[i];": 16273,
        "wallet[i];": 16274,
        "(games[i]": 16275,
        "wallet[j])": 16276,
        "game,": 16277,
        "money;": 16278,
        "game": 16279,
        "m[1005];": 16280,
        "gp": 16281,
        "(gp": 16282,
        "money)": 16283,
        "(g[gp]": 16284,
        "m[mp])": 16285,
        "gp++;": 16286,
        "s.push_back(a);": 16287,
        "(-1))": 16288,
        "(-1);": 16289,
        "bill;": 16290,
        "game.push(tem);": 16291,
        "bill.push(tem);": 16292,
        "(!game.empty()": 16293,
        "!bill.empty())": 16294,
        "game.front();": 16295,
        "game.pop();": 16296,
        "money": 16297,
        "bill.front();": 16298,
        "(money": 16299,
        "bill.pop();": 16300,
        "c[m],": 16301,
        "taken": 16302,
        "taken++;": 16303,
        "c[1001],": 16304,
        "c[k])": 16305,
        "v[T];": 16306,
        "d[T];": 16307,
        "d[top])": 16308,
        "x[t];": 16309,
        "cl": 16310,
        "++cl)": 16311,
        "x[cl])": 16312,
        "++cl;": 16313,
        "an[1005],": 16314,
        "am[1005];": 16315,
        "(an[i]": 16316,
        "am[res])": 16317,
        "g.push_back(a);": 16318,
        "w[j])": 16319,
        "A[1005],": 16320,
        "B[1005];": 16321,
        "Cnt": 16322,
        "B[j]": 16323,
        "Cnt++;": 16324,
        "c[n];": 16325,
        "ak,": 16326,
        "bk;": 16327,
        "ak": 16328,
        "(ak--)": 16329,
        "a.push(t);": 16330,
        "(bk--)": 16331,
        "b.push(t);": 16332,
        "(!b.empty()": 16333,
        "!a.empty())": 16334,
        "(b.front()": 16335,
        "a.front())": 16336,
        "game[maxn": 16337,
        "wallet[maxn": 16338,
        "game[i];": 16339,
        "(wallet[i]": 16340,
        "game[x])": 16341,
        "c[1005],": 16342,
        "hc": 16343,
        "ha": 16344,
        "m;)": 16345,
        "aha": 16346,
        "a[ha];": 16347,
        "hc++)": 16348,
        "(c[hc]": 16349,
        "a[ha])": 16350,
        "ha++;": 16351,
        "hc++;": 16352,
        "(hc": 16353,
        "flag[MAXN];": 16354,
        "a[t])": 16355,
        "inf32": 16356,
        "inf64": 16357,
        "id0": 16358,
        "id1": 16359,
        "(id0": 16360,
        "(a[id1]": 16361,
        "c[id0])": 16362,
        "id1++;": 16363,
        "id0++;": 16364,
        "bill[b];": 16365,
        "bill[j];": 16366,
        "bill[j])": 16367,
        "str[maxn][maxn];": 16368,
        "c.push(t);": 16369,
        "(c.size()": 16370,
        "c.front();": 16371,
        "a.front();": 16372,
        "(a[pos]": 16373,
        "b[2000],": 16374,
        "c[2000];": 16375,
        "b[cur])": 16376,
        "sn;": 16377,
        "sm.push(a);": 16378,
        "sn.push(a);": 16379,
        "(!sm.empty()": 16380,
        "!sn.empty())": 16381,
        "(sm.front()": 16382,
        "sn.front())": 16383,
        "sm.pop();": 16384,
        "sn.pop();": 16385,
        "c[100010],": 16386,
        "1e15;": 16387,
        "arr[5000000],": 16388,
        "c[5000000];": 16389,
        "q1;": 16390,
        "q1.push(a);": 16391,
        "(!q1.empty())": 16392,
        "(q1.front()": 16393,
        "sqrt(m);": 16394,
        "sqrt(i);": 16395,
        "isPrime": 16396,
        "(isPrime)": 16397,
        "(is_prime(i)": 16398,
        "nextprime;": 16399,
        "nextprime": 16400,
        "(isprime(nextprime))": 16401,
        "nextprime++;": 16402,
        "(nextprime": 16403,
        "(!prime(b))": 16404,
        "(next": 16405,
        "actual_next;": 16406,
        "(int)sqrt((double)x);": 16407,
        "(prime)": 16408,
        "actual_next": 16409,
        "(actual_next": 16410,
        "istrue(int": 16411,
        "(istrue(n,": 16412,
        "(isPrime(n)": 16413,
        "isPrime(m))": 16414,
        "freopen(\"colors.in\",": 16415,
        "acos(0.0);": 16416,
        "res[nn]": 16417,
        "res[idx++]": 16418,
        "lower_bound(res,": 16419,
        "(res[first]": 16420,
        "res[second]": 16421,
        "prime(m);": 16422,
        "((!x": 16423,
        "!y))": 16424,
        "(first)": 16425,
        "prime(i);": 16426,
        "_sieve_size;": 16427,
        "bitset<10000010>": 16428,
        "sieve(long": 16429,
        "upperbound)": 16430,
        "_sieve_size": 16431,
        "upperbound": 16432,
        "bs.reset();": 16433,
        "bs.flip();": 16434,
        "bs.set(0,": 16435,
        "bs.set(1,": 16436,
        "(bs.test((size_t)i))": 16437,
        "bs.set((size_t)j,": 16438,
        "primes.push_back((int)i);": 16439,
        "sieve(100000);": 16440,
        "prim": 16441,
        "(prim)": 16442,
        "puts(\"NO\"),": 16443,
        "p[20]": 16444,
        "11,": 16445,
        "13,": 16446,
        "17,": 16447,
        "19,": 16448,
        "23,": 16449,
        "29,": 16450,
        "31,": 16451,
        "37,": 16452,
        "41,": 16453,
        "43,": 16454,
        "47};": 16455,
        "16;": 16456,
        "isPrime;": 16457,
        "(isPrime": 16458,
        "(!isPrime(b))": 16459,
        "(isPrime(m)": 16460,
        "nextPrime(n,": 16461,
        "prime(n))": 16462,
        "isPrime(m)": 16463,
        "(isPrime(i)": 16464,
        "check[t];": 16465,
        "check[j": 16466,
        "puts(i": 16467,
        "(!(x": 16468,
        "(is_prime(i))": 16469,
        "(is_prime(m))": 16470,
        "isMNextPrime(int": 16471,
        "(div": 16472,
        "div++;": 16473,
        "isMNextPrime(n": 16474,
        "(prime": 16475,
        "(!(n": 16476,
        "arr[1000000": 16477,
        "(arr[b]": 16478,
        "prime[55];": 16479,
        "sv()": 16480,
        "prime[2]": 16481,
        "sv();": 16482,
        "a[1007];": 16483,
        "_min": 16484,
        "_max": 16485,
        "max(_max,": 16486,
        "a[x]);": 16487,
        "min(_max,": 16488,
        "_min);": 16489,
        "1e3,": 16490,
        "max(a[j]": 16491,
        "ar[j]": 16492,
        "max(diff,": 16493,
        "min(a[i": 16494,
        "r[n],": 16495,
        "max(min(m,": 16496,
        "b[1000],": 16497,
        "max2": 16498,
        "max2)": 16499,
        "max2;": 16500,
        "arr[b]": 16501,
        "arr[a]);": 16502,
        "max(dif,": 16503,
        "9999999,": 16504,
        "max(abs(arr[i]": 16505,
        "arr[x]),": 16506,
        "1001": 16507,
        "MX,": 16508,
        "MN,": 16509,
        "bl;": 16510,
        "pr[1001];": 16511,
        "MX;": 16512,
        "min_": 16513,
        "max_": 16514,
        "-0x3f3f3f3f;": 16515,
        "(abs(a[j]": 16516,
        "max_)": 16517,
        "abs(a[j]": 16518,
        "(max_": 16519,
        "min_)": 16520,
        "max_;": 16521,
        "b[0]);": 16522,
        "mn1": 16523,
        "max(mn1,": 16524,
        "mn1);": 16525,
        "recorrer(int": 16526,
        "m[])": 16527,
        "m[j]": 16528,
        "mostrar(int": 16529,
        "m[],": 16530,
        "recorrer(v,": 16531,
        "(m[j": 16532,
        "may)": 16533,
        "m[j": 16534,
        "m[j];": 16535,
        "may;": 16536,
        "list(n);": 16537,
        "list.size();": 16538,
        "list[i];": 16539,
        "numeric_limits<int>::max(),": 16540,
        "list.size()": 16541,
        "factor": 16542,
        "(list[i]": 16543,
        "list[i": 16544,
        "(list[i": 16545,
        "list[i]);": 16546,
        "(factor": 16547,
        "factor;": 16548,
        "list.erase(list.begin()": 16549,
        "ind);": 16550,
        "numeric_limits<int>::min();": 16551,
        "list[i]": 16552,
        "multiset<int>": 16553,
        "myset.insert(a[i": 16554,
        "myset.erase(a[i]": 16555,
        "myset.erase(a[i": 16556,
        "*myset.rbegin());": 16557,
        "myset.insert(a[i]": 16558,
        "minDif()": 16559,
        "(i++": 16560,
        "minDif());": 16561,
        "arr[106],": 16562,
        "arr[z]": 16563,
        "arr[z": 16564,
        "difficulty(vector<int>": 16565,
        "level[1]": 16566,
        "level[0];": 16567,
        "level.size();": 16568,
        "(level[i": 16569,
        "level[i]))": 16570,
        "level[i": 16571,
        "level[i];": 16572,
        "level;": 16573,
        "level.push_back(x);": 16574,
        "level.erase(level.begin()": 16575,
        "difficulty(level);": 16576,
        "sort(level.begin(),": 16577,
        "level.end());": 16578,
        "(max1": 16579,
        "sum);": 16580,
        "dif,": 16581,
        "vec(n);": 16582,
        "vec[0];": 16583,
        "vec[1];": 16584,
        "vec[2];": 16585,
        "vec[2]": 16586,
        "min(vec[i]": 16587,
        "vec[1]": 16588,
        "max(vec[i]": 16589,
        "a.push_back(k);": 16590,
        "a.erase(a.begin()": 16591,
        "v.push_back(max);": 16592,
        "sort(a.begin(),": 16593,
        "m[200],": 16594,
        "mx[200];": 16595,
        "mx[p]": 16596,
        "m[r];": 16597,
        "*max_element(mx,": 16598,
        "l.push_back(t);": 16599,
        "*min_element(l.begin(),": 16600,
        "l.end())": 16601,
        "max(ret,": 16602,
        "abs(arr[i": 16603,
        "1]));": 16604,
        "abs(arr[i]": 16605,
        "s(0),": 16606,
        "m(1000);": 16607,
        "-1e9;": 16608,
        "end);": 16609,
        "b[z]": 16610,
        "sort(&b[0],": 16611,
        "&b[z]);": 16612,
        "c[t]": 16613,
        "sort(&c[0],": 16614,
        "&c[t]);": 16615,
        "b[z": 16616,
        "10000020;": 16617,
        "c[110];": 16618,
        "50];": 16619,
        "diffuclty": 16620,
        "rock": 16621,
        "b(n": 16622,
        "rock)": 16623,
        "b[l]": 16624,
        "diffuclty;": 16625,
        "rock++;": 16626,
        "9999999;": 16627,
        "min(ret,": 16628,
        "*board": 16629,
        "string[8];": 16630,
        "board[i];": 16631,
        "(board[i][j]": 16632,
        "board[i][j": 16633,
        "(input[j]": 16634,
        "input[j": 16635,
        "a[8][8];": 16636,
        "num()": 16637,
        "(!check())": 16638,
        "num();": 16639,
        "(a[x][0]": 16640,
        "'W')": 16641,
        "a[x][0]": 16642,
        "'B';": 16643,
        "a[x][7]": 16644,
        "'W';": 16645,
        "8,": 16646,
        "\"WBWBWBWB\")": 16647,
        "\"BWBWBWBW\")": 16648,
        "(s[j": 16649,
        "str[8];": 16650,
        "str[i][j": 16651,
        "(!str.compare(\"BWBWBWBW\")": 16652,
        "!str.compare(\"WBWBWBWB\"))": 16653,
        "(ctr": 16654,
        "a[i][0])": 16655,
        "judge(i);": 16656,
        "S[10];": 16657,
        "check2(string": 16658,
        "(check2(s))": 16659,
        "rotate(S,": 16660,
        "(!check(S[i]))": 16661,
        "a[64];": 16662,
        "64;": 16663,
        "15;": 16664,
        "39;": 16665,
        "40;": 16666,
        "56;": 16667,
        "ch(string": 16668,
        "'B')": 16669,
        "ch(x))": 16670,
        "c[8];": 16671,
        "str[9];": 16672,
        "(str[k][i]": 16673,
        "str[k][i": 16674,
        "(str[k][1]": 16675,
        "str[k][8])": 16676,
        "(!ok(i))": 16677,
        "(fg)": 16678,
        "arr[10];": 16679,
        "str[7])": 16680,
        "((f)": 16681,
        "\"YES\")": 16682,
        "ch[10];": 16683,
        "ch[j];": 16684,
        "ch[j": 16685,
        "\"WBWBWBWB\"": 16686,
        "xx[10][10];": 16687,
        "xx[i];": 16688,
        "(xx[i][j]": 16689,
        "xx[i][j": 16690,
        "m[10][20];": 16691,
        "line)": 16692,
        "(line": 16693,
        "str[15];": 16694,
        "(m[line": 16695,
        "str[8]": 16696,
        "(strstr(str,": 16697,
        "\"WW\")": 16698,
        "strstr(str,": 16699,
        "\"BB\"))": 16700,
        "(strstr(m[line],": 16701,
        "dfs(line": 16702,
        "v.push_back(m[0][i]);": 16703,
        "m[0][i]": 16704,
        "(strstr(m[0],": 16705,
        "strstr(m[0],": 16706,
        "'B'": 16707,
        "dfs(1))": 16708,
        "v.insert(v.begin(),": 16709,
        "v[7]);": 16710,
        "8]": 16711,
        "(solve())": 16712,
        "isAns": 16713,
        "(isAns)": 16714,
        "c[10][10];": 16715,
        "gets(c[i]);": 16716,
        "(string": 16717,
        "s;)": 16718,
        "s[i].size();": 16719,
        "rotate(s.begin(),": 16720,
        "(!works)": 16721,
        "\"BWBWBWBW\"": 16722,
        "ara[15][15];": 16723,
        "ara[i][j];": 16724,
        "!ok;": 16725,
        "(ara[i][1]": 16726,
        "ara[i][8])": 16727,
        "(ara[i][j]": 16728,
        "ara[i][j": 16729,
        "a[i][k": 16730,
        "chess(8);": 16731,
        "chess[i];": 16732,
        "(chess[i][j]": 16733,
        "chess[i][j": 16734,
        "x[31];": 16735,
        "y[31];": 16736,
        "z[31][31];": 16737,
        "z[j][i];": 16738,
        "l[51]": 16739,
        "r[51]": 16740,
        "l[j])": 16741,
        "xx[32][32];": 16742,
        "xx[i][j];": 16743,
        "xx[s][t];": 16744,
        "a[i][k],": 16745,
        "a[k][j];": 16746,
        "mmp[35][35],": 16747,
        "mmp[i][j];": 16748,
        "mmp[i][k];": 16749,
        "mmp[h][j];": 16750,
        "a[34][34];": 16751,
        "h[34];": 16752,
        "lie[34];": 16753,
        "memset(h,": 16754,
        "sizeof(h));": 16755,
        "memset(lie,": 16756,
        "sizeof(lie));": 16757,
        "lie[i]": 16758,
        "(lie[j]": 16759,
        "a[35][35];": 16760,
        "a[k][j],": 16761,
        "A[50][50];": 16762,
        "memset(A,": 16763,
        "sizeof(A));": 16764,
        "A[i][a];": 16765,
        "A[b][j];": 16766,
        "c[110],": 16767,
        "m[110][110];": 16768,
        "r[j])": 16769,
        "cheak(int": 16770,
        "sumx": 16771,
        "sumy": 16772,
        "(sumx": 16773,
        "sumy)": 16774,
        "cheak(i,": 16775,
        "sumr[35],": 16776,
        "sumc[35];": 16777,
        "sumr[i]": 16778,
        "sumc[i]": 16779,
        "sumc[j]": 16780,
        "(sumc[j]": 16781,
        "sumr[i])": 16782,
        "r[50],": 16783,
        "c[50],": 16784,
        "r[i])": 16785,
        "sum_row[35]": 16786,
        "sum_col[35]": 16787,
        "sum_row[i]": 16788,
        "sum_col[j]": 16789,
        "(sum_row[i]": 16790,
        "sum_col[j])": 16791,
        "a[32][32];": 16792,
        "row[32]": 16793,
        "col[32]": 16794,
        "row[i])": 16795,
        "35;": 16796,
        "r[maxn][maxn],": 16797,
        "row[maxn],": 16798,
        "column[maxn];": 16799,
        "r[i][j];": 16800,
        "r[j][i];": 16801,
        "column[i]": 16802,
        "column[j])": 16803,
        "hen[35],": 16804,
        "con[35];": 16805,
        "hen[i]": 16806,
        "con[i]": 16807,
        "(con[i]": 16808,
        "hen[j])": 16809,
        "a[50][50],": 16810,
        "R[50],": 16811,
        "C[50];": 16812,
        "C[j]": 16813,
        "(C[j]": 16814,
        "R[i])": 16815,
        "a[40][40],": 16816,
        "col[40],": 16817,
        "row[40],": 16818,
        "b[40][40],": 16819,
        "col[j];": 16820,
        "b[i][j])": 16821,
        "a[M][M];": 16822,
        "sr[M];": 16823,
        "sc[M];": 16824,
        "sr[i]": 16825,
        "sc[j]": 16826,
        "(sc[j]": 16827,
        "sr[i])": 16828,
        "sumr": 16829,
        "d[n][n];": 16830,
        "d[r][c];": 16831,
        "d[r][i];": 16832,
        "d[i][c];": 16833,
        "(sumc": 16834,
        "sumr)": 16835,
        "row[n],": 16836,
        "clm[n];": 16837,
        "clm[i]": 16838,
        "clm[j]": 16839,
        "(clm[i]": 16840,
        "row[j])": 16841,
        "c[100];": 16842,
        "a[200][200];": 16843,
        "(judge(i,": 16844,
        "r[N],": 16845,
        "v[N][N],": 16846,
        "r[i]);": 16847,
        "m[30][30],": 16848,
        "r[30]": 16849,
        "c[30]": 16850,
        "win(0);": 16851,
        "arr[35][35];": 16852,
        "arr[i][y];": 16853,
        "arr[i][q];": 16854,
        "arr[q][y];": 16855,
        "s1[35],": 16856,
        "s2[35];": 16857,
        "a[i][t];": 16858,
        "s2[t]": 16859,
        "(s2[t]": 16860,
        "a[row][j];": 16861,
        "col++)": 16862,
        "a[i][col];": 16863,
        "a[x][j];": 16864,
        "a[i][x];": 16865,
        "judge(i,": 16866,
        "row[50],": 16867,
        "col[50];": 16868,
        "memset(row,": 16869,
        "sizeof(row));": 16870,
        "memset(col,": 16871,
        "sizeof(col));": 16872,
        "col[j])": 16873,
        "g[100],": 16874,
        "k[100];": 16875,
        "1e+5;": 16876,
        "col[n];": 16877,
        "c[40]": 16878,
        "r[40]": 16879,
        "*b,": 16880,
        "int[m];": 16881,
        "b[r": 16882,
        "temp1.push_back(k);": 16883,
        "temp2.push_back(r);": 16884,
        "dem++;": 16885,
        "(dem": 16886,
        "dem);": 16887,
        "u.clear();": 16888,
        "temp1.size();": 16889,
        "u.push_back(temp1[i]);": 16890,
        "v.push_back(temp2[i]);": 16891,
        "temp1.clear();": 16892,
        "temp2.clear();": 16893,
        "u.size();": 16894,
        "soldier[100001];": 16895,
        "armor[100001];": 16896,
        "soldier[i];": 16897,
        "armor[i];": 16898,
        "(f(soldier[s],": 16899,
        "armor[a])": 16900,
        "ans1.push_back(s": 16901,
        "ans2.push_back(a": 16902,
        "ans1.size()": 16903,
        "ans1.size();": 16904,
        "ans1[i]": 16905,
        "ans2[i]": 16906,
        "'9'))": 16907,
        "getchar(),": 16908,
        "10),": 16909,
        "putchar('0');": 16910,
        "dd,": 16911,
        "z1[1000000],": 16912,
        "z2[1000000],": 16913,
        "a[1000000],": 16914,
        "b[1000000];": 16915,
        "b[d]": 16916,
        "z1[++dd]": 16917,
        "z2[dd]": 16918,
        "dd": 16919,
        "dd;": 16920,
        "z1[i]": 16921,
        "z2[i]": 16922,
        "cnt[100001]": 16923,
        "a.push_back(t);": 16924,
        "b.push_back(t);": 16925,
        "u.push_back(i": 16926,
        "v.push_back(j": 16927,
        "u.size()": 16928,
        "soldier;": 16929,
        "vest;": 16930,
        "soldier.resize(n);": 16931,
        "vest.resize(m);": 16932,
        "vest[i];": 16933,
        "matching[2];": 16934,
        "(vest[j]": 16935,
        "soldier[i]": 16936,
        "matching[0].push_back(++i);": 16937,
        "matching[1].push_back(++j);": 16938,
        "matching[0].size()": 16939,
        "matching[0].size();": 16940,
        "matching[0][i]": 16941,
        "matching[1][i]": 16942,
        "b.resize(m);": 16943,
        "ia": 16944,
        "ib": 16945,
        "a[ia++]": 16946,
        "b[ib++]": 16947,
        "cnta": 16948,
        "cntb": 16949,
        "b.size(),": 16950,
        "ic": 16951,
        "c.resize(2000000);": 16952,
        "cntb)": 16953,
        "(b[m]": 16954,
        "c[ic++]": 16955,
        "++m;": 16956,
        "b[m]": 16957,
        "ic;": 16958,
        "b[100000],": 16959,
        "c[100000];": 16960,
        "a[i].first;": 16961,
        "b[i].first;": 16962,
        "b[i].second": 16963,
        "(a[l].first": 16964,
        "b[r].first": 16965,
        "a[l].first": 16966,
        "c[q].first": 16967,
        "a[l].second;": 16968,
        "c[q].second": 16969,
        "b[r].second;": 16970,
        "b[r].first)": 16971,
        "kol;": 16972,
        "c[i].first": 16973,
        "c[i].second": 16974,
        "result.resize(n);": 16975,
        "result.size();": 16976,
        "pa[100004];": 16977,
        "per[100004],": 16978,
        "cha[100004],": 16979,
        "con;": 16980,
        "per[i];": 16981,
        "cha[i];": 16982,
        "cha[j]": 16983,
        "per[i]": 16984,
        "pa[con++]": 16985,
        "make_pair(i,": 16986,
        "j++);": 16987,
        "pa[i].first": 16988,
        "pa[i].second": 16989,
        "sd;": 16990,
        "sdVest;": 16991,
        "sd.resize(n);": 16992,
        "sd[i];": 16993,
        "lastSoldier": 16994,
        "sd[lastSoldier]": 16995,
        "vest.push_back(i);": 16996,
        "sdVest.push_back(lastSoldier);": 16997,
        "lastSoldier++;": 16998,
        "vest.size();": 16999,
        "sdVest[i]": 17000,
        "vest[i]": 17001,
        "kol[26],": 17002,
        "r[k].first": 17003,
        "r[k].second": 17004,
        "r[i].first": 17005,
        "r[i].second": 17006,
        "a.push_back(temp);": 17007,
        "b.push_back(temp);": 17008,
        "itm;": 17009,
        "S++;": 17010,
        "ma.insert(make_pair(i": 17011,
        "(itm": 17012,
        "itm": 17013,
        "itm++)": 17014,
        "itm->first": 17015,
        "itm->second": 17016,
        "d.push_back(0);": 17017,
        "a.push_back(0);": 17018,
        "d.push_back(dd);": 17019,
        "a.push_back(aa);": 17020,
        "(((d[i]": 17021,
        "y)))": 17022,
        "ans1.push_back(i);": 17023,
        "ans2.push_back(j);": 17024,
        "vest[100000": 17025,
        "match[100000": 17026,
        "check[100000": 17027,
        "vest[j])": 17028,
        "vest[j]": 17029,
        "!check[j])": 17030,
        "check[j])": 17031,
        "match[i]": 17032,
        "check[j]": 17033,
        "(match[i]": 17034,
        "bshead(long": 17035,
        "key)": 17036,
        "(vest[mid]": 17037,
        "bsend(long": 17038,
        "memset(match,": 17039,
        "sizeof(match));": 17040,
        "bshead(a[i]": 17041,
        "bsend(a[i]": 17042,
        "neo;": 17043,
        "a.push_back(inp);": 17044,
        "b.push_back(inp);": 17045,
        "L.push_back(i": 17046,
        "R.push_back(j": 17047,
        "arr[T];": 17048,
        "minimun": 17049,
        "min(minimun,": 17050,
        "minimun)": 17051,
        "a[100004];": 17052,
        "table[100005];": 17053,
        "secs;": 17054,
        "secs": 17055,
        "bot": 17056,
        "min(bot,": 17057,
        "bot)": 17058,
        "terkecil": 17059,
        "min(terkecil,": 17060,
        "terkecil;": 17061,
        "(hitung": 17062,
        "(terkecil": 17063,
        "s[100005],": 17064,
        "minval": 17065,
        "min(minval,": 17066,
        "minval;": 17067,
        "A[100002];": 17068,
        "minimum": 17069,
        "min(A[i],": 17070,
        "minimum);": 17071,
        "Res": 17072,
        "abs(A[i]": 17073,
        "minimum)": 17074,
        "value);": 17075,
        "A[n": 17076,
        "1000000000000,": 17077,
        "numbers[100005];": 17078,
        "((numbers[i]": 17079,
        "a[200000": 17080,
        "z_function(string": 17081,
        "long)s.length();": 17082,
        "z(n);": 17083,
        "min(r": 17084,
        "z[i": 17085,
        "l]);": 17086,
        "s[z[i]]": 17087,
        "z[i]])": 17088,
        "++z[i];": 17089,
        "61);": 17090,
        "min(ma,": 17091,
        "boostIO()": 17092,
        "pos[120][120],": 17093,
        "vis[120];": 17094,
        "root)": 17095,
        "vis[root]": 17096,
        "a[root].size();": 17097,
        "(!vis[a[root][i]])": 17098,
        "dfs(a[root][i]);": 17099,
        "comp()": 17100,
        "yu": 17101,
        "yu)": 17102,
        "2000000000;": 17103,
        "(i)++)": 17104,
        "*min_element((v).begin(),": 17105,
        "((v[i]": 17106,
        "a[100010],": 17107,
        "dif[100010];": 17108,
        "9999999999;": 17109,
        "dif[i]": 17110,
        "(dif[i]": 17111,
        "*min_element(a,": 17112,
        "(int)1e6": 17113,
        "MAXB": 17114,
        "MAXB,": 17115,
        "check++;": 17116,
        "v[i]);": 17117,
        "num[100005],": 17118,
        "sort(num": 17119,
        "num[1])": 17120,
        "amount,": 17121,
        "decrease,": 17122,
        "num[100005];": 17123,
        "decrease;": 17124,
        "decrease": 17125,
        "minn);": 17126,
        "pri[maxn];": 17127,
        "pri[i];": 17128,
        "pri[i]);": 17129,
        "((pri[i]": 17130,
        "(pri[i]": 17131,
        "kanan,": 17132,
        "hasil;": 17133,
        "price.push_back(x);": 17134,
        "sort(price.begin(),": 17135,
        "price.end());": 17136,
        "kanan": 17137,
        "price.size()": 17138,
        "(kanan": 17139,
        "((price[kanan]": 17140,
        "price[kanan": 17141,
        "kanan--;": 17142,
        "price[kanan--]": 17143,
        "price[0];": 17144,
        "mm": 17145,
        "10e17;": 17146,
        "min(mm,": 17147,
        "rate,": 17148,
        "price[100005],": 17149,
        "rate;": 17150,
        "price[x];": 17151,
        "(price[x]": 17152,
        "((price[x]": 17153,
        "rate": 17154,
        "price[x]": 17155,
        "(!(cin": 17156,
        "gcd(e,": 17157,
        "(read())": 17158,
        "\"5/6\"": 17159,
        "\"2/3\"": 17160,
        "\"1/2\"": 17161,
        "\"1/3\"": 17162,
        "\"1/6\"": 17163,
        "\"1/1\"": 17164,
        "__gcd(y,": 17165,
        "six": 17166,
        "big);": 17167,
        "\"1/1\\n\";": 17168,
        "{\"1/6\",": 17169,
        "\"1/3\",": 17170,
        "\"1/2\",": 17171,
        "\"2/3\",": 17172,
        "\"5/6\",": 17173,
        "\"1/1\"};": 17174,
        "a[6": 17175,
        "h]": 17176,
        "Die_Roll[6]": 17177,
        "max(num1,": 17178,
        "num2);": 17179,
        "Die_Roll[6": 17180,
        "x]": 17181,
        "chance": 17182,
        "__gcd(chance,": 17183,
        "pembagi": 17184,
        "\"0/1\\n\";": 17185,
        "p[7]": 17186,
        "{\"\",": 17187,
        "\"1/1\",": 17188,
        "\"1/6\"};": 17189,
        "p[max(y,": 17190,
        "w)]": 17191,
        "max(w,": 17192,
        "\"/6\"": 17193,
        "gcd_1(int": 17194,
        "gcd_1(b,": 17195,
        "gcd_1(7": 17196,
        "(7": 17197,
        "nom,": 17198,
        "dom": 17199,
        "nom": 17200,
        "(!(nom": 17201,
        "!(dom": 17202,
        "3))": 17203,
        "\"5/6\\n\";": 17204,
        "\"2/3\\n\";": 17205,
        "\"1/2\\n\";": 17206,
        "\"1/3\\n\";": 17207,
        "\"1/6\\n\";": 17208,
        "\"0/6\\n\";": 17209,
        "(max(n,": 17210,
        "\"1/6\";": 17211,
        "\"1/3\";": 17212,
        "\"1/2\";": 17213,
        "\"2/3\";": 17214,
        "\"5/6\";": 17215,
        "\"1/1\";": 17216,
        "spf[100001];": 17217,
        "modexp(long": 17218,
        "getFactorization(long": 17219,
        "getZarr(string": 17220,
        "Z[]);": 17221,
        "prefix_function(string": 17222,
        "pi;": 17223,
        "virus;": 17224,
        "dp[105][105][105];": 17225,
        "prefix(long": 17226,
        "pi[j": 17227,
        "(dp[i][j][k]": 17228,
        "dp[i][j][k];": 17229,
        "virus.length())": 17230,
        "dp[i][j][k]": 17231,
        "s1.length()": 17232,
        "s2.length())": 17233,
        "max(f(i": 17234,
        "f(i,": 17235,
        "prefix(k,": 17236,
        "virus,": 17237,
        "f(i": 17238,
        "max(1": 17239,
        "s[h--])": 17240,
        "modexp(a,": 17241,
        "spf[1]": 17242,
        "spf[i]": 17243,
        "(spf[i]": 17244,
        "(spf[j]": 17245,
        "spf[j]": 17246,
        "ret.push_back(spf[x]);": 17247,
        "spf[x];": 17248,
        "Z[])": 17249,
        "R)": 17250,
        "str[R": 17251,
        "L]": 17252,
        "str[R])": 17253,
        "R++;": 17254,
        "Z[i]": 17255,
        "R--;": 17256,
        "(Z[k]": 17257,
        "Z[k];": 17258,
        "pi(n);": 17259,
        "pi[i": 17260,
        "pi[i]": 17261,
        "gc": 17262,
        "gc;": 17263,
        "1000000005;": 17264,
        "!(r2": 17265,
        "ans[]": 17266,
        "ans[6": 17267,
        "pro": 17268,
        "pro++;": 17269,
        "__gcd(pro,": 17270,
        "(pro": 17271,
        "\"0/1\"": 17272,
        "die_roll[6]": 17273,
        "die_roll[6": 17274,
        "S[6]": 17275,
        "S[6": 17276,
        "ans]": 17277,
        "huruf[n];": 17278,
        "huruf[i].insert(a[j]);": 17279,
        "nilai": 17280,
        "letter1": 17281,
        "letter2": 17282,
        "((huruf[k].size()": 17283,
        "(huruf[k].count(letter1)": 17284,
        "huruf[k].count(letter2)": 17285,
        "x[k].length();": 17286,
        "max(big,": 17287,
        "nilai);": 17288,
        "a[k].size();": 17289,
        "(a[k][h]": 17290,
        "a[k][h]": 17291,
        "ch[1005];": 17292,
        "c[105][1005];": 17293,
        "ans[30][30];": 17294,
        "c[i][s[j]": 17295,
        "'a']": 17296,
        "(c[i][s[j]": 17297,
        "ch[nn]": 17298,
        "ans[i][ch[0]]": 17299,
        "ans[ch[0]][i]": 17300,
        "ans[ch[0]][ch[1]]": 17301,
        "ans[ch[1]][ch[0]]": 17302,
        "max(answer,": 17303,
        "ans[i][j]);": 17304,
        "A[26][26],": 17305,
        "pair<char,": 17306,
        "dif()": 17307,
        "R.first": 17308,
        "S[0];": 17309,
        "(B)": 17310,
        "R.second)": 17311,
        "char>('0',": 17312,
        "R.first)": 17313,
        "R.second": 17314,
        "(!B)": 17315,
        "R.first;": 17316,
        "dif();": 17317,
        "(R.first": 17318,
        "A[R.first": 17319,
        "'a'][j]": 17320,
        "'a'][j]);": 17321,
        "A[j][R.first": 17322,
        "'a'][R.second": 17323,
        "A[R.second": 17324,
        "'a'][R.first": 17325,
        "'a']);": 17326,
        "w[110];": 17327,
        "w[i];": 17328,
        "w[k].size();": 17329,
        "cnt++)": 17330,
        "(w[k][cnt]": 17331,
        "w[k][cnt]": 17332,
        "w[k].size())": 17333,
        "s[i].length();": 17334,
        "s[1001][1001];": 17335,
        "hah": 17336,
        "strlen(s[i]);": 17337,
        "hah)": 17338,
        "404;": 17339,
        "mp[200][200];": 17340,
        "memset(mp,": 17341,
        "sizeof(mp));": 17342,
        "(int)s[i]": 17343,
        "(int)s[i])": 17344,
        "(!flag1)": 17345,
        "(int)s[i];": 17346,
        "(!flag2)": 17347,
        "mp[flag1][flag2]": 17348,
        "mp[flag1][flag2]);": 17349,
        "mp[flag2][flag1]": 17350,
        "mp[flag2][flag1]);": 17351,
        "199;": 17352,
        "mp[flag1][i]": 17353,
        "mp[flag1][i]);": 17354,
        "mp[i][flag1]": 17355,
        "mp[i][flag1]);": 17356,
        "vis[109];": 17357,
        "len[109];": 17358,
        "w.length();": 17359,
        "(w[j]": 17360,
        "len[i]": 17361,
        "sel": 17362,
        "++u)": 17363,
        "vis[u])": 17364,
        "len[u];": 17365,
        "sel);": 17366,
        "(int)s[k].size();": 17367,
        "(s[k][z]": 17368,
        "s[k][z]": 17369,
        "(ch)": 17370,
        "max(tmp,": 17371,
        "ss[200];": 17372,
        "ss[i].insert(s[j]);": 17373,
        "num[i]++;": 17374,
        "(ss[k].size()": 17375,
        "(ss[k].count(i)": 17376,
        "ss[k].count(j))": 17377,
        "num[k];": 17378,
        "a[30][30];": 17379,
        "aea;": 17380,
        "s[d])": 17381,
        "aea": 17382,
        "aea)": 17383,
        "a[j][aea]": 17384,
        "a[aea][j]": 17385,
        "s[d]": 17386,
        "a[aea][lol]": 17387,
        "a[lol][aea]": 17388,
        "letters[105];": 17389,
        "reading()": 17390,
        "letters[j];": 17391,
        "worth(char": 17392,
        "letters[m].size();": 17393,
        "(letters[m][i]": 17394,
        "letters[m][i]": 17395,
        "reading();": 17396,
        "kk++)": 17397,
        "ff++)": 17398,
        "worth(kk,": 17399,
        "letters[d].size();": 17400,
        "max(larger,": 17401,
        "numb,": 17402,
        "chara[102][1010]": 17403,
        "chara[i];": 17404,
        "numb": 17405,
        "strlen(chara[b]);": 17406,
        "(chara[b][t]": 17407,
        "chara[b][t]": 17408,
        "(numb": 17409,
        "numb;": 17410,
        "strlen(a[k]);": 17411,
        "A[26],": 17412,
        "B[26][26],": 17413,
        "C[26],": 17414,
        "jwbn,": 17415,
        "nd,": 17416,
        "A[j]": 17417,
        "A[int(s[j])": 17418,
        "97]++;": 17419,
        "A[j];": 17420,
        "(coun": 17421,
        "C[st]": 17422,
        "B[st][nd]": 17423,
        "B[nd][st]": 17424,
        "B[i][j]": 17425,
        "C[i];": 17426,
        "C[j];": 17427,
        "(B[i][j]": 17428,
        "jwbn)": 17429,
        "jwbn": 17430,
        "l[k].length();": 17431,
        "(l[k][m]": 17432,
        "l[k][m]": 17433,
        "s[k].size();": 17434,
        "(s[k][l]": 17435,
        "s[k][l]": 17436,
        "temp1++;": 17437,
        "letters[26];": 17438,
        "str(0);": 17439,
        "str.resize(size_n);": 17440,
        "letters[ii]": 17441,
        "str[ii]);": 17442,
        "max(result,": 17443,
        "check(letters[ii],": 17444,
        "letters[jj]));": 17445,
        "wordLen;": 17446,
        "niceWord;": 17447,
        "wordLen": 17448,
        "str[ii].size();": 17449,
        "niceWord": 17450,
        "wordLen)": 17451,
        "((str[ii][jj]": 17452,
        "(str[ii][jj]": 17453,
        "(niceWord)": 17454,
        "lenp,": 17455,
        "maximo": 17456,
        "v[n][1001];": 17457,
        "v[k];": 17458,
        "strlen(v[p]);": 17459,
        "lenp;": 17460,
        "(v[p][q]": 17461,
        "v[p][q]": 17462,
        "max(maximo,": 17463,
        "sum[30];": 17464,
        "f[30][30];": 17465,
        "t[1005];": 17466,
        "s.c_str());": 17467,
        "strlen(t);": 17468,
        "al": 17469,
        "(unique(t,": 17470,
        "len))": 17471,
        "(al": 17472,
        "f[a": 17473,
        "f[b": 17474,
        "f[j][a": 17475,
        "max(f[i][j],": 17476,
        "sol(int": 17477,
        "got": 17478,
        "v[i].length();": 17479,
        "97": 17480,
        "v[i][j]": 17481,
        "(got)": 17482,
        "sol(i,": 17483,
        "69;": 17484,
        "85;": 17485,
        "str[MAXN];": 17486,
        "jt": 17487,
        "str[it].size();": 17488,
        "jt++)": 17489,
        "(str[it][jt]": 17490,
        "str[it][jt]": 17491,
        "(active": 17492,
        "res);": 17493,
        "man": 17494,
        "v[26][26];": 17495,
        "a[150][1000];": 17496,
        "l[150];": 17497,
        "sort(a[i],": 17498,
        "strlen(a[i]));": 17499,
        "unique(a[i],": 17500,
        "strlen(a[i]))": 17501,
        "v[a[i][0]": 17502,
        "strlen(a[i]);": 17503,
        "v[j][a[i][0]": 17504,
        "'a'][a[i][1]": 17505,
        "v[i][j]);": 17506,
        "s[k].length();": 17507,
        "122;": 17508,
        "datt[105][105];": 17509,
        "datt[i][j];": 17510,
        "(datt[i][j]": 17511,
        "datt[i][j]": 17512,
        "(b[j": 17513,
        "trash;": 17514,
        "(trash": 17515,
        "2000000000000000000LL;": 17516,
        "10000007;": 17517,
        "a[1000006];": 17518,
        "cell[n][m],": 17519,
        "cell2[n][m];": 17520,
        "cell[i][j];": 17521,
        "cell2[i][j]": 17522,
        "cell[i][j]": 17523,
        "(cell2[i][j]": 17524,
        "str[n][m];": 17525,
        "(str[i][k]": 17526,
        "str[i][k]": 17527,
        "arr[105][105];": 17528,
        "(temp[j]": 17529,
        "c[n][m];": 17530,
        "vis[101][101];": 17531,
        "w[2]": 17532,
        "{'B',": 17533,
        "'W'};": 17534,
        "vis[x][y])": 17535,
        "vis[x][y]": 17536,
        "(c[x][y]": 17537,
        "dfs(x": 17538,
        "i++);": 17539,
        "i--);": 17540,
        "dfs(x,": 17541,
        "buf(n,": 17542,
        "\"\");": 17543,
        "buf[i];": 17544,
        "(buf[i][j]": 17545,
        "buf[i][j]": 17546,
        "buf[i]": 17547,
        "chess[101][101];": 17548,
        "chess[i][j]": 17549,
        "chess[i][j];": 17550,
        "Vector(n);": 17551,
        "Vector[i];": 17552,
        "(Vector[i][j]": 17553,
        "Vector[i][j]": 17554,
        "Vector[i][j];": 17555,
        "brr[]": 17556,
        "brr[p];": 17557,
        "a[111][111];": 17558,
        "b[n][m];": 17559,
        "files()": 17560,
        "ax[10001];": 17561,
        "ax;": 17562,
        "(ax[j]": 17563,
        "ax[j]": 17564,
        "ax": 17565,
        "S[n];": 17566,
        "\"B\";": 17567,
        "\"W\";": 17568,
        "chess[101][101]": 17569,
        "{'-'};": 17570,
        "board[101][101];": 17571,
        "(getchar()": 17572,
        "board[i][j]": 17573,
        "board[i][j];": 17574,
        "(o[j]": 17575,
        "putchar('W');": 17576,
        "putchar('B');": 17577,
        "5][100": 17578,
        "colors[2]": 17579,
        "colors[(i": 17580,
        "prev;": 17581,
        "(((prev": 17582,
        "mult++;": 17583,
        "fp(long": 17584,
        "fp(n,": 17585,
        "int(1e9": 17586,
        "((res": 17587,
        "7))": 17588,
        "7)))": 17589,
        "arr[100005],": 17590,
        "stp": 17591,
        "(tm": 17592,
        "a[2007],": 17593,
        "Max_N": 17594,
        "bord[6][2]": 17595,
        "ant": 17596,
        "((abs(a[i]": 17597,
        "str[100000];": 17598,
        "mov": 17599,
        "a[1000004];": 17600,
        "a[2010],": 17601,
        "adder,": 17602,
        "adder": 17603,
        "adder;": 17604,
        "a[15000];": 17605,
        "vis[26],": 17606,
        "now[26];": 17607,
        "'!')": 17608,
        "fill(now,": 17609,
        "26,": 17610,
        "now[str[j]": 17611,
        "(now[j]": 17612,
        "vis[str[0]": 17613,
        "vis[str[j]": 17614,
        "mark1[30],": 17615,
        "mark2[30];": 17616,
        "Do()": 17617,
        "(mark1[i])": 17618,
        "cnt2++,": 17619,
        "memset(mark1,": 17620,
        "mark1);": 17621,
        "Do();": 17622,
        "46)": 17623,
        "mark1[s[i]": 17624,
        "memset(mark2,": 17625,
        "mark2);": 17626,
        "mark2[s[i]": 17627,
        "mark1[i]": 17628,
        "mark2[i];": 17629,
        "63)": 17630,
        "mark1[s[0]": 17631,
        "now[30];": 17632,
        "b[30],": 17633,
        "mark[30];": 17634,
        "ho": 17635,
        "memset(now,": 17636,
        "sizeof(now));": 17637,
        "(cnt3": 17638,
        "(ho": 17639,
        "(mark[s[i]": 17640,
        "a[++cnt]": 17641,
        "mark[s[i]": 17642,
        "(b[a[i]": 17643,
        "a[++cnt2]": 17644,
        "cnt2;": 17645,
        "now[s[i]": 17646,
        "(now[a[i]": 17647,
        "b[a[i]": 17648,
        "(b[s[i]": 17649,
        "b[s[i]": 17650,
        "(b[s[0]": 17651,
        "b[s[0]": 17652,
        "bitset<256>": 17653,
        "posibles,": 17654,
        "usadas;": 17655,
        "posibles.reset();": 17656,
        "posibles[i]": 17657,
        "(posibles.count()": 17658,
        "usadas.reset();": 17659,
        "usadas[s[j]]": 17660,
        "posibles[j]": 17661,
        "usadas[j];": 17662,
        "posibles[s[j]]": 17663,
        "posibles[s[2]]": 17664,
        "arr[26]": 17665,
        "temp[26]": 17666,
        "av": 17667,
        "ch[100001],": 17668,
        "au,": 17669,
        "ansa;": 17670,
        "au": 17671,
        "(red": 17672,
        "(au": 17673,
        "(int)ch[j]": 17674,
        "(arr[u]": 17675,
        "arr[u]": 17676,
        "red++;": 17677,
        "(av": 17678,
        "(arr[k]": 17679,
        "arr[k]": 17680,
        "av++;": 17681,
        "temp[k]": 17682,
        "(int)ch[k]": 17683,
        "temp[u]": 17684,
        "(int)ch[0]": 17685,
        "(char)97": 17686,
        "'!'": 17687,
        "ansa))": 17688,
        "st.insert((char)('a'": 17689,
        "sst;": 17690,
        "(st.count(s[i]))": 17691,
        "sst.insert(s[i]);": 17692,
        "(set<char>::iterator": 17693,
        "sst.begin();": 17694,
        "sst.end();": 17695,
        "st.insert(*it);": 17696,
        "st.erase(s[i]);": 17697,
        "s[100005];": 17698,
        "safe[30],": 17699,
        "nowsafe[30];": 17700,
        "fill(nowsafe,": 17701,
        "nowsafe": 17702,
        "nowsafe[s[j]": 17703,
        "(nowsafe[i]": 17704,
        "safe[i]": 17705,
        "safe[s[i]": 17706,
        "safe[s[0]": 17707,
        "(safe[i]": 17708,
        "s[100010];": 17709,
        "ok[1010],": 17710,
        "exist[1010];": 17711,
        "exist[s[j]]": 17712,
        "(ok[j]": 17713,
        "!exist[j])": 17714,
        "--num;": 17715,
        "ok[j]": 17716,
        "exist[j])": 17717,
        "(ok[s[0]])": 17718,
        "ok[s[0]]": 17719,
        "mark[M],": 17720,
        "mark0[M],": 17721,
        "no[M];": 17722,
        "s[M];": 17723,
        "memset(mark0,": 17724,
        "sizeof(mark0));": 17725,
        "memset(no,": 17726,
        "sizeof(no));": 17727,
        "mark[i]": 17728,
        "f2++;": 17729,
        "(!mark[s[i]]": 17730,
        "!no[s[i]])": 17731,
        "have++;": 17732,
        "mark[s[i]]": 17733,
        "mark0[s[i]]": 17734,
        "!mark0[i])": 17735,
        "have--;": 17736,
        "(f2": 17737,
        "no[s[0]]": 17738,
        "(mark[s[0]]": 17739,
        "mark[s[0]]": 17740,
        "(mark[s[i]]": 17741,
        "no[s[i]]": 17742,
        "bitset<26>": 17743,
        "ans.set();": 17744,
        "(ans.count()": 17745,
        "tmp.reset();": 17746,
        "tmp[s[i]": 17747,
        "~tmp;": 17748,
        "se,": 17749,
        "ans.insert('a'": 17750,
        "se.clear();": 17751,
        "se.insert(st[j]);": 17752,
        "ans.begin();": 17753,
        "ans.end();)": 17754,
        "(!se.count(*j))": 17755,
        "ans.erase(k);": 17756,
        "(ans.count(st[j]))": 17757,
        "ans.erase(st[j]);": 17758,
        "(ans.count(st[0]))": 17759,
        "ans.erase(st[0]);": 17760,
        "(ans.size()": 17761,
        "vec(26);": 17762,
        "(vec[i])": 17763,
        "change1(string": 17764,
        "vec[s[i]": 17765,
        "change2(string": 17766,
        "vec2(26);": 17767,
        "vec2[s[i]": 17768,
        "vec[j]": 17769,
        "(!vec2[j])": 17770,
        "(vec[j]);": 17771,
        "finished": 17772,
        "(finished)": 17773,
        "change1(w);": 17774,
        "vec[w[0]": 17775,
        "change2(w);": 17776,
        "cul": 17777,
        "say,": 17778,
        "alph[30]": 17779,
        "tan(string": 17780,
        "(alph[k]": 17781,
        "alph[k]": 17782,
        "dian(string": 17783,
        "alph[tmp]": 17784,
        "wen(string": 17785,
        "alph[a[0]": 17786,
        "say;": 17787,
        "\"!\")": 17788,
        "tan(say);": 17789,
        "\".\")": 17790,
        "dian(say);": 17791,
        "wen(say);": 17792,
        "(alph[i]": 17793,
        "cul++;": 17794,
        "(cul": 17795,
        "mark[100],": 17796,
        "pred(int": 17797,
        "++m[i];": 17798,
        "isFound": 17799,
        "lsh": 17800,
        "(!isFound)": 17801,
        "iter": 17802,
        "m.find(int(str[i]));": 17803,
        "(iter": 17804,
        "--iter->second;": 17805,
        "(map<int,": 17806,
        "++iter)": 17807,
        "(find(str.begin(),": 17808,
        "(char)iter->first)": 17809,
        "str.end())": 17810,
        "++lsh;": 17811,
        "--m[(int)str[0]];": 17812,
        "(iter->second": 17813,
        "work;": 17814,
        "n0": 17815,
        "(n0": 17816,
        "work.push_back(i);": 17817,
        "work.size()": 17818,
        "work.size();": 17819,
        "work[i]": 17820,
        "max(n": 17821,
        "81,": 17822,
        "long)1),": 17823,
        "I": 17824,
        "(N)": 17825,
        "a[I]": 17826,
        "I++,": 17827,
        "I;": 17828,
        "a[10000000];": 17829,
        "(aa)": 17830,
        "a[m++]": 17831,
        "tsize": 17832,
        "sumofdigit(long": 17833,
        "min((long": 17834,
        "int)200,": 17835,
        "(sumofdigit(a)": 17836,
        "st.insert(a);": 17837,
        "st.begin();": 17838,
        "st.end();": 17839,
        "1000);": 17840,
        "(check(i,": 17841,
        "long)0);": 17842,
        "s.push(i);": 17843,
        "(s.empty())": 17844,
        "(!s.empty())": 17845,
        "s.top()": 17846,
        "a[j++]": 17847,
        "a[w]": 17848,
        "x[50];": 17849,
        "x[k++]": 17850,
        "sod(long": 17851,
        "81);": 17852,
        "(sod(x)": 17853,
        "sod(x)": 17854,
        "vv.push_back(x);": 17855,
        "vv.size()": 17856,
        "vv.size();": 17857,
        "vv[i]": 17858,
        "aaa": 17859,
        "(aaa)": 17860,
        "81;": 17861,
        "ans.push_back(j);": 17862,
        "sort(ans.begin(),": 17863,
        "ans.end());": 17864,
        "count(long": 17865,
        "si(long": 17866,
        "v[1000000];": 17867,
        "si(n);": 17868,
        "count(i);": 17869,
        "p.end());": 17870,
        "len(int": 17871,
        "++len;": 17872,
        "len(n)": 17873,
        "82,": 17874,
        "0ll);": 17875,
        "ans.push_back(i);": 17876,
        "mb;": 17877,
        "ans[100];": 17878,
        "chai(int": 17879,
        "82;": 17880,
        "chai(i);": 17881,
        "ans[++k]": 17882,
        "(check(val)": 17883,
        "v.push_back(val);": 17884,
        "kq(long": 17885,
        "(kq(i)": 17886,
        "q.push_back(i);": 17887,
        "q.size()": 17888,
        "11": 17889,
        "s(int": 17890,
        "int(k": 17891,
        "a(0);": 17892,
        "(s(x": 17893,
        "a.push_back(x": 17894,
        "res[1000],": 17895,
        "can(long": 17896,
        "995;": 17897,
        "(can(temp))": 17898,
        "res[co++]": 17899,
        "(!co)": 17900,
        "finala": 17901,
        "get(temp);": 17902,
        "finala++;": 17903,
        "(finala": 17904,
        "81)": 17905,
        "a[l],": 17906,
        "a[h]": 17907,
        "ji(int": 17908,
        "ji(i)": 17909,
        "sum(long": 17910,
        "sum(i))": 17911,
        "jv;": 17912,
        "jvb": 17913,
        "jvb++;": 17914,
        "jv.push_back(i);": 17915,
        "sort(jv.begin(),": 17916,
        "jv.end());": 17917,
        "jv.size();": 17918,
        "jv[i]": 17919,
        "LOVE(long": 17920,
        "(LOVE(i)": 17921,
        "sd(int": 17922,
        "lower": 17923,
        "(int)n;": 17924,
        "sd(i)": 17925,
        "((int)ans.size())": 17926,
        "(int)ans.size();": 17927,
        "(dfs(n": 17928,
        "anses;": 17929,
        "82)": 17930,
        "sum(n1)": 17931,
        "anses.push_back(n1);": 17932,
        "--n1;": 17933,
        "sort(anses.begin(),": 17934,
        "anses.end());": 17935,
        "anses.size()": 17936,
        "anses.size();": 17937,
        "anses[i]": 17938,
        "mp[x]++;": 17939,
        "(it->first": 17940,
        "*xp,": 17941,
        "*yp)": 17942,
        "*xp;": 17943,
        "*xp": 17944,
        "*yp;": 17945,
        "*yp": 17946,
        "selectionSort(int": 17947,
        "min_idx;": 17948,
        "min_idx": 17949,
        "arr[min_idx])": 17950,
        "swap(&arr[min_idx],": 17951,
        "&arr[i]);": 17952,
        "Ids[n];": 17953,
        "Ids[i];": 17954,
        "selectionSort(Ids,": 17955,
        "(Ids[i]": 17956,
        "Ids[i]": 17957,
        "Ids[i": 17958,
        "s.insert(temp);": 17959,
        "mp[temp]++;": 17960,
        "(s.size())": 17961,
        "*s.begin();": 17962,
        "s.erase(f);": 17963,
        "(mp[f]": 17964,
        "sec[1010];": 17965,
        "cnt[1010];": 17966,
        "sec[i];": 17967,
        "sort(sec,": 17968,
        "sec": 17969,
        "sec[0];": 17970,
        "sec[i": 17971,
        "sec[i])": 17972,
        "cnt[cou]++;": 17973,
        "getNextGap(int": 17974,
        "13;": 17975,
        "combSort(long": 17976,
        "swapped": 17977,
        "getNextGap(gap);": 17978,
        "gap])": 17979,
        "gap]);": 17980,
        "numofelements;": 17981,
        "arr[numofelements];": 17982,
        "combSort(arr,": 17983,
        "numofelements);": 17984,
        "merger(int": 17985,
        "L[n1],": 17986,
        "R[n2];": 17987,
        "arr[l": 17988,
        "i];": 17989,
        "R[j]": 17990,
        "R[j])": 17991,
        "L[i];": 17992,
        "R[j];": 17993,
        "mergeSort(int": 17994,
        "mergeSort(arr,": 17995,
        "merger(arr,": 17996,
        "secretaryNum,": 17997,
        "chatSec": 17998,
        "zeroNum": 17999,
        "tempSame": 18000,
        "secretaryNum;": 18001,
        "id[secretaryNum];": 18002,
        "id[i];": 18003,
        "zeroNum++;": 18004,
        "mergeSort(id,": 18005,
        "secretaryNum": 18006,
        "id[zeroNum];": 18007,
        "id[i])": 18008,
        "tempSame++;": 18009,
        "(tempSame": 18010,
        "chatSec++;": 18011,
        "A[100000];": 18012,
        "fix;": 18013,
        "fix[A[i]]++;": 18014,
        "(fix[A[i]]": 18015,
        "counts,": 18016,
        "(!m.count(a[i]))": 18017,
        "m[a[i]]": 18018,
        "m[a[i]]++;": 18019,
        "(m[a[i]]": 18020,
        "a[100009];": 18021,
        "cycleSort(int": 18022,
        "secretary_number;": 18023,
        "press": 18024,
        "spyke[secretary_number];": 18025,
        "spyke[i];": 18026,
        "cycleSort(spyke,": 18027,
        "secretary_number);": 18028,
        "(spyke[i]": 18029,
        "spyke[i": 18030,
        "spyke[i]": 18031,
        "level++;": 18032,
        "spyke[press]": 18033,
        "writes": 18034,
        "cycle_start": 18035,
        "cycle_start++)": 18036,
        "arr[cycle_start];": 18037,
        "cycle_start;": 18038,
        "item)": 18039,
        "cycle_start)": 18040,
        "arr[pos])": 18041,
        "swap(item,": 18042,
        "arr[pos]);": 18043,
        "writes++;": 18044,
        "arr[MAXN];": 18045,
        "totalSec;": 18046,
        "chat": 18047,
        "peeps": 18048,
        "id[totalSec];": 18049,
        "id[j])": 18050,
        "id[j]": 18051,
        "peeps++;": 18052,
        "chat++;": 18053,
        "(peeps": 18054,
        "mp[num]++;": 18055,
        "numberOfElements;": 18056,
        "arr[numberOfElements];": 18057,
        "numberOfElements);": 18058,
        "int)(8e16);": 18059,
        "print()": 18060,
        "mp[a]++;": 18061,
        "it->first": 18062,
        "print();": 18063,
        "arr[a]++;": 18064,
        "(arr[a]": 18065,
        "lol++;": 18066,
        "ant++;": 18067,
        "gnomeSort(int": 18068,
        "(arr[index]": 18069,
        "arr[index": 18070,
        "swap(arr[index],": 18071,
        "index--;": 18072,
        "checkdouble": 18073,
        "id[n];": 18074,
        "gnomeSort(id,": 18075,
        "id[i]": 18076,
        "id[i": 18077,
        "checkdouble++;": 18078,
        "freq[100000];": 18079,
        "lol.push_back(n);": 18080,
        "sort(lol.begin(),": 18081,
        "lol.end());": 18082,
        "(lol[i]": 18083,
        "lol[i": 18084,
        "lol[i]": 18085,
        "arra[1000];": 18086,
        "-2": 18087,
        "arra[p]": 18088,
        "(arra[i]": 18089,
        "mp[a[i]]++;": 18090,
        "(mp[a[i]]": 18091,
        "(s.count(x))": 18092,
        "s.erase(x);": 18093,
        "d.insert(x);": 18094,
        "(d.count(x))": 18095,
        "s.insert(x);": 18096,
        "d.size()": 18097,
        "id[1000": 18098,
        "sort(id,": 18099,
        "(id[i": 18100,
        "arr[1100];": 18101,
        "p[1100];": 18102,
        "p[i].first)": 18103,
        "p[j].second++;": 18104,
        "p[i].second++;": 18105,
        "theBrickSort(int": 18106,
        "sorted": 18107,
        "(!sorted)": 18108,
        "swap(arr[i],": 18109,
        "secnumbs,": 18110,
        "secnumbs;": 18111,
        "spykeId[secnumbs];": 18112,
        "spykeId[i];": 18113,
        "theBrickSort(spykeId,": 18114,
        "secnumbs);": 18115,
        "(spykeId[i]": 18116,
        "spykeId[i": 18117,
        "spykeId[i]": 18118,
        "spykeId[flag]": 18119,
        "mapOfRow,": 18120,
        "mapOfColumn;": 18121,
        "mapOfRow[i]++;": 18122,
        "mapOfColumn[j": 18123,
        "mapOfRow.begin();": 18124,
        "mapOfRow.end();": 18125,
        "mapOfColumn.begin();": 18126,
        "mapOfColumn.end();": 18127,
        "b[3],": 18128,
        "a[t]": 18129,
        "b[t++]": 18130,
        "row.find(i);": 18131,
        "row.end())": 18132,
        "row.insert(i);": 18133,
        "row.erase(it);": 18134,
        "col.find(j);": 18135,
        "col.end())": 18136,
        "col.insert(j);": 18137,
        "col.erase(it);": 18138,
        "*row.begin()": 18139,
        "*col.begin()": 18140,
        "k.size();": 18141,
        "p.push_back(j": 18142,
        "row[3],": 18143,
        "col[3];": 18144,
        "row[r]": 18145,
        "col[r]": 18146,
        "row[j]": 18147,
        "sort(row,": 18148,
        "sort(col,": 18149,
        "row[2]": 18150,
        "col[2]": 18151,
        "in[100": 18152,
        "10][100": 18153,
        "in[i][j];": 18154,
        "(in[i][j]": 18155,
        "a[p].first": 18156,
        "a[p].second": 18157,
        "a[j].first": 18158,
        "a[j].second)": 18159,
        "a[j].first;": 18160,
        "a[j].second;": 18161,
        "(found": 18162,
        "(in[x1][y2]": 18163,
        "(in[x2][y1]": 18164,
        "ke": 18165,
        "dari": 18166,
        "ada": 18167,
        "(ada": 18168,
        "(arr[ke][i]": 18169,
        "(arr[dari][x]": 18170,
        "a[MAX_N][MAX_N];": 18171,
        "p[10],": 18172,
        "pp[10];": 18173,
        "p[x].first": 18174,
        "p[x].second": 18175,
        "sort(p,": 18176,
        "pp[0]": 18177,
        "make_pair(x1,": 18178,
        "pp[1]": 18179,
        "pp[2]": 18180,
        "make_pair(x2,": 18181,
        "pp[3]": 18182,
        "pp[i])": 18183,
        "pp[i].first": 18184,
        "pp[i].second": 18185,
        "pp[3].first": 18186,
        "pp[3].second": 18187,
        "ind[3][2];": 18188,
        "ind[k][0]": 18189,
        "ind[k][1]": 18190,
        "(ind[0][0]": 18191,
        "ind[1][0])": 18192,
        "ind[0][0]": 18193,
        "ind[1][0]": 18194,
        "ind[2][0]": 18195,
        "(ind[0][1]": 18196,
        "ind[1][1])": 18197,
        "ind[0][1]": 18198,
        "ind[1][1]": 18199,
        "ind[2][1]": 18200,
        "W;": 18201,
        "s(H);": 18202,
        "++x": 18203,
        "++y": 18204,
        "S[100];": 18205,
        "(S[i][j]": 18206,
        "x.push_back(i);": 18207,
        "y.push_back(j);": 18208,
        "samey,": 18209,
        "samex;": 18210,
        "op++)": 18211,
        "((x[op]": 18212,
        "x[(op": 18213,
        "3])": 18214,
        "(y[op]": 18215,
        "y[(op": 18216,
        "3]))": 18217,
        "samey": 18218,
        "samex": 18219,
        "x[samey]": 18220,
        "y[samex]": 18221,
        "ABS(long": 18222,
        "buffer": 18223,
        "buffer;": 18224,
        "mas;": 18225,
        "mas.resize(n);": 18226,
        "mas[i];": 18227,
        "x(2),": 18228,
        "y(2);": 18229,
        "((int)mas.size());": 18230,
        "((int)mas[i].size());": 18231,
        "(mas[i][j]": 18232,
        "min(x[0],": 18233,
        "max(x[1],": 18234,
        "min(y[0],": 18235,
        "max(y[1],": 18236,
        "((int)x.size());": 18237,
        "((int)y.size());": 18238,
        "(mas[x[i]][y[j]]": 18239,
        "y[j]": 18240,
        "l[i]++;": 18241,
        "c[j]++;": 18242,
        "resL": 18243,
        "resC": 18244,
        "imin,": 18245,
        "imax,": 18246,
        "jmin,": 18247,
        "M[110];": 18248,
        "N[110][110];": 18249,
        "(M[i][j]": 18250,
        "min(imin,": 18251,
        "max(imax,": 18252,
        "min(jmin,": 18253,
        "max(jmax,": 18254,
        "(M[imin][jmin]": 18255,
        "(M[imax][jmax]": 18256,
        "(M[imin][jmax]": 18257,
        "(M[imax][jmin]": 18258,
        "arr[102][102];": 18259,
        "used[j]++;": 18260,
        "x[4],": 18261,
        "y[4],": 18262,
        "x[c]": 18263,
        "y[c++]": 18264,
        "x[2];": 18265,
        "x[2])": 18266,
        "x[1];": 18267,
        "(y[0]": 18268,
        "y[2];": 18269,
        "y[2])": 18270,
        "c[105][105];": 18271,
        "str[105][105];": 18272,
        "x[i]++;": 18273,
        "y[j]++;": 18274,
        "ite;": 18275,
        "(ite": 18276,
        "x.begin();": 18277,
        "ite": 18278,
        "x.end();": 18279,
        "ite++)": 18280,
        "(ite->second": 18281,
        "ite->first": 18282,
        "y.end();": 18283,
        "A[100][100];": 18284,
        "(A[y][j]": 18285,
        "A[y1][j])": 18286,
        "ar[101][101];": 18287,
        "col,": 18288,
        "one)": 18289,
        "Fast_Read_Out()": 18290,
        "Random()": 18291,
        "seed;": 18292,
        "asm(\"rdtsc\"": 18293,
        "\"=A\"(seed));": 18294,
        "srand(seed);": 18295,
        "Time()": 18296,
        "1000.00;": 18297,
        "time;": 18298,
        "int(1e9)": 18299,
        "Random();": 18300,
        "Fast_Read_Out();": 18301,
        "j1++)": 18302,
        "(a[i][j1]": 18303,
        "j1)": 18304,
        "i1++)": 18305,
        "(a[i1][j]": 18306,
        "i1)": 18307,
        "x[3],": 18308,
        "y[3],": 18309,
        "diff(int": 18310,
        "x[a]": 18311,
        "y[a]": 18312,
        "(diff(0,": 18313,
        "(x[2]": 18314,
        "(diff(1,": 18315,
        "r[105]": 18316,
        "c[105]": 18317,
        "mpp[105];": 18318,
        "mpp[i];": 18319,
        "mpp[i].length();": 18320,
        "(mpp[i][j]": 18321,
        "r[i]++;": 18322,
        "ansx": 18323,
        "ansy": 18324,
        "Unset(int": 18325,
        "mask;": 18326,
        "mask": 18327,
        "~mask;": 18328,
        "collumn;": 18329,
        "grid;": 18330,
        "grid.push_back(temp);": 18331,
        "B++)": 18332,
        "(grid[A][B]": 18333,
        "(p1.second": 18334,
        "p3.second)": 18335,
        "p3.first": 18336,
        "p2.second": 18337,
        "p1.second": 18338,
        "c[101],": 18339,
        "arr[110];": 18340,
        "100000000;": 18341,
        "1000000000,": 18342,
        "opr": 18343,
        "(15": 18344,
        "(opr": 18345,
        "menor)": 18346,
        "opr;": 18347,
        "people[105];": 18348,
        "count[105];": 18349,
        "people[i];": 18350,
        "(people[i])": 18351,
        "vec1(n);": 18352,
        "vec1[i];": 18353,
        "vec2;": 18354,
        "vec2.push_back(sum);": 18355,
        "sort(vec2.begin(),": 18356,
        "vec2.end());": 18357,
        "vec2[0]": 18358,
        "v.resize(n);": 18359,
        "111111111,": 18360,
        "b[105][105],": 18361,
        "b[i][0];": 18362,
        "b[i][0],": 18363,
        "15);": 18364,
        "(minn": 18365,
        "15ll;": 18366,
        "x[200];": 18367,
        "num[N];": 18368,
        "int(num[i]);": 18369,
        "shit": 18370,
        "shit);": 18371,
        "arr[101];": 18372,
        "len(0),": 18373,
        "el(0);": 18374,
        "len.resize(size_n);": 18375,
        "el.resize(size_n);": 18376,
        "len[ii];": 18377,
        "el[ii]": 18378,
        "((len[ii]": 18379,
        "(len[mn]": 18380,
        "el[mn]": 18381,
        "A[1010];": 18382,
        "sumi": 18383,
        "sumi);": 18384,
        "m[10000];": 18385,
        "k[t];": 18386,
        "2100000000;": 18387,
        "*arr": 18388,
        "b[105][105];": 18389,
        "k[maxn];": 18390,
        "sumtime": 18391,
        "sumtime);": 18392,
        "K[105],": 18393,
        "M[105],": 18394,
        "M[j];": 18395,
        "K[i]": 18396,
        "(k[t]": 18397,
        "b[max]": 18398,
        "t[n],": 18399,
        "1000000000000000000;": 18400,
        "b[a[i]];": 18401,
        "item_time": 18402,
        "min(maxi,": 18403,
        "item_time);": 18404,
        "unitTime": 18405,
        "checkoutTime": 18406,
        "customerTime(int": 18407,
        "units)": 18408,
        "units;": 18409,
        "k[100],": 18410,
        "lineTime,": 18411,
        "minTime": 18412,
        "lineTime": 18413,
        "customerTime(x);": 18414,
        "(minTime": 18415,
        "minTime)": 18416,
        "lineTime;": 18417,
        "T[105];": 18418,
        "K[105];": 18419,
        "T[i]": 18420,
        "int(K[i]);": 18421,
        "men": 18422,
        "min(men,": 18423,
        "T[i]);": 18424,
        "(num--)": 18425,
        "summ;": 18426,
        "M6": 18427,
        "M5": 18428,
        "!second": 18429,
        "gcd(second,": 18430,
        "gcd(first,": 18431,
        "second))": 18432,
        "n1[100],": 18433,
        "n2[100],": 18434,
        "sum[100];": 18435,
        "n2[j];": 18436,
        "n2[j]": 18437,
        "sum[0];": 18438,
        "sum[i];": 18439,
        "v.push_back(sum);": 18440,
        "min_time": 18441,
        "(time": 18442,
        "min_time)": 18443,
        "obj,": 18444,
        "obj;": 18445,
        "obj": 18446,
        "wak": 18447,
        "wak);": 18448,
        "ant);": 18449,
        "\"Tetrahedron\")": 18450,
        "\"Cube\")": 18451,
        "\"Octahedron\")": 18452,
        "\"Dodecahedron\")": 18453,
        "\"Icosahedron\")": 18454,
        "sum4": 18455,
        "sum5": 18456,
        "'C')": 18457,
        "'O')": 18458,
        "mp[\"Tetrahedron\"]": 18459,
        "mp[\"Cube\"]": 18460,
        "mp[\"Octahedron\"]": 18461,
        "mp[\"Dodecahedron\"]": 18462,
        "mp[\"Icosahedron\"]": 18463,
        "'I')": 18464,
        "mp[str];": 18465,
        "poly;": 18466,
        "(name": 18467,
        "it->second);": 18468,
        "12);": 18469,
        "m[\"Tetrahedron\"]": 18470,
        "m[\"Cube\"]": 18471,
        "m[\"Octahedron\"]": 18472,
        "m[\"Dodecahedron\"]": 18473,
        "m[\"Icosahedron\"]": 18474,
        "v[256];": 18475,
        "v['T']": 18476,
        "v['C']": 18477,
        "v['O']": 18478,
        "v['D']": 18479,
        "v['I']": 18480,
        "v[s[0]];": 18481,
        "m[curr];": 18482,
        "Sum": 18483,
        "tetr": 18484,
        "cube": 18485,
        "dodec": 18486,
        "icos": 18487,
        "oct": 18488,
        "tetr++;": 18489,
        "cube++;": 18490,
        "oct++;": 18491,
        "dodec++;": 18492,
        "icos++;": 18493,
        "(tetr": 18494,
        "(cube": 18495,
        "(oct": 18496,
        "(dodec": 18497,
        "(icos": 18498,
        "face": 18499,
        "transform(tmp.begin(),": 18500,
        "tmp.end(),": 18501,
        "tmp.begin(),": 18502,
        "::tolower);": 18503,
        "(tmp.compare(\"tetrahedron\")": 18504,
        "(tmp.compare(\"cube\")": 18505,
        "(tmp.compare(\"octahedron\")": 18506,
        "(tmp.compare(\"dodecahedron\")": 18507,
        "(tmp.compare(\"icosahedron\")": 18508,
        "\"Tetrahedron\";": 18509,
        "\"Cube\";": 18510,
        "\"Octahedron\";": 18511,
        "s4": 18512,
        "\"Dodecahedron\";": 18513,
        "s5": 18514,
        "\"Icosahedron\";": 18515,
        "s4)": 18516,
        "str[20];": 18517,
        "faces": 18518,
        "poly[\"Tetrahedron\"]": 18519,
        "poly[\"Cube\"]": 18520,
        "poly[\"Octahedron\"]": 18521,
        "poly[\"Dodecahedron\"]": 18522,
        "poly[\"Icosahedron\"]": 18523,
        "poly[s];": 18524,
        "createMap()": 18525,
        "shapes;": 18526,
        "shapes[\"Tetrahedron\"]": 18527,
        "shapes[\"Cube\"]": 18528,
        "shapes[\"Octahedron\"]": 18529,
        "shapes[\"Dodecahedron\"]": 18530,
        "shapes[\"Icosahedron\"]": 18531,
        "shapes": 18532,
        "createMap();": 18533,
        "numShapes,": 18534,
        "numShapes;": 18535,
        "shapes[input];": 18536,
        "(s[u][j]": 18537,
        "(s[i][v]": 18538,
        "str[n][n": 18539,
        "b[a": 18540,
        "'C'": 18541,
        "b[i][u]": 18542,
        "b[u][i]": 18543,
        "s[i].push_back(ch);": 18544,
        "str[101][101];": 18545,
        "row[101],": 18546,
        "col[101];": 18547,
        "C(int": 18548,
        "col[i]++;": 18549,
        "C(row[i]);": 18550,
        "C(col[i]);": 18551,
        "ada[105][105];": 18552,
        "ada[0][j]": 18553,
        "ada[i][0]": 18554,
        "ada[0][i];": 18555,
        "ada[i][0];": 18556,
        "(v[j][i]": 18557,
        "s[n][n][1];": 18558,
        "s[i][j][0];": 18559,
        "(s[i][j][0]": 18560,
        "in_out_txt()": 18561,
        "\"rt\",": 18562,
        "\"wt\",": 18563,
        "FillArray(int": 18564,
        "st.insert(re);": 18565,
        "(arr[i][k]": 18566,
        "(arr[k][j]": 18567,
        "((cnt": 18568,
        "2),": 18569,
        "((cn": 18570,
        "a[(100": 18571,
        "10)][(100": 18572,
        "h[(100": 18573,
        "10)]": 18574,
        "l[(100": 18575,
        "h[i]++,": 18576,
        "l[j]++;": 18577,
        "work(h[i]);": 18578,
        "work(l[i]);": 18579,
        "row[100]": 18580,
        "col[100]": 18581,
        "mat[i];": 18582,
        "gcdf(long": 18583,
        "gcdf(b,": 18584,
        "gcdf(a,": 18585,
        "row[n]": 18586,
        "col[n]": 18587,
        "(((row[i]": 18588,
        "((col[i]": 18589,
        "a[201][201];": 18590,
        "a[i][k]": 18591,
        "it1": 18592,
        "it2": 18593,
        "\"C\")": 18594,
        "it1++;": 18595,
        "it2++;": 18596,
        "(it1": 18597,
        "(it2": 18598,
        "num[105];": 18599,
        "num[i": 18600,
        "num[cnt];": 18601,
        "p.push_back(h);": 18602,
        "h.size();": 18603,
        "(h[j]": 18604,
        "p[0].size();": 18605,
        "(p[j][i]": 18606,
        "fa[101],": 18607,
        "cntc[101],": 18608,
        "cntr[101];": 18609,
        "memset(cntc,": 18610,
        "sizeof(cntc));": 18611,
        "memset(cntr,": 18612,
        "sizeof(cntr));": 18613,
        "cntc[i]++;": 18614,
        "cntr[j]++;": 18615,
        "C(cntc[i])": 18616,
        "C(cntr[i]);": 18617,
        "a[j]++,": 18618,
        "lin[101],": 18619,
        "lin[i]++;": 18620,
        "lin[i]": 18621,
        "(lin[i]": 18622,
        "y[n];": 18623,
        "2.0;": 18624,
        "top,": 18625,
        "isTrue": 18626,
        "(isTrue)": 18627,
        "tp,": 18628,
        "possible(true);": 18629,
        "possible": 18630,
        "(possible": 18631,
        "a[s1]": 18632,
        "a[s2]": 18633,
        "abs(x": 18634,
        "abs(7": 18635,
        "(sol)": 18636,
        "re_top": 18637,
        "test.insert(temp1);": 18638,
        "test.insert(temp2);": 18639,
        "test.insert(7": 18640,
        "temp1);": 18641,
        "(set<int>::iterator": 18642,
        "test.begin();": 18643,
        "test.end();": 18644,
        "re_top)": 18645,
        "s.insert(y);": 18646,
        "s_size": 18647,
        "s.insert(rem);": 18648,
        "s1_size": 18649,
        "(s1_size": 18650,
        "arr[7][7];": 18651,
        "fun()": 18652,
        "arr[2][6]": 18653,
        "arr[5][1]": 18654,
        "arr[6][5]": 18655,
        "34;": 18656,
        "arr[6][2]": 18657,
        "arr[1][5]": 18658,
        "arr[5][6]": 18659,
        "43;": 18660,
        "arr[1][3]": 18661,
        "arr[3][6]": 18662,
        "arr[4][1]": 18663,
        "arr[6][4]": 18664,
        "52;": 18665,
        "arr[3][1]": 18666,
        "arr[6][3]": 18667,
        "arr[1][4]": 18668,
        "arr[4][6]": 18669,
        "arr[2][4]": 18670,
        "arr[3][2]": 18671,
        "arr[4][5]": 18672,
        "arr[5][3]": 18673,
        "61;": 18674,
        "arr[4][2]": 18675,
        "arr[2][3]": 18676,
        "arr[5][4]": 18677,
        "arr[3][5]": 18678,
        "fun();": 18679,
        "condition": 18680,
        "((7": 18681,
        "(condition": 18682,
        "(l2": 18683,
        "f1)": 18684,
        "(!ans)": 18685,
        "bottom,": 18686,
        "(out)": 18687,
        "(bottom": 18688,
        "f)))": 18689,
        "right1[101],": 18690,
        "right2[101];": 18691,
        "right1[i]": 18692,
        "right2[i];": 18693,
        "(right1[i]": 18694,
        "right2[i]": 18695,
        "top)": 18696,
        "fillSides(vector<int>": 18697,
        "eraseN(vector<int>": 18698,
        "((int)(v).size());": 18699,
        "fillSides(v);": 18700,
        "eraseN(v,": 18701,
        "v[1];": 18702,
        "v[7": 18703,
        "a]": 18704,
        "(get(a,": 18705,
        "lala": 18706,
        "haha": 18707,
        "logal": 18708,
        "haha)": 18709,
        "(logal": 18710,
        "**A": 18711,
        "A[i][j])": 18712,
        "(valid)": 18713,
        "isok": 18714,
        "s.insert(7": 18715,
        "s.insert(b);": 18716,
        "(!s.count(i))": 18717,
        "t.push_back(i);": 18718,
        "vv,": 18719,
        "nn);": 18720,
        "stringstream(nn)": 18721,
        "stringstream(k)": 18722,
        "my(s);": 18723,
        "vv)": 18724,
        "arr[7]": 18725,
        "arr[n1]": 18726,
        "arr[7": 18727,
        "n1]": 18728,
        "arr[n2]": 18729,
        "n2]": 18730,
        "tmp[2],": 18731,
        "(arr[t]": 18732,
        "tmp[indx]": 18733,
        "tmp[0]": 18734,
        "tmp[0])": 18735,
        "tmp[1];": 18736,
        "tmp[1]": 18737,
        "tmp[1])": 18738,
        "tmp[0];": 18739,
        "z1,": 18740,
        "z2;": 18741,
        "z2": 18742,
        "(ok(j))": 18743,
        "(res)": 18744,
        "min(abs(c": 18745,
        "curr),": 18746,
        "26": 18747,
        "abs(c": 18748,
        "curr));": 18749,
        "(26": 18750,
        "Str;": 18751,
        "crunt_State": 18752,
        "Str.length();": 18753,
        "(int)Str[i]": 18754,
        "crunt_State)": 18755,
        "min((crunt_State": 18756,
        "index),": 18757,
        "crunt_State));": 18758,
        "min((index": 18759,
        "crunt_State),": 18760,
        "(crunt_State": 18761,
        "index));": 18762,
        "((int)Str[i]": 18763,
        "96);": 18764,
        "(27": 18765,
        "\"abcdefghijklmnopqrstuvwxyz\";": 18766,
        "target,": 18767,
        "target": 18768,
        "s.find(s1[j]);": 18769,
        "(abs(target": 18770,
        "abs(target": 18771,
        "position);": 18772,
        "target;": 18773,
        "s[200];": 18774,
        "rotations": 18775,
        "target)": 18776,
        "(target": 18777,
        "pointer": 18778,
        "int(s.length());": 18779,
        "abs(cur": 18780,
        "pointer),": 18781,
        "abs(26": 18782,
        "a1);": 18783,
        "(pointer": 18784,
        "((a1": 18785,
        "(abs((int)str[0]": 18786,
        "97)": 18787,
        "abs((int)str[0]": 18788,
        "97);": 18789,
        "(abs((int)str[i": 18790,
        "(int)str[i])": 18791,
        "abs((int)str[i": 18792,
        "(int)str[i]);": 18793,
        "\"abcdefghijklmnopqrstuvwxyz\",": 18794,
        "k.length();": 18795,
        "s.find(k[i]);": 18796,
        "(abs(pp": 18797,
        "abs(pp": 18798,
        "min(fabs(temp": 18799,
        "str[i]),": 18800,
        "fabs(temp": 18801,
        "str[i]));": 18802,
        "cw,": 18803,
        "ccw;": 18804,
        "cw": 18805,
        "static_cast<int>(s[i])": 18806,
        "static_cast<int>('a');": 18807,
        "ccw": 18808,
        "cw);": 18809,
        "min(cw,": 18810,
        "ccw);": 18811,
        "abs(static_cast<int>(s[i": 18812,
        "static_cast<int>(s[i]));": 18813,
        "3.1415926535897932384626433832;": 18814,
        "cal(char": 18815,
        "13LL;": 18816,
        "cal('a',": 18817,
        "cal(s[i],": 18818,
        "arr)": 18819,
        "strlen(arr);": 18820,
        "gets(str);": 18821,
        "min(dif,": 18822,
        "dif);": 18823,
        "ch);": 18824,
        "positive(int": 18825,
        "returnAbs(int": 18826,
        "(positive(a": 18827,
        "positive(a": 18828,
        "positive(b": 18829,
        "gets(num);": 18830,
        "strlen(num);": 18831,
        "returnAbs(num[i": 18832,
        "returnAbs(97,": 18833,
        "num[0]);": 18834,
        "\"a\";": 18835,
        "inp.length();": 18836,
        "max((inp[i]": 18837,
        "x[0]),": 18838,
        "inp[i]));": 18839,
        "count1);": 18840,
        "abs(c);": 18841,
        "(short)(26": 18842,
        "walk": 18843,
        "move": 18844,
        "abs(start": 18845,
        "index);": 18846,
        "(walk": 18847,
        "walk;": 18848,
        "\"a\"": 18849,
        "(min(abs(pointer": 18850,
        "(abs(pointer": 18851,
        "str[i]))));": 18852,
        "inter": 18853,
        "((next": 18854,
        "97))": 18855,
        "(inter": 18856,
        "inter;": 18857,
        "abs(pointer": 18858,
        "name[i]);": 18859,
        "A.find(word[i]);": 18860,
        "abs(position": 18861,
        "abs(t": 18862,
        "difference,": 18863,
        "difference1;": 18864,
        "password;": 18865,
        "difference1": 18866,
        "password[0]": 18867,
        "(difference1": 18868,
        "password.size();": 18869,
        "difference": 18870,
        "password[i": 18871,
        "password[i];": 18872,
        "(difference": 18873,
        "difference;": 18874,
        "numOfAlphabets": 18875,
        "Ch": 18876,
        "Ch),": 18877,
        "Ch));": 18878,
        "cur),": 18879,
        "abs((s[i]": 18880,
        "cur))));": 18881,
        "strt": 18882,
        "smoves": 18883,
        "abs(strt": 18884,
        "(1000000": 18885,
        "3.14159265358979323846;": 18886,
        "a[80];": 18887,
        "70;": 18888,
        "min(abs(a[0]": 18889,
        "a[s[0]": 18890,
        "'a']),": 18891,
        "abs(a[26]": 18892,
        "'a']));": 18893,
        "abs(a[s1": 18894,
        "a[s2": 18895,
        "abs(a[s2": 18896,
        "26]": 18897,
        "a[s1": 18898,
        "min(l1,": 18899,
        "mark[10];": 18900,
        "str[110];": 18901,
        "abs(m);": 18902,
        "min(s[i]": 18903,
        "min(s[i": 18904,
        "d.length();": 18905,
        "d.at(i);": 18906,
        "int(x);": 18907,
        "fl;": 18908,
        "fl);": 18909,
        "abs(abs(a[i]": 18910,
        "26);": 18911,
        "(one": 18912,
        "two)": 18913,
        "abs((int)(pointer": 18914,
        "current)": 18915,
        "current;": 18916,
        "abs(now": 18917,
        "'a'));": 18918,
        "rots": 18919,
        "name.length();": 18920,
        "min(abs(temp": 18921,
        "prev),": 18922,
        "abs(temp": 18923,
        "prev));": 18924,
        "fabs(top": 18925,
        "min(temp,": 18926,
        "int('a');": 18927,
        "n.length();": 18928,
        "abs(int(n[i])": 18929,
        "(distance": 18930,
        "distance;": 18931,
        "int(n[i]);": 18932,
        "static_cast<int>(x[i])": 18933,
        "static_cast<int>(x[i": 18934,
        "s),": 18935,
        "s));": 18936,
        "maxt": 18937,
        "city[110];": 18938,
        "mt": 18939,
        "mt)": 18940,
        "++city[k];": 18941,
        "(city[i]": 18942,
        "maxc)": 18943,
        "city[i];": 18944,
        "c[index": 18945,
        "w[105]": 18946,
        "w[max_element(a,": 18947,
        "a]++;": 18948,
        "max_element(w,": 18949,
        "win[205];": 18950,
        "win[ind]++;": 18951,
        "*max_element(win,": 18952,
        "205);": 18953,
        "(win[i]": 18954,
        "a[maxi]++;": 18955,
        "a[150][150],": 18956,
        "ms.insert(b[i]);": 18957,
        "multiset<int>::iterator": 18958,
        "ms.begin();": 18959,
        "ms.end();": 18960,
        "(ms.count(*it)": 18961,
        "ms.count(*it);": 18962,
        "winner[101];": 18963,
        "winner[i]": 18964,
        "wincandidate": 18965,
        "maxvote": 18966,
        "(maxvote": 18967,
        "winner[wincandidate]++;": 18968,
        "winner[i])": 18969,
        "winner[i];": 18970,
        "temp[n": 18971,
        "temp[win]++;": 18972,
        "a[in]++;": 18973,
        "max(e,": 18974,
        "c[j]);": 18975,
        "long)8e18;": 18976,
        "freq[n": 18977,
        "freq[ans]++;": 18978,
        "max(f_ans,": 18979,
        "freq[i]);": 18980,
        "f_ans)": 18981,
        "arr[MAXN][MAXN];": 18982,
        "votes[MAXN];": 18983,
        "votes[index]++;": 18984,
        "did[103];": 18985,
        "pair<long,": 18986,
        "p.first": 18987,
        "maxx.first": 18988,
        "maxx.second": 18989,
        "maxx.second)": 18990,
        "did[maxx.first]++;": 18991,
        "(did[i]": 18992,
        "p.second)": 18993,
        "did[i];": 18994,
        "arr[size][size];": 18995,
        "win[size];": 18996,
        "b[size];": 18997,
        "memset(win,": 18998,
        "sizeof(win));": 18999,
        "ps": 19000,
        "win[ps]++;": 19001,
        "win[i];": 19002,
        "arr[1001];": 19003,
        "arr[idx]++;": 19004,
        "v_c(n,": 19005,
        "v_g(n,": 19006,
        "max_v": 19007,
        "v_c[j];": 19008,
        "(v_c[j]": 19009,
        "max_v)": 19010,
        "v_g[idx]++;": 19011,
        "(v_g[i]": 19012,
        "v_g[i];": 19013,
        "mj": 19014,
        "v[mj]++;": 19015,
        "v[j];": 19016,
        "(mj": 19017,
        "gsd(int": 19018,
        "b[102];": 19019,
        "a[i][k])": 19020,
        "b[k]++;": 19021,
        "b[w])": 19022,
        "win[105];": 19023,
        "maxnn;": 19024,
        "inindex;": 19025,
        "win[index]++;": 19026,
        "maxnn": 19027,
        "inindex": 19028,
        "maxnn)": 19029,
        "find_winner(vector<int>": 19030,
        "best_candidate": 19031,
        "max_votes": 19032,
        "max_votes)": 19033,
        "ai;": 19034,
        "cities(n);": 19035,
        "array;": 19036,
        "array.push_back(ai);": 19037,
        "cities[find_winner(array)": 19038,
        "find_winner(cities)": 19039,
        "a[i][0],": 19040,
        "fun(i);": 19041,
        "b[1],": 19042,
        "mxv,": 19043,
        "mxv": 19044,
        "mxv)": 19045,
        "ans[mx]++;": 19046,
        "ans.end())": 19047,
        "(did[maxx.first]": 19048,
        "maxx.first;": 19049,
        "did[maxx.first];": 19050,
        "tem_max;": 19051,
        "tem_max": 19052,
        "tem_max)": 19053,
        "(b[o]": 19054,
        "j[1000],": 19055,
        "h[1000],": 19056,
        "j[y];": 19057,
        "(j[y]": 19058,
        "h[l[i]]++;": 19059,
        "(h[u]": 19060,
        "h[u];": 19061,
        "arr[110],": 19062,
        "brr[110]": 19063,
        "brr[ans]++;": 19064,
        "brr[i])": 19065,
        "a[102],": 19066,
        "c[102],": 19067,
        "ansx;": 19068,
        "c[ansx]++;": 19069,
        "(!a)": 19070,
        "lessons[100];": 19071,
        "lessons[i];": 19072,
        "numhours": 19073,
        "(lessons[i]": 19074,
        "numhours++;": 19075,
        "(numhours": 19076,
        "lessons[i": 19077,
        "arr[2000];": 19078,
        "(arr[e]": 19079,
        "zerocnt": 19080,
        "(e);": 19081,
        "(zerocnt": 19082,
        "zerocnt++;": 19083,
        "lekcje[100],": 19084,
        "wynik": 19085,
        "lekcje[i];": 19086,
        "(lekcje[i]": 19087,
        "(lekcje[i": 19088,
        "lekcje[i": 19089,
        "punkty": 19090,
        "punkty++;": 19091,
        "guests[30001];": 19092,
        "checked[30001];": 19093,
        "!current;": 19094,
        "(!start": 19095,
        "lessons;": 19096,
        "reversestack(stack<int>": 19097,
        "&lessons)": 19098,
        "reversed;": 19099,
        "lessons.size();": 19100,
        "reversed.push(lessons.top());": 19101,
        "lessons.pop();": 19102,
        "lessons": 19103,
        "print(stack<int>": 19104,
        "reversestack(s);": 19105,
        "s.top();": 19106,
        "(lessons.empty()": 19107,
        "lessons.push(a);": 19108,
        "(lessons.top()": 19109,
        "(!lessons.empty())": 19110,
        "lessons.size()": 19111,
        "athome": 19112,
        "!athome)": 19113,
        "final)": 19114,
        "solveTest()": 19115,
        "schedule;": 19116,
        "isLesson;": 19117,
        "schedule.push_back(isLesson);": 19118,
        "isAtHome": 19119,
        "hoursSpent": 19120,
        "(schedule[i])": 19121,
        "(schedule[i": 19122,
        "(schedule[i]": 19123,
        "(isAtHome": 19124,
        "hoursSpent++;": 19125,
        "solveTest();": 19126,
        "arr[10000],": 19127,
        "akmal": 19128,
        "(a[n])": 19129,
        "stay": 19130,
        "stay++;": 19131,
        "e;)": 19132,
        "number_of_lessons;": 19133,
        "lessons[100]{};": 19134,
        "number_of_lessons": 19135,
        "(!lessons[i]": 19136,
        "lessons[i]": 19137,
        "(lessons[i])": 19138,
        "stat,": 19139,
        "(!x[i]": 19140,
        "!x[i": 19141,
        "ai(n);": 19142,
        "ai[i];": 19143,
        "(static": 19144,
        "(ai[i]": 19145,
        "ai[i": 19146,
        "3],": 19147,
        "idx1": 19148,
        "idx2": 19149,
        "idx1;": 19150,
        "idx2;": 19151,
        "500": 19152,
        "__gcd(gcd,": 19153,
        "\"Alice\"": 19154,
        "\"Bob\"": 19155,
        "((ma": 19156,
        "max(M,": 19157,
        "gcd(a[1],": 19158,
        "a[2]);": 19159,
        "(gcd(m,": 19160,
        "\"Alice\\n\";": 19161,
        "\"Bob\\n\";": 19162,
        "gcd(temp,": 19163,
        "movetimes": 19164,
        "puts(movetimes": 19165,
        "\"Bob\");": 19166,
        "__gcd(g,": 19167,
        "(ma": 19168,
        "__gcd(x,": 19169,
        "g);": 19170,
        "(((mx": 19171,
        "\"Bob\")": 19172,
        "((mx": 19173,
        "0x3fffffff;": 19174,
        "quick_pow(long": 19175,
        "gcd(maxx,": 19176,
        "45LL);": 19177,
        "MAXLL": 19178,
        "MAXULL": 19179,
        "18446744073709551615LLU;": 19180,
        "DELTA": 19181,
        "0.000000001L;": 19182,
        "mpow(long": 19183,
        "inverse(long": 19184,
        "mpow(x,": 19185,
        "_gcd(long": 19186,
        "cnt[5005];": 19187,
        "vec[5005][5005];": 19188,
        "A[0];": 19189,
        "_gcd(gcd,": 19190,
        "(abs(ans": 19191,
        "gcd(d,": 19192,
        "gcd(result,": 19193,
        "gcd(a[i],": 19194,
        "__gcd(d,": 19195,
        "gcd(y": 19196,
        "max_num": 19197,
        "max_num)": 19198,
        "((max_num": 19199,
        "gcd(g,": 19200,
        "__gcd(a[0],": 19201,
        "a[1]);": 19202,
        "maxval,": 19203,
        "arr(n);": 19204,
        "maxval": 19205,
        "max(maxval,": 19206,
        "((maxval": 19207,
        "\"Alice\\n\"": 19208,
        "\"Bob\\n\");": 19209,
        "euclides(int": 19210,
        "mcd,": 19211,
        "mcd": 19212,
        "V[0];": 19213,
        "euclides(mcd,": 19214,
        "V[i]);": 19215,
        "mcd;": 19216,
        "V[i": 19217,
        "*max_element(v.begin(),": 19218,
        "(((m": 19219,
        "gcd(a[0],": 19220,
        "((sum": 19221,
        "a[205];": 19222,
        "long)1e18;": 19223,
        "fpow(long": 19224,
        "inv(int": 19225,
        "fpow(a,": 19226,
        "spf[1000001": 19227,
        "1000001;": 19228,
        "long)spf[j]);": 19229,
        "gg": 19230,
        "__gcd(gg,": 19231,
        "*max_element(a.begin(),": 19232,
        "gg)": 19233,
        "vis[b[j]": 19234,
        "a[i]]++;": 19235,
        "floor(t1)": 19236,
        "v.push_back(t1);": 19237,
        "v.end()))": 19238,
        "a[10002];": 19239,
        "b[10002];": 19240,
        "xx[20002];": 19241,
        "memset(xx,": 19242,
        "sizeof(xx));": 19243,
        "xx[d]++;": 19244,
        "xx[c]": 19245,
        "a[M],": 19246,
        "b[M];": 19247,
        "a[55]": 19248,
        "b[55]": 19249,
        "a[51],": 19250,
        "b[51];": 19251,
        "ratios;": 19252,
        "(vv[i]": 19253,
        "ratios.push_back(vv[i]": 19254,
        "v[j]);": 19255,
        "gear": 19256,
        "sort(ratios.begin(),": 19257,
        "ratios.end());": 19258,
        "(ratios.size()": 19259,
        "ratios[ratios.size()": 19260,
        "ratios.size()": 19261,
        "(ratios[i]": 19262,
        "gear++;": 19263,
        "a[60],": 19264,
        "b[60];": 19265,
        "BG": 19266,
        "(!(b[j]": 19267,
        "BG)": 19268,
        "max_ratio": 19269,
        "max_ratio)": 19270,
        "c[10005];": 19271,
        "c[s]++;": 19272,
        "c[s]": 19273,
        "a.push_back(tmp);": 19274,
        "b.push_back(tmp);": 19275,
        "is_it_sorted(vector<int>": 19276,
        "v(n),": 19277,
        "vector<float>": 19278,
        "v2.push_back(v1[i]": 19279,
        "min_max(v2);": 19280,
        "v2.size();": 19281,
        "a[200025],": 19282,
        "b[200025];": 19283,
        "((float)b[j]": 19284,
        "(int)b[j]": 19285,
        "v.push_back(b[j]": 19286,
        "ratio;": 19287,
        "ratio": 19288,
        "mp[ratio]++;": 19289,
        "mp[mx]": 19290,
        "max(temp,": 19291,
        "c[MAXN": 19292,
        "MAXN];": 19293,
        "c[cnt++]": 19294,
        "a[10020],": 19295,
        "b[10020],": 19296,
        "res))": 19297,
        "arr1[m];": 19298,
        "freq[10005];": 19299,
        "freq[maxy]": 19300,
        "ar1[n];": 19301,
        "ar1[i];": 19302,
        "ar2[m];": 19303,
        "(ar2[j]": 19304,
        "ar1[i]": 19305,
        "ar2[j]": 19306,
        "b[M],": 19307,
        "c[10000": 19308,
        "(gcd(a[i],": 19309,
        "c[b[j]": 19310,
        "10004;": 19311,
        "a[52],": 19312,
        "b[52];": 19313,
        "ppp;": 19314,
        "ppp[maxn]++;": 19315,
        "ppp[maxn]": 19316,
        "kecil": 19317,
        "besar": 19318,
        "kecil)": 19319,
        "hitung++;": 19320,
        "besar)": 19321,
        "k[n];": 19322,
        "mini,": 19323,
        "less": 19324,
        "10001,": 19325,
        "amazing": 19326,
        "more)": 19327,
        "amazing++;": 19328,
        "less)": 19329,
        "(((a[0]": 19330,
        "NumberOfContests;": 19331,
        "int[NumberOfContests];": 19332,
        "First,": 19333,
        "Min,": 19334,
        "Amaze": 19335,
        "First;": 19336,
        "Amaze++;": 19337,
        "Min)": 19338,
        "points;": 19339,
        "mxs": 19340,
        "mns": 19341,
        "(points": 19342,
        "mxs)": 19343,
        "(mns": 19344,
        "points)": 19345,
        "record": 19346,
        "vec[0],": 19347,
        "anti": 19348,
        "record)": 19349,
        "anti)": 19350,
        "maks,": 19351,
        "jwb": 19352,
        "maks;": 19353,
        "maks)": 19354,
        "jwb++;": 19355,
        "maxP,": 19356,
        "minP;": 19357,
        "ctMax,": 19358,
        "ctMin;": 19359,
        "score;": 19360,
        "maxP;": 19361,
        "minP": 19362,
        "maxP)": 19363,
        "maxP": 19364,
        "ctMax++;": 19365,
        "minP)": 19366,
        "ctMin++;": 19367,
        "ctMin": 19368,
        "ctMax": 19369,
        "0x7ffffff,": 19370,
        "highest,": 19371,
        "lowest;": 19372,
        "point;": 19373,
        "highest": 19374,
        "lowest": 19375,
        "(point": 19376,
        "lowest)": 19377,
        "123456,": 19378,
        "T[n];": 19379,
        "comp": 19380,
        "T[i];": 19381,
        "T[0];": 19382,
        "comp++;": 19383,
        "z[x];": 19384,
        "z[0];": 19385,
        "(z[i]": 19386,
        "maxa(a),": 19387,
        "mina(a),": 19388,
        "ap(0);": 19389,
        "maxa)": 19390,
        "ap++;": 19391,
        "mina)": 19392,
        "mina": 19393,
        "ap": 19394,
        "power(a,": 19395,
        "minval,": 19396,
        "(minval": 19397,
        "(maxval": 19398,
        "win[102],": 19399,
        "win[i]": 19400,
        "sort(ans,": 19401,
        "max(ans[99],": 19402,
        "a[d];": 19403,
        "ans),": 19404,
        "value[1001]": 19405,
        "num[1001][1001];": 19406,
        "num[i][j];": 19407,
        "(num[i][j]": 19408,
        "value[index++]": 19409,
        "(value[i]": 19410,
        "value[i": 19411,
        "cons": 19412,
        "cons++;": 19413,
        "(cons": 19414,
        "cons;": 19415,
        "judge(char": 19416,
        "a[])": 19417,
        "(judge(a)": 19418,
        "int(d);": 19419,
        "book[101];": 19420,
        "istrue(string": 19421,
        "(istrue(str))": 19422,
        "max(coun,": 19423,
        "++cnt": 19424,
        "(count(s.begin(),": 19425,
        "max_cnt": 19426,
        "present[101];": 19427,
        "present[j];": 19428,
        "(present[j]": 19429,
        "max_cnt)": 19430,
        "(d--)": 19431,
        "x[105][105];": 19432,
        "isAbsent(string": 19433,
        "absent)": 19434,
        "absent.length();": 19435,
        "(absent[i]": 19436,
        "absent;": 19437,
        "consecutive": 19438,
        "(isAbsent(absent))": 19439,
        "(consecutive": 19440,
        "(second[i]": 19441,
        "value[201]": 19442,
        "num[201][201];": 19443,
        "all_present(n,": 19444,
        "'1');": 19445,
        "cdays": 19446,
        "all_present)": 19447,
        "max(cdays,": 19448,
        "count),": 19449,
        "echo": 19450,
        "max(echo,": 19451,
        "(!alpha)": 19452,
        "nex": 19453,
        "(s.compare(c)": 19454,
        "pre);": 19455,
        "nex++;": 19456,
        "ck_0,": 19457,
        "ck_0": 19458,
        "ck_0++;": 19459,
        "(ck_0": 19460,
        "ck;": 19461,
        "s[1000000];": 19462,
        "maxd": 19463,
        "max(maxd,": 19464,
        "(maxd": 19465,
        "zero;": 19466,
        "(s.find('0')": 19467,
        "ara[110];": 19468,
        "103;": 19469,
        "C--;": 19470,
        "l.push_back(x1);": 19471,
        "min(l[i],": 19472,
        "sum(0);": 19473,
        "L[n];": 19474,
        "sizeof(L)": 19475,
        "sizeof(L[0]);": 19476,
        "sort(L,": 19477,
        "v(105),": 19478,
        "vis(105);": 19479,
        "vis[j]++;": 19480,
        "a.push_back(num);": 19481,
        "a.back();": 19482,
        "a.pop_back();": 19483,
        "v[c])": 19484,
        "v[c]": 19485,
        "par[2000001]": 19486,
        "visited[2000001]": 19487,
        "find_par(int": 19488,
        "(par[x]": 19489,
        "find_par(par[x]);": 19490,
        "uni(int": 19491,
        "par[find_par(y)]": 19492,
        "par[find_par(x)];": 19493,
        "par[find_par(x)]": 19494,
        "par[find_par(y)];": 19495,
        "arr[102],": 19496,
        "A[101],": 19497,
        "sort(ara,": 19498,
        "ara": 19499,
        "ar[1000];": 19500,
        "min(ar[i],": 19501,
        "a[1003],": 19502,
        "isvowel(char": 19503,
        "tolower(c);": 19504,
        "'e'": 19505,
        "'i'": 19506,
        "'o'": 19507,
        "'u');": 19508,
        "catur[8][8];": 19509,
        "vis[8][8];": 19510,
        "catur[i][j];": 19511,
        "(catur[i][j]": 19512,
        "'B');": 19513,
        "catur[i][j]": 19514,
        "(sb)": 19515,
        "\"8\"": 19516,
        "arr[8][8];": 19517,
        "(s[o][i]": 19518,
        "(s[i][o]": 19519,
        "board(9);": 19520,
        "(board[i]": 19521,
        "\"BBBBBBBB\")": 19522,
        "++row;": 19523,
        "paint": 19524,
        "(paint)": 19525,
        "++col;": 19526,
        "mat[9][9];": 19527,
        "mat[j][i];": 19528,
        "f1;": 19529,
        "ss[10];": 19530,
        "654;": 19531,
        "(ss[i][j]": 19532,
        "(ss[j][i]": 19533,
        "s[20][20];": 19534,
        "board[8];": 19535,
        "++B;": 19536,
        "(board[j][i]": 19537,
        "s[0].size();": 19538,
        "ch[8][8];": 19539,
        "_b(8);": 19540,
        "_b;": 19541,
        "++q)": 19542,
        "(a[q][j]": 19543,
        "++res;": 19544,
        "(a[i][q]": 19545,
        "Chess[100][100];": 19546,
        "Chess[0])": 19547,
        "Chess[i];": 19548,
        "(Chess[i][j]": 19549,
        "(Chess[j][i]": 19550,
        "(!X)": 19551,
        "(!Y)": 19552,
        "st[55];": 19553,
        "s[9],": 19554,
        "s1[9];": 19555,
        "count2;": 19556,
        "a[10]": 19557,
        "b[10]": 19558,
        "a[i]++;": 19559,
        "s[15];": 19560,
        "a[15][15],": 19561,
        "b[15][15],": 19562,
        "(a[i][y]": 19563,
        "s[i][y]": 19564,
        "a[i][y]": 19565,
        "(b[x][i]": 19566,
        "s[x][i]": 19567,
        "b[x][i]": 19568,
        "fun(i,": 19569,
        "b[i][0]": 19570,
        "a[9][9];": 19571,
        "h[8]": 19572,
        "cin.get(a[i],": 19573,
        "cin.ignore(1000,": 19574,
        "++countr;": 19575,
        "(countr": 19576,
        "s[l])": 19577,
        "(!((r": 19578,
        "tedad": 19579,
        "proc": 19580,
        "proc++;": 19581,
        "(!(p": 19582,
        "long)str.length())": 19583,
        "s.append(\"0\");": 19584,
        "check.at(check.size()": 19585,
        "s.at(i);": 19586,
        "(check.size()": 19587,
        "check.clear();": 19588,
        "a[l])": 19589,
        "(int)str.size();": 19590,
        "s[++result]": 19591,
        "((s[result]": 19592,
        "s[result": 19593,
        "length++;": 19594,
        "(length": 19595,
        "c.size())": 19596,
        "str[maxn];": 19597,
        "((int)(s).size()))": 19598,
        "ev_no": 19599,
        "ev_no++;": 19600,
        "br,": 19601,
        "br++;": 19602,
        "(br": 19603,
        "br;": 19604,
        "str.length())": 19605,
        "dir1[8][2]": 19606,
        "-2,": 19607,
        "dir2[4][2]": 19608,
        "dir3[8][2]": 19609,
        "sqrt(x": 19610,
        "1.0);": 19611,
        "sqr(int": 19612,
        "javab": 19613,
        "javab++;": 19614,
        "fn;": 19615,
        "ss[100];": 19616,
        "sn": 19617,
        "ss[0]": 19618,
        "fn": 19619,
        "(sn": 19620,
        "ss[i]": 19621,
        "ss[i": 19622,
        "(fn": 19623,
        "ss[ln];": 19624,
        "(gcd(a": 19625,
        "(gcd(b,": 19626,
        "(int)(1);": 19627,
        "(int)(s.length());": 19628,
        "dna;": 19629,
        "identical": 19630,
        "ncl": 19631,
        "int(dna.length());": 19632,
        "dna[i]": 19633,
        "dna[i": 19634,
        "(!(identical": 19635,
        "ncl++;": 19636,
        "identical++;": 19637,
        "f[105][105];": 19638,
        "f[j][k]++;": 19639,
        "f[i][j];": 19640,
        "(!a[i][j])": 19641,
        "a[i][j]++;": 19642,
        "cnt[110][110];": 19643,
        "cnt[i][j]++;": 19644,
        "cnt[i][j];": 19645,
        "((x2": 19646,
        "ar[105][105];": 19647,
        "ar[j][k]++;": 19648,
        "ix,": 19649,
        "iy,": 19650,
        "ix": 19651,
        "iy": 19652,
        "ix)": 19653,
        "iy)": 19654,
        "my)": 19655,
        "s[i][j]++;": 19656,
        "iy;": 19657,
        "ix;": 19658,
        "mp[105][105]": 19659,
        "++mp[i][j];": 19660,
        "mat[100][100]": 19661,
        "a--,": 19662,
        "b--,": 19663,
        "mat[i][j]++;": 19664,
        "(abs(xx": 19665,
        "(abs(yy": 19666,
        "gra[102][102];": 19667,
        "memset(gra,": 19668,
        "sizeof(gra));": 19669,
        "gra[i][j]++;": 19670,
        "gra[i][j];": 19671,
        "cell[101][101];": 19672,
        "max(x1,": 19673,
        "max(y1,": 19674,
        "cell[i][j]++;": 19675,
        "(abs(b": 19676,
        "diff(long": 19677,
        "pairsort(int": 19678,
        "b[],": 19679,
        "pairt[n];": 19680,
        "pairt[i].first": 19681,
        "pairt[i].second": 19682,
        "sort(pairt,": 19683,
        "pairt": 19684,
        "pairt[i].first;": 19685,
        "pairt[i].second;": 19686,
        "rev(long": 19687,
        "cnt[M][M];": 19688,
        "cnt[r][c]++;": 19689,
        "swap(x1,": 19690,
        "swap(y1,": 19691,
        "(abs(x1": 19692,
        "(abs(y1": 19693,
        "vis[105][105];": 19694,
        "vis[i][j];": 19695,
        "a[105][105],": 19696,
        "nr[]": 19697,
        "nc[]": 19698,
        "setprecision(6);": 19699,
        "table[maxs][maxs];": 19700,
        "x2));": 19701,
        "table[x1][y2]": 19702,
        "table[x1][y1": 19703,
        "table[x2": 19704,
        "1][y2]": 19705,
        "1][y1": 19706,
        "table[x][y]": 19707,
        "table[x": 19708,
        "1][y];": 19709,
        "table[x][y": 19710,
        "table[x][y];": 19711,
        "int[5];": 19712,
        "((a[i][4]": 19713,
        "(a[i][3]": 19714,
        "arr[101][101]": 19715,
        "memset(arr[i],": 19716,
        "arr[j][k]++;": 19717,
        "svr": 19718,
        "fa,": 19719,
        "tb,": 19720,
        "abs(ta": 19721,
        "tb);": 19722,
        "abs(fa": 19723,
        "fb);": 19724,
        "((fa": 19725,
        "(abs(fa": 19726,
        "fb));": 19727,
        "fa));": 19728,
        "(abs(fb": 19729,
        "200100,": 19730,
        "min(abs(fa": 19731,
        "abs(fb": 19732,
        "(fb": 19733,
        "min(abs(fb": 19734,
        "abs(x1": 19735,
        "(!(x1": 19736,
        "abs(f1": 19737,
        "f2);": 19738,
        "abs(t1": 19739,
        "fa;": 19740,
        "abs(current": 19741,
        "p[10000],": 19742,
        "r[10000],": 19743,
        "s[10000];": 19744,
        "abs(p[i]": 19745,
        "(min(fa,": 19746,
        "max(fa,": 19747,
        "jarak;": 19748,
        "jarak": 19749,
        "s.first": 19750,
        "s.second": 19751,
        "f.first": 19752,
        "f.second;": 19753,
        "(s.first": 19754,
        "f.first)": 19755,
        "abs(s.second": 19756,
        "f.second);": 19757,
        "abs(s.first": 19758,
        "f.first);": 19759,
        "(s.second": 19760,
        "s.second);": 19761,
        "f.second)": 19762,
        "(abs(f1": 19763,
        "f1);": 19764,
        "cf": 19765,
        "max(t1": 19766,
        "max(cf": 19767,
        "f2,": 19768,
        "cf);": 19769,
        "fb,": 19770,
        "abs(ff": 19771,
        "solve(int64_t": 19772,
        "solve(x1,": 19773,
        "abs(f2": 19774,
        "b[1000006];": 19775,
        "abs(w": 19776,
        "(!res)": 19777,
        "TA,": 19778,
        "FA,": 19779,
        "TB,": 19780,
        "FB;": 19781,
        "TA": 19782,
        "FA": 19783,
        "TB": 19784,
        "(TA": 19785,
        "TB)": 19786,
        "(FA": 19787,
        "FA;": 19788,
        "(FB": 19789,
        "FB": 19790,
        "abs(TB": 19791,
        "TA);": 19792,
        "FB)": 19793,
        "abs(FA": 19794,
        "FB);": 19795,
        "setprecision(10);": 19796,
        "(!(a": 19797,
        "fa)": 19798,
        "fa))": 19799,
        "high,": 19800,
        "ha,": 19801,
        "hb,": 19802,
        "hb;": 19803,
        "abs(hb": 19804,
        "ha);": 19805,
        "(ha": 19806,
        "hb": 19807,
        "(hb": 19808,
        "ha)": 19809,
        "hb);": 19810,
        "abs(ha": 19811,
        "abs(tb": 19812,
        "ta);": 19813,
        "fa);": 19814,
        "(tb": 19815,
        "ta)": 19816,
        "nearest;": 19817,
        "nearest": 19818,
        "abs(nearest": 19819,
        "nearest);": 19820,
        "t_a,": 19821,
        "f_a,": 19822,
        "t_b,": 19823,
        "f_b;": 19824,
        "f_a": 19825,
        "(t_a": 19826,
        "t_b)": 19827,
        "abs(f_b": 19828,
        "f_a)": 19829,
        "abs(t_b": 19830,
        "t_a)": 19831,
        "min(abs(f_a": 19832,
        "abs(f_a": 19833,
        "(abs(f_a": 19834,
        "(abs(f_b": 19835,
        "f_a))": 19836,
        "h1,": 19837,
        "fabs(h2": 19838,
        "h1);": 19839,
        "fabs(t2": 19840,
        "h1)": 19841,
        "abs(t2": 19842,
        "long)k": 19843,
        "long)(k": 19844,
        "lane": 19845,
        "desk": 19846,
        "((lane": 19847,
        "buff": 19848,
        "buff++;": 19849,
        "(buff": 19850,
        "L\"": 19851,
        "R\"": 19852,
        "rit": 19853,
        "(rit)": 19854,
        "f(p,": 19855,
        "f(lr,": 19856,
        "(lr": 19857,
        "--K;": 19858,
        "M);": 19859,
        "L\\n\";": 19860,
        "R\\n\";": 19861,
        "preprocess(void)": 19862,
        "cout.precision(20);": 19863,
        "preprocess();": 19864,
        "(desk": 19865,
        "t3,": 19866,
        "t4;": 19867,
        "t4": 19868,
        "(t3)": 19869,
        "t4++;": 19870,
        "desks,": 19871,
        "desks": 19872,
        "((K": 19873,
        "desks)": 19874,
        "\"R\")": 19875,
        "pl": 19876,
        "bool(k": 19877,
        "ln,": 19878,
        "dsk;": 19879,
        "bool(pl": 19880,
        "dsk": 19881,
        "(dsk": 19882,
        "++r1;": 19883,
        "(r2": 19884,
        "rad;": 19885,
        "parta;": 19886,
        "mesto;": 19887,
        "rad": 19888,
        "rad++;": 19889,
        "parta": 19890,
        "mesto": 19891,
        "R\")": 19892,
        "v[200005];": 19893,
        "ano;": 19894,
        "ano": 19895,
        "(ano": 19896,
        "ano++;": 19897,
        "lanes,": 19898,
        "desk,": 19899,
        "lanes": 19900,
        "lanes++;": 19901,
        "desk++;": 19902,
        "reverse(a,": 19903,
        "60);": 19904,
        "c[60];": 19905,
        "b[j]))": 19906,
        "60": 19907,
        "getit()": 19908,
        "~(1LL": 19909,
        "63);": 19910,
        "most_significant(unsigned": 19911,
        "((1ULL": 19912,
        "f(unsigned": 19913,
        "most_significant(r);": 19914,
        "f(l": 19915,
        "(1ULL": 19916,
        "(((1ULL": 19917,
        "f(l,": 19918,
        "MAXA": 19919,
        "9e18": 19920,
        "int(testCnt)": 19921,
        "int(t);": 19922,
        "(t--": 19923,
        "++testCnt)": 19924,
        "__builtin_popcountll(r);": 19925,
        "rr": 19926,
        "((1LL": 19927,
        "(rr": 19928,
        "__builtin_popcountll(rr);": 19929,
        "<<=": 19930,
        "b[10010],": 19931,
        "d[10010];": 19932,
        "memset(d,": 19933,
        "sizeof(d));": 19934,
        "a[++x1]": 19935,
        "b[++x2]": 19936,
        "((temp": 19937,
        "64)": 19938,
        "go(long": 19939,
        "go1(long": 19940,
        "go2(long": 19941,
        "(go1(x)": 19942,
        "go1(y))": 19943,
        "(go1(a)": 19944,
        "go1(temp))": 19945,
        "go(x);": 19946,
        "go(y);": 19947,
        "(go1(y)": 19948,
        "long)1": 19949,
        "go2(x,": 19950,
        "getB(long": 19951,
        "getB(r);": 19952,
        "solve(l": 19953,
        "long)i))": 19954,
        "long)i));": 19955,
        "is_palindrome(const": 19956,
        "equal(s.begin(),": 19957,
        "s.rbegin());": 19958,
        "long)(0);": 19959,
        "long)(64);": 19960,
        "((ans": 19961,
        "(!sum": 19962,
        "(int)log2l(r);": 19963,
        "fun(long": 19964,
        "fun(l": 19965,
        "fun(l,": 19966,
        "(((one": 19967,
        "mp[t]": 19968,
        "f(l);": 19969,
        "f(r);": 19970,
        "(mp.find(r)": 19971,
        "__builtin_popcount(l);": 19972,
        "__builtin_popcount(r);": 19973,
        "(1e9);": 19974,
        "Lb[100],": 19975,
        "Rb[100];": 19976,
        "Ln": 19977,
        "Rn": 19978,
        "(L)": 19979,
        "Lb[++Ln]": 19980,
        "Rb[++Rn]": 19981,
        "(Rn": 19982,
        "Ln)": 19983,
        "(p[Rn]": 19984,
        "p[Rn": 19985,
        "Rn;": 19986,
        "(Lb[i]": 19987,
        "Rb[i]": 19988,
        "(Rb[i]": 19989,
        "Lb[i]": 19990,
        "(Rb[j]": 19991,
        "solve(L,": 19992,
        "ziro": 19993,
        "ziro;": 19994,
        "ziro)": 19995,
        "m1.find(s3);": 19996,
        "m1.end())": 19997,
        "m1[s3]": 19998,
        "(s3[0]": 19999,
        "'l')": 20000,
        "(p->second": 20001,
        "m1.begin();": 20002,
        "(m1.size()": 20003,
        "(p->first[0]": 20004,
        "p->second": 20005,
        "p1->second": 20006,
        "_,": 20007,
        "\"left\")": 20008,
        "buffer))": 20009,
        "ss(buffer);": 20010,
        "izq": 20011,
        "der": 20012,
        "paila": 20013,
        "buffer);": 20014,
        "s(buffer);": 20015,
        "(dir": 20016,
        "min(der,": 20017,
        "max(izq,": 20018,
        "(der": 20019,
        "izq)": 20020,
        "(paila)": 20021,
        "a[1005]": 20022,
        "(str[7]": 20023,
        "ss.clear();": 20024,
        "(str3[0]": 20025,
        "cin.ignore(7);": 20026,
        "'l'": 20027,
        "y[10],": 20028,
        "d[10];": 20029,
        "nomer": 20030,
        "mas[q]": 20031,
        "(s[q]": 20032,
        "s[q]": 20033,
        "s[q];": 20034,
        "nomer.size()": 20035,
        "(nomer[q]": 20036,
        "(s.find(\"left\")": 20037,
        "mas[q]++;": 20038,
        "(mas[q]": 20039,
        "c3,": 20040,
        "c4;": 20041,
        "c4": 20042,
        "(c3": 20043,
        "\"right\")": 20044,
        "x[4];": 20045,
        "x[l];": 20046,
        "(abs(li": 20047,
        "(!con)": 20048,
        "(li": 20049,
        "*t;": 20050,
        "(s[7]": 20051,
        "&s[15];": 20052,
        "atoi(t);": 20053,
        "&s[16];": 20054,
        "number(string": 20055,
        "min(number(s,": 20056,
        "15),": 20057,
        "max(number(s,": 20058,
        "16),": 20059,
        "low);": 20060,
        "0x7fffffff;": 20061,
        "a[2000],": 20062,
        "temp[10];": 20063,
        "(temp[0]": 20064,
        "str[5];": 20065,
        "min(id": 20066,
        "right);": 20067,
        "max(id": 20068,
        "left);": 20069,
        "(A[s3[0]]": 20070,
        "A[s3[0]]": 20071,
        "(A['l']": 20072,
        "A['r']": 20073,
        "A['l']": 20074,
        "\"right\"": 20075,
        "\"left\"": 20076,
        "nc()": 20077,
        "&x)": 20078,
        "nc();": 20079,
        "!(c": 20080,
        "'9');": 20081,
        "nc())": 20082,
        "read(long": 20083,
        "read(char": 20084,
        "'Z');": 20085,
        "s[len++]": 20086,
        "'z');": 20087,
        "wt,": 20088,
        "ss[19];": 20089,
        "putchar(48);": 20090,
        "(wt": 20091,
        "ss[++wt]": 20092,
        "putchar(ss[wt]": 20093,
        "48),": 20094,
        "wt--)": 20095,
        "read(n);": 20096,
        "read(m);": 20097,
        "read(s),": 20098,
        "read(s);": 20099,
        "read(x);": 20100,
        "print(r": 20101,
        "ceil2(int": 20102,
        "ceil2(n);": 20103,
        "ceil(double(n": 20104,
        "(int)((double)n": 20105,
        "0.5);": 20106,
        "output;": 20107,
        "input1;": 20108,
        "input2;": 20109,
        "input1": 20110,
        "input2)": 20111,
        "(input2": 20112,
        "input1)": 20113,
        "(input1": 20114,
        "input2": 20115,
        "output++;": 20116,
        "mn++;": 20117,
        "mmax,": 20118,
        "mmin,": 20119,
        "mmax": 20120,
        "mmin": 20121,
        "(mmin": 20122,
        "ceil(mini": 20123,
        "re,": 20124,
        "steps1": 20125,
        "steps2": 20126,
        "((steps2": 20127,
        "steps1)": 20128,
        "cn2": 20129,
        "((cn1": 20130,
        "cn1--;": 20131,
        "move;": 20132,
        "'-',": 20133,
        "(X": 20134,
        "-X": 20135,
        "ch[20];": 20136,
        "ch[++num]": 20137,
        "putchar(ch[num--]);": 20138,
        "write(i);": 20139,
        "h:": 20140,
        "q.push_back(q.at(0));": 20141,
        "q.erase(0,": 20142,
        "v.push_back(s1);": 20143,
        "s1[s1.size()": 20144,
        "s1.erase(s.size()": 20145,
        "v.resize(unique(v.begin(),": 20146,
        "v.begin());": 20147,
        "change()": 20148,
        "b[b.length()": 20149,
        "b.length()": 20150,
        "change();": 20151,
        "a[++l]": 20152,
        "(s.compare(i,": 20153,
        "s.erase(s.length()": 20154,
        "(st.find(s)": 20155,
        "ans.insert(t);": 20156,
        "int32_t": 20157,
        "1e2;": 20158,
        "w.size();": 20159,
        "(int32_t": 20160,
        "w[j];": 20161,
        "s.insert(tmp);": 20162,
        "s.insert(word);": 20163,
        "word": 20164,
        "word[size": 20165,
        "word.resize(size);": 20166,
        "M[S]++;": 20167,
        "S.erase(0,": 20168,
        "(M[S]": 20169,
        "s.push_back(s[0]);": 20170,
        "c[102];": 20171,
        "(++a[s]": 20172,
        "MOD[]": 20173,
        "{1000000009,": 20174,
        "1000000007};": 20175,
        "base[]": 20176,
        "{37,": 20177,
        "43};": 20178,
        "p[55][2];": 20179,
        "p[0][0]": 20180,
        "p[0][1]": 20181,
        "(p[i": 20182,
        "base[0])": 20183,
        "MOD[0],": 20184,
        "MOD[0];": 20185,
        "base[1])": 20186,
        "MOD[1],": 20187,
        "MOD[1];": 20188,
        "Hash;": 20189,
        "hash1": 20190,
        "hash2": 20191,
        "Hash.insert((hash1": 20192,
        "hash2);": 20193,
        "(p[len": 20194,
        "MOD[0]": 20195,
        "MOD[0])": 20196,
        "(hash1": 20197,
        "p[1][0],": 20198,
        "(p[0][0]": 20199,
        "MOD[1]": 20200,
        "MOD[1])": 20201,
        "p[1][1],": 20202,
        "(hash2": 20203,
        "(p[0][1]": 20204,
        "(int)Hash.size()": 20205,
        "s.erase(s.begin()": 20206,
        "(mp[s]": 20207,
        "s[99];": 20208,
        "inp.size();": 20209,
        "all.insert(inp);": 20210,
        "inp.substr(0,": 20211,
        "rest": 20212,
        "inp.substr(1);": 20213,
        "all.size()": 20214,
        "sh[51];": 20215,
        "sh[i]": 20216,
        "sh[i][(j": 20217,
        "(int(s.size()))]": 20218,
        "(sh[i]": 20219,
        "sh[j])": 20220,
        "v.push_back(s[i]);": 20221,
        "t.push_back(v[j]);": 20222,
        "se.insert(t);": 20223,
        "rotate(char": 20224,
        "S[],": 20225,
        "S[i": 20226,
        "S[len": 20227,
        "S[51];": 20228,
        "strcpy(arr[i],": 20229,
        "S);": 20230,
        "(strcmp(arr[i],": 20231,
        "str[str.size()": 20232,
        "str.erase(str.end()": 20233,
        "my.insert(t);": 20234,
        "my.size()": 20235,
        "cycle(string": 20236,
        "s.erase((len": 20237,
        "l.insert(0,": 20238,
        "l.insert(1,": 20239,
        "(l.compare(a[j])": 20240,
        "l.clear();": 20241,
        "(len--)": 20242,
        "A[m];": 20243,
        "s[a": 20244,
        "s.erase(a": 20245,
        "A[i].compare(A[j]);": 20246,
        "st.insert(tmp);": 20247,
        "(m[x]": 20248,
        "deque<char>": 20249,
        "esto;": 20250,
        "esto.push_back(a[i]);": 20251,
        "esto.back();": 20252,
        "esto.pop_back();": 20253,
        "esto.push_front(c);": 20254,
        "esto.size();": 20255,
        "b.push_back(esto[i]);": 20256,
        "0x3f3f3f3f3f3f3f3f;": 20257,
        "a[26];": 20258,
        "ss.push_back(s[j]);": 20259,
        "(mp[ss]": 20260,
        "mp[ss]": 20261,
        "a.insert(s);": 20262,
        "ss[j];": 20263,
        "t.insert(tmp);": 20264,
        "shift(string": 20265,
        "word)": 20266,
        "result.push_back(*(word.end()": 20267,
        "word.size()": 20268,
        "result.push_back(word[i]);": 20269,
        "v.push_back(word);": 20270,
        "shift(word);": 20271,
        "temp[1000];": 20272,
        "temp[0]": 20273,
        "ss[len": 20274,
        "temp[x++]": 20275,
        "k(temp);": 20276,
        "st.insert(t);": 20277,
        "ss.insert(s);": 20278,
        "second.size();": 20279,
        "(second[i": 20280,
        "myset.insert(t);": 20281,
        "cin.getline(ss,": 20282,
        "\"Dasha\",": 20283,
        "\"Masha\",": 20284,
        "\"Equal\";": 20285,
        "swap(s,": 20286,
        "(n))": 20287,
        "ans3;": 20288,
        "calc(c1,": 20289,
        "\"Dasha\"": 20290,
        "\"Masha\"": 20291,
        "\"Equal\"": 20292,
        "lcm;": 20293,
        "LCM(long": 20294,
        "lcm": 20295,
        "LCM(a,": 20296,
        "\"Equal\",": 20297,
        "(__gcd(a,": 20298,
        "\"Masha\\n\";": 20299,
        "\"Equal\\n\";": 20300,
        "\"Dasha\\n\";": 20301,
        "(lcm": 20302,
        "__gcd(A,": 20303,
        "LCM(A,": 20304,
        "dasha": 20305,
        "masha": 20306,
        "(dasha": 20307,
        "masha)": 20308,
        "dasha++;": 20309,
        "masha++;": 20310,
        "\"Dasha\";": 20311,
        "\"Masha\";": 20312,
        "A.push(i": 20313,
        "B.push(i": 20314,
        "(!A.empty()": 20315,
        "!B.empty())": 20316,
        "(A.front()": 20317,
        "B.front())": 20318,
        "A.pop(),": 20319,
        "B.pop();": 20320,
        "B.pop(),": 20321,
        "A.size()": 20322,
        "B.size()": 20323,
        "sb;": 20324,
        "nearest(const": 20325,
        "(!(cur": 20326,
        "nearest(cur,": 20327,
        "((D": 20328,
        "\"Masha\"))": 20329,
        "cnt1)": 20330,
        "v1++": 20331,
        "v2++;": 20332,
        "nod(int,": 20333,
        "nok(int,": 20334,
        "nok(a,": 20335,
        "nod(int": 20336,
        "nod(x,": 20337,
        "td": 20338,
        "cm": 20339,
        "bef": 20340,
        "cm++;": 20341,
        "bef;": 20342,
        "ta;": 20343,
        "(cm": 20344,
        "td)": 20345,
        "puts(\"Equal\");": 20346,
        "puts(\"Masha\");": 20347,
        "puts(\"Dasha\");": 20348,
        "qq[1000006][2]": 20349,
        "visit[1000006]": 20350,
        "ct1": 20351,
        "ct2": 20352,
        "(ct1": 20353,
        "ct2)": 20354,
        "gcdd(long": 20355,
        "gcdd(b,": 20356,
        "gcdd(a,": 20357,
        "lcm(a,": 20358,
        "++A;": 20359,
        "Arr;": 20360,
        "Number1,": 20361,
        "Number2)": 20362,
        "(Number2": 20363,
        "Number1;": 20364,
        "GCD(Number2,": 20365,
        "Number1": 20366,
        "Number2);": 20367,
        "(Number1": 20368,
        "GCD(Number1,": 20369,
        "FirstMulti(long": 20370,
        "LastCommon": 20371,
        "LCM(Number1,": 20372,
        "LastCommon)": 20373,
        "Arr.push_back(Number1": 20374,
        "counter);": 20375,
        "SecondMulti(long": 20376,
        "LastCommom": 20377,
        "LastCommom)": 20378,
        "Arr.push_back(Number2": 20379,
        "Number2;": 20380,
        "Arr.push_back(0);": 20381,
        "FirstMulti(Number1,": 20382,
        "SecondMulti(Number1,": 20383,
        "sort(Arr.begin(),": 20384,
        "Arr.end());": 20385,
        "MashaCount": 20386,
        "DashaCount": 20387,
        "Arr.size();": 20388,
        "(Arr[i]": 20389,
        "Arr[i]": 20390,
        "Number2": 20391,
        "DashaCount++;": 20392,
        "MashaCount++;": 20393,
        "(MashaCount": 20394,
        "DashaCount)": 20395,
        "10000": 20396,
        "{\"Dasha\",": 20397,
        "\"Masha\"};": 20398,
        "start1": 20399,
        "num++)": 20400,
        "start1)": 20401,
        "start1;": 20402,
        "bal[110];": 20403,
        "bal;": 20404,
        "strlen(bal);": 20405,
        "(bal[i]": 20406,
        "65": 20407,
        "bal[i]": 20408,
        "90)": 20409,
        "122)": 20410,
        "bal": 20411,
        "cntup": 20412,
        "cntlw": 20413,
        "(isupper(s[i]))": 20414,
        "cntup++;": 20415,
        "cntlw++;": 20416,
        "toupper(s[i]);": 20417,
        "tolower(s[i]);": 20418,
        "(cntup": 20419,
        "cntlw)": 20420,
        "5e2": 20421,
        "ra,": 20422,
        "fh;": 20423,
        "rx;": 20424,
        "fh": 20425,
        "((rx": 20426,
        "ct1,": 20427,
        "ct2;": 20428,
        "ct1++;": 20429,
        "ct2++;": 20430,
        "96)": 20431,
        "transform(s.begin(),": 20432,
        "s.begin(),": 20433,
        "::toupper);": 20434,
        "texto;": 20435,
        "caso1": 20436,
        "caso2": 20437,
        "texto.size();": 20438,
        "verif;": 20439,
        "cambio;": 20440,
        "verif": 20441,
        "texto[i];": 20442,
        "(isupper(verif))": 20443,
        "(islower(verif))": 20444,
        "(caso1": 20445,
        "caso2)": 20446,
        "cambio": 20447,
        "tolower(texto[i]);": 20448,
        "texto[i]": 20449,
        "toupper(texto[i]);": 20450,
        "texto": 20451,
        "lower)": 20452,
        "small": 20453,
        "cap": 20454,
        "word[i];": 20455,
        "small++;": 20456,
        "cap++;": 20457,
        "(small": 20458,
        "cap)": 20459,
        "word[i]": 20460,
        "(cap": 20461,
        "small)": 20462,
        "(islower(s[i]))": 20463,
        "++b;": 20464,
        "char(a[i]": 20465,
        "'A');": 20466,
        "(int(s[i])": 20467,
        "int(s[i])": 20468,
        "besar++;": 20469,
        "kecil++;": 20470,
        "(besar": 20471,
        "chI;": 20472,
        "chI": 20473,
        "(chI": 20474,
        "upper++;": 20475,
        "lower++;": 20476,
        "(lower": 20477,
        "upper)": 20478,
        "tolower(ch);": 20479,
        "toupper(ch);": 20480,
        "(isupper(name[i]))": 20481,
        "toupper(name[i]);": 20482,
        "tolower(name[i]);": 20483,
        "min++;": 20484,
        "max++;": 20485,
        "tolower(n[i]);": 20486,
        "toupper(n[i]);": 20487,
        "++upper;": 20488,
        "++lower;": 20489,
        "(isupper(ch))": 20490,
        "toupper(s1[i]);": 20491,
        "tolower(s1[i]);": 20492,
        "toupper(str[i]);": 20493,
        "tolower(str[i]);": 20494,
        "(char)tolower(s[i]);": 20495,
        "(char)toupper(s[i]);": 20496,
        "str[102];": 20497,
        "lowerCount": 20498,
        "upperCount": 20499,
        "(((int)str[j]": 20500,
        "(int)'A')": 20501,
        "((int)str[j]": 20502,
        "(int)'Z'))": 20503,
        "upperCount++;": 20504,
        "lowerCount++;": 20505,
        "(upperCount": 20506,
        "lowerCount)": 20507,
        "(int)'a')": 20508,
        "(int)'z'))": 20509,
        "(char)((int)str[j]": 20510,
        "32);": 20511,
        "mayu": 20512,
        "minu": 20513,
        "mayu++;": 20514,
        "minu++;": 20515,
        "(minu": 20516,
        "mayu)": 20517,
        "lc": 20518,
        "uc": 20519,
        "(word[i]": 20520,
        "uc++;": 20521,
        "lc++;": 20522,
        "(uc": 20523,
        "lc)": 20524,
        "transform(word.begin(),": 20525,
        "word.end(),": 20526,
        "word.begin(),": 20527,
        "s.at(i)": 20528,
        "char(toupper(s[i]));": 20529,
        "char(tolower(s[i]));": 20530,
        "(isupper(str[i]))": 20531,
        "upper(0),": 20532,
        "lower(0);": 20533,
        "toUpp(string": 20534,
        "(char)n;": 20535,
        "toLow(string": 20536,
        "toLow(s)": 20537,
        "toUpp(s)": 20538,
        "'A';": 20539,
        "a[27];": 20540,
        "tolower(x[i]);": 20541,
        "toupper(x[i]);": 20542,
        "Ma": 20543,
        "mi++;": 20544,
        "Ma++;": 20545,
        "(Ma": 20546,
        "char(s[i]": 20547,
        "to_lower(string": 20548,
        "&str);": 20549,
        "to_upper(string": 20550,
        "input.size();": 20551,
        "upper;": 20552,
        "to_upper(input);": 20553,
        "to_lower(input);": 20554,
        "input": 20555,
        "cc;": 20556,
        "min(bb,": 20557,
        "cc);": 20558,
        "ch[0])": 20559,
        "ch[1])": 20560,
        "min(n1,": 20561,
        "n2);": 20562,
        "another;": 20563,
        "another[0])": 20564,
        "another[1])": 20565,
        "mp[a]": 20566,
        "mp[b]": 20567,
        "mp[s[i]];": 20568,
        "(!islower(mp[a]))": 20569,
        "fb[2];": 20570,
        "fb[0]": 20571,
        "fb[1])": 20572,
        "fb[0])": 20573,
        "min(num1,": 20574,
        "a[0]),": 20575,
        "mpu[p[0]]": 20576,
        "mpu[p[1]]": 20577,
        "(mpu.find(s[i])": 20578,
        "mpu.end()": 20579,
        "mpu[s[i]]": 20580,
        "min(ct1,": 20581,
        "ct2);": 20582,
        "Min(int": 20583,
        "Min(x,": 20584,
        "enemy;": 20585,
        "enemy1,": 20586,
        "enemy2;": 20587,
        "enemy1": 20588,
        "enemy[enemy1]": 20589,
        "enemy[enemy2]": 20590,
        "enemy1;": 20591,
        "warOpen": 20592,
        "particpant1,": 20593,
        "particpant2;": 20594,
        "army1": 20595,
        "army2": 20596,
        "enemy[s[i]]": 20597,
        "(warOpen)": 20598,
        "particpant1)": 20599,
        "army1++;": 20600,
        "army2++;": 20601,
        "particpant1": 20602,
        "particpant2": 20603,
        "enemy[s[i]];": 20604,
        "min(army1,": 20605,
        "army2);": 20606,
        "f[a[0]]": 20607,
        "f[a[1]]": 20608,
        "(f.count(s[i": 20609,
        "f[s[i": 20610,
        "1]])": 20611,
        "(!count)": 20612,
        "min(count,": 20613,
        "count2);": 20614,
        "dp[N][27];": 20615,
        "g[27][27];": 20616,
        "dp[ind][x];": 20617,
        "solve(ind": 20618,
        "s[ind]": 20619,
        "(!g[x][s[ind]": 20620,
        "'a'])": 20621,
        "g[x[0]": 20622,
        "'a'][x[1]": 20623,
        "g[x[1]": 20624,
        "'a'][x[0]": 20625,
        "forb;": 20626,
        "forb[p[0]]": 20627,
        "forb[p[1]]": 20628,
        "counta,": 20629,
        "countb;": 20630,
        "(forb[s[i]])": 20631,
        "forb[s[i]];": 20632,
        "counta": 20633,
        "countb": 20634,
        "((s[j]": 20635,
        "countb++;": 20636,
        "counta++;": 20637,
        "min(counta,": 20638,
        "countb);": 20639,
        "INF32": 20640,
        "INF64": 20641,
        "s[MAX],": 20642,
        "dp[MAX][30];": 20643,
        "Try(int": 20644,
        "&r": 20645,
        "dp[i][pre];": 20646,
        "Try(i": 20647,
        "f[cc])": 20648,
        "f[t[0]]": 20649,
        "f[t[1]]": 20650,
        "Try(0,": 20651,
        "start_run(string": 20652,
        "&j,": 20653,
        "&p)": 20654,
        "p[0])": 20655,
        "p[1])": 20656,
        "sec)": 20657,
        "(start_run(s,": 20658,
        "p))": 20659,
        "1e-11;": 20660,
        "min(sum1,": 20661,
        "sum2);": 20662,
        "f[30];": 20663,
        "slen": 20664,
        "slen)": 20665,
        "f[i][0]": 20666,
        "f[i][1])": 20667,
        "(s[id]": 20668,
        "f[i][1]))": 20669,
        "f[i][0])": 20670,
        "str[100010],": 20671,
        "tmp[5];": 20672,
        "a[27][27];": 20673,
        "b[14];": 20674,
        "cur[0]": 20675,
        "cur[1])": 20676,
        "cur[0])": 20677,
        "a[kk": 20678,
        "(ss[x]": 20679,
        "ss[x]": 20680,
        "a[i][1])": 20681,
        "dp[26][26];": 20682,
        "p[5];": 20683,
        "dp[p[0]": 20684,
        "'a'][p[1]": 20685,
        "dp[p[1]": 20686,
        "'a'][p[0]": 20687,
        "(!dp[i][j])": 20688,
        "g[2];": 20689,
        "g[0]": 20690,
        "g[1]": 20691,
        "g[0]++;": 20692,
        "c[1])": 20693,
        "g[1]++;": 20694,
        "min(g[0],": 20695,
        "g[1]);": 20696,
        "a[2002];": 20697,
        "max(0LL,": 20698,
        "bs()": 20699,
        "lo;": 20700,
        "bs();": 20701,
        "lim,": 20702,
        "v.end()),": 20703,
        "(can(mid,": 20704,
        "107;": 20705,
        "arr[N];": 20706,
        "(left)": 20707,
        "parametric_search(int": 20708,
        "parametric_search(left,": 20709,
        "parametric_search(mid": 20710,
        "parametric_search(0,": 20711,
        "dis(double": 20712,
        "sqrt(ans);": 20713,
        "random(double": 20714,
        "(en": 20715,
        "rand()": 20716,
        "(RAND_MAX": 20717,
        "&n)": 20718,
        "F(double": 20719,
        "pow(x,": 20720,
        "FF(double": 20721,
        "42": 20722,
        "21": 20723,
        "MIN,": 20724,
        "a[120],": 20725,
        "kmin,": 20726,
        "kmax,": 20727,
        "kmin": 20728,
        "kmax": 20729,
        "maxn);": 20730,
        "ceil((cnt": 20731,
        "int(ans))": 20732,
        "vs;": 20733,
        "vs.push_back(a[i]);": 20734,
        "sort(vs.begin(),": 20735,
        "vs.end());": 20736,
        "vs[0]++;": 20737,
        "vs[vs.size()": 20738,
        "v[0]++;": 20739,
        "spf[1000001];": 20740,
        "maxk,": 20741,
        "mink": 20742,
        "maxk": 20743,
        "kmax)": 20744,
        "a[man])": 20745,
        "a[man]": 20746,
        "vec(n,": 20747,
        "vec[i]);": 20748,
        "int)ceil((long": 20749,
        "double)sum": 20750,
        "arr(n,": 20751,
        "*max_element(arr.begin(),": 20752,
        "arr.end()));": 20753,
        "arr.end())": 20754,
        "ay[110];": 20755,
        "ay[i];": 20756,
        "(ay[i]": 20757,
        "ceil(((float)z": 20758,
        "mini(int": 20759,
        "*t,": 20760,
        "argmini(int": 20761,
        "(t[m]": 20762,
        "maxi(int": 20763,
        "minim,": 20764,
        "maxim;": 20765,
        "t[105];": 20766,
        "maxim": 20767,
        "maxi(t,": 20768,
        "t[argmini(t,": 20769,
        "n)]++;": 20770,
        "kx[]": 20771,
        "-2};": 20772,
        "ky[]": 20773,
        "max(p,": 20774,
        "ceil((double)(sum": 20775,
        "(double)n);": 20776,
        "max(ans1,": 20777,
        "p.push(aux": 20778,
        "(-1));": 20779,
        "q.push(aux": 20780,
        "p.top()": 20781,
        "p.push(aux);": 20782,
        "v.push_back(p.top()": 20783,
        "*max_element(a,": 20784,
        "a[pos])": 20785,
        "assert(pos": 20786,
        "a[pos]++;": 20787,
        "abs(a[n": 20788,
        "add()": 20789,
        "a[id])": 20790,
        "a[id]++;": 20791,
        "mv": 20792,
        "max(mv,": 20793,
        "add();": 20794,
        "A[i],": 20795,
        "max(A[n": 20796,
        "grid[50][50];": 20797,
        "grid[i][j];": 20798,
        "grid[r][j]": 20799,
        "grid[i][c];": 20800,
        "grid[i][j])": 20801,
        "(!pass)": 20802,
        "a[55][55],": 20803,
        "s[i].insert(a[i][j]);": 20804,
        "(s[i].find(a[i][j]": 20805,
        "a[k][j])": 20806,
        "s[i].end())": 20807,
        "(!cur)": 20808,
        "a[maxn][maxn];": 20809,
        "a[z][j]": 20810,
        "mnt": 20811,
        "mnt++;": 20812,
        "arr[l][j];": 20813,
        "arr[i][j])": 20814,
        "mnt)": 20815,
        "x[55][55],": 20816,
        "y[55][55];": 20817,
        "sort(x[i],": 20818,
        "y[i][j]": 20819,
        "sort(y[i],": 20820,
        "(x[i][u]": 20821,
        "y[j][v]": 20822,
        "v--;": 20823,
        "x[i][u]": 20824,
        "matr[55][55];": 20825,
        "matr[i][j];": 20826,
        "kon": 20827,
        "tren": 20828,
        "(matr[i][j]": 20829,
        "(matr[a][j]": 20830,
        "matr[i][b]": 20831,
        "matr[i][j])": 20832,
        "(!tren)": 20833,
        "(kon)": 20834,
        "a[n][n],": 20835,
        "a[x][j])": 20836,
        "(!(k": 20837,
        "a[i][l]": 20838,
        "arr[i][k];": 20839,
        "z--)": 20840,
        "(arr[z][j]": 20841,
        "lab[maxn][maxn];": 20842,
        "lab[i][j];": 20843,
        "(lab[i][j]": 20844,
        "++c)": 20845,
        "lab[r][j]": 20846,
        "lab[i][c])": 20847,
        "(!mark)": 20848,
        "a[l][j])": 20849,
        "dat[LIM][LIM];": 20850,
        "dat[i][j];": 20851,
        "(dat[i][j]": 20852,
        "dat[i][k]": 20853,
        "dat[w][j])": 20854,
        "FLAG": 20855,
        "(arr[i][s]": 20856,
        "arr[t][j]": 20857,
        "(!FLAG)": 20858,
        "ar[n][n];": 20859,
        "(ar[i][p]": 20860,
        "ar[q][j]": 20861,
        "arr[i][l]": 20862,
        "num[55][55];": 20863,
        "num[x][y];": 20864,
        "num[i][y];": 20865,
        "num[x][j]": 20866,
        "!judge(i,": 20867,
        "a[l][j]": 20868,
        "m[55][55];": 20869,
        "m[i][s]": 20870,
        "m[t][j])": 20871,
        "g[n][n];": 20872,
        "g[i][j];": 20873,
        "(g[i][j]": 20874,
        "(g[i][r]": 20875,
        "g[c][j]": 20876,
        "G[MAXN][MAXN];": 20877,
        "G[i][j];": 20878,
        "(G[i][j]": 20879,
        "(kk": 20880,
        "(G[i][k]": 20881,
        "G[kk][j]": 20882,
        "(flag2)": 20883,
        "arr[52][52];": 20884,
        "(arr[x][i]": 20885,
        "arr[j][y]": 20886,
        "val))": 20887,
        "a[i][l];": 20888,
        "grid[MAX_N][MAX_N];": 20889,
        "(grid[x][y]": 20890,
        "grid[x][s]": 20891,
        "grid[t][y])": 20892,
        "grid[r][c];": 20893,
        "check(r,": 20894,
        "puts(ok": 20895,
        "\"No\");": 20896,
        "arr[maxn];": 20897,
        "gcd(t,": 20898,
        "arr[j]);": 20899,
        "min(len,": 20900,
        "(__gcd(g,": 20901,
        "key++;": 20902,
        "(key": 20903,
        "gcd(a[j],": 20904,
        "mint": 20905,
        "999999;": 20906,
        "mint;": 20907,
        "(mint": 20908,
        "999999)": 20909,
        "upd,": 20910,
        "(!isdigit(c))": 20911,
        "(isdigit(c))": 20912,
        "cntone": 20913,
        "read(now);": 20914,
        "++cntone;": 20915,
        "upd.clear();": 20916,
        "upd[now]": 20917,
        "(map<long": 20918,
        "tmp.begin();": 20919,
        "tmp.end();": 20920,
        "gcd(it->first,": 20921,
        "upd[k]": 20922,
        "max(upd[k],": 20923,
        "tmp.clear();": 20924,
        "upd.begin();": 20925,
        "upd.end();": 20926,
        "tmp[it->first]": 20927,
        "(cntone)": 20928,
        "vector<long>": 20929,
        "one++;": 20930,
        "v[l];": 20931,
        "v[r]);": 20932,
        "seica_gcd(long": 20933,
        "seica_gcd(b,": 20934,
        "isOne": 20935,
        "long(i)": 20936,
        "isOne++;": 20937,
        "(isOne)": 20938,
        "seica_gcd(now,": 20939,
        "9999999)": 20940,
        "findstep(int": 20941,
        "findstep(b,": 20942,
        "book": 20943,
        "a[2005],": 20944,
        "b[2005];": 20945,
        "book++;": 20946,
        "(book)": 20947,
        "findstep(a,": 20948,
        "2010;": 20949,
        "cnt_1": 20950,
        "cnt_1++;": 20951,
        "(cnt_1)": 20952,
        "num[j]);": 20953,
        "dp[2001];": 20954,
        "minm": 20955,
        "2005,": 20956,
        "gcd(arr[i],": 20957,
        "(cnt)": 20958,
        "min(minm,": 20959,
        "nums(n);": 20960,
        "nums[i];": 20961,
        "nums[j]);": 20962,
        "min(dist,": 20963,
        "(dist": 20964,
        "a[2005]": 20965,
        "a[j]))": 20966,
        "arr[N],": 20967,
        "ones++;": 20968,
        "(ones)": 20969,
        "Mod;": 20970,
        "gcd(val,": 20971,
        "a[MAX];": 20972,
        "pair1(long": 20973,
        "ar[],": 20974,
        "__gcd(ar[i": 20975,
        "ar[i]);": 20976,
        "solve(ar,": 20977,
        "pair1(ar,": 20978,
        "2001;": 20979,
        "A[maxn];": 20980,
        "A[j]);": 20981,
        "p[n],": 20982,
        "p[i]);": 20983,
        "(count)": 20984,
        "minmum": 20985,
        "__gcd(p[j],": 20986,
        "p[i]));": 20987,
        "min(minmum,": 20988,
        "fastMax(int": 20989,
        "(((y": 20990,
        "(32": 20991,
        "fastMin(int": 20992,
        "a[r]);": 20993,
        "min(seg,": 20994,
        "clog": 20995,
        "(seg": 20996,
        "arr[100": 20997,
        "4];": 20998,
        "hora(int": 20999,
        "tc)": 21000,
        "ms[{u,": 21001,
        "(ms[{i,": 21002,
        "j}]": 21003,
        "ms[{j,": 21004,
        "k}]": 21005,
        "ms[{i,": 21006,
        "min(cost,": 21007,
        "arr[k]);": 21008,
        "(cost": 21009,
        "ntc": 21010,
        "ntc;": 21011,
        "hora(tc);": 21012,
        "ma[110][110];": 21013,
        "ma[u][v]": 21014,
        "ma[v][u]": 21015,
        "(ma[i][j]": 21016,
        "ma[j][k]": 21017,
        "ma[i][k])": 21018,
        "a[k]);": 21019,
        "a[110][110]": 21020,
        "ax[110]": 21021,
        "ax[i];": 21022,
        "a[a1][a2]": 21023,
        "a[a2][a1]": 21024,
        "a[j][k]": 21025,
        "a[k][i]": 21026,
        "ax[i]": 21027,
        "ax[k];": 21028,
        "(minx": 21029,
        "clo[105][105]": 21030,
        "clo[y][x]": 21031,
        "clo[x][y]": 21032,
        "num_p": 21033,
        "(clo[i][k]": 21034,
        "clo[i][j]": 21035,
        "clo[j][k]": 21036,
        "(num_p": 21037,
        "price)": 21038,
        "num_p;": 21039,
        "v[101],": 21040,
        "rel[101][101],": 21041,
        "find_ans(int": 21042,
        "cur_ans)": 21043,
        "(rel[l][r]": 21044,
        "(cur_ans": 21045,
        "cur_ans;": 21046,
        "a[r].size();": 21047,
        "find_ans(l,": 21048,
        "a[r][i],": 21049,
        "cur_ans": 21050,
        "v[a[r][i]]);": 21051,
        "(rel[x][y]": 21052,
        "rel[x][y]": 21053,
        "rel[y][x]": 21054,
        "a[min(x,": 21055,
        "y)].push_back(max(x,": 21056,
        "find_ans(i,": 21057,
        "price[1100];": 21058,
        "G[110][110]": 21059,
        "G[l][r]": 21060,
        "G[r][l]": 21061,
        "G[i][k]": 21062,
        "G[k][j]": 21063,
        "price[i]": 21064,
        "price[j]": 21065,
        "price[k])": 21066,
        "price[k];": 21067,
        "99999999)": 21068,
        "ck[105][105];": 21069,
        "ck[u][v]": 21070,
        "ck[v][u]": 21071,
        "(ck[i][j]": 21072,
        "ck[j][k]": 21073,
        "ck[k][i])": 21074,
        "b[101][101];": 21075,
        "b[y][x]": 21076,
        "b[j][k]": 21077,
        "b[i][k]": 21078,
        "mp[110][110];": 21079,
        "cost[110];": 21080,
        "mp[a][b]": 21081,
        "mp[b][a]": 21082,
        "mp[j][k]": 21083,
        "mp[i][k])": 21084,
        "cost[i]": 21085,
        "cost[j]": 21086,
        "cost[k]);": 21087,
        "q[maxn];": 21088,
        "a[u][v]": 21089,
        "a[v][u]": 21090,
        "q[k]);": 21091,
        "100000000)": 21092,
        "prices[n": 21093,
        "matches[n": 21094,
        "matches[a][b]": 21095,
        "matches[b][a]": 21096,
        "(!matches[i][j])": 21097,
        "(matches[i][j]": 21098,
        "matches[i][k]": 21099,
        "matches[j][k])": 21100,
        "prices[i]": 21101,
        "prices[j]": 21102,
        "prices[k]);": 21103,
        "INF)": 21104,
        "3000001;": 21105,
        "3000001)": 21106,
        "price[105];": 21107,
        "match[105][105];": 21108,
        "match[u][v]": 21109,
        "match[v][u]": 21110,
        "(match[i][j]": 21111,
        "(match[j][k]": 21112,
        "match[k][i]": 21113,
        "a[1024][1024],": 21114,
        "b[1024],": 21115,
        "a[u": 21116,
        "a[v": 21117,
        "1][u": 21118,
        "!a[i][j]": 21119,
        "!a[j][k]": 21120,
        "!a[k][i])": 21121,
        "b[k]);": 21122,
        "price[110],": 21123,
        "cprice[101][101]": 21124,
        "nowp,": 21125,
        "minp": 21126,
        "cprice[t1][t2]": 21127,
        "price[t1]": 21128,
        "price[t2];": 21129,
        "cprice[t2][t1]": 21130,
        "(cprice[i][j]": 21131,
        "cprice[j][k]": 21132,
        "cprice[i][k]": 21133,
        "nowp": 21134,
        "cprice[i][k])": 21135,
        "(minp": 21136,
        "minp)": 21137,
        "nowp;": 21138,
        "edge[105][105];": 21139,
        "memset(edge,": 21140,
        "edge[u][0]++;": 21141,
        "edge[u][edge[u][0]]": 21142,
        "edge[v][0]++;": 21143,
        "edge[v][edge[v][0]]": 21144,
        "edge[a][0];": 21145,
        "edge[a][j];": 21146,
        "edge[b][0];": 21147,
        "edge[b][k];": 21148,
        "edge[c][0];": 21149,
        "(edge[c][p]": 21150,
        "num[a]": 21151,
        "num[b]": 21152,
        "num[c]);": 21153,
        "b[u][v]": 21154,
        "b[v][u]": 21155,
        "b[j][k])": 21156,
        "10000000)": 21157,
        "match[f][t]": 21158,
        "match[t][f]": 21159,
        "match[j][q]": 21160,
        "(match[q][i])": 21161,
        "c[q]);": 21162,
        "5000000;": 21163,
        "(x[j][k]": 21164,
        "x[i][k]": 21165,
        "dp[k];": 21166,
        "5000000)": 21167,
        "mapp[200][200];": 21168,
        "mapp[x][y]": 21169,
        "mapp[y][x]": 21170,
        "(mapp[j][i]": 21171,
        "mapp[i][k]": 21172,
        "mapp[j][k])": 21173,
        "ma[n": 21174,
        "memset(ma,": 21175,
        "sizeof(ma));": 21176,
        "uu,": 21177,
        "uu": 21178,
        "ma[uu][vv]": 21179,
        "ma[vv][uu]": 21180,
        "ma[i][j]": 21181,
        "ma[i][t]": 21182,
        "ma[j][t])": 21183,
        "a[t]);": 21184,
        "edge[M][M];": 21185,
        "edge[x][y]": 21186,
        "edge[y][x]": 21187,
        "1E+9;": 21188,
        "edge[j][k]": 21189,
        "edge[k][i]": 21190,
        "1E+9)": 21191,
        "judge[1005][1005];": 21192,
        "memset(judge,": 21193,
        "sizeof(judge));": 21194,
        "judge[y][x]": 21195,
        "judge[x][y]": 21196,
        "(judge[i][j]": 21197,
        "judge[i][k]": 21198,
        "judge[j][k])": 21199,
        "dp[100][3];": 21200,
        "v.push_back(day);": 21201,
        "dp[0][0]": 21202,
        "dp[0][2]": 21203,
        "dp[0][1]": 21204,
        "1][0],": 21205,
        "1][1],": 21206,
        "1][2]))": 21207,
        "1][2]);": 21208,
        "min(dp[n": 21209,
        "dp[a][3]": 21210,
        "max(dp[i": 21211,
        "1][2],": 21212,
        "1][0]));": 21213,
        "max(dp[a": 21214,
        "dp[a": 21215,
        "tep": 21216,
        "(tep": 21217,
        "dp[101][101];": 21218,
        "min(min(dp[i": 21219,
        "1][1]),": 21220,
        "1][2])": 21221,
        "min(min(dp[t][1],": 21222,
        "dp[t][2]),": 21223,
        "dp[t][0])": 21224,
        "100000000000000;": 21225,
        "M1": 21226,
        "dp[105][3];": 21227,
        "min(dp[0][0],": 21228,
        "min(dp[0][1],": 21229,
        "dp[0][2]));": 21230,
        "1][2]));": 21231,
        "dp[101][4],": 21232,
        "a(101);": 21233,
        "1][3]);": 21234,
        "1][3],": 21235,
        "max(dp[n][1],": 21236,
        "dp[n][2]);": 21237,
        "dp[n][3]);": 21238,
        "dp[105][5];": 21239,
        "(dp[i][x]": 21240,
        "blocked": 21241,
        "blocked)": 21242,
        "dp[i][x]": 21243,
        "dp[i][x];": 21244,
        "V.push_back(a);": 21245,
        "min(min(f(0,": 21246,
        "f(0,": 21247,
        "1)),": 21248,
        "previousGym": 21249,
        "previousContest": 21250,
        "goRest()": 21251,
        "rest++;": 21252,
        "goGym()": 21253,
        "goContest()": 21254,
        "goEither()": 21255,
        "goRest();": 21256,
        "(previousContest": 21257,
        "goContest();": 21258,
        "(previousGym": 21259,
        "goGym();": 21260,
        "goEither();": 21261,
        "dp[101][3];": 21262,
        "100002;": 21263,
        "min(dp[n][0],": 21264,
        "dp[n][2]));": 21265,
        "(!a": 21266,
        "act)": 21267,
        "(dp[i][act]": 21268,
        "dp[i][act];": 21269,
        "frest;": 21270,
        "frest": 21271,
        "min(frest,": 21272,
        "rest);": 21273,
        "grest": 21274,
        "(act": 21275,
        "min(rest,": 21276,
        "frest);": 21277,
        "grest);": 21278,
        "frest,": 21279,
        "grest;": 21280,
        "grest,": 21281,
        "crest;": 21282,
        "crest": 21283,
        "crest);": 21284,
        "dp[i][act]": 21285,
        "rest;": 21286,
        "(rest": 21287,
        "myFile(\"task.in\");": 21288,
        "(!myFile.fail())": 21289,
        "assert(freopen(\"task.in\",": 21290,
        "stdin));": 21291,
        "max(max(dp[i": 21292,
        "max(max(dp[n][0],": 21293,
        "dp[n][1]),": 21294,
        "dp[n][2])": 21295,
        "dp[102][5];": 21296,
        "(dp[index][prev]": 21297,
        "dp[index][prev];": 21298,
        "&ans": 21299,
        "(a[index]": 21300,
        "go(index": 21301,
        "a[index]": 21302,
        "a[index]);": 21303,
        "min(go(index": 21304,
        "min(1": 21305,
        "go(0,": 21306,
        "day[n];": 21307,
        "day[i];": 21308,
        "dp[n][3];": 21309,
        "(day[i]": 21310,
        "1][i])": 21311,
        "1][i];": 21312,
        "t[1000];": 21313,
        "(t[i": 21314,
        "sizeof(dp[0][0])": 21315,
        "max(dp[n": 21316,
        "l_r(long": 21317,
        "d1,": 21318,
        "d2;": 21319,
        "d1.push_back(v[0]);": 21320,
        "d1.push_back(d1[i": 21321,
        "d2.push_back(v[n": 21322,
        "d2.push_back(d2[c]": 21323,
        "d2[n": 21324,
        "d1[l": 21325,
        "problem(long": 21326,
        "problem(a,": 21327,
        "array[100005],": 21328,
        "array[i];": 21329,
        "(array[i]": 21330,
        "array[i]": 21331,
        "K++;": 21332,
        "sort(r,": 21333,
        "map[100005],": 21334,
        "map[i];": 21335,
        "(map[i]": 21336,
        "map[i]": 21337,
        "deque<long": 21338,
        "arr[1000001];": 21339,
        "++tot;": 21340,
        "(an": 21341,
        "mon,": 21342,
        "mon;": 21343,
        "(mon": 21344,
        "mon": 21345,
        "ttem": 21346,
        "ttem;": 21347,
        "(ttem": 21348,
        "collect": 21349,
        "notes[100000];": 21350,
        "notes[i];": 21351,
        "(notes[i]": 21352,
        "notes[i]": 21353,
        "collect++;": 21354,
        "X.push_back(z);": 21355,
        "(X[i]": 21356,
        "X[i]": 21357,
        "++a;": 21358,
        "cost)": 21359,
        "max(min(a,": 21360,
        "(data": 21361,
        "min(c1,": 21362,
        "max(sum1,": 21363,
        "L++;": 21364,
        "R);": 21365,
        "t[n];": 21366,
        "un": 21367,
        "de": 21368,
        "un++;": 21369,
        "de++;": 21370,
        "(un": 21371,
        "de)": 21372,
        "un;": 21373,
        "++o;": 21374,
        "mot": 21375,
        "mot)": 21376,
        "two++;": 21377,
        "(ones": 21378,
        "min(one,": 21379,
        "a[200001]": 21380,
        "br[3];": 21381,
        "br[k]++;": 21382,
        "(br[1]": 21383,
        "br[2])": 21384,
        "br[2];": 21385,
        "br[1]": 21386,
        "min(br[1],": 21387,
        "br[2]);": 21388,
        "200000)": 21389,
        "lin;": 21390,
        "lin": 21391,
        "li++;": 21392,
        "lin++;": 21393,
        "lin)": 21394,
        "ada[3];": 21395,
        "min(ada[2],": 21396,
        "ada[1]);": 21397,
        "ada[1]": 21398,
        "floor((s": 21399,
        "v.push_back(r);": 21400,
        "++satu;": 21401,
        "++dua;": 21402,
        "min(satu,": 21403,
        "dua);": 21404,
        "a[200001],": 21405,
        "b[200001],": 21406,
        "c[200001];": 21407,
        "b_number": 21408,
        "c_number": 21409,
        "b[b_number]": 21410,
        "b_number++;": 21411,
        "b[c_number]": 21412,
        "c_number++;": 21413,
        "c_number;": 21414,
        "len_b": 21415,
        "(b_number": 21416,
        "c_number)": 21417,
        "a[s]++;": 21418,
        "(mp[1]": 21419,
        "mp[2]": 21420,
        "mp[2])": 21421,
        "mp[2];": 21422,
        "mp[1]": 21423,
        "mp[1];": 21424,
        "tmpa,": 21425,
        "tmpb,": 21426,
        "tmpa++;": 21427,
        "tmpb++;": 21428,
        "min(tmpa,": 21429,
        "tmpb);": 21430,
        "(tmpa": 21431,
        "tmpb)": 21432,
        "upper_bound(a,": 21433,
        "lower_bound(a,": 21434,
        "(nt": 21435,
        "no)": 21436,
        "(no": 21437,
        "s1(0),": 21438,
        "s2(0);": 21439,
        "trone": 21440,
        "x.push_back(tmp);": 21441,
        "a[200001];": 21442,
        "mp[r]": 21443,
        "cr++;": 21444,
        "diff++;": 21445,
        "f[405],": 21446,
        "fill;": 21447,
        "diff,": 21448,
        "int(c[0]": 21449,
        "int(x": 21450,
        "c[m": 21451,
        "day[400];": 21452,
        "day[i": 21453,
        "(day[0]": 21454,
        "day[c": 21455,
        "((c[i]": 21456,
        "((c[m": 21457,
        "c[m])": 21458,
        "dd[400];": 21459,
        "dd[i];": 21460,
        "(dd[0]": 21461,
        "dd[c": 21462,
        "(dd[i]": 21463,
        "dd[i": 21464,
        "a[370];": 21465,
        "f[400];": 21466,
        "(!(f[i": 21467,
        "f[i]))": 21468,
        "f[j]++;": 21469,
        "a[1010];": 21470,
        "(int)c;": 21471,
        "b[a[i]]": 21472,
        "(int)1;": 21473,
        "(int)n": 21474,
        "atan(1);": 21475,
        "num[400];": 21476,
        "num[tt]": 21477,
        "(num[i])": 21478,
        "kk--;": 21479,
        "holidays[c];": 21480,
        "tpresents": 21481,
        "holidays[i];": 21482,
        "holidays[0]": 21483,
        "(holidays[0]": 21484,
        "tpresents++;": 21485,
        "(holidays[i]": 21486,
        "holidays[i": 21487,
        "((holidays[i]": 21488,
        "a(k);": 21489,
        "solve(1,": 21490,
        "a[0]);": 21491,
        "solve(a[i]": 21492,
        "solve(a.back()": 21493,
        "kMaxN": 21494,
        "a[kMaxN];": 21495,
        "pending": 21496,
        "gifts": 21497,
        "a[pt])": 21498,
        "++gifts;": 21499,
        "++pt;": 21500,
        "(pending": 21501,
        "pending--;": 21502,
        "inf2": 21503,
        "is[545];": 21504,
        "memset(is,": 21505,
        "sizeof(is));": 21506,
        "is[x]": 21507,
        "(is[i])": 21508,
        "pr++;": 21509,
        "b[1000]": 21510,
        "(((i)": 21511,
        "a[w])": 21512,
        "a[w];": 21513,
        "arr[500];": 21514,
        "arr[c])": 21515,
        "a[t++];": 21516,
        "ihash[M];": 21517,
        "ihash[0]": 21518,
        "ihash[x]": 21519,
        "ians": 21520,
        "(ihash[i]": 21521,
        "ians++;": 21522,
        "(ians": 21523,
        "ians;": 21524,
        "ihash[i];": 21525,
        "previous,": 21526,
        "previous)": 21527,
        "b[500];": 21528,
        "b[--j]": 21529,
        "a[10001],": 21530,
        "w[10001];": 21531,
        "w[x]": 21532,
        "(w[i]": 21533,
        "a[405];": 21534,
        "f[405];": 21535,
        "f[a[i]]++;": 21536,
        "hari[1000];": 21537,
        "days,": 21538,
        "range,": 21539,
        "range": 21540,
        "hari[input]": 21541,
        "present": 21542,
        "(hari[a]": 21543,
        "present++;": 21544,
        "range)": 21545,
        "v[4000];": 21546,
        "++day)": 21547,
        "(v[day])": 21548,
        "v1(c": 21549,
        "needPrezent;": 21550,
        "v1[i": 21551,
        "needPrezent": 21552,
        "(needPrezent": 21553,
        "(v1[c]": 21554,
        "v1[c])": 21555,
        "v1.size()": 21556,
        "a[365];": 21557,
        "gift": 21558,
        "a[f]": 21559,
        "gift++;": 21560,
        "('0'": 21561,
        "ch2,": 21562,
        "gets(s": 21563,
        "ch1)": 21564,
        "a[1000]": 21565,
        "from,": 21566,
        "from)": 21567,
        "c1[0])": 21568,
        "c2[0];": 21569,
        "k[105];": 21570,
        "i2;": 21571,
        "MOD1": 21572,
        "MOD2": 21573,
        "str.substr(1)": 21574,
        "l[m],": 21575,
        "r[m];": 21576,
        "c1[m],": 21577,
        "c2[m];": 21578,
        "c1[i]": 21579,
        "c2[i];": 21580,
        "c1[i])": 21581,
        "3.14159265358979323846264338f;": 21582,
        "op1,": 21583,
        "change_in,": 21584,
        "to_change;": 21585,
        "(times--)": 21586,
        "to_change": 21587,
        "change_in;": 21588,
        "to_change)": 21589,
        "fro,": 21590,
        "bac;": 21591,
        "fro": 21592,
        "fro)": 21593,
        "int(l);": 21594,
        "int(r);": 21595,
        "op(int": 21596,
        "op(l,": 21597,
        "L--;": 21598,
        "{\"Sheldon\",": 21599,
        "\"Leonard\",": 21600,
        "\"Penny\",": 21601,
        "\"Rajesh\",": 21602,
        "\"Howard\"};": 21603,
        "name[]": 21604,
        "name[(n": 21605,
        "r]": 21606,
        "Names[]": 21607,
        "900000000)": 21608,
        "\"Penny\"": 21609,
        "stop": 21610,
        "10000000000)": 21611,
        "stop)": 21612,
        "(!f": 21613,
        "Names[ans": 21614,
        "cnt))": 21615,
        "\"Sheldon\";": 21616,
        "\"Leonard\";": 21617,
        "\"Penny\";": 21618,
        "\"Rajesh\";": 21619,
        "\"Howard\";": 21620,
        "a[num]": 21621,
        "\"Sheldon\"": 21622,
        "\"Leonard\"": 21623,
        "\"Rajesh\"": 21624,
        "\"Howard\"": 21625,
        "*nam[]": 21626,
        "nam[n": 21627,
        "a[m]": 21628,
        "pow(2.0,": 21629,
        "name[5]": 21630,
        "name[flag]": 21631,
        "(pow(2,": 21632,
        "g))": 21633,
        "names[]": 21634,
        "names[(n": 21635,
        "log2((n": 21636,
        "qpow(a))": 21637,
        "qpow(a);": 21638,
        "name[x]": 21639,
        "strs[]": 21640,
        "{\"Sheldon\\n\",": 21641,
        "\"Leonard\\n\",": 21642,
        "\"Penny\\n\",": 21643,
        "\"Rajesh\\n\",": 21644,
        "\"Howard\\n\"};": 21645,
        "strs[a": 21646,
        "b[5][10]": 21647,
        "(int)pow(2,": 21648,
        "ww": 21649,
        "(int)(pow(2,": 21650,
        "ww;": 21651,
        "(float)w": 21652,
        "dp[32];": 21653,
        "dp[i])": 21654,
        "str[cnt": 21655,
        "inpp;": 21656,
        "inpp)": 21657,
        "inpp": 21658,
        "names[(inpp": 21659,
        "name[id]": 21660,
        "tmp[40],": 21661,
        "tmp[i": 21662,
        "tmp[i];": 21663,
        "(long)pow(2,": 21664,
        "s[]": 21665,
        "nama;": 21666,
        "nama[1]": 21667,
        "nama[2]": 21668,
        "nama[3]": 21669,
        "nama[4]": 21670,
        "nama[5]": 21671,
        "nama[n]": 21672,
        "nama[(n": 21673,
        "ceil((r": 21674,
        "Result()": 21675,
        "Result();": 21676,
        "MXN": 21677,
        "1.5": 21678,
        "MNN": 21679,
        "l[501],": 21680,
        "r[501],": 21681,
        "d[501];": 21682,
        "xx)": 21683,
        "ind)": 21684,
        "(((int)(r": 21685,
        "cout.precision(0);": 21686,
        "cout.setf(ios_base::fixed);": 21687,
        "(double)(int(b": 21688,
        "c[b];": 21689,
        "(float)c[j]": 21690,
        "(float)c[j": 21691,
        "(c[j": 21692,
        "(int)(r": 21693,
        "(!m)": 21694,
        "arr[int(1e6)];": 21695,
        "7),": 21696,
        "(int)1e3": 21697,
        "1000000007LL,": 21698,
        "GT(int": 21699,
        "GT(x": 21700,
        "tohop(long": 21701,
        "n--)": 21702,
        "BSearch(long": 21703,
        "a[mid])": 21704,
        "mid--;": 21705,
        "mid++;": 21706,
        "save[25];": 21707,
        "save[s[i]": 21708,
        "'a']++;": 21709,
        "(save[i])": 21710,
        "mp[s[i]]": 21711,
        "cin.get(a,": 21712,
        "mp[s[i]": 21713,
        "ss.insert(s[i]);": 21714,
        "'{'": 21715,
        "'}'": 21716,
        "',')": 21717,
        "s.insert(str[i]);": 21718,
        "'}')": 21719,
        "','": 21720,
        "arr[s[i]": 21721,
        "cin.getline(a,": 21722,
        "1001);": 21723,
        "s.insert(a[i]);": 21724,
        "set;": 21725,
        "set.insert(s[i]);": 21726,
        "set.size()": 21727,
        "p[30];": 21728,
        "!p[c": 21729,
        "'a'];": 21730,
        "p[c": 21731,
        "++alpha;": 21732,
        "st.insert(s[i]);": 21733,
        "'{')": 21734,
        "t.insert(s[0]);": 21735,
        "t.insert(s[1]);": 21736,
        "R.insert(S[i]);": 21737,
        "R.size()": 21738,
        "s.insert(c);": 21739,
        "5000;": 21740,
        "a[s[i]": 21741,
        "b[26];": 21742,
        "cin.get(c);": 21743,
        "'}';)": 21744,
        "b[(c": 21745,
        "'a')]": 21746,
        "sset;": 21747,
        "123": 21748,
        "sset.insert(s[i]);": 21749,
        "sset.size()": 21750,
        "h[26]": 21751,
        "(int)s;": 21752,
        "h[a": 21753,
        "s[3005]": 21754,
        "a[26]": 21755,
        "97]": 21756,
        "(isalpha(c))": 21757,
        "str.insert(c);": 21758,
        "myset.insert(s[i]);": 21759,
        "gets(a);": 21760,
        "book[300],": 21761,
        "book[s[i]]": 21762,
        "vis[200]": 21763,
        "!vis[a[i]": 21764,
        "ans.insert(S[i]);": 21765,
        "((97": 21766,
        "122))": 21767,
        "x.insert(a[i]);": 21768,
        "b[(int)a[t]]": 21769,
        "arr[27000];": 21770,
        "(27);": 21771,
        "(arr[i])": 21772,
        "a[27]": 21773,
        "cin.get(ch);": 21774,
        "cin.get())": 21775,
        "(a[ch": 21776,
        "a[ch": 21777,
        "df;": 21778,
        "(isalpha(s[i]))": 21779,
        "df.insert(s[i]);": 21780,
        "df.size()": 21781,
        "abc[123],": 21782,
        "abc[i]": 21783,
        "abc[n]": 21784,
        "abc[i];": 21785,
        "a[s": 21786,
        "vis[30];": 21787,
        "96]": 21788,
        "op)": 21789,
        "(!mark[op": 21790,
        "mark[op": 21791,
        "hash[26],": 21792,
        "hash[s[i]": 21793,
        "(hash[i]": 21794,
        "s[3005];": 21795,
        "b[3005];": 21796,
        "'}';": 21797,
        "(b[i])": 21798,
        "ara[125];": 21799,
        "ara[s[i]]++;": 21800,
        "125;": 21801,
        "(mp[s[i]]": 21802,
        "str[1001];": 21803,
        "iter;": 21804,
        "iter++)": 21805,
        "((*iter": 21806,
        "(*iter": 21807,
        "'))": 21808,
        "a[30]": 21809,
        "(s[2]": 21810,
        "a[s[1]": 21811,
        "s1.insert(s[i]);": 21812,
        "s1.clear();": 21813,
        "abs(a[i]);": 21814,
        "abs(t);": 21815,
        "num[105],": 21816,
        "sort(num,": 21817,
        "(lim": 21818,
        "sumB)": 21819,
        "a[1000005];": 21820,
        "max(box,": 21821,
        "abs(M);": 21822,
        "sum_a": 21823,
        "sum_b": 21824,
        "(input": 21825,
        "mc++;": 21826,
        "abs(temp);": 21827,
        "109;": 21828,
        "-tmp;": 21829,
        "psum": 21830,
        "nsum": 21831,
        "abs(tmp);": 21832,
        "abs(b[i]);": 21833,
        "sumPos": 21834,
        "sumNeg": 21835,
        "arr[4]": 21836,
        "arr[6]": 21837,
        "arr[8]": 21838,
        "arr[9]": 21839,
        "(arr[s[0]": 21840,
        "'0'])": 21841,
        "(arr[s[1]": 21842,
        "ar[10]": 21843,
        "ar[l]": 21844,
        "ar[r]": 21845,
        "arr[10]": 21846,
        "arr[y])": 21847,
        "b[11]": 21848,
        "num[10]": 21849,
        "num[n": 21850,
        "arr[a]": 21851,
        "tenth": 21852,
        "unit": 21853,
        "list[10]": 21854,
        "list[tenth]": 21855,
        "list[unit];": 21856,
        "Q[10]": 21857,
        "Q[w];": 21858,
        "Q[e]": 21859,
        "Q[r];": 21860,
        "counter(char": 21861,
        "('7'": 21862,
        "('5'": 21863,
        "('3'": 21864,
        "('1'": 21865,
        "counter(n[i]);": 21866,
        "(d2": 21867,
        "v[10],": 21868,
        "v[7]": 21869,
        "v[8]": 21870,
        "v[9]": 21871,
        "digit1": 21872,
        "a[digit1]": 21873,
        "a[val];": 21874,
        "freq[10],": 21875,
        "freq[i]": 21876,
        "freq[d1]": 21877,
        "freq[x]": 21878,
        "stick[11]": 21879,
        "stick[n1]": 21880,
        "stick[n2];": 21881,
        "ref[10]": 21882,
        "ref[d1]": 21883,
        "ref[d2]": 21884,
        "getGood(char": 21885,
        "getGood(a[0])": 21886,
        "getGood(a[1])": 21887,
        "good[]": 21888,
        "good[n": 21889,
        "A[10]": 21890,
        "arr[11];": 21891,
        "(num2": 21892,
        "getPossibilities(int": 21893,
        "getPossibilities(n": 21894,
        "A[]": 21895,
        "A[n1]": 21896,
        "A[n2]": 21897,
        "arr[str[i]": 21898,
        "'0'];": 21899,
        "(ar[l]": 21900,
        "(ar[r]": 21901,
        "q[12]": 21902,
        "int(p[0]": 21903,
        "int(p[1]": 21904,
        "q[t]": 21905,
        "q[tt];": 21906,
        "assert(b": 21907,
        "_x": 21908,
        "_y": 21909,
        "(_x": 21910,
        "(_y": 21911,
        "num[]": 21912,
        "num[y]": 21913,
        "ip,": 21914,
        "ip;": 21915,
        "ip": 21916,
        "(ip": 21917,
        "0)))": 21918,
        "v[200][200];": 21919,
        "r[d];": 21920,
        "(r[d]": 21921,
        "r[d]": 21922,
        "d--)": 21923,
        "min(m": 21924,
        "arr_i;": 21925,
        "(arr_i": 21926,
        "arr_i": 21927,
        "abs(m": 21928,
        "a[106];": 21929,
        "en,": 21930,
        "a[en": 21931,
        "(v[m": 21932,
        "v[m": 21933,
        "(a[t": 21934,
        "d])": 21935,
        "h[j];": 21936,
        "a[r]": 21937,
        "s[101],": 21938,
        "(s[m": 21939,
        "d[a": 21940,
        "min(abs(i": 21941,
        "0x3c3c3c,": 21942,
        "0x3c3c3c;": 21943,
        "min(len1,": 21944,
        "len2);": 21945,
        "a[p])": 21946,
        "distl": 21947,
        "distr": 21948,
        "min(distl,": 21949,
        "distr)": 21950,
        "MIN1": 21951,
        "0x3f3f3f,": 21952,
        "MIN2": 21953,
        "0x3f3f3f;": 21954,
        "--i;": 21955,
        "min(MIN1,": 21956,
        "MIN2)": 21957,
        "s(n);": 21958,
        "fir": 21959,
        "las": 21960,
        "min(fir,": 21961,
        "las)": 21962,
        "min(idx,": 21963,
        "((ar[i]": 21964,
        "nums[n];": 21965,
        "nums[j]": 21966,
        "(dis": 21967,
        "house[110];": 21968,
        "house[i];": 21969,
        "(house[m": 21970,
        "house[m": 21971,
        "Divs()": 21972,
        "ans.push_back(n": 21973,
        "Divs();": 21974,
        "((int)ans.size()": 21975,
        "ans[--k]": 21976,
        "long)(sqrt((double)n))": 21977,
        "ret.push_back(i);": 21978,
        "(counts": 21979,
        "(ret.back()": 21980,
        "ret.back()": 21981,
        "(ret[counts": 21982,
        "ret[counts": 21983,
        "4e7;": 21984,
        "p[++index]": 21985,
        "is_square": 21986,
        "long)p[index]": 21987,
        "is_square;": 21988,
        "p[k]": 21989,
        "p[2": 21990,
        "!is_square]": 21991,
        "faktor;": 21992,
        "stack<long": 21993,
        "kanan;": 21994,
        "faktor.push_back(i);": 21995,
        "kanan.push(n": 21996,
        "(!kanan.empty())": 21997,
        "faktor.push_back(kanan.top());": 21998,
        "kanan.pop();": 21999,
        "faktor.size())": 22000,
        "faktor[k": 22001,
        "divi[10000005];": 22002,
        "has;": 22003,
        "sqrt(n))": 22004,
        "divi[a]": 22005,
        "(divi[a]": 22006,
        "has.push(n": 22007,
        "(!has.empty())": 22008,
        "has.top();": 22009,
        "has.pop();": 22010,
        "divi[k]": 22011,
        "a.push_back(n": 22012,
        "a.push_back(pos);": 22013,
        "a.begin()": 22014,
        "d(long": 22015,
        "d(n);": 22016,
        "a[10000000]": 22017,
        "a[y": 22018,
        "long)(sqrt(n))": 22019,
        "square_root": 22020,
        "long)sqrt(num)": 22021,
        "square_root;": 22022,
        "v.push_back(num": 22023,
        "bisa;": 22024,
        "bisa.push_back(i);": 22025,
        "bisa.push_back(n": 22026,
        "sort(bisa.begin(),": 22027,
        "bisa.end());": 22028,
        "(bisa.size()": 22029,
        "bisa[k": 22030,
        "p[index]": 22031,
        "ans[k": 22032,
        "v2.push_back(n": 22033,
        "v2.size()": 22034,
        "v1[k": 22035,
        "v2[v2.size()": 22036,
        "vector<unsigned": 22037,
        "sqrt(N);": 22038,
        "V.push_back(i);": 22039,
        "V.push_back(N": 22040,
        "V[K": 22041,
        "divisores;": 22042,
        "divisores.push_back(i);": 22043,
        "divisores.push_back(n": 22044,
        "sort(divisores.begin(),": 22045,
        "divisores.end());": 22046,
        "long)divisores.size())": 22047,
        "divisores[k": 22048,
        "divs;": 22049,
        "divs.push_back(i);": 22050,
        "divs.push_back(n": 22051,
        "sort(divs.begin(),": 22052,
        "divs.end());": 22053,
        "divs.size())": 22054,
        "divs[k": 22055,
        "cek,": 22056,
        "ks;": 22057,
        "cek++;": 22058,
        "cek)": 22059,
        "st.push(i);": 22060,
        "(!st.empty())": 22061,
        "st.top()": 22062,
        "st.pop();": 22063,
        "divisor;": 22064,
        "divisor.push_back(i);": 22065,
        "divisor.push_back(n": 22066,
        "sort(divisor.begin(),": 22067,
        "divisor.end());": 22068,
        "(int)divisor.size()": 22069,
        "divisor[k": 22070,
        "(int)v.size())": 22071,
        "(divs.size()": 22072,
        "div.push_back(d);": 22073,
        "div.push_back(i);": 22074,
        "sort(div.begin(),": 22075,
        "div.end());": 22076,
        "div[k": 22077,
        "b[10000000]": 22078,
        "c[10000000]": 22079,
        "j2;": 22080,
        "b[j1]": 22081,
        "j1++;": 22082,
        "j2": 22083,
        "j2++)": 22084,
        "c[j2]": 22085,
        "j2))": 22086,
        "c[k": 22087,
        "divisor2;": 22088,
        "divisor.push_back(1);": 22089,
        "divisor2.push_back(n);": 22090,
        "divisor2.push_back(n": 22091,
        "divisor.size()": 22092,
        "divisor2.size();": 22093,
        "factor)": 22094,
        "divisor.size())": 22095,
        "divisor2[divisor2.size()": 22096,
        "divisor.size())]": 22097,
        "glag": 22098,
        "sqrt((long": 22099,
        "double)n);": 22100,
        "\"0": 22101,
        "0\\n\";": 22102,
        "dif(int": 22103,
        "(1))": 22104,
        "sort(A": 22105,
        "dif(A[1].first,": 22106,
        "A[1].second))": 22107,
        "lasth;": 22108,
        "lastm;": 22109,
        "lastm": 22110,
        "(A[i].second": 22111,
        "lasth": 22112,
        "A[i].first": 22113,
        "(dif(lasth,": 22114,
        "lastm)": 22115,
        "dif(A[i": 22116,
        "1].first,": 22117,
        "1].second))": 22118,
        "(A[N].second": 22119,
        "A[N].first": 22120,
        "times(n);": 22121,
        "times[i]": 22122,
        "(times[0]": 22123,
        "0\"": 22124,
        "(times[i]": 22125,
        "times[i": 22126,
        "times[n": 22127,
        "setprecision(8);": 22128,
        "m[n],": 22129,
        "m[i]++;": 22130,
        "int)x": 22131,
        "1600;": 22132,
        "tab[T];": 22133,
        "tab[max(t": 22134,
        "0)]++;": 22135,
        "tab[t": 22136,
        "tab[i]": 22137,
        "tab[i": 22138,
        "(tab[i]": 22139,
        "59)": 22140,
        "MAXT": 22141,
        "1500;": 22142,
        "ok[MAXT": 22143,
        "ok);": 22144,
        "MAXT;": 22145,
        "(ok[i])": 22146,
        "takeoffHour": 22147,
        "takeoffMin": 22148,
        "h[MAXN],": 22149,
        "m[MAXN];": 22150,
        "splitTime(int": 22151,
        "h[0]": 22152,
        "m[0];": 22153,
        "(splitTime(diff,": 22154,
        "last))": 22155,
        "h[n": 22156,
        "minx,": 22157,
        "hh,": 22158,
        "hh": 22159,
        "time(n,": 22160,
        "time[i]": 22161,
        "time.front()": 22162,
        "time.size()": 22163,
        "time[i": 22164,
        "time.back()": 22165,
        "batas;": 22166,
        "t[105][2];": 22167,
        "t[i][0]": 22168,
        "t[i][1];": 22169,
        "t[0][0]": 22170,
        "t[0][1]": 22171,
        "-s": 22172,
        "t[n": 22173,
        "batas": 22174,
        "mnt;": 22175,
        "ah,": 22176,
        "am;": 22177,
        "t[i][1])": 22178,
        "t[i][0])": 22179,
        "(mnt": 22180,
        "batas)": 22181,
        "t[i][1]": 22182,
        "ah": 22183,
        "t[i][0];": 22184,
        "(am": 22185,
        "ah++;": 22186,
        "h[200],": 22187,
        "m[200];": 22188,
        "(abs(f(i,": 22189,
        "f(h[k],": 22190,
        "m[k]))": 22191,
        "gh,": 22192,
        "gm,": 22193,
        "gh": 22194,
        "gm;": 22195,
        "(gh": 22196,
        "gh;": 22197,
        "23333;": 22198,
        "Main()": 22199,
        "vec.push_back(h": 22200,
        "vec[n": 22201,
        "(vec[0]": 22202,
        "Main();": 22203,
        "a[200][3];": 22204,
        "b[200];": 22205,
        "(abs(b[j]": 22206,
        "ansh": 22207,
        "ansm": 22208,
        "hh[105],": 22209,
        "mm[105];": 22210,
        "hh[0]": 22211,
        "mm[0]": 22212,
        "hh[i]": 22213,
        "mm[i];": 22214,
        "(hh[1]": 22215,
        "mm[1]": 22216,
        "((hh[i]": 22217,
        "hh[i": 22218,
        "mm[i]": 22219,
        "mm[i": 22220,
        "(ansm": 22221,
        "ansh++;": 22222,
        "(ansh": 22223,
        "hh[n]": 22224,
        "mm[n]": 22225,
        "x[1002],": 22226,
        "y[1002];": 22227,
        "y[i": 22228,
        "(abs(p": 22229,
        "(res2": 22230,
        "(y[n]": 22231,
        "prime[MAXN];": 22232,
        "modPower(long": 22233,
        "dp[26][51];": 22234,
        "p[27];": 22235,
        "dp[i][l]": 22236,
        "min(fun(i": 22237,
        "fun(i": 22238,
        "p[s[i]": 22239,
        "fun(0,": 22240,
        "100000)": 22241,
        "used[111];": 22242,
        "inp.push_back(c);": 22243,
        "sort(inp.begin(),": 22244,
        "inp.end());": 22245,
        "(inp[0]": 22246,
        "(inp[i]": 22247,
        "inp[s]": 22248,
        "inp[i]": 22249,
        "v.insert(a);": 22250,
        "v.begin();": 22251,
        "v.end();": 22252,
        "96": 22253,
        "int(a[a.size()": 22254,
        "sort((s).begin(),": 22255,
        "(s).end());": 22256,
        "m[a]": 22257,
        "m[s[i]];": 22258,
        "a[155];": 22259,
        "a[tmp": 22260,
        "a[55];": 22261,
        "A[10],": 22262,
        "sort(S.begin(),": 22263,
        "S.end());": 22264,
        "S.length()": 22265,
        "M--;": 22266,
        "Maxn": 22267,
        "c[10000];": 22268,
        "sort(c": 22269,
        "gs": 22270,
        "(gs": 22271,
        "gs++;": 22272,
        "mymap[c]++;": 22273,
        "_c": 22274,
        "(mymap[i])": 22275,
        "_c++;": 22276,
        "(_c": 22277,
        "rec": 22278,
        "(rec": 22279,
        "we": 22280,
        "(we": 22281,
        "we++;": 22282,
        "A[55];": 22283,
        "Last": 22284,
        "Tot": 22285,
        "mp[200];": 22286,
        "mp);": 22287,
        "mp[a[i]]": 22288,
        "sort(v,": 22289,
        "ult": 22290,
        "90;": 22291,
        "tam++;": 22292,
        "(tam": 22293,
        "chars[26];": 22294,
        "chars[i]": 22295,
        "chars[c": 22296,
        "-3,": 22297,
        "(chars[i]": 22298,
        "cs++;": 22299,
        "valori[1000],": 22300,
        "sel[1000],": 22301,
        "nrsel,": 22302,
        "valfin,": 22303,
        "ultsel;": 22304,
        "(int)c": 22305,
        "valori[i]": 22306,
        "sort(valori": 22307,
        "valori": 22308,
        "(nrsel": 22309,
        "valfin": 22310,
        "valori[i];": 22311,
        "nrsel++;": 22312,
        "ultsel": 22313,
        "(valori[i]": 22314,
        "rec.size();": 22315,
        "(prev[j]": 22316,
        "rec[j])": 22317,
        "rec[j];": 22318,
        "store.clear();": 22319,
        "rec.size()": 22320,
        "dig;": 22321,
        "str[30005];": 22322,
        "str[j][i])": 22323,
        "3e4": 22324,
        "a[1].length();": 22325,
        "a[1][j];": 22326,
        "V.push_back(S);": 22327,
        "long)S.size());": 22328,
        "rip": 22329,
        "int(V.size());": 22330,
        "(V[j][i]": 22331,
        "V[j": 22332,
        "(rip)": 22333,
        "s[300000];": 22334,
        "a[300000][35];": 22335,
        "strlen(a[1]);": 22336,
        "s[i].insert(a[j][i]);": 22337,
        "(s[i].size()": 22338,
        "str[0].size();": 22339,
        "str[0].at(i);": 22340,
        "(str[j].at(i)": 22341,
        "string[n];": 22342,
        "arr[0].length();": 22343,
        "arr[0][i];": 22344,
        "arr[j][i])": 22345,
        "letter(25,": 22346,
        "'F');": 22347,
        "used(25);": 22348,
        "(used[jj]": 22349,
        "used[jj]": 22350,
        "letter[jj]": 22351,
        "str[jj];": 22352,
        "(str[jj]": 22353,
        "letter[jj])": 22354,
        "(used[ii]": 22355,
        "s[30001][20];": 22356,
        "strlen(s[0]);": 22357,
        "s[0][i])": 22358,
        "lcp;": 22359,
        "lcp": 22360,
        "lcp.length()": 22361,
        "(lcp[j]": 22362,
        "lcp.substr(0,": 22363,
        "s[30003];": 22364,
        "s[0].length();": 22365,
        "s[j][i])": 22366,
        "phnum(n);": 22367,
        "phnum[ii];": 22368,
        "phnum[0].size();": 22369,
        "phnum.size();": 22370,
        "(phnum[ii][p]": 22371,
        "phnum[ii": 22372,
        "1][p])": 22373,
        "(int)1e9;": 22374,
        "(int)3e4": 22375,
        "build()": 22376,
        "store[MAX];": 22377,
        "Init()": 22378,
        "store[i];": 22379,
        "store[0].length();": 22380,
        "sol()": 22381,
        "store[0];": 22382,
        "(l);": 22383,
        "(store[i][j]": 22384,
        "cmp[j])": 22385,
        "Init();": 22386,
        "build();": 22387,
        "sol();": 22388,
        "a[30005][25],": 22389,
        "a[1][j]": 22390,
        "(a[1][j]": 22391,
        "'\\n'": 22392,
        "');": 22393,
        "chk_all(string": 22394,
        "s[],": 22395,
        "common_prefix(string": 22396,
        "(chk_all(s,": 22397,
        "s[0],": 22398,
        "s[0].substr(low,": 22399,
        "common_prefix(s,": 22400,
        "res.size()": 22401,
        "str[30005][25];": 22402,
        "strlen(str[1]);": 22403,
        "(str[1][i]": 22404,
        "A[MAX];": 22405,
        "((int)A[0].size());": 22406,
        "(!good(j))": 22407,
        "v.push_back(st);": 22408,
        "(done)": 22409,
        "minMatch;": 22410,
        "txt;": 22411,
        "cpy;": 22412,
        "cpy": 22413,
        "minMatch": 22414,
        "txt.size()": 22415,
        "(cpy[j]": 22416,
        "txt[j])": 22417,
        "minMatch);": 22418,
        "arr[30010];": 22419,
        "largest": 22420,
        "arr[0].length())": 22421,
        "arr[0][j])": 22422,
        "largest)": 22423,
        "30010;": 22424,
        "s[Maxn];": 22425,
        "(s[0][j]": 22426,
        "vec.push_back(s);": 22427,
        "(vec[j][i]": 22428,
        "vec[0][i])": 22429,
        "V[MAXN][32];": 22430,
        "strlen(V[0]);": 22431,
        "fin;": 22432,
        "fin:": 22433,
        "number[30000][21];": 22434,
        "number[i];": 22435,
        "strlen(number[0]);": 22436,
        "number[0][i];": 22437,
        "(number[j][i]": 22438,
        "ProduceCode(string,": 22439,
        "string);": 22440,
        "Solution(void);": 22441,
        "Solution();": 22442,
        "Solution(void)": 22443,
        "*PhoneArray": 22444,
        "NULL,": 22445,
        "CityCode": 22446,
        "\"X\";": 22447,
        "PhoneArray": 22448,
        "string[Size];": 22449,
        "PhoneArray[0]": 22450,
        "PhoneArray[1];": 22451,
        "ProduceCode(PhoneArray[0],": 22452,
        "PhoneArray[1]);": 22453,
        "(V": 22454,
        "Size)": 22455,
        "PhoneArray[V];": 22456,
        "(PhoneArray[V].substr(0,": 22457,
        "CityCode.length())": 22458,
        "CityCode)": 22459,
        "PhoneArray[V].substr(0,": 22460,
        "CityCode.length()": 22461,
        "++V;": 22462,
        "ProduceCode(string": 22463,
        "(A[X]": 22464,
        "B[X])": 22465,
        "++X;": 22466,
        "B.substr(0,": 22467,
        "X);": 22468,
        "V[0].size();": 22469,
        "V[0][i])": 22470,
        "V[0].size()": 22471,
        "h(string": 22472,
        "q[i])": 22473,
        "h(s[0],": 22474,
        "s[1]);": 22475,
        "h(answer,": 22476,
        "answer.length()": 22477,
        "cal(int": 22478,
        "cal(x);": 22479,
        "xk)": 22480,
        "check(a[i],": 22481,
        "lucky(int": 22482,
        "(lucky(x)": 22483,
        "nod": 22484,
        "nod++;": 22485,
        "nod;": 22486,
        "(lucky(v[i])": 22487,
        "(S[j]": 22488,
        "S[j]": 22489,
        "v.push_back(a": 22490,
        "aux++;": 22491,
        "countLuckyNum(string": 22492,
        "(countLuckyNum(tmp)": 22493,
        "digit++;": 22494,
        "f(xx);": 22495,
        "++d,": 22496,
        "digit(int": 22497,
        "(digit(t)": 22498,
        "numero": 22499,
        "cad[i]": 22500,
        "numero++;": 22501,
        "(dig": 22502,
        "str[10000];": 22503,
        "turimi(long": 22504,
        "'4');": 22505,
        "'7');": 22506,
        "digit(long": 22507,
        "(digit(a[i])": 22508,
        "number_lucky_digit": 22509,
        "number_lucky_digit++;": 22510,
        "(number_lucky_digit": 22511,
        "counter,": 22512,
        "lucky(num[i]);": 22513,
        "lucky": 22514,
        "digit;": 22515,
        "lucky++;": 22516,
        "lucky;": 22517,
        "(lucky": 22518,
        "tempCount": 22519,
        "tempCount++;": 22520,
        "(tempCount": 22521,
        "lucky_digits(int": 22522,
        "(lucky_digits(val)": 22523,
        "r[1000],": 22524,
        "numberOfLucky,": 22525,
        "numberOfLucky;": 22526,
        "fcounter": 22527,
        "numberOfLucky)": 22528,
        "fcounter++;": 22529,
        "(ele)": 22530,
        "(j)": 22531,
        "integer;": 22532,
        "check(integer);": 22533,
        "str2.length();": 22534,
        "swap(str2[i],": 22535,
        "str2[n": 22536,
        "temp[100];": 22537,
        "strlen(y);": 22538,
        "temp[j]": 22539,
        "temp[k])": 22540,
        "(s.compare(t)": 22541,
        "s1.length(),": 22542,
        "(s1.at(i)": 22543,
        "s2.at(n": 22544,
        "((flag)": 22545,
        "(\"NO\")": 22546,
        "(\"YES\"))": 22547,
        "a[1111],": 22548,
        "b[1111];": 22549,
        "strlen(b)": 22550,
        "reverse(p.begin(),": 22551,
        "k[j])": 22552,
        "reverseStr(string": 22553,
        "swap(str[i],": 22554,
        "reverseStr(s1);": 22555,
        "s1[s.length()": 22556,
        "str[105],": 22557,
        "gets(arr);": 22558,
        "str[len": 22559,
        "(strcmp(str,": 22560,
        "t[j])": 22561,
        "str1.size(),": 22562,
        "str2.size();": 22563,
        "str2[j])": 22564,
        "tl": 22565,
        "c1[sl": 22566,
        "c2[tl": 22567,
        "strcpy(c1,": 22568,
        "strcpy(c2,": 22569,
        "t.c_str());": 22570,
        "tl--;": 22571,
        "(c1[i]": 22572,
        "c2[tl])": 22573,
        "reverse(str2.begin(),": 22574,
        "str2.end());": 22575,
        "reverse(str1.begin(),": 22576,
        "str1.end());": 22577,
        "t.length())": 22578,
        "t[t.length()": 22579,
        "(str1.compare(str2)": 22580,
        "t[101];": 22581,
        "gets(t);": 22582,
        "lent": 22583,
        "strlen(t),": 22584,
        "judg": 22585,
        "lent)": 22586,
        "t[lens": 22587,
        "(judg": 22588,
        "tempo[105];": 22589,
        "gets(b);": 22590,
        "strlen(b);": 22591,
        "tempo[j]": 22592,
        "(a[m]": 22593,
        "tempo[m])": 22594,
        "t[length": 22595,
        "puts(\"YES\")": 22596,
        "lena": 22597,
        "lena;": 22598,
        "b[lena": 22599,
        "b[b.size()": 22600,
        "s2[b": 22601,
        "input_1,": 22602,
        "input_2;": 22603,
        "input_1;": 22604,
        "reverse(input_1.begin(),": 22605,
        "input_1.end());": 22606,
        "(input_1": 22607,
        "input_2)": 22608,
        "year;": 22609,
        "year++;": 22610,
        "year": 22611,
        "ny,": 22612,
        "ny": 22613,
        "(n++)": 22614,
        "sudah,": 22615,
        "angka[10];": 22616,
        "angka[i]": 22617,
        "sudah": 22618,
        "(!sudah)": 22619,
        "cek(int": 22620,
        "thn)": 22621,
        "(thn)": 22622,
        "(arr[thn": 22623,
        "arr[thn": 22624,
        "10]++;": 22625,
        "thn": 22626,
        "temu": 22627,
        "(!temu)": 22628,
        "(cek(++y))": 22629,
        "split(int": 22630,
        "ar[4];": 22631,
        "ar[t]": 22632,
        "(ar[t]": 22633,
        "ar[u])": 22634,
        "split(n);": 22635,
        "9020;": 22636,
        "y4)": 22637,
        "isDt(int": 22638,
        "dig[10];": 22639,
        "memset(dig,": 22640,
        "sizeof(dig));": 22641,
        "(dig[i": 22642,
        "10])": 22643,
        "dig[i": 22644,
        "(;;": 22645,
        "ans++)": 22646,
        "(isDt(ans))": 22647,
        "cnt[10]": 22648,
        "cnt[y": 22649,
        "9000000000000000000000000000000;": 22650,
        "isDistinct(int": 22651,
        "nextBYear(int": 22652,
        "(isDistinct(c)": 22653,
        "nextBYear(a)": 22654,
        "check(vector<int>": 22655,
        "9000;": 22656,
        "(check(v)": 22657,
        "9999;": 22658,
        "a[top++]": 22659,
        "AppEnd;": 22660,
        "AppEnd:": 22661,
        "start:": 22662,
        "ye;": 22663,
        "ye": 22664,
        "++y;": 22665,
        "(ar[k]": 22666,
        "mark[20];": 22667,
        "m()": 22668,
        "(mark[n": 22669,
        "m();": 22670,
        "distinct(int": 22671,
        "d.insert(n": 22672,
        "(d.size()": 22673,
        "(distinct(i)": 22674,
        "8000;": 22675,
        "somebodytrue(int": 22676,
        "1022)": 22677,
        "1023;": 22678,
        "9876;": 22679,
        "somebodytrue(n)": 22680,
        "test(int": 22681,
        "year)": 22682,
        "(test(i)": 22683,
        "st.insert(k": 22684,
        "9012;": 22685,
        "s.insert(d);": 22686,
        "a4)": 22687,
        "arr[5000];": 22688,
        "arr[ans++]": 22689,
        "fabs(n": 22690,
        "count_0": 22691,
        "count_1": 22692,
        "++count_1;": 22693,
        "++count_0;": 22694,
        "abs(count_1": 22695,
        "count_0)": 22696,
        "c0": 22697,
        "c0++;": 22698,
        "abs((l": 22699,
        "c0)": 22700,
        "abs(num)": 22701,
        "(!st.empty()": 22702,
        "st.push(s[i]);": 22703,
        "min(zero,": 22704,
        "one);": 22705,
        "s.erase(i": 22706,
        "\"10\"": 22707,
        "\"01\")": 22708,
        "mm++;": 22709,
        "min(tot,": 22710,
        "mm);": 22711,
        "queue<char>": 22712,
        "s[1000005];": 22713,
        "a.push(s[i]);": 22714,
        "tes;": 22715,
        "n0;": 22716,
        "(tes[i]": 22717,
        "n0++;": 22718,
        "abs(n0": 22719,
        "s[200010];": 22720,
        "s0": 22721,
        "s0++;": 22722,
        "s0;": 22723,
        "(s0": 22724,
        "s0)": 22725,
        "count0": 22726,
        "count0++;": 22727,
        "abs(count0": 22728,
        "-r": 22729,
        "stck;": 22730,
        "(stck.empty())": 22731,
        "stck.push(s[i]);": 22732,
        "stck.top()": 22733,
        "stck.pop();": 22734,
        "stck.size()": 22735,
        "'1'))": 22736,
        "s.erase(i,": 22737,
        "ef[2]": 22738,
        "++ef[ch": 22739,
        "abs(ef[0]": 22740,
        "ef[1])": 22741,
        "a[201000];": 22742,
        "(q.top()": 22743,
        "q.push(a[i]": 22744,
        "c[200005];": 22745,
        "abs(z": 22746,
        "digits;": 22747,
        "N_ZerosOnes;": 22748,
        "digits.size();": 22749,
        "(digits[i]": 22750,
        "N_ZerosOnes.first++;": 22751,
        "N_ZerosOnes.second++;": 22752,
        "(N_ZerosOnes.first": 22753,
        "N_ZerosOnes.second)": 22754,
        "N_ZerosOnes.first": 22755,
        "N_ZerosOnes.second": 22756,
        "mini(o,": 22757,
        "z));": 22758,
        "res++": 22759,
        "abs(res);": 22760,
        "'\\n',": 22761,
        "cnt1;": 22762,
        "len_s;": 22763,
        "s[200005];": 22764,
        "20005);": 22765,
        "len_s": 22766,
        "ans++": 22767,
        "abs(ans)": 22768,
        "(ch.empty())": 22769,
        "ch.push(s[i]);": 22770,
        "(ch.top()": 22771,
        "ch.pop();": 22772,
        "ch.size()": 22773,
        "abs(count)": 22774,
        "abs(one": 22775,
        "zero)": 22776,
        "arr[200000": 22777,
        "c0,": 22778,
        "abs(c0": 22779,
        "max(i": 22780,
        "quick_pow(i,": 22781,
        "a[1002];": 22782,
        "sum[1002];": 22783,
        "C(sum[i]": 22784,
        "DP[N][N];": 22785,
        "DP[i][0]": 22786,
        "DP[i][i]": 22787,
        "DP[i][j]": 22788,
        "(DP[i": 22789,
        "DP[i": 22790,
        "(DP[sum": 22791,
        "1][c[i]": 22792,
        "dp[k]": 22793,
        "1002;": 22794,
        "a[num][c])": 22795,
        "C[1010][1010],": 22796,
        "s[1010],": 22797,
        "dp[1010],": 22798,
        "c[1010];": 22799,
        "C[0][0]": 22800,
        "C[s[i]": 22801,
        "data[1010];": 22802,
        "power_mod(long": 22803,
        "power_mod(sum,": 22804,
        "1000000007);": 22805,
        "C(sum": 22806,
        "dp[1001][1001];": 22807,
        "h.push_back(b);": 22808,
        "h[0];": 22809,
        "dp[sum": 22810,
        "1][h[i]": 22811,
        "a[maxN],": 22812,
        "c[maxN][maxN],": 22813,
        "maxN;": 22814,
        "c[sum": 22815,
        "1][a[i]": 22816,
        "c[10010];": 22817,
        "tol;": 22818,
        "cal[1010][1010];": 22819,
        "get()": 22820,
        "cal[1][1]": 22821,
        "tol": 22822,
        "cal[i][j]": 22823,
        "cal[i": 22824,
        "get();": 22825,
        "cal[tol][c[i]])": 22826,
        "C[1005];": 22827,
        "dp[1005],": 22828,
        "fact[1005];": 22829,
        "power(N,": 22830,
        "(((fact[N]": 22831,
        "inverse(fact[N": 22832,
        "R]))": 22833,
        "inverse(fact[R]))": 22834,
        "fact[0]": 22835,
        "fact[i]": 22836,
        "(fact[i": 22837,
        "(k);": 22838,
        "prev_sum": 22839,
        "C[1];": 22840,
        "nCr(C[i]": 22841,
        "C[i]": 22842,
        "nCr[1005][1005];": 22843,
        "nCr[0][0]": 22844,
        "nCr[i][0]": 22845,
        "nCr[i][j]": 22846,
        "(nCr[i": 22847,
        "nCr[i": 22848,
        "nCr[sum": 22849,
        "dp[1100][1100],": 22850,
        "inv[1100];": 22851,
        "inv[1]": 22852,
        "inv[i]": 22853,
        "inv[MOD": 22854,
        "(MOD": 22855,
        "dp[s[n]][n]": 22856,
        "inv[j]": 22857,
        "(c[sum": 22858,
        "mod))": 22859,
        "ncr[1001][1001];": 22860,
        "ct[1001];": 22861,
        "dp[1001];": 22862,
        "ncr[i][0]": 22863,
        "ncr[i][1]": 22864,
        "ncr[i][j]": 22865,
        "((ncr[i": 22866,
        "(ncr[i": 22867,
        "(dp[x]": 22868,
        "dp[x];": 22869,
        "dp[x]": 22870,
        "ct[x];": 22871,
        "ct[x]": 22872,
        "ct[x": 22873,
        "(ncr[n": 22874,
        "1][r": 22875,
        "(calc(x": 22876,
        "(int)ans;": 22877,
        "ct[i];": 22878,
        "ct[i]": 22879,
        "ct[i": 22880,
        "calc(k)": 22881,
        "f[1010][1010];": 22882,
        "dp[1010];": 22883,
        "(1),": 22884,
        "_n": 22885,
        "_n;": 22886,
        "f[0][0]": 22887,
        "(1005);": 22888,
        "f[sum": 22889,
        "b[1005][1005];": 22890,
        "zz()": 22891,
        "b[i][i]": 22892,
        "zz();": 22893,
        "b[q][r])": 22894,
        "a[1000000": 22895,
        "100],": 22896,
        "flag[1000000": 22897,
        "100];": 22898,
        "dp[1007": 22899,
        "1][1007": 22900,
        "(dp[i][j": 22901,
        "dp[x][a[i]": 22902,
        "p[maxn][maxn],": 22903,
        "sum[maxn],": 22904,
        "lastans": 22905,
        "C(long": 22906,
        "1100;": 22907,
        "p[i][j]": 22908,
        "C(sum[i": 22909,
        "fact[MAXN],": 22910,
        "inv[MAXN];": 22911,
        "binPow(long": 22912,
        "(mul": 22913,
        "binPow(fact[i],": 22914,
        "inv[0]": 22915,
        "inv[a];": 22916,
        "pascal[N][N],": 22917,
        "memset(pascal,": 22918,
        "pascal);": 22919,
        "pascal[i][j]": 22920,
        "((pascal[i": 22921,
        "(pascal[i": 22922,
        "MOD))": 22923,
        "(pascal[sum][arr[i]": 22924,
        "dp[1010][1010];": 22925,
        "dp[n][r]": 22926,
        "(dp[n][r])": 22927,
        "(mod);": 22928,
        "(C(n": 22929,
        "(mod)": 22930,
        "C(n": 22931,
        "(mod))": 22932,
        "c(k": 22933,
        "(C(n1": 22934,
        "abs(ar[i": 22935,
        "ar[i]));": 22936,
        "(abs(ar[i": 22937,
        "posiciones;": 22938,
        "cant;": 22939,
        "posiciones.push_back(aux);": 22940,
        "sort(posiciones.begin(),": 22941,
        "posiciones.end());": 22942,
        "cant[posiciones[i]": 22943,
        "posiciones[i": 22944,
        "1]]++;": 22945,
        "cant.begin()->first": 22946,
        "cant.begin()->second": 22947,
        "a[200010],": 22948,
        "200000000008,": 22949,
        "abs(a[i": 22950,
        "fabs(a[i": 22951,
        "iter->first": 22952,
        "iter->second": 22953,
        "v1[v1.end()": 22954,
        "v1.begin()": 22955,
        "v1[0];": 22956,
        "9223372036854775807;": 22957,
        "int>(n,": 22958,
        "sort(arr.begin(),": 22959,
        "arr.end());": 22960,
        "mymap[arr[0]]++;": 22961,
        "mymap[arr[i]]++;": 22962,
        "(mymap[k]": 22963,
        "mymap[a]);": 22964,
        "mymap[k]": 22965,
        "mymap[b];": 22966,
        "abs(vec[1]": 22967,
        "vec[0]),": 22968,
        "abs(vec[i]": 22969,
        "((v[i": 22970,
        "arr[20000000];": 22971,
        "mindis": 22972,
        "100000000000;": 22973,
        "(abs(arr[i": 22974,
        "mindis)": 22975,
        "diff.push_back(arr[i]": 22976,
        "*min_element(diff.begin(),": 22977,
        "diff.end());": 22978,
        "diff.size();": 22979,
        "(diff[i]": 22980,
        "a[200009],": 22981,
        "a[mod": 22982,
        "99999999999;": 22983,
        "v.front(),": 22984,
        "dist1": 22985,
        "(dist1": 22986,
        "dist)": 22987,
        "dist1;": 22988,
        "a[200005],": 22989,
        "1000000001,": 22990,
        "bye()": 22991,
        "hi(bool": 22992,
        "g(n);": 22993,
        "sort(g.begin(),": 22994,
        "g.end());": 22995,
        "(abs(g[i]": 22996,
        "abs(g[i]": 22997,
        "bye();": 22998,
        "ara[200009];": 22999,
        "ara2[200009];": 23000,
        "ara2[i]": 23001,
        "ara[i": 23002,
        "*min_element(ara2": 23003,
        "ara2": 23004,
        "(ara2[i]": 23005,
        "sort(result,": 23006,
        "result[1]": 23007,
        "result[0];": 23008,
        "(result[i": 23009,
        "result[i": 23010,
        "result[i];": 23011,
        "a.push_back(c);": 23012,
        "cha,": 23013,
        "2000000009,": 23014,
        "cha": 23015,
        "(cha": 23016,
        "cha;": 23017,
        "min(dis,": 23018,
        "(abs(a[i": 23019,
        "setlocale(LC_ALL,": 23020,
        "\"Russian\");": 23021,
        "*array": 23022,
        "long[n];": 23023,
        "sort(array,": 23024,
        "array": 23025,
        "*res": 23026,
        "array[i": 23027,
        "abs(res[i]);": 23028,
        "sort(res,": 23029,
        "(res[i]": 23030,
        "res[0])": 23031,
        "res[0]": 23032,
        "b[200005];": 23033,
        "pcount": 23034,
        "pcount++;": 23035,
        "min_dist": 23036,
        "occurances": 23037,
        "min_dist)": 23038,
        "occurances++;": 23039,
        "f++": 23040,
        "2000000005;": 23041,
        "f[mn]++;": 23042,
        "f[mn]": 23043,
        "b[200001];": 23044,
        "1e18,": 23045,
        "a[200200],": 23046,
        "mp[a[i]": 23047,
        "mp[ans]": 23048,
        "cities(n,": 23049,
        "cities[i];": 23050,
        "sort(cities.begin(),": 23051,
        "cities.end());": 23052,
        "m[cities[i]": 23053,
        "cities[i": 23054,
        "m.begin()->first": 23055,
        "m.begin()->second": 23056,
        "izq(string": 23057,
        "temp[1]": 23058,
        "c[5];": 23059,
        "temp[3]": 23060,
        "temp[5]": 23061,
        "abajo(string": 23062,
        "swap(temp[i],": 23063,
        "temp[i": 23064,
        "last(string": 23065,
        "izq(c);": 23066,
        "abajo(c);": 23067,
        "sort(color.begin(),": 23068,
        "color.end());": 23069,
        "ans.insert(last(color));": 23070,
        "(next_permutation(color.begin(),": 23071,
        "color.end()));": 23072,
        "matches;": 23073,
        "rotatex()": 23074,
        "v[2];": 23075,
        "v[3];": 23076,
        "v[5];": 23077,
        "rotatey()": 23078,
        "rotatez()": 23079,
        "(find(matches.begin(),": 23080,
        "matches.end(),": 23081,
        "matches.end())": 23082,
        "rotatez();": 23083,
        "rotatey();": 23084,
        "rotatex();": 23085,
        "matches.push_back(s);": 23086,
        "(!next_permutation(s.begin(),": 23087,
        "s.end()))": 23088,
        "matches.size()": 23089,
        "bst;": 23090,
        "rl(string": 23091,
        "st[0];": 23092,
        "st[0]": 23093,
        "st[1];": 23094,
        "st[2];": 23095,
        "ru(string": 23096,
        "st[4];": 23097,
        "st[5];": 23098,
        "sort(st.begin(),": 23099,
        "st.end());": 23100,
        "bst": 23101,
        "(rand()": 23102,
        "rl(temp);": 23103,
        "ru(temp);": 23104,
        "(bst": 23105,
        "v.insert(bst);": 23106,
        "(next_permutation(st.begin(),": 23107,
        "st.end()));": 23108,
        "rotate1(string": 23109,
        "&t)": 23110,
        "t[2];": 23111,
        "rotate2(string": 23112,
        "t[4]": 23113,
        "t[5];": 23114,
        "t[5]": 23115,
        "rotate3(string": 23116,
        "norm(string": 23117,
        "(int(j)": 23118,
        "++(j))": 23119,
        "(int(k)": 23120,
        "++(k))": 23121,
        "rotate1(s);": 23122,
        "rotate2(s);": 23123,
        "rotate3(s);": 23124,
        "S.insert(norm(s));": 23125,
        "(next_permutation(s.begin(),": 23126,
        "s.end()));": 23127,
        "rot(string": 23128,
        "rotate(s.begin()": 23129,
        "s[5];": 23130,
        "s[2],": 23131,
        "s[4],": 23132,
        "ret.push_back(s);": 23133,
        "ad": 23134,
        "rot(s);": 23135,
        "(v.size())": 23136,
        "ad;": 23137,
        "tmp.size()": 23138,
        "(tmp[j]": 23139,
        "(ad)": 23140,
        "v.insert(v.end(),": 23141,
        "tmp.end());": 23142,
        "prime(10000005,": 23143,
        "mM(long": 23144,
        "(second)": 23145,
        "(second": 23146,
        "fpow(n,": 23147,
        "modmul(long": 23148,
        "((first": 23149,
        "modadd(long": 23150,
        "10000005;": 23151,
        "swap(s[1],": 23152,
        "s[2]);": 23153,
        "swap(s[2],": 23154,
        "s[3]);": 23155,
        "swap(s[3],": 23156,
        "s[4]);": 23157,
        "swap(s[0],": 23158,
        "s[5]);": 23159,
        "swap(s[5],": 23160,
        "swap(s[4],": 23161,
        "st.insert(rot(s));": 23162,
        "rot1(string": 23163,
        "rot2(string": 23164,
        "normalize(string": 23165,
        "_n(2),": 23166,
        "k(0);": 23167,
        "_n(4),": 23168,
        "j(0);": 23169,
        "rot1(s);": 23170,
        "rot2(s);": 23171,
        "S.insert(normalize(s));": 23172,
        "(next_permutation((s).begin(),": 23173,
        "(s).end()));": 23174,
        "rot3(string": 23175,
        "all_rot(string": 23176,
        "minstring": 23177,
        "min(minstring,": 23178,
        "rot3(s);": 23179,
        "minstring;": 23180,
        "sort(((s).begin()),": 23181,
        "((s).end()));": 23182,
        "ans.insert(all_rot(s));": 23183,
        "(next_permutation(((s).begin()),": 23184,
        "((s).end())))": 23185,
        "tmp.push_back(a);": 23186,
        "sort(tmp.begin(),": 23187,
        "tmp[2];": 23188,
        "ss.insert(b);": 23189,
        "(tmp[0]": 23190,
        "tmp[2]": 23191,
        "b[3])": 23192,
        "swap(b[4],": 23193,
        "b[5]);": 23194,
        "(!t[s])": 23195,
        "s[4];": 23196,
        "t[r]": 23197,
        "{'R',": 23198,
        "'Y',": 23199,
        "'G',": 23200,
        "'B',": 23201,
        "'V'};": 23202,
        "tedad[300];": 23203,
        "tedad[s[i]]++;": 23204,
        "(tedad[color[i]])": 23205,
        "v.push_back(tedad[color[i]]);": 23206,
        "30": 23207,
        "vis[T];": 23208,
        "close(string": 23209,
        "s[T];": 23210,
        "t[T];": 23211,
        "!vis[j])": 23212,
        "find(v.begin(),": 23213,
        "v.erase(it);": 23214,
        "A[a[i]]++;": 23215,
        "B[b[i]]++;": 23216,
        "A.begin();": 23217,
        "A.end();": 23218,
        "min(it->second,": 23219,
        "B[it->first]);": 23220,
        "cnt[5];": 23221,
        "calc(string": 23222,
        "dif++;": 23223,
        "cnt[i].clear();": 23224,
        "cnt[a[i].size()][a[i]]++;": 23225,
        "(cnt[b[i].size()][b[i]]": 23226,
        "cnt[b[i].size()][b[i]]--;": 23227,
        "(mp[s])": 23228,
        "a[mid]++;": 23229,
        "(a[mid]": 23230,
        "a[mid]--;": 23231,
        "m1[s]++;": 23232,
        "m2[s]++;": 23233,
        "(m1[\"M\"]": 23234,
        "m2[\"M\"])": 23235,
        "m1[\"M\"]": 23236,
        "m2[\"M\"];": 23237,
        "(m1[\"S\"]": 23238,
        "m2[\"S\"])": 23239,
        "m1[\"S\"]": 23240,
        "m2[\"S\"];": 23241,
        "(m1[\"L\"]": 23242,
        "m2[\"L\"])": 23243,
        "m1[\"L\"]": 23244,
        "m2[\"L\"];": 23245,
        "(m1[\"XL\"]": 23246,
        "m2[\"XL\"])": 23247,
        "m1[\"XL\"]": 23248,
        "m2[\"XL\"];": 23249,
        "(m1[\"XS\"]": 23250,
        "m2[\"XS\"])": 23251,
        "m1[\"XS\"]": 23252,
        "m2[\"XS\"];": 23253,
        "(m1[\"XXL\"]": 23254,
        "m2[\"XXL\"])": 23255,
        "m1[\"XXL\"]": 23256,
        "m2[\"XXL\"];": 23257,
        "(m1[\"XXS\"]": 23258,
        "m2[\"XXS\"])": 23259,
        "m1[\"XXS\"]": 23260,
        "m2[\"XXS\"];": 23261,
        "(m1[\"XXXL\"]": 23262,
        "m2[\"XXXL\"])": 23263,
        "m1[\"XXXL\"]": 23264,
        "m2[\"XXXL\"];": 23265,
        "(m1[\"XXXS\"]": 23266,
        "m2[\"XXXS\"])": 23267,
        "m1[\"XXXS\"]": 23268,
        "m2[\"XXXS\"];": 23269,
        "str[s]++;": 23270,
        "(str[s]": 23271,
        "str[s]--;": 23272,
        "mp1,": 23273,
        "mp1.clear();": 23274,
        "mp2.clear();": 23275,
        "mp1[s[i]]++;": 23276,
        "(!mp1[str])": 23277,
        "mp2[str]++;": 23278,
        "(mp2[s[i]]": 23279,
        "mp1[s[i]]": 23280,
        "mp2[s[i]]": 23281,
        "mp1[s[i]],": 23282,
        "m[s]--;": 23283,
        "1110;": 23284,
        "Q": 23285,
        "2e18;": 23286,
        "MAGIC": 23287,
        "d1[200][200];": 23288,
        "d2[200][200];": 23289,
        "d1[s.size()][s[s.size()": 23290,
        "d2[s.size()][s[s.size()": 23291,
        "d2[i][j]": 23292,
        "d1[i][j]);": 23293,
        "mtest": 23294,
        "TE": 23295,
        "(mtest)": 23296,
        "TE;": 23297,
        "(TE--)": 23298,
        "Map;": 23299,
        "Map[s]++;": 23300,
        "(Map[s]": 23301,
        "Map[s]--;": 23302,
        "v1(n);": 23303,
        "(mp[b])": 23304,
        "mp[b]--,": 23305,
        "(m[b[i]]": 23306,
        "m[b[i]]--;": 23307,
        "check[s]++;": 23308,
        "(check[s]": 23309,
        "check[s]--;": 23310,
        "a[201][100];": 23311,
        "a[i][strlen(a[i])]": 23312,
        "(strcmp(a[j],": 23313,
        "i][0]": 23314,
        "cou)": 23315,
        "B[105];": 23316,
        "a.clear(),": 23317,
        "b.clear();": 23318,
        "a[A[i]]++;": 23319,
        "b[B[i]]++;": 23320,
        "a.begin();": 23321,
        "a.end();": 23322,
        "b[it->first]);": 23323,
        "++Hash[s];": 23324,
        "(Hash[s])": 23325,
        "--Hash[s];": 23326,
        "++Ans;": 23327,
        "Ca": 23328,
        "Cb": 23329,
        "\"M\")": 23330,
        "Ca++;": 23331,
        "Cb++;": 23332,
        "max(Ca,": 23333,
        "Cb)": 23334,
        "min(Ca,": 23335,
        "Cb);": 23336,
        "\"S\";": 23337,
        "\"X\"": 23338,
        "f[S.length()]": 23339,
        "cb;": 23340,
        "ca[t]++;": 23341,
        "cb[t]++;": 23342,
        "ca.begin();": 23343,
        "ca.end();": 23344,
        "cb[it->first]);": 23345,
        "ss[105];": 23346,
        "ss[j]": 23347,
        "\"0\",": 23348,
        "(s[i].length()": 23349,
        "ss[j].length())": 23350,
        "*q;": 23351,
        "\"S\")": 23352,
        "\"XS\")": 23353,
        "a[2]++;": 23354,
        "\"XXS\")": 23355,
        "a[3]++;": 23356,
        "\"XXXS\")": 23357,
        "a[4]++;": 23358,
        "a[5]++;": 23359,
        "\"L\")": 23360,
        "a[6]++;": 23361,
        "\"XL\")": 23362,
        "a[7]++;": 23363,
        "\"XXL\")": 23364,
        "a[8]++;": 23365,
        "\"XXXL\")": 23366,
        "a[9]++;": 23367,
        "b[6]++;": 23368,
        "b[7]++;": 23369,
        "b[8]++;": 23370,
        "b[9]++;": 23371,
        "getDis(string": 23372,
        "dis++;": 23373,
        "flag_a[110],": 23374,
        "flag_b[110];": 23375,
        "memset(flag_a,": 23376,
        "sizeof(flag_a));": 23377,
        "memset(flag_b,": 23378,
        "sizeof(flag_b));": 23379,
        "Dis[110][110];": 23380,
        "Dis[i][j]": 23381,
        "getDis(a[i],": 23382,
        "minid_a": 23383,
        "minid_b": 23384,
        "(flag_a[i])": 23385,
        "(flag_b[j])": 23386,
        "Dis[i][j];": 23387,
        "dis,": 23388,
        "flag_a[minid_a]": 23389,
        "flag_b[minid_b]": 23390,
        "mindis;": 23391,
        "m[a]++;": 23392,
        "(m[a]": 23393,
        "m[a]--;": 23394,
        "a[s.size()": 23395,
        "1].push_back(s[s.size()": 23396,
        "b[s.size()": 23397,
        "sort(a[it].begin(),": 23398,
        "a[it].end());": 23399,
        "sort(b[it].begin(),": 23400,
        "b[it].end());": 23401,
        "a[it].size()": 23402,
        "b[it].size())": 23403,
        "(a[it][i]": 23404,
        "b[it][j])": 23405,
        "cnt[30];": 23406,
        "cnt[s[i]": 23407,
        "(cnt[s[i]": 23408,
        "mp.clear();": 23409,
        "unique(s.begin(),": 23410,
        "s.erase(tmp,": 23411,
        "(mp.find(s)": 23412,
        "s.resize(unique(s.begin(),": 23413,
        "s.begin());": 23414,
        "strlen(a));": 23415,
        "int(unique(a,": 23416,
        "a[len]": 23417,
        "1E-7;": 23418,
        "used[2000];": 23419,
        "stt;": 23420,
        "(mp[s1[j]]": 23421,
        "s1[j];": 23422,
        "mp[s1[j]]++;": 23423,
        "stt.insert(s2);": 23424,
        "s2.clear();": 23425,
        "stt.size()": 23426,
        "check.insert(s[i]);": 23427,
        "check.begin();": 23428,
        "check.end();": 23429,
        "V.push_back(s);": 23430,
        "SS;": 23431,
        "ch.insert(s[j]);": 23432,
        "cand": 23433,
        "ch.begin();": 23434,
        "ch.end();": 23435,
        "SS.insert(cand);": 23436,
        "SS.size()": 23437,
        "s[1007];": 23438,
        "s[i].size()": 23439,
        "ss.insert(s[i][j]);": 23440,
        "(__typeof(ss.begin())": 23441,
        "ss.begin();": 23442,
        "ss.end();": 23443,
        "(*it);": 23444,
        "rs.insert(s[i]);": 23445,
        "rs.size()": 23446,
        "ss[1001];": 23447,
        "strlen(s));": 23448,
        "unique(s,": 23449,
        "strlen(s))": 23450,
        "sort(ss": 23451,
        "unique(ss": 23452,
        "ts;": 23453,
        "ts.insert(s[j]);": 23454,
        "kt;": 23455,
        "ts.begin();": 23456,
        "ts.end();": 23457,
        "kt": 23458,
        "st.insert(kt);": 23459,
        "s.erase(unique(s.begin(),": 23460,
        "s.end()),": 23461,
        "ar[1005][30];": 23462,
        "tm,": 23463,
        "store[1005][1005];": 23464,
        "strlen(store[i]);": 23465,
        "s.insert(res);": 23466,
        "v.push_back(ss);": 23467,
        "s.end()": 23468,
        "root.insert(s);": 23469,
        "root.size()": 23470,
        "aramic;": 23471,
        "sort(in.begin(),": 23472,
        "in.end());": 23473,
        "uni;": 23474,
        "uni.push_back(*(in.begin()));": 23475,
        "(string::iterator": 23476,
        "in.begin()": 23477,
        "in.end();": 23478,
        "++ite)": 23479,
        "(*ite": 23480,
        "*(ite": 23481,
        "uni.push_back(*ite);": 23482,
        "aramic.push_back(uni);": 23483,
        "sort(aramic.begin(),": 23484,
        "aramic.end());": 23485,
        "aramic.erase(unique(aramic.begin(),": 23486,
        "aramic.end()),": 23487,
        "aramic.size()": 23488,
        "az[26];": 23489,
        "sub;": 23490,
        "memset(az,": 23491,
        "sizeof(az));": 23492,
        "az[str.at(i)": 23493,
        "(az[i])": 23494,
        "(char)(97": 23495,
        "(!mp[sub])": 23496,
        "mp[sub]": 23497,
        "(map<char,": 23498,
        "vec.push_back(s1);": 23499,
        "mp1[vec[i]]++;": 23500,
        "mp1.size()": 23501,
        "sortDes(long": 23502,
        "bits(long": 23503,
        "t.clear();": 23504,
        "t.insert(s1[j]);": 23505,
        "t.begin();": 23506,
        "t.end();": 23507,
        "*itr;": 23508,
        "h.insert(v[i]);": 23509,
        "h.size()": 23510,
        "words[1000][1001];": 23511,
        "letters[1000]": 23512,
        "letter[26]": 23513,
        "letter[i]": 23514,
        "words[i];": 23515,
        "strlen(words[i]);": 23516,
        "letters[i]": 23517,
        "letter[words[i][j]": 23518,
        "(letters[i]": 23519,
        "letters[j])": 23520,
        "letters[j]": 23521,
        "stuff;": 23522,
        "alpha[27];": 23523,
        "alpha[j]": 23524,
        "alpha[s[j]": 23525,
        "sumthing": 23526,
        "(alpha[j])": 23527,
        "stuff.insert(sumthing);": 23528,
        "stuff.size()": 23529,
        "A[S[j]": 23530,
        "(A[S[j]": 23531,
        "sort(T.begin(),": 23532,
        "T.end());": 23533,
        "(M[T]": 23534,
        "M[T]": 23535,
        "sort(k.begin(),": 23536,
        "k.end());": 23537,
        "s[i][0];": 23538,
        "map<set<char>,": 23539,
        "yo;": 23540,
        "yo.insert(s[i]);": 23541,
        "m[yo]": 23542,
        "raiz(string": 23543,
        "abc[26]": 23544,
        "resp;": 23545,
        "long)c.size();": 23546,
        "abc[c[i]": 23547,
        "long)26;": 23548,
        "(abc[i]": 23549,
        "resp.push_back((char)(i": 23550,
        "long)n;": 23551,
        "raices;": 23552,
        "raiz(arr[i]);": 23553,
        "no_encont": 23554,
        "long)raices.size();": 23555,
        "(raices[k].compare(aux)": 23556,
        "(no_encont)": 23557,
        "raices.push_back(aux);": 23558,
        "raices.size()": 23559,
        "letter[s[j]": 23560,
        "(letter[j]": 23561,
        "record.insert(str);": 23562,
        "record.size()": 23563,
        "*removeDuplicate(char": 23564,
        "str[],": 23565,
        "str[index++]": 23566,
        "sizeof(str)": 23567,
        "sizeof(str[0]);": 23568,
        "removeDuplicate(str,": 23569,
        "sort(s[i].begin(),": 23570,
        "s[i].end());": 23571,
        "count(a,": 23572,
        "tmp.insert(s[j]);": 23573,
        "st.insert(f(s));": 23574,
        "a[1010][1010];": 23575,
        "h.insert(s2);": 23576,
        "(abs(y": 23577,
        "(abs(x": 23578,
        "val1,": 23579,
        "val2;": 23580,
        "val1": 23581,
        "val1++;": 23582,
        "val2": 23583,
        "val2++;": 23584,
        "min(val1,": 23585,
        "val2));": 23586,
        "min((abs(y": 23587,
        "{1000000000,": 23588,
        "1000000000};": 23589,
        "ceil((x)": 23590,
        "1.0));": 23591,
        "ceil((n": 23592,
        "min(solve(x,": 23593,
        "d),": 23594,
        "solve(1LL,": 23595,
        "e[t];": 23596,
        "(modf(abs(y": 23597,
        "ceil(abs(x": 23598,
        "(modf(abs(n": 23599,
        "&c)": 23600,
        "ceil(abs(n": 23601,
        "ceil((double)x": 23602,
        "ceil((double)(n": 23603,
        "(min(ans,": 23604,
        "ans1)": 23605,
        "res1;": 23606,
        "(abs(1": 23607,
        "sa,": 23608,
        "min(sa": 23609,
        "(!isdigit(ch": 23610,
        "getchar()))": 23611,
        "isdigit(ch": 23612,
        "getchar());": 23613,
        "putit(long": 23614,
        "putit(x": 23615,
        "putchar('0'": 23616,
        "putit(p": 23617,
        "qn": 23618,
        "(q1": 23619,
        "0x7fffffff,": 23620,
        "(qn": 23621,
        "putit(min(res1,": 23622,
        "res2)),": 23623,
        "diff1": 23624,
        "(diff1": 23625,
        "min(count2,": 23626,
        "(diff2": 23627,
        "(o--)": 23628,
        "(((x": 23629,
        "(((n": 23630,
        "1e10)": 23631,
        "(m1": 23632,
        "min(m1,": 23633,
        "abs((x": 23634,
        "rl": 23635,
        "dc(int": 23636,
        "kc;": 23637,
        "kc": 23638,
        "(kc": 23639,
        "sb(int": 23640,
        "(kq);": 23641,
        "xu_ly()": 23642,
        "(dc(x,": 23643,
        "sb(x,": 23644,
        "sb1,": 23645,
        "sb2;": 23646,
        "sb1": 23647,
        "rl;": 23648,
        "sb2": 23649,
        "(dc(y,": 23650,
        "sb(y,": 23651,
        "(dc(1,": 23652,
        "sb(1,": 23653,
        "min(sb1,": 23654,
        "sb2);": 23655,
        "rl)": 23656,
        "xu_ly();": 23657,
        "1.": 23658,
        "(min(ans1,": 23659,
        "min(ans2,": 23660,
        "int(2e9)": 23661,
        "99;": 23662,
        "dist(x,": 23663,
        "dist(1,": 23664,
        "a2[1000009],": 23665,
        "b2[1000009];": 23666,
        "lenb": 23667,
        "memset(a2,": 23668,
        "sizeof(a2));": 23669,
        "memset(b2,": 23670,
        "sizeof(b2));": 23671,
        "biaoji1": 23672,
        "biaoji2": 23673,
        "(biaoji1": 23674,
        "a2[0]": 23675,
        "biaoji1;": 23676,
        "lenb;": 23677,
        "(biaoji2": 23678,
        "b2[0]": 23679,
        "biaoji2;": 23680,
        "b2[k]": 23681,
        "\"<\"": 23682,
        "\">\"": 23683,
        "(a2[j]": 23684,
        "b2[j])": 23685,
        "\"=\"": 23686,
        "(int)3e4;": 23687,
        "a1(b.size(),": 23688,
        "b1(a.size(),": 23689,
        "\"<\"))": 23690,
        "abs((long": 23691,
        "long)s1.length()": 23692,
        "long)s2.length());": 23693,
        "(s1.length()": 23694,
        "s1.insert(0,": 23695,
        "(s2.length()": 23696,
        "s1.length())": 23697,
        "s2.insert(0,": 23698,
        "long)s1.length())": 23699,
        "s[bs]": 23700,
        "t[bt]": 23701,
        "bt++;": 23702,
        "(t.size()": 23703,
        "s[bs])": 23704,
        "t.size())": 23705,
        "(t[bt]": 23706,
        "S1;": 23707,
        "s1.assign(s,": 23708,
        "S1.assign(S,": 23709,
        "S.size());": 23710,
        "S1.size())": 23711,
        "'>'": 23712,
        "(S1.size()": 23713,
        "S1)": 23714,
        "(S1": 23715,
        "b[1000005],": 23716,
        "c[1000005],": 23717,
        "d[1000005];": 23718,
        "d[j++]": 23719,
        "lenc": 23720,
        "lend": 23721,
        "strlen(d);": 23722,
        "(lenc": 23723,
        "lend)": 23724,
        "lenc;": 23725,
        "(x.length()": 23726,
        "y.length())": 23727,
        "(y.length()": 23728,
        "x.length())": 23729,
        "solve(x,": 23730,
        "(a1.size()": 23731,
        "a2.size())": 23732,
        "'='": 23733,
        "ll)": 23734,
        "c1]": 23735,
        "c2])": 23736,
        "numa": 23737,
        "a[numa++]": 23738,
        "b[numb++]": 23739,
        "(numa": 23740,
        "numb)": 23741,
        "\">\\n\";": 23742,
        "\"<\\n\";": 23743,
        "numa;": 23744,
        "\"=\\n\";": 23745,
        "flagA": 23746,
        "flagB": 23747,
        "tmpa": 23748,
        "tmpb": 23749,
        "!flagA)": 23750,
        "flagA)": 23751,
        "tmpa;": 23752,
        "!flagB)": 23753,
        "flagB)": 23754,
        "tmpb;": 23755,
        "(lena": 23756,
        "lenb)": 23757,
        "s1.substr(i);": 23758,
        "s2.length()": 23759,
        "s2.substr(i);": 23760,
        "a.substr(idx);": 23761,
        "b.substr(idx);": 23762,
        "s11;": 23763,
        "s22;": 23764,
        "s11.size()": 23765,
        "s11.size();": 23766,
        "(s11[i]": 23767,
        "ind2": 23768,
        "s22.size()": 23769,
        "s22.size();": 23770,
        "(s22[i]": 23771,
        "s11[i];": 23772,
        "ind2;": 23773,
        "s22[i];": 23774,
        "string(MAX_N": 23775,
        "(signed)a.size(),": 23776,
        "(signed)b.size(),": 23777,
        "r1.insert(0,": 23778,
        "s2.length(),": 23779,
        "r2.insert(0,": 23780,
        "a[1000010],": 23781,
        "b[1000010];": 23782,
        "c[1000010];": 23783,
        "strlen(a),": 23784,
        "lenb]": 23785,
        "lena]": 23786,
        "max(lena,": 23787,
        "lenb);": 23788,
        "arr[1005];": 23789,
        "arr[i],": 23790,
        "check(a[i]": 23791,
        "hotels": 23792,
        "hotels++;": 23793,
        "hotels[150];": 23794,
        "hotels[i];": 23795,
        "hotels[0];": 23796,
        "S.insert(hotels[i]": 23797,
        "((hotels[i]": 23798,
        "hotels[i": 23799,
        "(hotels[i": 23800,
        "(hotels[i]": 23801,
        "ara[105];": 23802,
        "(ara[i": 23803,
        "((a[0]": 23804,
        "((a[n": 23805,
        "nums(n": 23806,
        "nums[i": 23807,
        "saida": 23808,
        "calc": 23809,
        "(vet[i": 23810,
        "vet[i])": 23811,
        "((2": 23812,
        "(calc": 23813,
        "calc;": 23814,
        "line.push_back(a);": 23815,
        "line[i": 23816,
        "source)": 23817,
        "abs(source": 23818,
        "v[i]));": 23819,
        "ans.insert(source);": 23820,
        "check(v[i]": 23821,
        "Inf": 23822,
        "2e2;": 23823,
        "A[150];": 23824,
        "Ans++;": 23825,
        "s.insert(a[i]": 23826,
        "(abs((a[i": 23827,
        "(p1))": 23828,
        "b.push_back(p1);": 23829,
        "(p2))": 23830,
        "b.push_back(p2);": 23831,
        "b.erase(b.begin()": 23832,
        "seq[110];": 23833,
        "(seq[i]": 23834,
        "seq[i": 23835,
        "time1": 23836,
        "time2": 23837,
        "oven1": 23838,
        "oven2": 23839,
        "time2++;": 23840,
        "oven1++;": 23841,
        "oven2++;": 23842,
        "(oven1": 23843,
        "(oven2": 23844,
        "(time1": 23845,
        "time2)": 23846,
        "ceil((float)n": 23847,
        "counter)": 23848,
        "fristOven": 23849,
        "o1": 23850,
        "o2": 23851,
        "(o1": 23852,
        "o2)": 23853,
        "secOventime": 23854,
        "max(o1,": 23855,
        "o2);": 23856,
        "(secOventime": 23857,
        "fristOven)": 23858,
        "3e3": 23859,
        "998244353,": 23860,
        "LG": 23861,
        "(max(x1,": 23862,
        "time2;": 23863,
        "ceil((double)n": 23864,
        "res1--;": 23865,
        "oven2)": 23866,
        "(max(oven2,": 23867,
        "oven1)": 23868,
        "t01": 23869,
        "float(n)": 23870,
        "float(k);": 23871,
        "(t01": 23872,
        "int(t01))": 23873,
        "(int(t01)": 23874,
        "t02": 23875,
        "t02)": 23876,
        "(((t1": 23877,
        "ee": 23878,
        "ee;": 23879,
        "qq;": 23880,
        "(qq": 23881,
        "printv(vector<int>": 23882,
        "(int)(s).size();": 23883,
        "\"\"": 23884,
        "(((d": 23885,
        "tSinOven,": 23886,
        "tConOven": 23887,
        "td;": 23888,
        "tSinOven": 23889,
        "(tConOven": 23890,
        "(tSinOven": 23891,
        "m1++;": 23892,
        "nown": 23893,
        "A:": 23894,
        "num1)": 23895,
        "(time2": 23896,
        "time1)": 23897,
        "bakes": 23898,
        "((time": 23899,
        "time++;": 23900,
        "num_of_cakes": 23901,
        "max(v1,": 23902,
        "v2);": 23903,
        "cake": 23904,
        "timer++;": 23905,
        "(timer": 23906,
        "timer)": 23907,
        "group": 23908,
        "group++;": 23909,
        "(group": 23910,
        "arr[0][1];": 23911,
        "letters[n][n];": 23912,
        "letters[i][j];": 23913,
        "diagonal_char": 23914,
        "letters[0][0];": 23915,
        "non_diagonal_char": 23916,
        "letters[0][1];": 23917,
        "(diagonal_char": 23918,
        "non_diagonal_char)": 23919,
        "(letters[i][j]": 23920,
        "diagonal_char)": 23921,
        "U[MAX][MAX];": 23922,
        "(A[i][i]": 23923,
        "A[0][0])": 23924,
        "(A[i][n": 23925,
        "U[i][i]": 23926,
        "U[i][n": 23927,
        "(U[i][j])": 23928,
        "A[0][1])": 23929,
        "(A[0][0]": 23930,
        "(solve(n))": 23931,
        "x.insert(s[j]);": 23932,
        "y.insert(s[j]);": 23933,
        "*x.begin()": 23934,
        "*y.begin())": 23935,
        "diag,": 23936,
        "other;": 23937,
        "other": 23938,
        "k[1];": 23939,
        "other)": 23940,
        "diag)": 23941,
        "m[n][n];": 23942,
        "m[0][0],": 23943,
        "m[0][1];": 23944,
        "a[0][0],": 23945,
        "b[a][a],": 23946,
        "b[0][0];": 23947,
        "b[0][1];": 23948,
        "(arr[0][0]": 23949,
        "arr[i][i])": 23950,
        "arr[0][0])": 23951,
        "(arr[0][1]": 23952,
        "grid_size;": 23953,
        "grid.push_back(line);": 23954,
        "x_char": 23955,
        "grid[0].at(0);": 23956,
        "y_char": 23957,
        "grid[0].at(1);": 23958,
        "(x_char": 23959,
        "y_char)": 23960,
        "(grid[i].at(i)": 23961,
        "x_char)": 23962,
        "grid_size": 23963,
        "(grid[i].at(grid_size": 23964,
        "(grid[i].at(j)": 23965,
        "512;": 23966,
        "BASE": 23967,
        "S[MAX];": 23968,
        "(S[i][i]": 23969,
        "S[0][0])": 23970,
        "(S[i][n": 23971,
        "S[i][j]": 23972,
        "S[0][1])": 23973,
        "(S[0][0]": 23974,
        "c[305][305];": 23975,
        "a[c[i][j]": 23976,
        "c[0][0];": 23977,
        "c[0][1];": 23978,
        "g[301][301];": 23979,
        "g[i][y]": 23980,
        "g[u][e]": 23981,
        "(!acc)": 23982,
        "(acc)": 23983,
        "it,": 23984,
        "it1;": 23985,
        "s.insert(arr[i][j]);": 23986,
        "x.insert(arr[i][j]);": 23987,
        "*it1)": 23988,
        "square[300][300];": 23989,
        "letterx,": 23990,
        "letterx1;": 23991,
        "square[i][j];": 23992,
        "letterx": 23993,
        "square[0][0];": 23994,
        "letterx1": 23995,
        "square[0][1];": 23996,
        "square[i][j]": 23997,
        "letterx)": 23998,
        "square[i][j])": 23999,
        "(letterx1": 24000,
        "(square[i][j]": 24001,
        "arr[300][300];": 24002,
        "arr[i][t];": 24003,
        "arr[0][0],": 24004,
        "(arr[i][p1]": 24005,
        "arr[i][p2]": 24006,
        "(arr[i][t]": 24007,
        "p2--;": 24008,
        "s1.insert(a[i][j]);": 24009,
        "s2.insert(a[i][j]);": 24010,
        "arr[1][0])": 24011,
        "601;": 24012,
        "arreglo[1000];": 24013,
        "set<long>": 24014,
        "arreglo[i];": 24015,
        "(arreglo[i]": 24016,
        "s.insert(arreglo[i]);": 24017,
        "issquare(long": 24018,
        "trunc(sqrt(w))": 24019,
        "long)sqrt(u);": 24020,
        "S.insert(b);": 24021,
        "a[3333],": 24022,
        "(!a[tmp]": 24023,
        "a[tmp]++,": 24024,
        "b[605],": 24025,
        "a[b]++;": 24026,
        "b[c]": 24027,
        "b[a[i]]++;": 24028,
        "g.insert(m);": 24029,
        "g.size()": 24030,
        "aa[700]": 24031,
        "aa[a]++;": 24032,
        "605;": 24033,
        "a[601];": 24034,
        "1000002;": 24035,
        "nextz[N];": 24036,
        "S[N],": 24037,
        "T[N];": 24038,
        "slen,": 24039,
        "tlen;": 24040,
        "getNext()": 24041,
        "nextz[0]": 24042,
        "tlen)": 24043,
        "T[j]": 24044,
        "T[k])": 24045,
        "nextz[++j]": 24046,
        "nextz[k];": 24047,
        "KMP_Index()": 24048,
        "getNext();": 24049,
        "T[j])": 24050,
        "nextz[j];": 24051,
        "KMP_Count()": 24052,
        "(slen": 24053,
        "tlen": 24054,
        "(S[0]": 24055,
        "T[0])": 24056,
        "slen;": 24057,
        "(s.count(0))": 24058,
        "600)": 24059,
        "scores;": 24060,
        "scores.insert(tmp);": 24061,
        "scores.size()": 24062,
        "data.insert(input);": 24063,
        "brr[101];": 24064,
        "s(arr": 24065,
        "(s.find(0)": 24066,
        "ff;": 24067,
        "b[1002];": 24068,
        "s[601],": 24069,
        "s[a]++;": 24070,
        "s.insert(num);": 24071,
        "a[605];": 24072,
        "603;": 24073,
        "b[605];": 24074,
        "points.push_back(a);": 24075,
        "same": 24076,
        "sort(points.begin(),": 24077,
        "points.end());": 24078,
        "(points[j]": 24079,
        "points[k])": 24080,
        "same++;": 24081,
        "same;": 24082,
        "(same": 24083,
        "same)": 24084,
        "v[700];": 24085,
        "(v[m]": 24086,
        "v[m]": 24087,
        "a[605],": 24088,
        "a[700]": 24089,
        "130;": 24090,
        "se.insert(a);": 24091,
        "change": 24092,
        "carry": 24093,
        "cop;": 24094,
        "cop": 24095,
        "carry;": 24096,
        "(cop[i]": 24097,
        "change++;": 24098,
        "sii;": 24099,
        "sii.push(s[i]": 24100,
        "(!sii.empty())": 24101,
        "sii.top();": 24102,
        "sii.pop();": 24103,
        "++n)": 24104,
        "str.resize(n);": 24105,
        "added": 24106,
        "(!added)": 24107,
        "char[n];": 24108,
        "(a[count]": 24109,
        "::cout.precision(20);": 24110,
        "ss[110];": 24111,
        "strcpy(ss,": 24112,
        "ss[i])": 24113,
        "t[100];": 24114,
        "oldstr": 24115,
        "oldstr[i])": 24116,
        "d[200]": 24117,
        "(d[now])": 24118,
        "((now": 24119,
        "(carry": 24120,
        "ans[105];": 24121,
        "jw": 24122,
        "jw)": 24123,
        "(int)s.size())": 24124,
        "res(s.size(),": 24125,
        "orgStr,": 24126,
        "revStr,": 24127,
        "revStr;": 24128,
        "orgStr": 24129,
        "reverse(revStr.begin(),": 24130,
        "revStr.end());": 24131,
        "orgStr.length();": 24132,
        "reverse(orgStr.begin(),": 24133,
        "orgStr.end());": 24134,
        "(orgStr[i]": 24135,
        "orgStr[i]": 24136,
        "orgStr[i])": 24137,
        "tot,": 24138,
        "110);": 24139,
        "initial;": 24140,
        "(initial[0]": 24141,
        "initial.size();": 24142,
        "(initial[i]": 24143,
        "sum[100004];": 24144,
        "bv[b],": 24145,
        "gv[g];": 24146,
        "bv[i]": 24147,
        "gv[i]": 24148,
        "(bv[i]": 24149,
        "gv[j]": 24150,
        "mo(int": 24151,
        "fun(string": 24152,
        "(p.size()": 24153,
        "cm(vector<int>": 24154,
        "(v1[0]": 24155,
        "v2[0])": 24156,
        "v2[0];": 24157,
        "v1[1]": 24158,
        "v2[1];": 24159,
        "func1()": 24160,
        "func1();": 24161,
        "\"1": 24162,
        "1\"": 24163,
        "g[m];": 24164,
        "dl": 24165,
        "10069;": 24166,
        "bib()": 24167,
        "(int)10;": 24168,
        "\"\\a\";": 24169,
        "p[11111];": 24170,
        "used[1111];": 24171,
        "1\\n\";": 24172,
        "boy,": 24173,
        "girl;": 24174,
        "boy": 24175,
        "girl": 24176,
        "boy;": 24177,
        "boy[200]": 24178,
        "girl[200]": 24179,
        "bp[200]": 24180,
        "gp[200]": 24181,
        "(boy[i]": 24182,
        "girl[j]": 24183,
        "bp[ans]": 24184,
        "gp[ans]": 24185,
        "boy[i]": 24186,
        "bp[i]": 24187,
        "gp[i]": 24188,
        "g[MAXN],": 24189,
        "used[MAXN];": 24190,
        "pwr(long": 24191,
        "(1000000007LL))": 24192,
        "C[r": 24193,
        "memset(C,": 24194,
        "sizeof(C));": 24195,
        "C[0]": 24196,
        "C[j": 24197,
        "C[r];": 24198,
        "M(long": 24199,
        "(1000000007LL));": 24200,
        "isPowerOfTwo(long": 24201,
        "long)(m);": 24202,
        "arr[h];": 24203,
        "sort(f.begin(),": 24204,
        "f.end());": 24205,
        "\"acef\")": 24206,
        "Checking(char": 24207,
        "A[]);": 24208,
        "Pic[55][55];": 24209,
        "A[4];": 24210,
        "'f';": 24211,
        "(short": 24212,
        "Pic[i][j];": 24213,
        "(Pic[i][j]": 24214,
        "'f')": 24215,
        "A[0]": 24216,
        "A[1]": 24217,
        "Pic[i][j": 24218,
        "A[2]": 24219,
        "Pic[i": 24220,
        "A[3]": 24221,
        "'c')": 24222,
        "Checking(arr,": 24223,
        "A[])": 24224,
        "s[59][59];": 24225,
        "mp[s[i][j]]": 24226,
        "mp[s[i": 24227,
        "1][j]]": 24228,
        "mp[s[i][j": 24229,
        "1]]": 24230,
        "(mp['f']": 24231,
        "mp['a']": 24232,
        "mp['c']": 24233,
        "mp['e']": 24234,
        "a[1007][1007];": 24235,
        "isInn(long": 24236,
        "isFace(char": 24237,
        "{a,": 24238,
        "d};": 24239,
        "'c'": 24240,
        "(isInn(i,": 24241,
        "isInn(i,": 24242,
        "isInn(i": 24243,
        "isFace(a[i][j],": 24244,
        "\"tttt\";": 24245,
        "p[j];": 24246,
        "q[j];": 24247,
        "q[j": 24248,
        "ch[MAXN][MAXN];": 24249,
        "fc": 24250,
        "fe": 24251,
        "cot++;": 24252,
        "ch[i][j]": 24253,
        "(fc": 24254,
        "(fe": 24255,
        "check(i,": 24256,
        "A(H);": 24257,
        "a.push_back(A[x][y]);": 24258,
        "s[100][111];": 24259,
        "judge[2333];": 24260,
        "judge);": 24261,
        "judge[s[i][j]]++;": 24262,
        "judge[s[i][j": 24263,
        "judge[s[i": 24264,
        "1][j]]++;": 24265,
        "(judge['f']": 24266,
        "judge['a']": 24267,
        "judge['c']": 24268,
        "judge['e']": 24269,
        "board[100];": 24270,
        "\"####\";": 24271,
        "board[i": 24272,
        "grid[55][55];": 24273,
        "grid[i];": 24274,
        "grid[k][l];": 24275,
        "M[a]++;": 24276,
        "M[b]++;": 24277,
        "M[c]++;": 24278,
        "M[d]++;": 24279,
        "(M['f']": 24280,
        "M['a']": 24281,
        "M['c']": 24282,
        "M['e']": 24283,
        "vec[n][m];": 24284,
        "vec[i][j]": 24285,
        "(ok(vec[i][j],": 24286,
        "vec[i][j": 24287,
        "sort(a1.begin(),": 24288,
        "a1.end());": 24289,
        "m['f']": 24290,
        "m['a']": 24291,
        "m['c']": 24292,
        "m['e']": 24293,
        "m['x']": 24294,
        "(m[a[i][j]]": 24295,
        "m[a[i": 24296,
        "m[a[i][j": 24297,
        "dick": 24298,
        "dhurr[n];": 24299,
        "hush,": 24300,
        "fuck;": 24301,
        "fuck.push_back('a');": 24302,
        "fuck.push_back('c');": 24303,
        "fuck.push_back('e');": 24304,
        "fuck.push_back('f');": 24305,
        "(i++))": 24306,
        "dhurr[i]);": 24307,
        "hush.push_back(dhurr[i][j]);": 24308,
        "hush.push_back(dhurr[i][j": 24309,
        "hush.push_back(dhurr[i": 24310,
        "sort(hush.begin(),": 24311,
        "hush.end());": 24312,
        "(hush": 24313,
        "fuck)": 24314,
        "(dick++);": 24315,
        "hush.clear();": 24316,
        "endl);": 24317,
        "b[5];": 24318,
        "C[55][55];": 24319,
        "C[i][j];": 24320,
        "A[C[i][j]": 24321,
        "A[C[i": 24322,
        "A[C[i][j": 24323,
        "A[5]": 24324,
        "A[4]": 24325,
        "Pow(long": 24326,
        "m[maxm][maxm];": 24327,
        "vis[maxm];": 24328,
        "vis[m[x": 24329,
        "i][y": 24330,
        "j]]": 24331,
        "(vis['f']": 24332,
        "(vis['a']": 24333,
        "(vis['c']": 24334,
        "(vis['e']": 24335,
        "(grid[i": 24336,
        "k][j": 24337,
        "l]": 24338,
        "s[51];": 24339,
        "sort(temp.begin(),": 24340,
        "temp.end());": 24341,
        "cr[n][m];": 24342,
        "cr[i][j];": 24343,
        "mp[cr[i][j]]++;": 24344,
        "mp[cr[i": 24345,
        "mp[cr[i][j": 24346,
        "mm)": 24347,
        "m[s[p][j]]++,": 24348,
        "m[s[p": 24349,
        "1][j]]++,": 24350,
        "m[s[p][j": 24351,
        "1]]++,": 24352,
        "(m['f']": 24353,
        "a[50][50];": 24354,
        "'x'": 24355,
        "mark[27]": 24356,
        "mark[a[i][j]": 24357,
        "mark[a[i": 24358,
        "mark[a[i][j": 24359,
        "(mark['f'": 24360,
        "mark['a'": 24361,
        "mark['c'": 24362,
        "mark['e'": 24363,
        "{'f',": 24364,
        "'c',": 24365,
        "'e'};": 24366,
        "s.insert(arr[i][j": 24367,
        "s.insert(arr[i": 24368,
        "(!s.count(ar[p]))": 24369,
        "(is)": 24370,
        "5.0)": 24371,
        "{5,": 24372,
        "5.0);": 24373,
        "5};": 24374,
        "distanc;": 24375,
        "steps": 24376,
        "(distanc": 24377,
        "distanc": 24378,
        "steps++;": 24379,
        "n3,": 24380,
        "n4;": 24381,
        "n4": 24382,
        "Steps": 24383,
        "!(n": 24384,
        "cntr": 24385,
        "cntr++;": 24386,
        "steps,": 24387,
        "minstep;": 24388,
        "minstep": 24389,
        "letter[27]": 24390,
        "(letter[i]": 24391,
        "\"CHAT": 24392,
        "WITH": 24393,
        "HER!\"": 24394,
        "\"IGNORE": 24395,
        "HIM!\"": 24396,
        "s.insert(t[i]);": 24397,
        "(m.find(s[i])": 24398,
        "m[s[i]]": 24399,
        "mp[1000]": 24400,
        "HIM!\\n\";": 24401,
        "HER!\\n\";": 24402,
        "str[1000],": 24403,
        "sort(str,": 24404,
        "t[j]": 24405,
        "(strlen(t)": 24406,
        "sort(name.begin(),": 24407,
        "name.end());": 24408,
        "s.insert(name[i]);": 24409,
        "Is_here(char": 24410,
        "(!Is_here(input[i],": 24411,
        "ans))": 24412,
        "ans[i])": 24413,
        "'&';": 24414,
        "'&')": 24415,
        "charArray[26];": 24416,
        "(charArray[(S[i])": 24417,
        "charArray[(S[i])": 24418,
        "arr[26],": 24419,
        "3e5,": 24420,
        "s[sz];": 24421,
        "puts(\"IGNORE": 24422,
        "HIM!\");": 24423,
        "puts(\"CHAT": 24424,
        "HER!\");": 24425,
        "username;": 24426,
        "alph[26]": 24427,
        "username.length();": 24428,
        "alph[(int)username[i]": 24429,
        "distinct": 24430,
        "name.length()": 24431,
        "distinct++;": 24432,
        "(distinct": 24433,
        "a[x[i]": 24434,
        "user_num": 24435,
        "(arr[cont]": 24436,
        "user_num++;": 24437,
        "(user_num": 24438,
        "uniqueCharacters": 24439,
        "uniqueCharacters++;": 24440,
        "(uniqueCharacters": 24441,
        "HIM!\")": 24442,
        "s.insert(ss[i]);": 24443,
        "used;": 24444,
        "(find(used.begin(),": 24445,
        "used.end(),": 24446,
        "used.end())": 24447,
        "used.push_back(s[i]);": 24448,
        "input[101];": 24449,
        "strlen(input);": 24450,
        "sort(input,": 24451,
        "input[0];": 24452,
        "HER!\")": 24453,
        "HER!\";": 24454,
        "HIM!\";": 24455,
        "name[a])": 24456,
        "ch[101];": 24457,
        "sort(n.begin(),": 24458,
        "n.end());": 24459,
        "((count": 24460,
        "srt": 24461,
        "sort(srt.begin(),": 24462,
        "srt.end());": 24463,
        "srt.length();": 24464,
        "(srt[i]": 24465,
        "srt[i": 24466,
        "vis[26];": 24467,
        "already(char": 24468,
        "(vis[cnt]": 24469,
        "vis[cnt]": 24470,
        "(already(s[i]))": 24471,
        "(a.find(a[i],": 24472,
        "a.erase(a.find(a[i],": 24473,
        "freq[26];": 24474,
        "++freq[str[i]": 24475,
        "name[100],": 24476,
        "cnt[26];": 24477,
        "strlen(name);": 24478,
        "cnt[name[i]": 24479,
        "(cnt[j]": 24480,
        "salir;": 24481,
        "(-a)": 24482,
        "salir:;": 24483,
        "(max(x,": 24484,
        "(-x)": 24485,
        "-a": 24486,
        "P)": 24487,
        "-k": 24488,
        "++ans)": 24489,
        "long)((m": 24490,
        "long)((-x)": 24491,
        "Get()": 24492,
        "'-'))": 24493,
        "Flag": 24494,
        "(Flag)": 24495,
        "Output(int": 24496,
        "X)": 24497,
        "-X;": 24498,
        "Len": 24499,
        "Data[10];": 24500,
        "(X)": 24501,
        "Data[Len++]": 24502,
        "(!Len)": 24503,
        "(Len--)": 24504,
        "putchar(Data[Len]": 24505,
        "Y)": 24506,
        "swap(X,": 24507,
        "Y);": 24508,
        "(Y": 24509,
        "-Y": 24510,
        "-b": 24511,
        "abs(x)": 24512,
        "(diff)": 24513,
        "fabs(y)": 24514,
        "fabs(x)": 24515,
        "y1))": 24516,
        "res[N];": 24517,
        "4e18;": 24518,
        "res[j++]": 24519,
        "fib[100];": 24520,
        "fib[0]": 24521,
        "fib[1]": 24522,
        "fib[i]": 24523,
        "fib[i": 24524,
        "(abs(y)": 24525,
        "abs(y)": 24526,
        "temp_a": 24527,
        "temp_b": 24528,
        "temp_b;": 24529,
        "(-x": 24530,
        "0)),": 24531,
        "-min(x,": 24532,
        "++times;": 24533,
        "s[b];": 24534,
        "s[b].size();": 24535,
        "s[b]": 24536,
        "s[b][0]": 24537,
        "s[b][c": 24538,
        "s[length": 24539,
        "str[str.length()": 24540,
        "k[0]": 24541,
        "k[h": 24542,
        "dif(long": 24543,
        "\"Null\";": 24544,
        "(word.length()": 24545,
        "word[0]": 24546,
        "word.length()": 24547,
        "word[word.length()": 24548,
        "chr;": 24549,
        "(chr.size()": 24550,
        "chr": 24551,
        "chr[0]": 24552,
        "chr.size()": 24553,
        "chr[chr.size()": 24554,
        "ispalin(string": 24555,
        "(str[l++]": 24556,
        "str[h--])": 24557,
        "prime[n": 24558,
        "(prime[p])": 24559,
        "fuck(string": 24560,
        "a[a.size()": 24561,
        "fuck(x);": 24562,
        "r.size();": 24563,
        "r[r.size()": 24564,
        "(word.size()": 24565,
        "word[word.size()": 24566,
        "s[i][s[i].size()": 24567,
        "name[number];": 24568,
        "(name[i].size()": 24569,
        "name[i].size()": 24570,
        "name[i][0]": 24571,
        "name[i][name[i].size()": 24572,
        "a[c];": 24573,
        "(a[j].length()": 24574,
        "a[j][a[j].length()": 24575,
        "ss[ss.size()": 24576,
        "NumOfWords;": 24577,
        "intToString(int": 24578,
        "(a[i].size()": 24579,
        "intToString(a[i].size()": 24580,
        "a[i][a[i].size()": 24581,
        "t[k]": 24582,
        "str[b": 24583,
        "state": 24584,
        "(state": 24585,
        "G,": 24586,
        "maxer": 24587,
        "biaozhi": 24588,
        "maxer)": 24589,
        "(biaozhi": 24590,
        "G)": 24591,
        "(arr[l]": 24592,
        "(arr[r]": 24593,
        "arr[r": 24594,
        "500010;": 24595,
        "-0x7f7f7f7f;": 24596,
        "a[p": 24597,
        "ara[num],": 24598,
        "f3;": 24599,
        "(f3": 24600,
        "m[10010];": 24601,
        "m[i]);": 24602,
        "(m[i": 24603,
        "m[i])": 24604,
        "a(10000);": 24605,
        "a[i++];)": 24606,
        "cls(int": 24607,
        "ml,": 24608,
        "ml": 24609,
        "cls(b": 24610,
        "ml)": 24611,
        "phase": 24612,
        "(phase": 24613,
        "dat[110];": 24614,
        "dat[i];": 24615,
        "dat[i]": 24616,
        "dat[i": 24617,
        "pre,": 24618,
        "state;": 24619,
        "(\"YES\")": 24620,
        "num[100];": 24621,
        "vis[100];": 24622,
        "300": 24623,
        "ok1": 24624,
        "(ok1": 24625,
        "'7'": 24626,
        "\"b\"": 24627,
        "r4": 24628,
        "r7": 24629,
        "l4": 24630,
        "l7": 24631,
        "l4++;": 24632,
        "l7++;": 24633,
        "r4++;": 24634,
        "r7++;": 24635,
        "(r4": 24636,
        "l7)": 24637,
        "(((int)s[i])": 24638,
        "ya)": 24639,
        "atoi(s2.c_str());": 24640,
        "sym;": 24641,
        "suml": 24642,
        "sym": 24643,
        "(sym": 24644,
        "(suml": 24645,
        "h2,": 24646,
        "sum0": 24647,
        "h1;": 24648,
        "sum0;": 24649,
        "(sum0": 24650,
        "((((int)(s[i])": 24651,
        "(((int)(s[i])": 24652,
        "only_7_4": 24653,
        "only_7_4)": 24654,
        "correct": 24655,
        "counter_left": 24656,
        "counter_right": 24657,
        "int(s[j]": 24658,
        "(correct": 24659,
        "counter_left)": 24660,
        "((int)((s).size()));": 24661,
        "imp": 24662,
        "\"01235689\";": 24663,
        "imp.length())": 24664,
        "(a.find(imp.at(i))": 24665,
        "a.length())": 24666,
        "imp.length();": 24667,
        "imp.length()": 24668,
        "i3": 24669,
        "hs": 24670,
        "(int)a.at(i2)": 24671,
        "i3)": 24672,
        "(ts": 24673,
        "hs)": 24674,
        "A[S[i]": 24675,
        "'0']++;": 24676,
        "A[7]": 24677,
        "(not": 24678,
        "(int)s[q];": 24679,
        "vis[110];": 24680,
        "u1,": 24681,
        "u2,": 24682,
        "u1": 24683,
        "u2": 24684,
        "u1;": 24685,
        "u2;": 24686,
        "swap(d1,": 24687,
        "swap(u1,": 24688,
        "u2);": 24689,
        "u1)": 24690,
        "u2)": 24691,
        "w1,": 24692,
        "d2),": 24693,
        "rta": 24694,
        "u1);": 24695,
        "w2,": 24696,
        "(h)": 24697,
        "--h)": 24698,
        "max(w": 24699,
        "--h;": 24700,
        "(b;": 24701,
        "(h;": 24702,
        "h--)": 24703,
        "u_1,": 24704,
        "d_1,": 24705,
        "u_2,": 24706,
        "d_2;": 24707,
        "u_1": 24708,
        "d_1": 24709,
        "u_2": 24710,
        "d_1)": 24711,
        "u_1;": 24712,
        "d_2)": 24713,
        "u_2;": 24714,
        "d2,": 24715,
        "weight": 24716,
        "(weight": 24717,
        "weight,": 24718,
        "sw1,": 24719,
        "sh1,": 24720,
        "sw2,": 24721,
        "sh2;": 24722,
        "sw1": 24723,
        "sh1": 24724,
        "sw2": 24725,
        "high;": 24726,
        "sh1)": 24727,
        "sw1;": 24728,
        "sh2)": 24729,
        "sw2;": 24730,
        "Time(0),": 24731,
        "Blue,": 24732,
        "Green,": 24733,
        "Red;": 24734,
        "Blue;": 24735,
        "Green;": 24736,
        "(Blue": 24737,
        "Red": 24738,
        "Green)": 24739,
        "Time++;": 24740,
        "Blue": 24741,
        "((Blue": 24742,
        "Green": 24743,
        "(Green": 24744,
        "(Red": 24745,
        "Time": 24746,
        "ceil(r": 24747,
        "ceil(g": 24748,
        "ceil(b": 24749,
        "29": 24750,
        "28": 24751,
        "27": 24752,
        "(a[id]": 24753,
        "a[id]": 24754,
        "a[4],": 24755,
        "color(3);": 24756,
        "color[i];": 24757,
        "(!cnt)": 24758,
        "(color[i": 24759,
        "min(2,": 24760,
        "color[i": 24761,
        "3]);": 24762,
        "p[3];": 24763,
        "time,": 24764,
        "ar,": 24765,
        "minn,": 24766,
        "(ar": 24767,
        "min(g,": 24768,
        "ar++;": 24769,
        "p[3],": 24770,
        "endapp:": 24771,
        "!c)": 24772,
        "rs,": 24773,
        "gs,": 24774,
        "!g": 24775,
        "!b)": 24776,
        "max(rs,": 24777,
        "gs);": 24778,
        "max(mmax,": 24779,
        "bs);": 24780,
        "max(g,": 24781,
        "31": 24782,
        "32": 24783,
        "max(max(a,": 24784,
        "v3,": 24785,
        "{'g',": 24786,
        "'b',": 24787,
        "'r'};": 24788,
        "m[s[i": 24789,
        "++time;": 24790,
        "max(max(rr,": 24791,
        "gg),": 24792,
        "timeOfEnding": 24793,
        "color++;": 24794,
        "timeOfEnding++;": 24795,
        "a.push_back(r);": 24796,
        "a.push_back(g);": 24797,
        "a.push_back(b);": 24798,
        "red,": 24799,
        "green,": 24800,
        "blue;": 24801,
        "Z,": 24802,
        "Z;": 24803,
        "a[101][10];": 24804,
        "ch[n];": 24805,
        "ch[i].push_back(u);": 24806,
        "ch[i].push_back(v);": 24807,
        "ch[i].push_back(w);": 24808,
        "ch[i][0];": 24809,
        "ch[i][1];": 24810,
        "ch[i][2];": 24811,
        "ch[i].clear();": 24812,
        "xsum(0),": 24813,
        "ysum(0),": 24814,
        "zsum(0);": 24815,
        "xsum": 24816,
        "ysum": 24817,
        "zsum": 24818,
        "(xsum": 24819,
        "sumz": 24820,
        "A[n],": 24821,
        "B[n],": 24822,
        "C[n];": 24823,
        "x0,": 24824,
        "y0,": 24825,
        "z0;": 24826,
        "x1++)": 24827,
        "y0;": 24828,
        "x[1001],": 24829,
        "y[1001],": 24830,
        "z[1001];": 24831,
        "arr[100][3];": 24832,
        "arr1[3];": 24833,
        "arr[n][3];": 24834,
        "arr[i][0];": 24835,
        "arr[i][2];": 24836,
        "var,": 24837,
        "var;": 24838,
        "((s1": 24839,
        "y[n],": 24840,
        "xcost": 24841,
        "ycost": 24842,
        "zcost": 24843,
        "(xcost": 24844,
        "zcost)": 24845,
        "sum[3];": 24846,
        "sum[1]": 24847,
        "sum[2]": 24848,
        "(!sum[0]": 24849,
        "!sum[1]": 24850,
        "!sum[2])": 24851,
        "selection_insert(int": 24852,
        "a[imin])": 24853,
        "a[imin];": 24854,
        "a[imin]": 24855,
        "xay;": 24856,
        "ar[3];": 24857,
        "(ar[0]": 24858,
        "b[a][3];": 24859,
        "b[i][1];": 24860,
        "b[i][2];": 24861,
        "\"3\"": 24862,
        "\"5\"": 24863,
        "f[maxn];": 24864,
        "pos[]": 24865,
        "25,": 24866,
        "61,": 24867,
        "85,": 24868,
        "113};": 24869,
        "15};": 24870,
        "(pos[p]": 24871,
        "num[p]": 24872,
        "solve(x)": 24873,
        "xinc[]": 24874,
        "yinc[]": 24875,
        "3.141592653589793;": 24876,
        "1e14;": 24877,
        "first1": 24878,
        "floor(curr": 24879,
        "second1": 24880,
        "ceil(curr": 24881,
        "first1;": 24882,
        "\"5\\n\";": 24883,
        "start[100000];": 24884,
        "start[j]": 24885,
        "start[n]": 24886,
        "a3,": 24887,
        "b2,": 24888,
        "b3,": 24889,
        "cups": 24890,
        "medals": 24891,
        "(cups": 24892,
        "(medals": 24893,
        "medals;": 24894,
        "ceil((a": 24895,
        "5.00);": 24896,
        "ceil((x": 24897,
        "10.00);": 24898,
        "vA,": 24899,
        "vB;": 24900,
        "b3;": 24901,
        "vA": 24902,
        "++vA;": 24903,
        "vB": 24904,
        "(sumB": 24905,
        "++vB;": 24906,
        "a3)": 24907,
        "b3)": 24908,
        "((b1": 24909,
        "cup": 24910,
        "medal": 24911,
        "(cup": 24912,
        "(medal": 24913,
        "shelves": 24914,
        "(shelves": 24915,
        "total_shelf_cup": 24916,
        "total_shelf_medal": 24917,
        "(total_shelf_medal": 24918,
        "prize;": 24919,
        "ceil(medals": 24920,
        "ceil(cups": 24921,
        "med": 24922,
        "(med": 24923,
        "shela": 24924,
        "shelb": 24925,
        "ceil(shela": 24926,
        "ceil(shelb": 24927,
        "10.0);": 24928,
        "shelb;": 24929,
        "m2,": 24930,
        "m3,": 24931,
        "sumC,": 24932,
        "sumM,": 24933,
        "sumC": 24934,
        "c3;": 24935,
        "sumM": 24936,
        "((sum2": 24937,
        "cup1,": 24938,
        "cup2,": 24939,
        "cup3,": 24940,
        "med1,": 24941,
        "med2,": 24942,
        "med3,": 24943,
        "selves,": 24944,
        "cup1": 24945,
        "cup2": 24946,
        "cup3": 24947,
        "med1": 24948,
        "med2": 24949,
        "med3": 24950,
        "selves;": 24951,
        "ceil((cup1": 24952,
        "cup3)": 24953,
        "ceil((med1": 24954,
        "med3)": 24955,
        "selves)": 24956,
        "((ceil(1.0": 24957,
        "numCup,": 24958,
        "numMedal;": 24959,
        "numCup": 24960,
        "numMedal": 24961,
        "(ceil(numCup": 24962,
        "ceil(numMedal": 24963,
        "10.0)": 24964,
        "((sa": 24965,
        "MIN(long": 24966,
        "MAX(long": 24967,
        "MOD(long": 24968,
        "total_cup": 24969,
        "total_cup;": 24970,
        "total_med": 24971,
        "total_med;": 24972,
        "(double)a1": 24973,
        "(double)a2": 24974,
        "(double)a3;": 24975,
        "(double)b1": 24976,
        "(double)b2": 24977,
        "(double)b3;": 24978,
        "ceil(cup": 24979,
        "(double)5.00);": 24980,
        "ceil(med": 24981,
        "(double)10.00);": 24982,
        "(!i)": 24983,
        "((3": 24984,
        "4),": 24985,
        "min(min(2": 24986,
        "min(min(3": 24987,
        "LONG_LONG_MAX,": 24988,
        "data1,": 24989,
        "data2,": 24990,
        "data3;": 24991,
        "data1": 24992,
        "(data1": 24993,
        "data2": 24994,
        "(data2": 24995,
        "data3": 24996,
        "(data3": 24997,
        "3e10": 24998,
        "min(3": 24999,
        "min(2": 25000,
        "mn[3];": 25001,
        "mn[0]": 25002,
        "mn[1]": 25003,
        "mn[2]": 25004,
        "mn[nd": 25005,
        "int_gcd(int": 25006,
        "int_gcd(b,": 25007,
        "exp,": 25008,
        "int)i": 25009,
        "LONG_LONG_MAX;": 25010,
        "tf": 25011,
        "(tf": 25012,
        "min_cost": 25013,
        "(c[l]": 25014,
        "min_cost;": 25015,
        "c[f])": 25016,
        "(c[f]": 25017,
        "c[l])": 25018,
        "arr[MAX];": 25019,
        "a[arr[i]];": 25020,
        "a[arr[j]];": 25021,
        "min(a[0],": 25022,
        "(!check)": 25023,
        "p[50],": 25024,
        "swap(p[i],": 25025,
        "deflt,": 25026,
        "arr[30];": 25027,
        "deflt": 25028,
        "arr[left]": 25029,
        "deflt;": 25030,
        "(arr[left]": 25031,
        "arr[right]": 25032,
        "(arr[right]": 25033,
        "arr[right])": 25034,
        "++left;": 25035,
        "--right;": 25036,
        "x[N];": 25037,
        "cost(int": 25038,
        "cost(x[i]": 25039,
        "(x[n": 25040,
        "cost(x[n": 25041,
        "x[i]);": 25042,
        "c[23];": 25043,
        "(c[n": 25044,
        "mitad,": 25045,
        "menor,": 25046,
        "mitad": 25047,
        "mitad;": 25048,
        "V[j]": 25049,
        "V[i]": 25050,
        "V[j])": 25051,
        "menor;": 25052,
        "((v[n": 25053,
        "blanco,": 25054,
        "negro;": 25055,
        "blanco": 25056,
        "array[n];": 25057,
        "array[j]": 25058,
        "negro": 25059,
        "(array[j]": 25060,
        "ara1[n],": 25061,
        "ara2[n];": 25062,
        "ara1[i];": 25063,
        "ara2[j]": 25064,
        "ara1[i])": 25065,
        "(ara2[j]": 25066,
        "ara2[i])": 25067,
        "K[25],": 25068,
        "(K[i]": 25069,
        "K[N": 25070,
        "((K[i]": 25071,
        "min(A,": 25072,
        "s[1020];": 25073,
        "flas": 25074,
        "(flas)": 25075,
        "a[100050];": 25076,
        "((a[l]": 25077,
        "a[r])": 25078,
        "arr[5][5],": 25079,
        "cin.exceptions(cin.failbit);": 25080,
        "mat[5][5],": 25081,
        "(mat[i][j])": 25082,
        "mod(int": 25083,
        "mod(3": 25084,
        "ara[100][100];": 25085,
        "(abs(3": 25086,
        "abs(3": 25087,
        "tempr,": 25088,
        "tempc;": 25089,
        "tempr": 25090,
        "tempc": 25091,
        "(tempr": 25092,
        "tempr;": 25093,
        "(tempc": 25094,
        "matrix[5][5];": 25095,
        "matrix[i][j]": 25096,
        "ch.first": 25097,
        "ch.second": 25098,
        "(ch.first": 25099,
        "ch.first);": 25100,
        "(ch.second": 25101,
        "ch.second);": 25102,
        "matrix[i][j];": 25103,
        "(matrix[i][j]": 25104,
        "abs(2": 25105,
        "X[5][5],": 25106,
        "X[i][j];": 25107,
        "(X[i][j]": 25108,
        "(abs(l": 25109,
        "abs(r": 25110,
        "(abs(2": 25111,
        "numberOfMove": 25112,
        "diff1,": 25113,
        "diff2;": 25114,
        "array[5][5];": 25115,
        "array[i][j]": 25116,
        "mabs(int": 25117,
        "A[5][5];": 25118,
        "moves;": 25119,
        "mabs(a": 25120,
        "mabs(b": 25121,
        "mat[6][6];": 25122,
        "sideMoves;": 25123,
        "verticalMoves;": 25124,
        "totalMoves;": 25125,
        "verticalMoves": 25126,
        "(verticalMoves": 25127,
        "-verticalMoves;": 25128,
        "sideMoves": 25129,
        "(sideMoves": 25130,
        "-sideMoves;": 25131,
        "totalMoves": 25132,
        "matrex;": 25133,
        "(matrex": 25134,
        "j1);": 25135,
        "indx1": 25136,
        "indx2": 25137,
        "indx1),": 25138,
        "indx2);": 25139,
        "digits[10]{0};": 25140,
        "(number)": 25141,
        "digits[number": 25142,
        "(next--)": 25143,
        "(!digits[next])": 25144,
        "(good)": 25145,
        "arr[15];": 25146,
        "kg": 25147,
        "a[50];": 25148,
        "num[10];": 25149,
        "num[a[i]": 25150,
        "kg++;": 25151,
        "judge(a);": 25152,
        "(pl": 25153,
        "xx[12];": 25154,
        "strlen(xx);": 25155,
        "(xx[j]": 25156,
        "dp[11];": 25157,
        "(!dp[j])": 25158,
        "ai,": 25159,
        "ada[10];": 25160,
        "valid(int": 25161,
        "ada[i]": 25162,
        "ada[x": 25163,
        "(!ada[i])": 25164,
        "(valid(ai))": 25165,
        "fr[10]": 25166,
        "fr[a": 25167,
        "(fr[k]": 25168,
        "g[11];": 25169,
        "fill(int": 25170,
        "g[x": 25171,
        "fill(a);": 25172,
        "count_dig": 25173,
        "count_num": 25174,
        "\"0123456789\";": 25175,
        "(s.find(t[j])": 25176,
        "count_dig++;": 25177,
        "(count_dig": 25178,
        "count_num++;": 25179,
        "s2[x])": 25180,
        "s2[x]": 25181,
        "\"0123456789\",": 25182,
        "(s1.find(s[i])": 25183,
        "Arr[10]": 25184,
        "SumOfK(int": 25185,
        "resetArr()": 25186,
        "Arr[a": 25187,
        "(SumOfK(k)": 25188,
        "resetArr();": 25189,
        "sort(x.begin(),": 25190,
        "x.end());": 25191,
        "x.erase(unique(x.begin(),": 25192,
        "x.end()),": 25193,
        "(istrue(x,": 25194,
        "(vis[cur]": 25195,
        "(s.find(j": 25196,
        "arr[number": 25197,
        "a[s[j]": 25198,
        "(s.find(i": 25199,
        "fit(int": 25200,
        "arr[k": 25201,
        "(fit(arr[i],": 25202,
        "(!arr[x": 25203,
        "num2.size();": 25204,
        "((int)num2.at(l))": 25205,
        "gc++;": 25206,
        "s.find(ss[i]);": 25207,
        "v[s[j]": 25208,
        "(!v[j])": 25209,
        "numFour": 25210,
        "numFour++)": 25211,
        "numFour;": 25212,
        "\"4\";": 25213,
        "\"7\";": 25214,
        "'4';": 25215,
        "'7';": 25216,
        "fourcount": 25217,
        "fourcount++;": 25218,
        "sevenCount": 25219,
        "(fourcount--)": 25220,
        "(sevenCount--)": 25221,
        "dp[4]": 25222,
        "dp[7]": 25223,
        "4]": 25224,
        "7]": 25225,
        "v.push_back(7);": 25226,
        "v.push_back(4);": 25227,
        "fors": 25228,
        "(fors": 25229,
        "fors)": 25230,
        "fors;": 25231,
        "n4,": 25232,
        "n7,": 25233,
        "n7": 25234,
        "(n4": 25235,
        "4))": 25236,
        "n7;": 25237,
        "(s2.size()": 25238,
        "min_xy": 25239,
        "min_xy)": 25240,
        "(min_xy": 25241,
        "four_sum": 25242,
        "(four_sum": 25243,
        "four_sum)": 25244,
        "seven_sum": 25245,
        "four_sum;": 25246,
        "N4": 25247,
        "N7": 25248,
        "((N": 25249,
        "(N4": 25250,
        "N4;": 25251,
        "N7;": 25252,
        "sete": 25253,
        "quatro": 25254,
        "(sete": 25255,
        "sete--;": 25256,
        "quatro;": 25257,
        "sete;": 25258,
        "tmo;": 25259,
        "tmo": 25260,
        "ans(\"\"),": 25261,
        "Cmp(\"\");": 25262,
        "\"7\",": 25263,
        "(tmo": 25264,
        "Cmp": 25265,
        "\"4\",": 25266,
        "sort(Cmp.begin(),": 25267,
        "Cmp.end());": 25268,
        "(!tmp": 25269,
        "!tmo)": 25270,
        "Cmp.size())": 25271,
        "(!tmp)": 25272,
        "(!tmo)": 25273,
        "(-7)": 25274,
        "-7)": 25275,
        "(-7);": 25276,
        "empat": 25277,
        "tujuh": 25278,
        "sisa": 25279,
        "(sisa": 25280,
        "(empat": 25281,
        "empat;": 25282,
        "tujuh;": 25283,
        "seven": 25284,
        "four": 25285,
        "four++;": 25286,
        "four;": 25287,
        "seven;": 25288,
        "cursum": 25289,
        "cursum)": 25290,
        "ans.append(\"4\");": 25291,
        "ans.append(\"7\");": 25292,
        "floor((n": 25293,
        "\"7\"": 25294,
        "\"4\"": 25295,
        "-1000000000000,": 25296,
        "-1000000000;": 25297,
        "joy,": 25298,
        "joy": 25299,
        "joy)": 25300,
        "-999999999,": 25301,
        "max(st,": 25302,
        "(kt": 25303,
        "maximum": 25304,
        "-2147483648;": 25305,
        "f[n],": 25306,
        "max(maximum,": 25307,
        "m[n][2];": 25308,
        "-9999999999;": 25309,
        "prob": 25310,
        "(m[i][1]": 25311,
        "m[i][0]": 25312,
        "m[i][0];": 25313,
        "prob)": 25314,
        "prob;": 25315,
        "max_joy,": 25316,
        "max_joy": 25317,
        "(joy": 25318,
        "max_joy)": 25319,
        "LONG_LONG_MIN;": 25320,
        "duck;": 25321,
        "duck.push_back(f);": 25322,
        "duck.push_back(ans);": 25323,
        "duck[i]);": 25324,
        "ti;": 25325,
        "(ti": 25326,
        "max(joy,": 25327,
        "large)": 25328,
        "-999999999;": 25329,
        "v.push_back(f": 25330,
        "v.push_back(f);": 25331,
        "maxJ": 25332,
        "maxJ)": 25333,
        "Arr[100000][2];": 25334,
        "-100000000;": 25335,
        "Arr[i][j];": 25336,
        "(Arr[0][0]": 25337,
        "(Arr[0][1]": 25338,
        "(Arr[i][1]": 25339,
        "(Arr[i][0]": 25340,
        "k)));": 25341,
        "Arr[i][0]);": 25342,
        "a.first": 25343,
        "a.second;": 25344,
        "a.first);": 25345,
        "t));": 25346,
        "numberOfRestaurants,": 25347,
        "lunchBreakTime,": 25348,
        "maxJoy;": 25349,
        "numberOfRestaurants": 25350,
        "lunchBreakTime;": 25351,
        "*restaurantsJoys;": 25352,
        "*restaurantsLunchTimes;": 25353,
        "restaurantsJoys": 25354,
        "int[numberOfRestaurants];": 25355,
        "restaurantsLunchTimes": 25356,
        "restaurantsJoys[0]": 25357,
        "restaurantsLunchTimes[0];": 25358,
        "(restaurantsLunchTimes[0]": 25359,
        "lunchBreakTime)": 25360,
        "maxJoy": 25361,
        "lunchBreakTime);": 25362,
        "restaurantsJoys[0];": 25363,
        "numberOfRestaurants;": 25364,
        "restaurantsJoys[i]": 25365,
        "restaurantsLunchTimes[i];": 25366,
        "currentJoy;": 25367,
        "(restaurantsLunchTimes[i]": 25368,
        "currentJoy": 25369,
        "restaurantsJoys[i];": 25370,
        "(currentJoy": 25371,
        "maxJoy)": 25372,
        "f[10005],": 25373,
        "t[10005],": 25374,
        "j[10005];": 25375,
        "j[i]": 25376,
        "sort(&j[0],": 25377,
        "&j[n]);": 25378,
        "j[n": 25379,
        "fs[n],": 25380,
        "ts[n];": 25381,
        "fs[i]": 25382,
        "ts[i];": 25383,
        "(ts[i]": 25384,
        "max(fs[i]": 25385,
        "max(fs[i],": 25386,
        "fi;": 25387,
        "-1e18,": 25388,
        "joy[N],": 25389,
        "t[N];": 25390,
        "joy[i]": 25391,
        "joy[i]);": 25392,
        "f[100001],": 25393,
        "t[100001];": 25394,
        "((0": 25395,
        "xr": 25396,
        "(xr": 25397,
        "((xr": 25398,
        "bitset<128>": 25399,
        "b(x);": 25400,
        "b.count();": 25401,
        "assert(0);": 25402,
        "xorr,": 25403,
        "andd)": 25404,
        "(xorr": 25405,
        "andd": 25406,
        "(andd": 25407,
        "xorr": 25408,
        "bit1": 25409,
        "bit2": 25410,
        "(bit1": 25411,
        "func(xorr,": 25412,
        "andd));": 25413,
        "xorr;": 25414,
        "andd;": 25415,
        "andd);": 25416,
        "xorr)": 25417,
        "-k,": 25418,
        "print(k": 25419,
        "putchar(k": 25420,
        "println(long": 25421,
        "print(k);": 25422,
        "printsp(long": 25423,
        "putchar('": 25424,
        "print(0),": 25425,
        "print(ans);": 25426,
        "modularExponentiation(signed": 25427,
        "power": 25428,
        "(power": 25429,
        "ceil(signed": 25430,
        "bits": 25431,
        "bits;": 25432,
        "println(0);": 25433,
        "println(ans);": 25434,
        "dp0": 25435,
        "dp1": 25436,
        "dp0;": 25437,
        "dp1;": 25438,
        "(!dp0)": 25439,
        "bit": 25440,
        "bit++;": 25441,
        "bit;": 25442,
        "2LL;": 25443,
        "41;": 25444,
        "(((1LL": 25445,
        "(!((1LL": 25446,
        "andd))": 25447,
        "2LL": 25448,
        "dfs((s": 25449,
        "dfs(s": 25450,
        "dfs(ss,": 25451,
        "xx);": 25452,
        "ways": 25453,
        "setbit": 25454,
        "pow(2": 25455,
        "setbit)": 25456,
        "ways++;": 25457,
        "ways);": 25458,
        "(!(d": 25459,
        "++zero;": 25460,
        "((aa": 25461,
        "i))))": 25462,
        "(!c)": 25463,
        "arr[10000000];": 25464,
        "x_p": 25465,
        "x_n": 25466,
        "y_p": 25467,
        "y_n": 25468,
        "x_p++;": 25469,
        "x_n++;": 25470,
        "y_p++;": 25471,
        "y_n++;": 25472,
        "(x_p": 25473,
        "arr[a][2];": 25474,
        "(cp": 25475,
        "lcnt,": 25476,
        "rcnt;": 25477,
        "lcnt++;": 25478,
        "rcnt++;": 25479,
        "(lcnt": 25480,
        "rcnt": 25481,
        "a[100000][2];": 25482,
        "cntx": 25483,
        "cnty": 25484,
        "cntx++;": 25485,
        "cnty++;": 25486,
        "(cntx": 25487,
        "\"No\")": 25488,
        "esq": 25489,
        "dir++;": 25490,
        "esq++;": 25491,
        "(esq": 25492,
        "x[100001],": 25493,
        "y[100001];": 25494,
        "left++;": 25495,
        "getint();": 25496,
        "kir": 25497,
        "kan": 25498,
        "(kir": 25499,
        "x_1": 25500,
        "x_1++;": 25501,
        "inutil": 25502,
        "contador": 25503,
        "contador++;": 25504,
        "leg;": 25505,
        "leg": 25506,
        "(str.at(i)": 25507,
        "str.at(i": 25508,
        "p[50];": 25509,
        "word[i": 25510,
        "stone_color;": 25511,
        "stone_color.size();": 25512,
        "(stone_color[i]": 25513,
        "stone_color[i": 25514,
        "takeStones(char": 25515,
        "arr[])": 25516,
        "smallAns": 25517,
        "takeStones(arr": 25518,
        "smallAns;": 25519,
        "*str": 25520,
        "char[n": 25521,
        "takeStones(str)": 25522,
        "(inp.at(i)": 25523,
        "inp.at(i": 25524,
        "str[50];": 25525,
        "Numberofstones;": 25526,
        "Input;": 25527,
        "Output": 25528,
        "Input.length();": 25529,
        "(Input[i]": 25530,
        "Input[i": 25531,
        "Output++;": 25532,
        "Input.erase(i,": 25533,
        "res[res.size()": 25534,
        "arr[50];": 25535,
        "remove": 25536,
        "remove++;": 25537,
        "shu": 25538,
        "shu++;": 25539,
        "(stone[i]": 25540,
        "stone[i": 25541,
        "s[50];": 25542,
        "xay[n];": 25543,
        "xay[i];": 25544,
        "(xay[i]": 25545,
        "-k;": 25546,
        "vis[c]": 25547,
        "abs(s": 25548,
        "e));": 25549,
        "ce": 25550,
        "ce2": 25551,
        "cs2": 25552,
        "ce++;": 25553,
        "cs2++;": 25554,
        "ce2++;": 25555,
        "max(abs(cs": 25556,
        "ce2),": 25557,
        "Max;": 25558,
        "Max++;": 25559,
        "m[1],": 25560,
        "mm[-1]": 25561,
        "m[-1];": 25562,
        "mm[a[j]]--;": 25563,
        "abs(mm[1]": 25564,
        "mm[-1]));": 25565,
        "type[maxn],": 25566,
        "sizeof(int)": 25567,
        "del[i]": 25568,
        "(!del[i])": 25569,
        "(type[i]": 25570,
        "c2));": 25571,
        "abs(e": 25572,
        "book;": 25573,
        "tables[n": 25574,
        "book[-1]": 25575,
        "tables[i];": 25576,
        "book[tables[i]]++;": 25577,
        "maxSol": 25578,
        "cnt[tables[i]]--;": 25579,
        "(maxSol": 25580,
        "fabs(cnt[-1]": 25581,
        "cnt[1]))": 25582,
        "cnt[1]);": 25583,
        "numOfInfo": 25584,
        "numOfNet": 25585,
        "numOfInfo++;": 25586,
        "numOfNet++;": 25587,
        "numOfInfo,": 25588,
        "numOfNet;": 25589,
        "abs(p": 25590,
        "abs(k1": 25591,
        "k2));": 25592,
        "t(n);": 25593,
        "t[b": 25594,
        "abs(ne": 25595,
        "ns));": 25596,
        "A[104];": 25597,
        "abs(cc));": 25598,
        "allA": 25599,
        "A[K];": 25600,
        "fill(A,": 25601,
        "allB": 25602,
        "B[K];": 25603,
        "fill(B,": 25604,
        "allA++;": 25605,
        "A[k]++;": 25606,
        "allB++;": 25607,
        "B[k]++;": 25608,
        "abs((allA": 25609,
        "A[k])": 25610,
        "(allB": 25611,
        "B[k])));": 25612,
        "fff1": 25613,
        "fff2": 25614,
        "((fff1": 25615,
        "(fff1": 25616,
        "(flag2": 25617,
        "fff2)": 25618,
        "(fabs(e": 25619,
        "fabs(e": 25620,
        "int(max)": 25621,
        "a[122];": 25622,
        "vis[122];": 25623,
        "(!vis[j])": 25624,
        "net": 25625,
        "net++;": 25626,
        "abs(tt": 25627,
        "te);": 25628,
        "abs(nn": 25629,
        "net);": 25630,
        "ans.push_back(abs(m1": 25631,
        "m2));": 25632,
        "*max_element(ans.begin(),": 25633,
        "(int)fabs(x": 25634,
        "MAX(sum,": 25635,
        "study": 25636,
        "social": 25637,
        "arr.push_back(m);": 25638,
        "study++;": 25639,
        "social++;": 25640,
        "tstudy": 25641,
        "study,": 25642,
        "tsocial": 25643,
        "social;": 25644,
        "tstudy--;": 25645,
        "tsocial--;": 25646,
        "tres": 25647,
        "abs(tstudy": 25648,
        "tsocial);": 25649,
        "(tres": 25650,
        "cpr(string": 25651,
        "'$')": 25652,
        "v[i++];": 25653,
        "cpr(s,": 25654,
        "{});": 25655,
        "borne": 25656,
        "a[borne];": 25657,
        "oc1": 25658,
        "oc2": 25659,
        "(-(n": 25660,
        "(a[c]": 25661,
        "--c1;": 25662,
        "--c2;": 25663,
        "max(rep,": 25664,
        "(abs(c1": 25665,
        "c2)));": 25666,
        "oc1;": 25667,
        "oc2;": 25668,
        "-2147483647;": 25669,
        "-1000;": 25670,
        "mm[1]--;": 25671,
        "mm[-1]--;": 25672,
        "mm[-1]);": 25673,
        "arr[107],": 25674,
        "brr[107];": 25675,
        "abso(long": 25676,
        "brr[i]": 25677,
        "brr[j];": 25678,
        "cntb++;": 25679,
        "max(mm,": 25680,
        "abso(cnta": 25681,
        "cntb));": 25682,
        "input(k,": 25683,
        "max(abs(input[i]": 25684,
        "sum),": 25685,
        "ModPow(long": 25686,
        "ModPow(a,": 25687,
        "ModPow((1ll": 25688,
        "a[100100]": 25689,
        "v.resize(n": 25690,
        "c[b": 25691,
        "mp[1000000];": 25692,
        "s[100005]": 25693,
        "s[a]": 25694,
        "ep;": 25695,
        "ep.push_back(m);": 25696,
        "sort(ep.begin(),": 25697,
        "ep.end());": 25698,
        "ep[i": 25699,
        "ar[100005];": 25700,
        "ar[x]": 25701,
        "arr[m]++;": 25702,
        "vv.resize(n": 25703,
        "sort(vv.begin(),": 25704,
        "vv.end());": 25705,
        "num[m]": 25706,
        "arr[100010]": 25707,
        "arr[num]++;": 25708,
        "v[1000005]": 25709,
        "mark[maxn];": 25710,
        "mark[x]": 25711,
        "V[k": 25712,
        "(!V[i])": 25713,
        "f[100001];": 25714,
        "f[a]": 25715,
        "r.push_back(j);": 25716,
        "epi;": 25717,
        "number_list;": 25718,
        "number_list.push_back(epi);": 25719,
        "sort(number_list.begin(),": 25720,
        "number_list.end());": 25721,
        "number_list.size();": 25722,
        "(number_list[i]": 25723,
        "((((n)": 25724,
        "miss,": 25725,
        "before;": 25726,
        "watched;": 25727,
        "watched.push_back(ep);": 25728,
        "sort(watched.begin(),": 25729,
        "watched.end());": 25730,
        "(watched[i]": 25731,
        "miss": 25732,
        "((int)((v).size()));": 25733,
        "v(x": 25734,
        "v[y]": 25735,
        "(!v[k])": 25736,
        "buf;": 25737,
        "a[buf]": 25738,
        "id,": 25739,
        "v[a]++;": 25740,
        "ai.insert(a);": 25741,
        "(ai.find(i)": 25742,
        "ai.end())": 25743,
        "nInputs;": 25744,
        "rTotal": 25745,
        "fTotal": 25746,
        "nInputs": 25747,
        "yolo;": 25748,
        "cz;": 25749,
        "leftnum": 25750,
        "leavekid": 25751,
        "cz": 25752,
        "(cz": 25753,
        "(leftnum": 25754,
        "leavekid++;": 25755,
        "add,": 25756,
        "add)": 25757,
        "s.push(x);": 25758,
        "s.push(a": 25759,
        "kids": 25760,
        "kids++;": 25761,
        "demand": 25762,
        "supply": 25763,
        "upset": 25764,
        "spicifier;": 25765,
        "supply;": 25766,
        "spicifier": 25767,
        "(spicifier": 25768,
        "supply)": 25769,
        "upset++;": 25770,
        "cout.precision(13);": 25771,
        "in_amt,": 25772,
        "cur_amt,": 25773,
        "left_cn,": 25774,
        "dist_ch": 25775,
        "sg;": 25776,
        "in_amt;": 25777,
        "left_cn": 25778,
        "sg": 25779,
        "cur_amt;": 25780,
        "(sg": 25781,
        "(left_cn": 25782,
        "cur_amt": 25783,
        "dist_ch++;": 25784,
        "distressed": 25785,
        "distressed++;": 25786,
        "sign,": 25787,
        "spc;": 25788,
        "sad": 25789,
        "sad++;": 25790,
        "(n--": 25791,
        "num[1001];": 25792,
        "childs": 25793,
        "packs": 25794,
        "type": 25795,
        "packs;": 25796,
        "(packs": 25797,
        "childs++;": 25798,
        "-d);": 25799,
        "distress": 25800,
        "exist": 25801,
        "(exist": 25802,
        "distress++;": 25803,
        "num.push_back(i);": 25804,
        "num.push_back(n);": 25805,
        "num.size();": 25806,
        "esPrimo(const": 25807,
        "divN": 25808,
        "divN++;": 25809,
        "(divN": 25810,
        "divisores(const": 25811,
        "(esPrimo(i))": 25812,
        "d.push_back(i);": 25813,
        "divisores(n);": 25814,
        "d[p]))": 25815,
        "d[p];": 25816,
        "r.push_back(d[p]);": 25817,
        "int(d.size()))": 25818,
        "(int(r.size())": 25819,
        "int(r.size());": 25820,
        "(mult": 25821,
        "is_prime[200000];": 25822,
        "num[20000];": 25823,
        "temp[20000];": 25824,
        "shai()": 25825,
        "(!is_prime[i])": 25826,
        "shai();": 25827,
        "(++sum": 25828,
        "temp[sum]": 25829,
        "fac;": 25830,
        "fac.push_back(i);": 25831,
        "fac.push_back(n);": 25832,
        "fac.size())": 25833,
        "fac.size();": 25834,
        "fac[j];": 25835,
        "fac[i]": 25836,
        "ivmind[100005],": 25837,
        "prime[100005];": 25838,
        "a[25],": 25839,
        "fff;": 25840,
        "ES(int": 25841,
        "(!ivmind[i])": 25842,
        "ivmind[i]": 25843,
        "prime[++p]": 25844,
        "ivmind[i": 25845,
        "ES(n);": 25846,
        "fff": 25847,
        "a[++num]": 25848,
        "prime[j];": 25849,
        "(fff": 25850,
        "faktori;": 25851,
        "faktori.push_back(i);": 25852,
        "(faktori.size()": 25853,
        "faktori[i]": 25854,
        "faktori.size();": 25855,
        "faktori[i];": 25856,
        "isprime[123457];": 25857,
        "prifac(int": 25858,
        "prime.size())": 25859,
        "ans.push_back(prime[i]);": 25860,
        "pri(123456);": 25861,
        "prifac(n);": 25862,
        "ans.size())": 25863,
        "ans1.push_back(ans[i]);": 25864,
        "((ans1.size()": 25865,
        "factors.push_back(n);": 25866,
        "(factors.size()": 25867,
        "factors[i]": 25868,
        "factors.size();": 25869,
        "factors[i];": 25870,
        "criba[100001];": 25871,
        "crearCriba(const": 25872,
        "memset(criba,": 25873,
        "sizeof(criba));": 25874,
        "criba[0]": 25875,
        "criba[1]": 25876,
        "(!criba[i])": 25877,
        "criba[j]": 25878,
        "crearCriba(n);": 25879,
        "resp.push_back(n);": 25880,
        "resp.push_back(aux);": 25881,
        "(int)resp.size();": 25882,
        "resp[i]": 25883,
        "\\n\"[i": 25884,
        "(int)resp.size()": 25885,
        "vec.push_back(x);": 25886,
        "vec.push_back(n);": 25887,
        "a[ans++]": 25888,
        "c[10000],": 25889,
        "del": 25890,
        "c[d]": 25891,
        "del;": 25892,
        "del++;": 25893,
        "pp;": 25894,
        "counting[MAX]": 25895,
        "in[MAX]": 25896,
        "out[MAX]": 25897,
        "primeFactors(int": 25898,
        "p.push_back(2);": 25899,
        "p.push_back(n);": 25900,
        "primeFactors(n);": 25901,
        "f.push_back(i);": 25902,
        "f.push_back(n);": 25903,
        "(f.size()": 25904,
        "prim[1000007": 25905,
        "prim[1]": 25906,
        "1000007;": 25907,
        "prim[i]": 25908,
        "sqrt(1000007);": 25909,
        "(!prim[i])": 25910,
        "prim[j]": 25911,
        "q.front()": 25912,
        "fj(long": 25913,
        "a[c++]": 25914,
        "fj(n);": 25915,
        "k.push_back(a);": 25916,
        "answer.push_back((k[i]": 25917,
        "k[temp]": 25918,
        "(answer.empty())": 25919,
        "stable_sort(answer.begin(),": 25920,
        "answer.end());": 25921,
        "answer[0]": 25922,
        "a[j],": 25923,
        "direcciones;": 25924,
        "posiciones(n);": 25925,
        "posiciones[i];": 25926,
        "hayColision": 25927,
        "dir1": 25928,
        "direcciones[i": 25929,
        "dir2": 25930,
        "direcciones[i];": 25931,
        "(dir1": 25932,
        "(hayColision)": 25933,
        "posiciones[i]": 25934,
        "nowR": 25935,
        "1000000000000000000LL;": 25936,
        "(nowR": 25937,
        "nowR)": 25938,
        "1000000000000000000LL)": 25939,
        "9223372036854775807,": 25940,
        "a[1000007];": 25941,
        "b[1000007];": 25942,
        "l.push_back(b[i]);": 25943,
        "r.push_back(b[i]);": 25944,
        "(l.empty()": 25945,
        "r.empty())": 25946,
        "upper_bound(l.begin(),": 25947,
        "l.end(),": 25948,
        "min(_min,": 25949,
        "abs(*x": 25950,
        "r[i]));": 25951,
        "(_min": 25952,
        "2000000000000;": 25953,
        "freq[5000][101]": 25954,
        "time);": 25955,
        "smallest": 25956,
        "arr1[i": 25957,
        "(arr2[i": 25958,
        "arr2[i])": 25959,
        "(smallest": 25960,
        "smallest)": 25961,
        "num[200000],": 25962,
        "ch[i": 25963,
        "nf": 25964,
        "(nf": 25965,
        "nf;": 25966,
        "1000000001)": 25967,
        "LLONG_MAX;": 25968,
        "LLONG_MAX)": 25969,
        "a[2000100];": 25970,
        "b[2000100];": 25971,
        "cmd[200000": 25972,
        "pos[200000": 25973,
        "dist[200000": 25974,
        "cmd[i];": 25975,
        "(cmd[i]": 25976,
        "cmd[i": 25977,
        "dist[cnt++]": 25978,
        "pos[i": 25979,
        "((s[i": 25980,
        "'L'))": 25981,
        "999999999)": 25982,
        "((V[i]": 25983,
        "(bit)": 25984,
        "cordinates[n];": 25985,
        "movei[n];": 25986,
        "movei[i];": 25987,
        "cordinates[i];": 25988,
        "(movei[i]": 25989,
        "(cordinates[l]": 25990,
        "cordinates[r])": 25991,
        "width(int": 25992,
        "\"hi\";": 25993,
        "mpow(int": 25994,
        "1.0;": 25995,
        "1.5;": 25996,
        "(mpow(i)": 25997,
        "floor(log(b": 25998,
        "log(1.500))": 25999,
        "a[1001][3];": 26000,
        "log(b)": 26001,
        "log(a);": 26002,
        "log(1.5);": 26003,
        "floor(d);": 26004,
        "++k": 26005,
        "limak,": 26006,
        "bob;": 26007,
        "limak;": 26008,
        "years": 26009,
        "(bob": 26010,
        "limak)": 26011,
        "bob": 26012,
        "limak": 26013,
        "years++;": 26014,
        "(limak": 26015,
        "bob)": 26016,
        "Limak": 26017,
        "year_limake": 26018,
        "(Limak": 26019,
        "++year_limake;": 26020,
        "snack[100009];": 26021,
        "bro,": 26022,
        "bro;": 26023,
        "bro)": 26024,
        "bro": 26025,
        "(int)((log(b)": 26026,
        "log(a))": 26027,
        "log(1.5))": 26028,
        "x[100005];": 26029,
        "y[100005];": 26030,
        "1234;": 26031,
        "log(b": 26032,
        "int(answer)": 26033,
        "s[20000];": 26034,
        "er": 26035,
        "a[20000];": 26036,
        "f[200000];": 26037,
        "er)": 26038,
        "f[n": 26039,
        "er;": 26040,
        "power(x": 26041,
        "power(2": 26042,
        "power[105];": 26043,
        "btdc(string": 26044,
        "power[len": 26045,
        "power[0]": 26046,
        "power[i]": 26047,
        "power[i": 26048,
        "(btdc(s,": 26049,
        "modpow(b,": 26050,
        "len++)": 26051,
        "modpow(2,": 26052,
        "modulo": 26053,
        "modulo)": 26054,
        "mod(x);": 26055,
        "mod(a,": 26056,
        "mod(ret": 26057,
        "mod(x": 26058,
        "reverse(x.begin(),": 26059,
        "power(2,": 26060,
        "modulo;": 26061,
        "7LL;": 26062,
        "addm(long": 26063,
        "prodm(long": 26064,
        "powm(long": 26065,
        "prodm(ans,": 26066,
        "prodm(base,": 26067,
        "addm(ans,": 26068,
        "prodm(powm(2,": 26069,
        "powm(2,": 26070,
        "n2[201];": 26071,
        "n2[0]": 26072,
        "n2[i": 26073,
        "(n2[i]": 26074,
        "X.size();": 26075,
        "n2[i]": 26076,
        "n2[2": 26077,
        "(X.size()": 26078,
        "1)])": 26079,
        "210;": 26080,
        "stab(long": 26081,
        "st2[MAXN];": 26082,
        "st2[0]": 26083,
        "st2[i]": 26084,
        "stab(st2[i": 26085,
        "2LL);": 26086,
        "stab(ans": 26087,
        "st2[n": 26088,
        "s[250];": 26089,
        "power[MAXN];": 26090,
        "(2LL": 26091,
        "(power[i]": 26092,
        "bitset<200>": 26093,
        "(second[second.size()": 26094,
        "long)b[i];": 26095,
        "second.size()": 26096,
        "30);": 26097,
        "twoPower(int": 26098,
        "twoPower(x": 26099,
        "rec(int": 26100,
        "rec(i": 26101,
        "twoPower(2": 26102,
        "1)))": 26103,
        "rec(0)": 26104,
        "Power(int": 26105,
        "(Power(p)": 26106,
        "'0')))": 26107,
        "INFl": 26108,
        "myPow(long": 26109,
        "myPow(2,": 26110,
        "power)": 26111,
        "mo": 26112,
        "mo;": 26113,
        "mo,": 26114,
        "cal(string": 26115,
        "poww(2,": 26116,
        "cal(s);": 26117,
        "pot(2000,": 26118,
        "pot[i]": 26119,
        "pot[i": 26120,
        "((pot[2": 26121,
        "(A.size()": 26122,
        "pot[i])": 26123,
        "arr[101]": 26124,
        "arr[s.size()": 26125,
        "r[201];": 26126,
        "(x.at(i)": 26127,
        "r[2": 26128,
        "i)]": 26129,
        "tp[105];": 26130,
        "long)mod)": 26131,
        "tp[0]": 26132,
        "(int)105;": 26133,
        "tp[i]": 26134,
        "mul(tp[i": 26135,
        "(int)(s.size());": 26136,
        "add(ans,": 26137,
        "mul(tp[i],": 26138,
        "mul(tp[len],": 26139,
        "tp[len])));": 26140,
        "dos_a_la[(2": 26141,
        "dos_a_la[2": 26142,
        "1)];": 26143,
        "dos_a_la[0]": 26144,
        "MAXN);": 26145,
        "dos_a_la[i]": 26146,
        "dos_a_la[i": 26147,
        "f(x.size()": 26148,
        "dos_a_la[n": 26149,
        "dos_a_la[i];": 26150,
        "p[400],": 26151,
        "map[8];": 26152,
        "\".BW\";": 26153,
        "map[j][i]": 26154,
        "arr[j][i]": 26155,
        "min(up,": 26156,
        "min(down,": 26157,
        "\"A\"": 26158,
        "\"B\"": 26159,
        "board[9][9];": 26160,
        "Bstep": 26161,
        "Wstep": 26162,
        "isboundary(int": 26163,
        "countstep(int": 26164,
        "colour)": 26165,
        "(colour": 26166,
        "step;;": 26167,
        "step)": 26168,
        "(board[i][c]": 26169,
        "(isboundary(i))": 26170,
        "Wstep)": 26171,
        "Bstep)": 26172,
        "board[r][c];": 26173,
        "(board[r][c]": 26174,
        "countstep(r,": 26175,
        "board[r][c]);": 26176,
        "(Wstep": 26177,
        "firstw": 26178,
        "firstb": 26179,
        "min(now,": 26180,
        "firstw);": 26181,
        "max(firstb,": 26182,
        "(firstw": 26183,
        "firstb)": 26184,
        "tab[8][8];": 26185,
        "andaw(int": 26186,
        "(tab[i][c]": 26187,
        "andab(int": 26188,
        "t[8];": 26189,
        "memset(t,": 26190,
        "tab[i][j];": 26191,
        "miniw": 26192,
        "minib": 26193,
        "(tab[i][j]": 26194,
        "min(miniw,": 26195,
        "andaw(i,": 26196,
        "min(minib,": 26197,
        "andab(i,": 26198,
        "(miniw": 26199,
        "minib)": 26200,
        "\"A\\n\";": 26201,
        "\"B\")": 26202,
        "polje[8][8];": 26203,
        "polje[y][x];": 26204,
        "(polje[x][y]": 26205,
        "'W'": 26206,
        "W)": 26207,
        "(polje[x][7": 26208,
        "y]": 26209,
        "oo,": 26210,
        "oo;": 26211,
        "(s[k][j]": 26212,
        "((ans)": 26213,
        "((ans2)": 26214,
        "(ans2)": 26215,
        "\"B\\n\";": 26216,
        "map[8][8];": 26217,
        "af": 26218,
        "blocka[8];": 26219,
        "blockb[8]": 26220,
        "fill_n(blocka,": 26221,
        "blocka[j]": 26222,
        "blockb[j])": 26223,
        "blockb[j]": 26224,
        "sort(blockb,": 26225,
        "blockb": 26226,
        "sort(blocka,": 26227,
        "blocka": 26228,
        "blocka[0];": 26229,
        "blockb[7];": 26230,
        "(af": 26231,
        "Au[9],": 26232,
        "Ad[9],": 26233,
        "Bu[9],": 26234,
        "Bd[9];": 26235,
        "(!Bu[j])": 26236,
        "Bu[j]": 26237,
        "Bd[j]": 26238,
        "(!Au[j])": 26239,
        "Au[j]": 26240,
        "Ad[j]": 26241,
        "ansA": 26242,
        "ansB": 26243,
        "(Bd[j])": 26244,
        "(Bd[j]": 26245,
        "Ad[j])": 26246,
        "min(ansB,": 26247,
        "(Au[j])": 26248,
        "(Au[j]": 26249,
        "!Bu[j])": 26250,
        "min(ansA,": 26251,
        "(ansA": 26252,
        "1e10": 26253,
        "mat[8][8];": 26254,
        "Mina": 26255,
        "Minb": 26256,
        "(mat[j][i]": 26257,
        "min(Mina,": 26258,
        "min(Minb,": 26259,
        "(Mina": 26260,
        "Minb)": 26261,
        "puts(\"A\");": 26262,
        "puts(\"B\");": 26263,
        "board[8": 26264,
        "2][8": 26265,
        "bestw": 26266,
        "bestb": 26267,
        "min(bestw,": 26268,
        "min(bestb,": 26269,
        "(bestw": 26270,
        "bestb)": 26271,
        "chess[8][8];": 26272,
        "movesA": 26273,
        "movesB": 26274,
        "(chess[j][i]": 26275,
        "(movesA": 26276,
        "(movesB": 26277,
        "movesB)": 26278,
        "s[8][8];": 26279,
        "Awin": 26280,
        "Bwin": 26281,
        "(Awin": 26282,
        "Bwin)": 26283,
        "s(8);": 26284,
        "int)(8);": 26285,
        "(s[0": 26286,
        "i][j]": 26287,
        "(ww": 26288,
        "s[0": 26289,
        "(s[7": 26290,
        "(bb": 26291,
        "s[7": 26292,
        "min(w,": 26293,
        "ww);": 26294,
        "bb);": 26295,
        "tabuleiro[8][8];": 26296,
        "menorW": 26297,
        "menorB": 26298,
        "testeW(int": 26299,
        "(tabuleiro[i][j]": 26300,
        "dist++;": 26301,
        "menorW;": 26302,
        "(menorW": 26303,
        "testeB(int": 26304,
        "menorB;": 26305,
        "(menorB": 26306,
        "tabuleiro[i][j];": 26307,
        "testeW(i,": 26308,
        "testeB(i,": 26309,
        "menorB)": 26310,
        "v(8);": 26311,
        "(v[k][j]": 26312,
        "\"A\\n\"": 26313,
        "\"B\\n\");": 26314,
        "1e1;": 26315,
        "min(Q,": 26316,
        "min(P,": 26317,
        "Q)": 26318,
        "vs(8);": 26319,
        "minw": 26320,
        "(vs[k][j]": 26321,
        "min(minw,": 26322,
        "dis);": 26323,
        "minB": 26324,
        "min(minB,": 26325,
        "(minw": 26326,
        "minB)": 26327,
        "(str[k][j]": 26328,
        "ql,": 26329,
        "qr;": 26330,
        "ql": 26331,
        "w(n": 26332,
        "w[0]": 26333,
        "w[n": 26334,
        "minr": 26335,
        "w[i": 26336,
        "wl": 26337,
        "wr": 26338,
        "w[n]": 26339,
        "abs(d);": 26340,
        "pen;": 26341,
        "(ad": 26342,
        "pen": 26343,
        "ql;": 26344,
        "min(minr,": 26345,
        "qr,": 26346,
        "w[100005],": 26347,
        "sum[100005];": 26348,
        "(sum[n]": 26349,
        "sum[i])": 26350,
        "w[1000006]": 26351,
        "d[1000006]": 26352,
        "sum[1000006]": 26353,
        "(min(l,": 26354,
        "w[0])": 26355,
        "d[en]": 26356,
        "sum[en": 26357,
        "d[st]": 26358,
        "(sum[n": 26359,
        "q2": 26360,
        "sum[en]": 26361,
        "sum[st])": 26362,
        "wt(100001": 26363,
        "sums(100001": 26364,
        "wt[1];": 26365,
        "sums[1]": 26366,
        "wt[i];": 26367,
        "sums[i]": 26368,
        "wt[i]": 26369,
        "sums[i": 26370,
        "sums[x]": 26371,
        "(sums[n]": 26372,
        "sums[x]);": 26373,
        "qr": 26374,
        "cost[100005];": 26375,
        "lef[100005];": 26376,
        "righ[100005];": 26377,
        "lef[0]": 26378,
        "lef[i]": 26379,
        "lef[i": 26380,
        "cost[i": 26381,
        "righ[n": 26382,
        "righ[i]": 26383,
        "righ[i": 26384,
        "10000000000000;": 26385,
        "curr)": 26386,
        "235034914)": 26387,
        "234540275": 26388,
        "Ql,": 26389,
        "Qr;": 26390,
        "Ql": 26391,
        "smL": 26392,
        "smR": 26393,
        "smR;": 26394,
        "w[L": 26395,
        "smR);": 26396,
        "w[R": 26397,
        "Qr": 26398,
        "lft[100005],": 26399,
        "rht[100005];": 26400,
        "lft[i]": 26401,
        "rht[i]": 26402,
        "lft[i": 26403,
        "rht[i": 26404,
        "150000;": 26405,
        "suml[N],": 26406,
        "sumr[N];": 26407,
        "qr)": 26408,
        "memset(suml,": 26409,
        "sizeof(suml));": 26410,
        "memset(sumr,": 26411,
        "sizeof(sumr));": 26412,
        "suml[0]": 26413,
        "sumr[0]": 26414,
        "suml[i]": 26415,
        "suml[i": 26416,
        "sumr[i": 26417,
        "2147483640;": 26418,
        "ll,": 26419,
        "sumr[n": 26420,
        "min(maxx,": 26421,
        "w[100005];": 26422,
        "leftPreSum[100005],": 26423,
        "rightPreSum[100005];": 26424,
        "leftPreSum[0]": 26425,
        "rightPreSum[n": 26426,
        "leftPreSum[i]": 26427,
        "leftPreSum[i": 26428,
        "rightPreSum[i]": 26429,
        "rightPreSum[i": 26430,
        "currentans;": 26431,
        "currentans": 26432,
        "currentans);": 26433,
        "weights[n];": 26434,
        "weights[i];": 26435,
        "firstSum[n": 26436,
        "lastSum[n": 26437,
        "firstSum[0]": 26438,
        "lastSum[0]": 26439,
        "firstSum[i]": 26440,
        "firstSum[i": 26441,
        "weights[i": 26442,
        "lastSum[i]": 26443,
        "lastSum[i": 26444,
        "weights[n": 26445,
        "total_cost": 26446,
        "min(total_cost,": 26447,
        "cost);": 26448,
        "countersum": 26449,
        "ci": 26450,
        "ci++;": 26451,
        "cn--;": 26452,
        "(ci": 26453,
        "taken++)": 26454,
        "taken;": 26455,
        "w[left];": 26456,
        "curans": 26457,
        "sumr;": 26458,
        "curans);": 26459,
        "sumw[maxn];": 26460,
        "sumw[i]": 26461,
        "sumw[i": 26462,
        "mine": 26463,
        "sumw[n]": 26464,
        "wheniEndFromLeft": 26465,
        "(sumw[i]": 26466,
        "sumw[0])": 26467,
        "(sumw[n]": 26468,
        "sumw[i])": 26469,
        "Ql;": 26470,
        "min(mine,": 26471,
        "wheniEndFromLeft);": 26472,
        "cans": 26473,
        "(w[n]": 26474,
        "w[i]);": 26475,
        "ql);": 26476,
        "qr);": 26477,
        "cans);": 26478,
        "cans;": 26479,
        "w[100002],": 26480,
        "sum[100002],": 26481,
        "sumr[100002],": 26482,
        "Qr,": 26483,
        "dq;": 26484,
        "dq.push_back(pre);": 26485,
        "dq[i]": 26486,
        "dq[i": 26487,
        "(dq[i])": 26488,
        "(dq[n": 26489,
        "dq[i])": 26490,
        "dq[n": 26491,
        "Qr);": 26492,
        "w(n);": 26493,
        "abs(abs(2": 26494,
        "newM": 26495,
        "newM);": 26496,
        "w[100001],": 26497,
        "lp,": 26498,
        "lc,": 26499,
        "rc,": 26500,
        "rp,": 26501,
        "rc": 26502,
        "rp;": 26503,
        "rc);": 26504,
        "abs((n": 26505,
        "min(lp,": 26506,
        "rp);": 26507,
        "lc);": 26508,
        "tempsum": 26509,
        "(tempsum);": 26510,
        "tempsum);": 26511,
        "(q2": 26512,
        "vec[MAXN],": 26513,
        "p[MAXN];": 26514,
        "vec[i],": 26515,
        "(p[n]": 26516,
        "ret);": 26517,
        "cardOnTable;": 26518,
        "myCards[5];": 26519,
        "myCards[i];": 26520,
        "((!win)": 26521,
        "((cardOnTable[0]": 26522,
        "myCards[i][0])": 26523,
        "(cardOnTable[1]": 26524,
        "myCards[i++][1]))": 26525,
        "card[100];": 26526,
        "suit,": 26527,
        "suit": 26528,
        "gets(card);": 26529,
        "14;": 26530,
        "(suit": 26531,
        "card[i])": 26532,
        "me(5);": 26533,
        "OK(string": 26534,
        "me[i];": 26535,
        "(OK(he,": 26536,
        "me[i]))": 26537,
        "ss[1])": 26538,
        "his(5);": 26539,
        "his[i];": 26540,
        "(his[i][0]": 26541,
        "my[0])": 26542,
        "(his[i][1]": 26543,
        "my[1])": 26544,
        "card1[10];": 26545,
        "card2[10];": 26546,
        "card1;": 26547,
        "card2;": 26548,
        "(card1[0]": 26549,
        "card2[0]": 26550,
        "card1[1]": 26551,
        "card2[1])": 26552,
        "respuesta": 26553,
        "(aux[0]": 26554,
        "aux[1]": 26555,
        "(respuesta)": 26556,
        "cards(5);": 26557,
        "ref;": 26558,
        "cards[i];": 26559,
        "(cards[i][0]": 26560,
        "ref[0]": 26561,
        "cards[i][1]": 26562,
        "ref[1])": 26563,
        "n[1]": 26564,
        "e[0]": 26565,
        "e[1])": 26566,
        "(int)(5);": 26567,
        "(t[i][0]": 26568,
        "ss[5];": 26569,
        "ss[i][0]": 26570,
        "ss[i][1])": 26571,
        "arr.push_back(str);": 26572,
        "tem[0]": 26573,
        "tem[1])": 26574,
        "pre[5];": 26575,
        "pre[0]": 26576,
        "pre[1]": 26577,
        "pre[2]": 26578,
        "pre[3]": 26579,
        "pre[4];": 26580,
        "(pre[i][0]": 26581,
        "pre[i][1]": 26582,
        "s5;": 26583,
        "m[s1[i]]": 26584,
        "m[s2[i]]": 26585,
        "s3.size();": 26586,
        "m[s3[i]]": 26587,
        "s4.size();": 26588,
        "m[s4[i]]": 26589,
        "s5.size();": 26590,
        "m[s5[i]]": 26591,
        "m[6],": 26592,
        "n[6];": 26593,
        "n[i])": 26594,
        "(the_same(s1,": 26595,
        "in[5];": 26596,
        "(in[i][0]": 26597,
        "in[i][1]": 26598,
        "ada()": 26599,
        "b[i][1]": 26600,
        "(ada())": 26601,
        "arr[5];": 26602,
        "a.end()),": 26603,
        "a.front(),": 26604,
        "b.front();": 26605,
        "min2,": 26606,
        "arr[a[i]]++;": 26607,
        "arr[b[i]]++;": 26608,
        "min2": 26609,
        "min2)": 26610,
        "(min2": 26611,
        "((b[j]": 26612,
        "b[j]));": 26613,
        "min(nn,": 26614,
        "sam": 26615,
        "min(sam,": 26616,
        "(sam": 26617,
        "max(nn,": 26618,
        "visit1(n,": 26619,
        "visit2(m,": 26620,
        "visit1[temp]": 26621,
        "visit2[temp]": 26622,
        "((visit1[temp]": 26623,
        "visit1[temp2])": 26624,
        "(visit2[temp]": 26625,
        "visit2[temp2]))": 26626,
        "firstOn(int": 26627,
        "num));": 26628,
        "(int)m;": 26629,
        "firstOn(c)": 26630,
        "min(firstOn(a),": 26631,
        "firstOn(b))": 26632,
        "max(firstOn(a),": 26633,
        "ele,": 26634,
        "arr2[m];": 26635,
        "store)": 26636,
        "min2;": 26637,
        "t1[15],": 26638,
        "t2[15];": 26639,
        "t1[i];": 26640,
        "t2[j];": 26641,
        "sort(t1,": 26642,
        "sort(t2,": 26643,
        "min(t1[0],": 26644,
        "t2[0]);": 26645,
        "max(t1[0],": 26646,
        "t2[j]": 26647,
        "t1[i])": 26648,
        "vn(n),": 26649,
        "vm(m);": 26650,
        "vn[i];": 26651,
        "vm[i];": 26652,
        "(vn[i]": 26653,
        "vm[j])": 26654,
        "vn[i]);": 26655,
        "vn[i]": 26656,
        "vm[j]);": 26657,
        "vm[j]": 26658,
        "a[m],": 26659,
        "100500;": 26660,
        "a(m);": 26661,
        "arr2[10];": 26662,
        "arr2[g]": 26663,
        "x[10],": 26664,
        "y[10];": 26665,
        "x[a[i]]": 26666,
        "y[b[i]]": 26667,
        "max(a[0],": 26668,
        "(find(b,": 26669,
        "(!done)": 26670,
        "mp[b[i]]++;": 26671,
        "(x[b[i]])": 26672,
        "min(b[i],": 26673,
        "vm(m),": 26674,
        "sort(vn.begin(),": 26675,
        "vn.end());": 26676,
        "sort(vm.begin(),": 26677,
        "vm.end());": 26678,
        "vn[0];": 26679,
        "vm[0];": 26680,
        "v.push_back(vn[i]);": 26681,
        "*min_element(v.begin(),": 26682,
        "bi,": 26683,
        "mna": 26684,
        "mnb": 26685,
        "ada_dia[10];": 26686,
        "ada_dib[10];": 26687,
        "ada_dia[ai]": 26688,
        "min(mna,": 26689,
        "ai);": 26690,
        "bi;": 26691,
        "ada_dib[bi]": 26692,
        "min(mnb,": 26693,
        "bi);": 26694,
        "(ada_dia[i]": 26695,
        "ada_dib[i])": 26696,
        "mnb)": 26697,
        "max(mna,": 26698,
        "--d;": 26699,
        "d(int": 26700,
        "d(n": 26701,
        "d(n,": 26702,
        "h(int": 26703,
        "h((t": 26704,
        "h(a,": 26705,
        "(int)a": 26706,
        "((d2": 26707,
        "couting;": 26708,
        "couting": 26709,
        "turn;": 26710,
        "small_letter(char": 26711,
        "int(ans": 26712,
        "pow(m,": 26713,
        "hari": 26714,
        "(hari": 26715,
        "hari++;": 26716,
        "E;": 26717,
        "\"Akshat\"": 26718,
        "\"Malvika\"": 26719,
        "(mov": 26720,
        "\"Akshat\\n\";": 26721,
        "\"Malvika\\n\";": 26722,
        "!b;": 26723,
        "(moves": 26724,
        "(min(m,": 26725,
        "\"Akshat\\n\")": 26726,
        "\"Malvika\\n\");": 26727,
        "\"Akshat\";": 26728,
        "\"Akshat\")": 26729,
        "\"Malvika\";": 26730,
        "turn++;": 26731,
        "Noofintersectionsleft(int": 26732,
        "(Noofintersectionsleft(a,": 26733,
        "ccc[20];": 26734,
        "puts(\"Akshat\");": 26735,
        "puts(\"Malvika\");": 26736,
        "s[maxn],": 26737,
        "dp[maxn];": 26738,
        "((min(n,": 26739,
        "v[150],": 26740,
        "s[1050];": 26741,
        "d[1050];": 26742,
        "122220": 26743,
        "vis)": 26744,
        "a[sum])": 26745,
        "b[sum]": 26746,
        "ch[2000][2];": 26747,
        "ch[i][0]": 26748,
        "ch[now][0]": 26749,
        "ch[now][0])": 26750,
        "ch[now][1]": 26751,
        "s[300009];": 26752,
        "d[300009];": 26753,
        "((maxi": 26754,
        "maxi++;": 26755,
        "(((x1": 26756,
        "day)": 26757,
        "curDay": 26758,
        "curDay)": 26759,
        "((curDay": 26760,
        "n--;)": 26761,
        "((days": 26762,
        "d[1001];": 26763,
        "Next": 26764,
        "Next)": 26765,
        "Next;": 26766,
        "doc[1005];": 26767,
        "v[1000005];": 26768,
        "doc[i].first": 26769,
        "doc[i].second;": 26770,
        "(v[doc[i].first]": 26771,
        "doc[i].first)": 26772,
        "v[doc[i].first]": 26773,
        "doc[i].first;": 26774,
        "doc[i].first);": 26775,
        "dfs(a": 26776,
        "dfs(a,": 26777,
        "\"hello\";": 26778,
        "'h')": 26779,
        "check(j": 26780,
        "(check(0,": 26781,
        "l_": 26782,
        "'h'": 26783,
        "'h';": 26784,
        "'l';": 26785,
        "l_)": 26786,
        "\"hello\")": 26787,
        "banyak;": 26788,
        "s.length()))": 26789,
        "t[k])": 26790,
        "banyak++;": 26791,
        "((banyak": 26792,
        "d[c])": 26793,
        "type.length();": 26794,
        "word[a])": 26795,
        "temp3,": 26796,
        "temp4;": 26797,
        "temp3": 26798,
        "temp4": 26799,
        "greeting": 26800,
        "line.size())": 26801,
        "(line[b++]": 26802,
        "greeting[a])": 26803,
        "greeting.size())": 26804,
        "'h',": 26805,
        "!h)": 26806,
        "'e',": 26807,
        "!e)": 26808,
        "'l',": 26809,
        "ll++;": 26810,
        "'o',": 26811,
        "(S[1]": 26812,
        "S.erase(1,": 26813,
        "(S[2]": 26814,
        "S.erase(2,": 26815,
        "(S[3]": 26816,
        "S.erase(3,": 26817,
        "(S[4]": 26818,
        "S.erase(4,": 26819,
        "S.erase(5,": 26820,
        "s.erase(1,": 26821,
        "s.erase(2,": 26822,
        "(s[3]": 26823,
        "s.erase(3,": 26824,
        "(s[4]": 26825,
        "s.erase(4,": 26826,
        "s.erase(5.100);": 26827,
        "ch[]": 26828,
        "{'h',": 26829,
        "'o'};": 26830,
        "ch[i])": 26831,
        "(l2)": 26832,
        "(l1)": 26833,
        "((int)a[i]": 26834,
        "104)": 26835,
        "a.erase(a.begin());": 26836,
        "101)": 26837,
        "108)": 26838,
        "111)": 26839,
        "a.erase(5,": 26840,
        "ln;)": 26841,
        "doesIt(string": 26842,
        "token": 26843,
        "token[j])": 26844,
        "token.length())": 26845,
        "doesIt(a)": 26846,
        "c[10001];": 26847,
        "gets(c);": 26848,
        "p[x])": 26849,
        "361;": 26850,
        "parity(int": 26851,
        "is2(int": 26852,
        "a[360];": 26853,
        "abs(180": 26854,
        "sum));": 26855,
        "reverse": 26856,
        "abs(reverse": 26857,
        "min(abs(360": 26858,
        "min1);": 26859,
        "sum_a,": 26860,
        "sum_b,": 26861,
        "a[365],": 26862,
        "b[730];": 26863,
        "sum_a;": 26864,
        "abs(sum_b": 26865,
        "sum_a);": 26866,
        "st++)": 26867,
        "v[curr];": 26868,
        "360));": 26869,
        "sum[maxn];": 26870,
        "sum[j": 26871,
        "370;": 26872,
        "abs(ans": 26873,
        "ans)));": 26874,
        "b[cnt++]": 26875,
        "abs(360": 26876,
        "abs(cs": 26877,
        "((abs(180": 26878,
        "sum1);": 26879,
        "c[365],": 26880,
        "c[360]": 26881,
        "180));": 26882,
        "129605;": 26883,
        "a[800];": 26884,
        "(begin": 26885,
        "begin;": 26886,
        "abs((a[i": 26887,
        "a[begin])": 26888,
        "(a[end]": 26889,
        "begin++;": 26890,
        "dp[400];": 26891,
        "in[361],": 26892,
        "bitset<360>": 26893,
        "(in[j]": 26894,
        "in[i])": 26895,
        "a(2": 26896,
        "360,": 26897,
        "ke;": 26898,
        "arr[400];": 26899,
        "arr[ke];": 26900,
        "ke++;": 26901,
        "tot));": 26902,
        "(ke": 26903,
        "s(n": 26904,
        "abs((s[j]": 26905,
        "1]))));": 26906,
        "abs((360": 26907,
        "arr[100001];": 26908,
        "hh;": 26909,
        "1000000010;": 26910,
        "10000000000010LL;": 26911,
        "A[MAXN];": 26912,
        "A[i])));": 26913,
        "deg[400];": 26914,
        "anstemp": 26915,
        "clockwise(int": 26916,
        "deg[start];": 26917,
        "cclockwise(int": 26918,
        "cstart)": 26919,
        "cval": 26920,
        "(cval": 26921,
        "deg[cstart];": 26922,
        "cstart--;": 26923,
        "(cstart": 26924,
        "cstart": 26925,
        "cval;": 26926,
        "V,": 26927,
        "sumclock": 26928,
        "sumcclock": 26929,
        "sumclock2": 26930,
        "deg[i];": 26931,
        "min(clockwise(i),": 26932,
        "cclockwise(i));": 26933,
        "min(anstemp,": 26934,
        "anstemp;": 26935,
        "anstemp)": 26936,
        "min(s": 26937,
        "180,": 26938,
        "x)));": 26939,
        "minD": 26940,
        "a[722]": 26941,
        "min(minD,": 26942,
        "sum)),": 26943,
        "(minD": 26944,
        "esp": 26945,
        "pre_sum[800];": 26946,
        "memset(pre_sum,": 26947,
        "sizeof(pre_sum));": 26948,
        "pre_sum[i]": 26949,
        "pre_sum[i": 26950,
        "pre_sum[j]": 26951,
        "(abs(360": 26952,
        "ooi": 26953,
        "ooi;": 26954,
        "a[361];": 26955,
        "a.end(),": 26956,
        "a[1000": 26957,
        "numeric_limits<int>::max();": 26958,
        "10000000,": 26959,
        "min(answer,": 26960,
        "bucket": 26961,
        "(ai": 26962,
        "bucket))": 26963,
        "N[1005];": 26964,
        "compare(int": 26965,
        "N[i];": 26966,
        "sort(N": 26967,
        "compare);": 26968,
        "N[i++]": 26969,
        "N[i": 26970,
        "*numbers": 26971,
        "int[N];": 26972,
        "mi_n": 26973,
        "1234567890,": 26974,
        "min(k": 26975,
        "mi_n);": 26976,
        "110,": 26977,
        "exist(105,": 26978,
        "exist[a[i]]": 26979,
        "(exist[i])": 26980,
        "(exist[k": 26981,
        "min(K,": 26982,
        "L);": 26983,
        "{12,": 26984,
        "13};": 26985,
        "(__typeof((n": 26986,
        "prep()": 26987,
        "prep();": 26988,
        "ok(string": 26989,
        "(!(int)x.size())": 26990,
        "((int)x.size()": 26991,
        "x.substr(0,": 26992,
        "\"144\"": 26993,
        "ok(x.substr(3)))": 26994,
        "\"14\"": 26995,
        "ok(x.substr(2)))": 26996,
        "ok(x.substr(1)))": 26997,
        "(ok(x)": 26998,
        "good(i);": 26999,
        "100),": 27000,
        "144)": 27001,
        "pat": 27002,
        "\"444\";": 27003,
        "pat[j])": 27004,
        "m1[]": 27005,
        "\"1\",": 27006,
        "m2[]": 27007,
        "\"14\",": 27008,
        "m3[]": 27009,
        "\"144\";": 27010,
        "a[i];)": 27011,
        "m3[0]": 27012,
        "m3[1]": 27013,
        "m3[2])": 27014,
        "m2[0]": 27015,
        "m2[1])": 27016,
        "m1[0])": 27017,
        "n[11];": 27018,
        "gets(n);": 27019,
        "strlen(n);": 27020,
        "((n[i]": 27021,
        "(n[i": 27022,
        "yay": 27023,
        "s.size();)": 27024,
        "is_magical(string": 27025,
        "(int)number.size();": 27026,
        "(number[i]": 27027,
        "number[i]": 27028,
        "(number[0]": 27029,
        "(number.find(\"444\")": 27030,
        "number.npos)": 27031,
        "(is_magical(number))": 27032,
        "sai": 27033,
        "num.size())": 27034,
        "(num[in]": 27035,
        "in++;": 27036,
        "num[in]": 27037,
        "(sai)": 27038,
        "n[128]": 27039,
        "n[len++]": 27040,
        "s.reserve(15);": 27041,
        "s[i++]": 27042,
        "3).compare(\"144\")": 27043,
        "2).compare(\"14\")": 27044,
        "1).compare(\"1\")": 27045,
        "x[]": 27046,
        "{\"1\",": 27047,
        "\"144\"};": 27048,
        "save(long": 27049,
        "x[a[i]];": 27050,
        "rs.push_back(s);": 27051,
        "gen(long": 27052,
        "save(n);": 27053,
        "gen(i);": 27054,
        "rs[i])": 27055,
        "ju": 27056,
        "a[11];": 27057,
        "(!(f": 27058,
        "(ju)": 27059,
        "pow(int": 27060,
        "(mm": 27061,
        "(T": 27062,
        "T--;": 27063,
        "Genawy()": 27064,
        "Genawy();": 27065,
        "pot[maxn];": 27066,
        "test()": 27067,
        "(!test())": 27068,
        "pot[0]": 27069,
        "(pot[i": 27070,
        "2LL)": 27071,
        "(pot[m]": 27072,
        "1000LL": 27073,
        "ans(1);": 27074,
        "ans(int,": 27075,
        "power(int);": 27076,
        "norm(long": 27077,
        "ans(n,": 27078,
        "ans(int": 27079,
        "power(m);": 27080,
        "coe": 27081,
        "norm(coe);": 27082,
        "coe;": 27083,
        "norm(res);": 27084,
        "can--;": 27085,
        "long)ans": 27086,
        "pm": 27087,
        "(pm": 27088,
        "pm--;": 27089,
        "pm--)": 27090,
        "pm)": 27091,
        "1000000009LL": 27092,
        "1000000009LL)": 27093,
        "mod),": 27094,
        "mpow(2,": 27095,
        "ppow(long": 27096,
        "ppow(a": 27097,
        "1000000009LL,": 27098,
        "ppow(2,": 27099,
        "1000000009": 27100,
        "val--;": 27101,
        "pw;": 27102,
        "pw": 27103,
        "(pw": 27104,
        "MODULO": 27105,
        "tavan": 27106,
        "((tavan": 27107,
        "MODULO)": 27108,
        "MODULO;": 27109,
        "(tavan": 27110,
        "5e4": 27111,
        "sta": 27112,
        "2e18": 27113,
        "pw(long": 27114,
        "(!y)": 27115,
        "pw(x,": 27116,
        "(pw(2,": 27117,
        "fpow(int": 27118,
        "mul(ret,": 27119,
        "mul(a,": 27120,
        "fpow(2,": 27121,
        "sub(k,": 27122,
        "mul(ans,": 27123,
        "mod(pw": 27124,
        "mod(ans": 27125,
        "pw);": 27126,
        "long)(1e9": 27127,
        "9);": 27128,
        "((result": 27129,
        "r[m]": 27130,
        "(pow": 27131,
        "(ac": 27132,
        "num[205];": 27133,
        "getans(long": 27134,
        "num3": 27135,
        "div)": 27136,
        "maxcnt": 27137,
        "dip,": 27138,
        "cer,": 27139,
        "nw,": 27140,
        "dip": 27141,
        "cer": 27142,
        "nw": 27143,
        "(dip": 27144,
        "cer);": 27145,
        "xmax,": 27146,
        "(xmax": 27147,
        "half)": 27148,
        "normal;": 27149,
        "llMax(long": 27150,
        "llMin(long": 27151,
        "long)(n": 27152,
        "r3": 27153,
        "valid(long": 27154,
        "1e12": 27155,
        "(valid(mid))": 27156,
        "prime[maxn];": 27157,
        "nothing": 27158,
        "di": 27159,
        "di;": 27160,
        "100000001;": 27161,
        "clock();": 27162,
        "(float)t2": 27163,
        "(float)t1;": 27164,
        "execution_time": 27165,
        "CLOCKS_PER_SEC;": 27166,
        "c[9]": 27167,
        "{'6',": 27168,
        "'9',": 27169,
        "'T',": 27170,
        "'J',": 27171,
        "'Q',": 27172,
        "'K',": 27173,
        "'A'};": 27174,
        "(p1[1]": 27175,
        "su)": 27176,
        "p2[1])": 27177,
        "p1[0])": 27178,
        "p2[0])": 27179,
        "seq": 27180,
        "\"AKQJT9876\";": 27181,
        "tramp;": 27182,
        "tramp": 27183,
        "tramp)": 27184,
        "seq.find(a[0])": 27185,
        "seq.find(b[0]))": 27186,
        "ranki(string": 27187,
        "'J')": 27188,
        "(ranki(str1)": 27189,
        "ranki(str2))": 27190,
        "str2[1]": 27191,
        "ch1[]": 27192,
        "(A[1]": 27193,
        "B[1])": 27194,
        "ch1[i])": 27195,
        "(B[0]": 27196,
        "basic_string<char>": 27197,
        "card": 27198,
        "\"SHDC\";": 27199,
        "levl": 27200,
        "\"6789TJQKA\";": 27201,
        "(a.find(tr)": 27202,
        "a.npos": 27203,
        "b.find(tr)": 27204,
        "b.npos)": 27205,
        "(levl.find(a[0])": 27206,
        "levl.find(b[0]))": 27207,
        "big(char": 27208,
        "a_pos,": 27209,
        "b_pos;": 27210,
        "a_pos": 27211,
        "b_pos": 27212,
        "(a_pos": 27213,
        "b_pos)": 27214,
        "great": 27215,
        "big(a[0],": 27216,
        "(great": 27217,
        "isgreater(char": 27218,
        "i2)": 27219,
        "(p2[1]": 27220,
        "(isgreater(p1[0],": 27221,
        "p2[0]))": 27222,
        "(s2[1]": 27223,
        "busca(char": 27224,
        "v[])": 27225,
        "(busca(a[0],": 27226,
        "busca(b[0],": 27227,
        "v))": 27228,
        "strng[10]": 27229,
        "{6,": 27230,
        "st1,": 27231,
        "st2,": 27232,
        "tp1,": 27233,
        "tp2,": 27234,
        "kt3,": 27235,
        "SPACE;": 27236,
        "kt3": 27237,
        "st1": 27238,
        "st2": 27239,
        "tp2;": 27240,
        "(st1": 27241,
        "(st2": 27242,
        "strng[i])": 27243,
        "(tp1": 27244,
        "kt3)": 27245,
        "tp2)": 27246,
        "mp['6']": 27247,
        "mp['7']": 27248,
        "mp['8']": 27249,
        "mp['9']": 27250,
        "mp['T']": 27251,
        "mp['J']": 27252,
        "mp['Q']": 27253,
        "mp['K']": 27254,
        "str1[1])": 27255,
        "(mp[str1[0]]": 27256,
        "mp[str2[0]])": 27257,
        "mp[str1[0]]": 27258,
        "'Z';": 27259,
        "'X';": 27260,
        "ms['6']": 27261,
        "ms['7']": 27262,
        "ms['8']": 27263,
        "ms['9']": 27264,
        "ms['T']": 27265,
        "ms['J']": 27266,
        "ms['Q']": 27267,
        "ms['K']": 27268,
        "ms['A']": 27269,
        "ms[s1[0]]": 27270,
        "ms[s2[0]])": 27271,
        "a[('0'": 27272,
        "a['T']": 27273,
        "a['J']": 27274,
        "a['Q']": 27275,
        "a['K']": 27276,
        "a['A']": 27277,
        "104;": 27278,
        "cas": 27279,
        "a[str1[0]]": 27280,
        "a[str2[0]])": 27281,
        "trump;": 27282,
        "trump": 27283,
        "(cmp(f1,": 27284,
        "s1))": 27285,
        "trump)": 27286,
        "(f[1]": 27287,
        "(mp[f[0]]": 27288,
        "mp[s[0]])": 27289,
        "card[9]": 27290,
        "{\"6\",": 27291,
        "\"8\",": 27292,
        "\"9\",": 27293,
        "\"T\",": 27294,
        "\"J\",": 27295,
        "\"Q\",": 27296,
        "\"K\",": 27297,
        "\"A\"};": 27298,
        "(card[i]": 27299,
        "LoL(char": 27300,
        "LoL(s1[0]);": 27301,
        "LoL(s2[0]);": 27302,
        "h[60];": 27303,
        "-10000000000000000;": 27304,
        "h[i].first": 27305,
        "50)": 27306,
        "h[i].second": 27307,
        "(h[i].second": 27308,
        "plus,": 27309,
        "minus;": 27310,
        "name[25];": 27311,
        "maxName[25];": 27312,
        "plus": 27313,
        "minus": 27314,
        "strcpy(maxName,": 27315,
        "maxName": 27316,
        "con,": 27317,
        "sc,": 27318,
        "un,": 27319,
        "wnr": 27320,
        "wnr)": 27321,
        "term,": 27322,
        "term;": 27323,
        "v2.push_back(name);": 27324,
        "50);": 27325,
        "v4.push_back(sum);": 27326,
        "v4[0],": 27327,
        "v4.size();": 27328,
        "(v4[i]": 27329,
        "v4[i];": 27330,
        "v2[y]": 27331,
        "-2501;": 27332,
        "h[51];": 27333,
        "r[51],": 27334,
        "p[51],": 27335,
        "m[51],": 27336,
        "b[51],": 27337,
        "c[51],": 27338,
        "d[51],": 27339,
        "e[51];": 27340,
        "h[x]": 27341,
        "hd[55];": 27342,
        "score[55];": 27343,
        "hd[i]": 27344,
        "score[i]": 27345,
        "score[0];": 27346,
        "hd[0];": 27347,
        "(score[j]": 27348,
        "score[j];": 27349,
        "hd[j];": 27350,
        "-100000;": 27351,
        "-99999999;": 27352,
        "name[M];": 27353,
        "points[M];": 27354,
        "phack,": 27355,
        "nhack;": 27356,
        "phack": 27357,
        "points[i]": 27358,
        "(phack": 27359,
        "nhack": 27360,
        "max_points": 27361,
        "points[0];": 27362,
        "(points[i]": 27363,
        "max_points)": 27364,
        "points[i];": 27365,
        "name[index]": 27366,
        "t[50];": 27367,
        "-30000;": 27368,
        "h[sum]": 27369,
        "h[m]": 27370,
        "p[n];": 27371,
        "{sum,": 27372,
        "name};": 27373,
        "minus,": 27374,
        "best_name": 27375,
        "-1000000000,": 27376,
        "plus1,": 27377,
        "minus1;": 27378,
        "handels,": 27379,
        "handels;": 27380,
        "plus1": 27381,
        "minus1": 27382,
        "(plus1": 27383,
        "(minus1": 27384,
        "(double)acos(-1.0);": 27385,
        "base()": 27386,
        "ee,": 27387,
        "hack,": 27388,
        "unhack,": 27389,
        "hack": 27390,
        "unhack": 27391,
        "handle_max;": 27392,
        "score_max": 27393,
        "minus)": 27394,
        "handle_max": 27395,
        "arr[2000005];": 27396,
        "arr2[2000005];": 27397,
        "power[15];": 27398,
        "(nex": 27399,
        "m[count]": 27400,
        "p[60],": 27401,
        "m[60],": 27402,
        "b[60],": 27403,
        "c[60],": 27404,
        "d[60],": 27405,
        "e[60];": 27406,
        "-99999,": 27407,
        "winner);": 27408,
        "((50": 27409,
        "reading;": 27410,
        "temp.push_back(s[j]);": 27411,
        "reading.push_back(temp);": 27412,
        "tempName": 27413,
        "reading[0];": 27414,
        "((atoi(reading[1].c_str()))": 27415,
        "((atoi(reading[2].c_str()))": 27416,
        "reading.size();": 27417,
        "(atoi(reading[k].c_str()));": 27418,
        "tempName;": 27419,
        "reading.clear();": 27420,
        "-10000000;": 27421,
        "hr,": 27422,
        "hn,": 27423,
        "-(1": 27424,
        "hr": 27425,
        "hn": 27426,
        "pct": 27427,
        "(pct": 27428,
        "pct;": 27429,
        "mius,": 27430,
        "mius": 27431,
        "mius;": 27432,
        "mius1;": 27433,
        "mius1": 27434,
        "(cal(plus,": 27435,
        "cal(plus,": 27436,
        "-3000;": 27437,
        "re[111];": 27438,
        "pre[111];": 27439,
        "gets(re);": 27440,
        "strlen(re);": 27441,
        "*q": 27442,
        "pre[j]": 27443,
        "pre[j": 27444,
        "pre[t": 27445,
        "s1[105],": 27446,
        "s2[105];": 27447,
        "strlen(s1);": 27448,
        "s1[ans];": 27449,
        "input.length();": 27450,
        "ans[a++]": 27451,
        "input[j--];": 27452,
        "input[i++];": 27453,
        "input[k];": 27454,
        "reverse(ans.begin(),": 27455,
        "ans.push_back(s[i]);": 27456,
        "ans.push_back(s[p]);": 27457,
        "s[55],": 27458,
        "ans[55];": 27459,
        "ans[--cnt]": 27460,
        "s[l];": 27461,
        "puts(ans);": 27462,
        "ans(\"\");": 27463,
        "s[right--]": 27464,
        "s[left++]": 27465,
        "a[left++]": 27466,
        "a[right--]": 27467,
        "a[begin];": 27468,
        "decrypt,": 27469,
        "encrypt": 27470,
        "decrypt;": 27471,
        "last,": 27472,
        "decrypt.length();": 27473,
        "(decrypt.length()": 27474,
        "decrypt": 27475,
        "decrypt.length()": 27476,
        "decrypt[last];": 27477,
        "decrypt[first];": 27478,
        "last++;": 27479,
        "first--;": 27480,
        "encrypt.length()": 27481,
        "encrypt[i];": 27482,
        "nowl": 27483,
        "(nowl)": 27484,
        "st.push(s[l++]);": 27485,
        "st.push(s[r--]);": 27486,
        "!nowl;": 27487,
        "st.top();": 27488,
        "sd": 27489,
        "s[(s.size()": 27490,
        "(sd.size()": 27491,
        "str[60]": 27492,
        "shu[60]": 27493,
        "shu[k]": 27494,
        "str[mid];": 27495,
        "str[mid": 27496,
        "puts(shu);": 27497,
        "(s_size": 27498,
        "temp[pos];": 27499,
        "times++;": 27500,
        "s_size)": 27501,
        "str[60],": 27502,
        "ori[60]": 27503,
        "ori[0]": 27504,
        "ori[2": 27505,
        "puts(ori);": 27506,
        "f];": 27507,
        "s[start];": 27508,
        "s[index];": 27509,
        "m{},": 27510,
        "n{(int)s.length()": 27511,
        "res.append(str.begin()": 27512,
        "str.begin()": 27513,
        "str.erase(str.begin()": 27514,
        "ans.push_back(str[k]);": 27515,
        "ans.push_back(str[k": 27516,
        "((s.size()": 27517,
        "q.push_back(s[r]);": 27518,
        "q.push_back(s[l]);": 27519,
        "(re)": 27520,
        "reverse(q.begin(),": 27521,
        "q.end());": 27522,
        "s1[N];": 27523,
        "((int)(s).size())": 27524,
        "(((int)(s).size())": 27525,
        "--l,": 27526,
        "max((a": 27527,
        "nuts,": 27528,
        "divis,": 27529,
        "maxsec,": 27530,
        "capacity,": 27531,
        "boxees": 27532,
        "maxsec": 27533,
        "nuts": 27534,
        "divis": 27535,
        "capacity;": 27536,
        "(nuts": 27537,
        "boxees++;": 27538,
        "((min(maxsec,": 27539,
        "capacity);": 27540,
        "maxSections,": 27541,
        "nut2sec,": 27542,
        "boxes": 27543,
        "maxSections": 27544,
        "nut2sec;": 27545,
        "boxes++;": 27546,
        "(min(maxSections,": 27547,
        "min(maxSections,": 27548,
        "min((b": 27549,
        "(min(b": 27550,
        "-5;": 27551,
        "100000000001;": 27552,
        "space": 27553,
        "10007;": 27554,
        "se": 27555,
        "\"----\\n\";": 27556,
        "c[i++]": 27557,
        "remnut": 27558,
        "remdiv": 27559,
        "(remnut": 27560,
        "newnut": 27561,
        "(min(k,": 27562,
        "(newnut": 27563,
        "remnut)": 27564,
        "newnut;": 27565,
        "nuts;": 27566,
        "setmin(int": 27567,
        "setmax(int": 27568,
        "setmin(long": 27569,
        "setmax(long": 27570,
        "239;": 27571,
        "atan2(0,": 27572,
        "ABC": 27573,
        "int(1);": 27574,
        "int(a": 27575,
        "maxsecction": 27576,
        "lel": 27577,
        "maxsecction);": 27578,
        "(lel": 27579,
        "kvbox": 27580,
        "box;": 27581,
        "onemore": 27582,
        "kvbox)": 27583,
        "onemore)": 27584,
        "onemore;": 27585,
        "remn": 27586,
        "remd": 27587,
        "(remn": 27588,
        "remn)": 27589,
        "box++;": 27590,
        "x[100005]": 27591,
        "taka": 27592,
        "(taka": 27593,
        "taka;": 27594,
        "section": 27595,
        "min(maxsec,": 27596,
        "((k)": 27597,
        "shuwei": 27598,
        "Num": 27599,
        "min(5": 27600,
        "Num,": 27601,
        "max(5": 27602,
        "shu[10];": 27603,
        "(Num": 27604,
        "shu[++shuwei]": 27605,
        "shuwei;": 27606,
        "shu[i];": 27607,
        "long)sum": 27608,
        "long)num": 27609,
        "p10": 27610,
        "p9": 27611,
        "(p9": 27612,
        "(p10": 27613,
        "p9)": 27614,
        "get_ref(long": 27615,
        "reflection(long": 27616,
        "argham;": 27617,
        "ref": 27618,
        "((ref": 27619,
        "refrence": 27620,
        "get_ref(r);": 27621,
        "refrence)": 27622,
        "reflection(r)": 27623,
        "reflection(refrence)": 27624,
        "reflection(l)": 27625,
        "inicio,": 27626,
        "aux,": 27627,
        "inicio": 27628,
        "inicio)": 27629,
        "(inicio": 27630,
        "phi(long": 27631,
        "((int)(s).size()": 27632,
        "(9);": 27633,
        "phi(l),": 27634,
        "phi(r);": 27635,
        "pl);": 27636,
        "pr);": 27637,
        "5e6": 27638,
        "mirror(long": 27639,
        "v.push_back(v.back()": 27640,
        "max(l": 27641,
        "mirror(l),": 27642,
        "mirror(r));": 27643,
        "upper_bound(v.begin(),": 27644,
        "v.begin()": 27645,
        "mirror(v[i]));": 27646,
        "nol": 27647,
        "nor": 27648,
        "++nol;": 27649,
        "++nor;": 27650,
        "--nor;": 27651,
        "--nol;": 27652,
        "(nor": 27653,
        "nol)": 27654,
        "power(10,": 27655,
        "nor);": 27656,
        "r1);": 27657,
        "l1);": 27658,
        "sifr,": 27659,
        "maxr": 27660,
        "new_": 27661,
        "new_;": 27662,
        "sifr++;": 27663,
        "sifr;": 27664,
        "maxr)": 27665,
        "(maxr": 27666,
        "long)maxr": 27667,
        "long)l": 27668,
        "long)r": 27669,
        "length(int": 27670,
        "length_r": 27671,
        "length(r);": 27672,
        "length_l": 27673,
        "length(l);": 27674,
        "length_r;": 27675,
        "(length(l)": 27676,
        "length(r))": 27677,
        "ppow[40];": 27678,
        "ppow[0]": 27679,
        "ppow[i]": 27680,
        "ppow[i": 27681,
        "ppow[n]": 27682,
        "fun(t);": 27683,
        "first(long": 27684,
        "max(javab,": 27685,
        "x));": 27686,
        "first(l);": 27687,
        "first(r);": 27688,
        "first(y);": 27689,
        "dd()": 27690,
        "g(long": 27691,
        "max(g(l),": 27692,
        "g(r));": 27693,
        "g(t));": 27694,
        "bt(long": 27695,
        "rd++;": 27696,
        "ld++;": 27697,
        "rd);": 27698,
        "(bt(mid)": 27699,
        "bt(mid": 27700,
        "th": 27701,
        "th)": 27702,
        "th;": 27703,
        "cnt(int": 27704,
        "cnt(r);": 27705,
        "digit)": 27706,
        "t),": 27707,
        "long)5)": 27708,
        "long)5": 27709,
        "long)10": 27710,
        "vec.push_back(t": 27711,
        "(vec.size())": 27712,
        "vec.back(),": 27713,
        "vec.pop_back();": 27714,
        "10ll": 27715,
        "max((int)x,": 27716,
        "check(mid);": 27717,
        "check(mid": 27718,
        "99": 27719,
        "(99": 27720,
        "999": 27721,
        "(999": 27722,
        "9999": 27723,
        "(9999": 27724,
        "99999": 27725,
        "(99999": 27726,
        "999999": 27727,
        "(999999": 27728,
        "9999999": 27729,
        "(9999999": 27730,
        "99999999": 27731,
        "(99999999": 27732,
        "999999999": 27733,
        "(999999999": 27734,
        "9999999999": 27735,
        "(9999999999": 27736,
        "kpk": 27737,
        "__gcd(n,": 27738,
        "f[300000];": 27739,
        "vec(10005,": 27740,
        "vec[a": 27741,
        "(vec[b": 27742,
        "vec.assign(10005,": 27743,
        "lcm(n,": 27744,
        "r[100004],": 27745,
        "my_gcd(int": 27746,
        "my_gcd(y": 27747,
        "my_gcd(n,": 27748,
        "tempn": 27749,
        "tempm": 27750,
        "(tempm": 27751,
        "(tempn": 27752,
        "tempm)": 27753,
        "tempn)": 27754,
        "search_NOK(int,": 27755,
        "search_NOK(first,": 27756,
        "search_NOK(int": 27757,
        "count;;": 27758,
        "!(i": 27759,
        "d3,": 27760,
        "d3;": 27761,
        "a[d3": 27762,
        "d3": 27763,
        "d3)": 27764,
        "a[d1": 27765,
        "i]++;": 27766,
        "a[d2": 27767,
        "minute": 27768,
        "(int)(Z);": 27769,
        "++minute)": 27770,
        "(minute": 27771,
        "gcd(max(a,": 27772,
        "num[10001];": 27773,
        "unfortunate": 27774,
        "banknotes;": 27775,
        "(banknotes": 27776,
        "(unfortunate)": 27777,
        "(sm)": 27778,
        "scan(int": 27779,
        "&x);": 27780,
        "powermod(long": 27781,
        "_a,": 27782,
        "_b,": 27783,
        "_m)": 27784,
        "_r": 27785,
        "(_b)": 27786,
        "(_b": 27787,
        "(_r": 27788,
        "_a)": 27789,
        "_m;": 27790,
        "_b": 27791,
        "_a": 27792,
        "(_a": 27793,
        "_r;": 27794,
        "string_to_number(string": 27795,
        "convert(s);": 27796,
        "convert": 27797,
        "sub(long": 27798,
        "divi(long": 27799,
        "powermod(b,": 27800,
        "MOD);": 27801,
        "(var": 27802,
        "neg": 27803,
        "47": 27804,
        "58;": 27805,
        "(neg)": 27806,
        "\"1\")": 27807,
        "sort(A.begin(),": 27808,
        "A.end());": 27809,
        "a[1000010];": 27810,
        "(vet[i]": 27811,
        "(tem)": 27812,
        "lista;": 27813,
        "lista.push_back(d);": 27814,
        "sort(lista.begin(),": 27815,
        "lista.end());": 27816,
        "(lista[0]": 27817,
        "lista[1]": 27818,
        "a[150005];": 27819,
        "(s.find(1)": 27820,
        "max2,": 27821,
        "max3;": 27822,
        "min(b[0],": 27823,
        "min(b[1],": 27824,
        "max3": 27825,
        "min3,": 27826,
        "max3,": 27827,
        "given1,": 27828,
        "given2,": 27829,
        "given3;": 27830,
        "min3": 27831,
        "given1": 27832,
        "given2": 27833,
        "given3": 27834,
        "min3;": 27835,
        "given1++;": 27836,
        "--max1;": 27837,
        "(max2": 27838,
        "given2++;": 27839,
        "--max2;": 27840,
        "(max3": 27841,
        "given3++;": 27842,
        "--max3;": 27843,
        "S1,": 27844,
        "S2,": 27845,
        "S3;": 27846,
        "min3)": 27847,
        "S1": 27848,
        "S2": 27849,
        "S3": 27850,
        "S2;": 27851,
        "max3)": 27852,
        "mn1,": 27853,
        "mx1,": 27854,
        "mn2,": 27855,
        "mx2,": 27856,
        "mn3,": 27857,
        "mx3;": 27858,
        "mn2": 27859,
        "mn3": 27860,
        "(mn1": 27861,
        "mx1)": 27862,
        "mn1++;": 27863,
        "(mn2": 27864,
        "mx2)": 27865,
        "mn2++;": 27866,
        "(mn3": 27867,
        "mx3)": 27868,
        "mn3++;": 27869,
        "a(min1),": 27870,
        "b(min2),": 27871,
        "c(min3),": 27872,
        "t(min1": 27873,
        "min3);": 27874,
        "mn3;": 27875,
        "(x3": 27876,
        "x3++;": 27877,
        "a[4][2]": 27878,
        "a[1][0],": 27879,
        "a[2][0];": 27880,
        "a[0][0])": 27881,
        "a[1][1];": 27882,
        "minn1,": 27883,
        "minn2,": 27884,
        "minn3,": 27885,
        "maxx1,": 27886,
        "maxx2,": 27887,
        "maxx3;": 27888,
        "minn1": 27889,
        "maxx1;": 27890,
        "minn2": 27891,
        "maxx2;": 27892,
        "minn3": 27893,
        "minn1;": 27894,
        "minn2;": 27895,
        "minn3;": 27896,
        "maxx1": 27897,
        "maxx2": 27898,
        "maxx3": 27899,
        "sum3++;": 27900,
        "s[10],": 27901,
        "q2,": 27902,
        "q3;": 27903,
        "q1)": 27904,
        "q2)": 27905,
        "q3)": 27906,
        "n3;": 27907,
        "r3);": 27908,
        "ex;": 27909,
        "ex1": 27910,
        "ex1;": 27911,
        "mi(3),": 27912,
        "ma(3);": 27913,
        "mi[i]": 27914,
        "ma[i];": 27915,
        "ans(3);": 27916,
        "min(sum": 27917,
        "mi[i]);": 27918,
        "sam--;": 27919,
        "a3--;": 27920,
        "a2--;": 27921,
        "a1--;": 27922,
        "b[5],": 27923,
        "min[5],": 27924,
        "max[5],": 27925,
        "min[i]": 27926,
        "max[i];": 27927,
        "min[1]": 27928,
        "min[2];": 27929,
        "min[1];": 27930,
        "max[0])": 27931,
        "max[0];": 27932,
        "(max[1]": 27933,
        "min[1]))": 27934,
        "max[1];": 27935,
        "max[1]": 27936,
        "num3,": 27937,
        "(num3": 27938,
        "num3++;": 27939,
        "ans[10];": 27940,
        "ans[2]": 27941,
        "ans[1];": 27942,
        "mi1,": 27943,
        "ma1,": 27944,
        "mi2,": 27945,
        "ma2,": 27946,
        "mi3,": 27947,
        "ma3;": 27948,
        "mi1": 27949,
        "ma1;": 27950,
        "mi2": 27951,
        "ma2;": 27952,
        "mi3": 27953,
        "(ma1": 27954,
        "ma2": 27955,
        "ma1": 27956,
        "mi3;": 27957,
        "(mi1": 27958,
        "mi2;": 27959,
        "s3++;": 27960,
        "swap(y,": 27961,
        "min(z": 27962,
        "r[3];": 27963,
        "r[2]": 27964,
        "mas[4];": 27965,
        "mas[1]": 27966,
        "mas[2]": 27967,
        "mas[3]": 27968,
        "((k--": 27969,
        "(mas[1]": 27970,
        "mas[3];": 27971,
        "(mas[2]": 27972,
        "(mas[3]": 27973,
        "mas[flag]++;": 27974,
        "y[3];": 27975,
        "save,": 27976,
        "final[3];": 27977,
        "(save": 27978,
        "(y[1]": 27979,
        "(y[2]": 27980,
        "dim(N);": 27981,
        "dim[0]": 27982,
        "dim[1]": 27983,
        "dim[2]": 27984,
        "sort(dim.begin(),": 27985,
        "dim.end());": 27986,
        "salida": 27987,
        "side[3],": 27988,
        "side[0]": 27989,
        "side[1]": 27990,
        "side[2]": 27991,
        "min((side[0]": 27992,
        "(side[1]": 27993,
        "(side[2]": 27994,
        "sort(side,": 27995,
        "min(div,": 27996,
        "side[i]": 27997,
        "min(side[1]": 27998,
        "arr[1],": 27999,
        "s[123],": 28000,
        "ss[123];": 28001,
        "zz": 28002,
        "xx++;": 28003,
        "yy++;": 28004,
        "zz++;": 28005,
        "min(a[2]": 28006,
        "m[2];": 28007,
        "--y;": 28008,
        "--z;": 28009,
        "Z": 28010,
        "X++;": 28011,
        "Y++;": 28012,
        "Z++;": 28013,
        "x[2]--;": 28014,
        "x[0]);": 28015,
        "x[1]);": 28016,
        "x[2]);": 28017,
        "t[0]++;": 28018,
        "t[1]++;": 28019,
        "t[2]++;": 28020,
        "b[2": 28021,
        "b[1]++,": 28022,
        "b[2]--;": 28023,
        "sort(&x[0],": 28024,
        "&x[3],": 28025,
        "rk": 28026,
        "(rk": 28027,
        "y[2]++;": 28028,
        "y[1]++;": 28029,
        "sort(&y[0],": 28030,
        "&y[3],": 28031,
        "rm": 28032,
        "min(y[i],": 28033,
        "rm;": 28034,
        "r[]": 28035,
        "ans[3];": 28036,
        "(ans[j]": 28037,
        "ave": 28038,
        "(ave": 28039,
        "ans[j]++;": 28040,
        "ans[j]);": 28041,
        "ave;": 28042,
        "(ans[i]": 28043,
        "r(1);": 28044,
        "x[5],": 28045,
        "x[j": 28046,
        "swap(x[j],": 28047,
        "cnt3;": 28048,
        "min(x[1]": 28049,
        "min(x[2]": 28050,
        "min(x[3]": 28051,
        "pq.push(y);": 28052,
        "pq.push(z);": 28053,
        "pq.push(u);": 28054,
        "cz,": 28055,
        "(g(cx,": 28056,
        "g(cy,": 28057,
        "g(cx,": 28058,
        "g(cz,": 28059,
        "++cx;": 28060,
        "(g(cy,": 28061,
        "++cy;": 28062,
        "++cz;": 28063,
        "(cx)": 28064,
        "(cy)": 28065,
        "(cz)": 28066,
        "dim(n);": 28067,
        "n[1000],": 28068,
        "seleccion(int": 28069,
        "v[m])": 28070,
        "v[m];": 28071,
        "seleccion(x,": 28072,
        "x[k];": 28073,
        "gcd(a[n": 28074,
        "gcd(ans1,": 28075,
        "gcd(ans2,": 28076,
        "(num[0]": 28077,
        "__gcd(num[0],": 28078,
        "__gcd(num[i],": 28079,
        "gcd(tmp,": 28080,
        "ck,": 28081,
        "__gcd(ck,": 28082,
        "currgcd;": 28083,
        "currgcd": 28084,
        "currgcd)": 28085,
        "__gcd(currgcd,": 28086,
        "gcd(arr[0],": 28087,
        "arr[1]);": 28088,
        "gcd(p,": 28089,
        "x[101];": 28090,
        "pre;": 28091,
        "num[10010];": 28092,
        "num[0];": 28093,
        "(f;": 28094,
        "(a[f]": 28095,
        "a[f];": 28096,
        "f--)": 28097,
        "a[f])": 28098,
        "mgcd": 28099,
        "gcd(mgcd,": 28100,
        "hcf(int": 28101,
        "hcf(r,": 28102,
        "array[0];": 28103,
        "__gcd(mini,": 28104,
        "array[i]);": 28105,
        "a[maxn": 28106,
        "(t[j]": 28107,
        "G[],": 28108,
        "&B)": 28109,
        "(int)G[i].size();": 28110,
        "(B[G[i][j]]": 28111,
        "dfs(G[i][j],": 28112,
        "G[2001];": 28113,
        "B(2001,": 28114,
        "B[y": 28115,
        "1000]": 28116,
        "G[x].push_back(y": 28117,
        "G[y": 28118,
        "1000].push_back(x);": 28119,
        "connected": 28120,
        "(B[i]": 28121,
        "x[110],": 28122,
        "y[110];": 28123,
        "adj[110];": 28124,
        "flag[110];": 28125,
        "adj[u][i];": 28126,
        "(flag[v])": 28127,
        "flag[v]": 28128,
        "dfs(v);": 28129,
        "adj[i].push_back(j);": 28130,
        "vis[x][y]--;": 28131,
        "px,": 28132,
        "py;": 28133,
        "px": 28134,
        "dx[i]": 28135,
        "py": 28136,
        "dy[i]": 28137,
        "(px": 28138,
        "vis[px][py]": 28139,
        "dfs(px,": 28140,
        "py);": 28141,
        "(vis[i][j]": 28142,
        "re++;": 28143,
        "ans[120];": 28144,
        "from[120];": 28145,
        "posx[120];": 28146,
        "posy[120];": 28147,
        "from[x]": 28148,
        "(!from[i]": 28149,
        "(posx[x]": 28150,
        "posx[i]": 28151,
        "posy[x]": 28152,
        "posy[i]))": 28153,
        "cot);": 28154,
        "memset(from,": 28155,
        "from);": 28156,
        "posy[i];": 28157,
        "(!from[i])": 28158,
        "visit(n,": 28159,
        "visit[index]": 28160,
        "((x[index]": 28161,
        "y[index]": 28162,
        "!visit[j])": 28163,
        "q.push(j);": 28164,
        "x[150],": 28165,
        "y[150],": 28166,
        "vis[150],": 28167,
        "((x[s]": 28168,
        "y[s]": 28169,
        "dfs(i),": 28170,
        "p[105];": 28171,
        "(a[k])": 28172,
        "p[k].first": 28173,
        "p[k].second)": 28174,
        "{x,": 28175,
        "y};": 28176,
        "comp--;": 28177,
        "(comp": 28178,
        "x[101],": 28179,
        "y[101],": 28180,
        "y[a])": 28181,
        "!v[i])": 28182,
        "arr[103][103];": 28183,
        "visited[],": 28184,
        "(visited[v[i][j]]": 28185,
        "dfs(v[i][j],": 28186,
        "visited[n": 28187,
        "arr[j][0]": 28188,
        "1].push_back(j": 28189,
        "1].push_back(i": 28190,
        "x[MAX];": 28191,
        "y[MAX];": 28192,
        "visited[MAX];": 28193,
        "(!visited[j]": 28194,
        "y[j]))": 28195,
        "visited[j]": 28196,
        "dfs(j);": 28197,
        "fill(visited,": 28198,
        "visited": 28199,
        "(!visited[i])": 28200,
        "x[N],": 28201,
        "y[N],": 28202,
        "par[N];": 28203,
        "Find(int": 28204,
        "(par[i]": 28205,
        "par[i]": 28206,
        "Find(par[i]);": 28207,
        "par[i];": 28208,
        "Find(a),": 28209,
        "Find(b);": 28210,
        "par[a]": 28211,
        "Union(i,": 28212,
        "adj[111];": 28213,
        "vst[111];": 28214,
        "p[111];": 28215,
        "vst[u]": 28216,
        "((int)adj[u].size());": 28217,
        "(vst[v])": 28218,
        "p[j].first": 28219,
        "p[j].second)": 28220,
        "(vst[i]": 28221,
        "a[100][2],": 28222,
        "node)": 28223,
        "vis[node]": 28224,
        "(a[node][0]": 28225,
        "a[node][1]": 28226,
        "DFS(i);": 28227,
        "DFS(i),": 28228,
        "xs[200]": 28229,
        "ys[200]": 28230,
        "cn[200]": 28231,
        "join(int": 28232,
        "cn[i]": 28233,
        "(!cn[j]": 28234,
        "(xs[i]": 28235,
        "xs[j]": 28236,
        "ys[i]": 28237,
        "ys[j]))": 28238,
        "join(j);": 28239,
        "xs[i]": 28240,
        "ys[i];": 28241,
        "join(0);": 28242,
        "(!cn[i])": 28243,
        "join(i);": 28244,
        "root(int": 28245,
        "a[a[i]];": 28246,
        "unio(int": 28247,
        "(b[y]": 28248,
        "a[root(a,": 28249,
        "x)];": 28250,
        "x)]": 28251,
        "root(a,": 28252,
        "b[y]);": 28253,
        "b[1001]": 28254,
        "unio(a,": 28255,
        "parent[105];": 28256,
        "par(int": 28257,
        "(parent[i]": 28258,
        "par(parent[i]);": 28259,
        "unin(int": 28260,
        "ipar": 28261,
        "par(i);": 28262,
        "jpar": 28263,
        "par(j);": 28264,
        "parent[ipar]": 28265,
        "jpar;": 28266,
        "parent[i]": 28267,
        "(arr[i].first": 28268,
        "arr[j].first": 28269,
        "arr[j].second)": 28270,
        "unin(i,": 28271,
        "st.insert(par(i));": 28272,
        "mypow(long": 28273,
        "in(\"puteri6.in\");": 28274,
        "out(\"puteri6.out\");": 28275,
        "st[105],": 28276,
        "dr[105];": 28277,
        "v[105];": 28278,
        "dfs(v[x][i]);": 28279,
        "dr[i];": 28280,
        "dr[j]": 28281,
        "dr[i])": 28282,
        "v[i].push_back(j);": 28283,
        "v[j].push_back(i);": 28284,
        "x[MAXN],": 28285,
        "y[MAXN],": 28286,
        "idx[MAXN];": 28287,
        "memset(idx,": 28288,
        "sizeof(idx));": 28289,
        "idx[i]": 28290,
        "idx[a])": 28291,
        "idx[a]": 28292,
        "find(idx[a]);": 28293,
        "idx[a];": 28294,
        "merge(int": 28295,
        "idx[fa]": 28296,
        "merge(i,": 28297,
        "(idx[i]": 28298,
        "soldier,": 28299,
        "(soldier": 28300,
        "var": 28301,
        "ci,": 28302,
        "inttostr(int": 28303,
        "dead;": 28304,
        "dead": 28305,
        "-y;": 28306,
        "-u;": 28307,
        "v[N],": 28308,
        "vv[N];": 28309,
        "x[6][6];": 28310,
        "-(-x": 28311,
        "-(-y": 28312,
        "-y": 28313,
        "-(x": 28314,
        "-x2": 28315,
        "abs(n);": 28316,
        "(abs(n)": 28317,
        "abs(m))": 28318,
        "absolute(int": 28319,
        "absolute(x)": 28320,
        "absolute(y);": 28321,
        "-sum": 28322,
        "(-sum)": 28323,
        "-n": 28324,
        "(-y)": 28325,
        "(-y))": 28326,
        "abs(-x": 28327,
        "(y))": 28328,
        "-A": 28329,
        "abs(x1);": 28330,
        "mirrorup": 28331,
        "mirrorright": 28332,
        "(mirrorup)": 28333,
        "(mirrorright)": 28334,
        "ay": 28335,
        "-ay;": 28336,
        "swap(ax,": 28337,
        "cx);": 28338,
        "swap(ay,": 28339,
        "cy);": 28340,
        "-ax;": 28341,
        "cy;": 28342,
        "aj": 28343,
        "bj": 28344,
        "ck1": 28345,
        "abs(a)": 28346,
        "-ans": 28347,
        "-tmp,": 28348,
        "(int)y;": 28349,
        "isPerfectSquare(long": 28350,
        "((sr": 28351,
        "floor(sr))": 28352,
        "floorSqrt(int": 28353,
        "(isPerfectSquare(n))": 28354,
        "foo": 28355,
        "floorSqrt(n);": 28356,
        "--start;": 28357,
        "(int)sqrt(n);": 28358,
        "1\";": 28359,
        "zz)": 28360,
        "sqrt(n),": 28361,
        "156544555;": 28362,
        "res;;": 28363,
        "floor(sqrt(n));": 28364,
        "gcd(n);": 28365,
        "kiri;": 28366,
        "kiri": 28367,
        "(hi)": 28368,
        "hi--;": 28369,
        "px;": 28370,
        "sqrt(px);": 28371,
        "(!(px": 28372,
        "hasil)": 28373,
        "++count)": 28374,
        "count))": 28375,
        "max(count,": 28376,
        "{\"Danil\",": 28377,
        "\"Olya\",": 28378,
        "\"Slava\",": 28379,
        "\"Ann\",": 28380,
        "\"Nikita\"};": 28381,
        "(s2.substr(i,": 28382,
        "s2.substr(i,": 28383,
        "s[3])": 28384,
        "s[4])": 28385,
        "tab[5]": 28386,
        "_i": 28387,
        "_i++)": 28388,
        "nPos": 28389,
        "a.find(tab[_i],": 28390,
        "(nPos": 28391,
        "strstr(p,": 28392,
        "\"Danil\"))": 28393,
        "NULL)": 28394,
        "\"Olya\"))": 28395,
        "\"Slava\"))": 28396,
        "\"Ann\"))": 28397,
        "\"Nikita\"))": 28398,
        "s.push_back(\"Danil\");": 28399,
        "s.push_back(\"Olya\");": 28400,
        "s.push_back(\"Slava\");": 28401,
        "s.push_back(\"Ann\");": 28402,
        "s.push_back(\"Nikita\");": 28403,
        "(a.find(s[i])": 28404,
        "a.npos)": 28405,
        "(a.rfind(s[i])": 28406,
        "a.find(s[i]))": 28407,
        "c[N];": 28408,
        "str1[][8]": 28409,
        "str1[0][k])": 28410,
        "str1[1][k])": 28411,
        "str1[2][k])": 28412,
        "str1[3][k])": 28413,
        "'N')": 28414,
        "str1[4][k])": 28415,
        "(d.find(\"Danil\")": 28416,
        "d.size())": 28417,
        "d.find(\"Danil\");": 28418,
        "'?';": 28419,
        "d[x": 28420,
        "(d.find(\"Olya\")": 28421,
        "d.find(\"Olya\");": 28422,
        "(d.find(\"Slava\")": 28423,
        "d.find(\"Slava\");": 28424,
        "(d.find(\"Ann\")": 28425,
        "d.find(\"Ann\");": 28426,
        "(d.find(\"Nikita\")": 28427,
        "d.find(\"Nikita\");": 28428,
        "t[j];": 28429,
        "\"Danil\",": 28430,
        "q(int": 28431,
        "a[o].length();": 28432,
        "a[j].length()": 28433,
        "q(i,": 28434,
        "amigos[]": 28435,
        "cant": 28436,
        "long)5;": 28437,
        "c.find(amigos[i]);": 28438,
        "cant++;": 28439,
        "(c.find(amigos[i],": 28440,
        "(cant": 28441,
        "\"Danil\";": 28442,
        "\"Olya\";": 28443,
        "\"Slava\";": 28444,
        "\"Ann\";": 28445,
        "\"Nikita\";": 28446,
        "((index": 28447,
        "s.find(a,": 28448,
        "s.find(b,": 28449,
        "s.find(c,": 28450,
        "s.find(d,": 28451,
        "s.find(e,": 28452,
        "(str.find(s[i])": 28453,
        "str.npos)": 28454,
        "(str.rfind(s[i])": 28455,
        "str.find(s[i]))": 28456,
        "Danil5,": 28457,
        "Olya4,": 28458,
        "Salva5,": 28459,
        "Ann3,": 28460,
        "Nikita6;": 28461,
        "((inp.substr(i,": 28462,
        "\"Danil\")": 28463,
        "\"Olya\")": 28464,
        "\"Slava\")": 28465,
        "\"Ann\")": 28466,
        "6))": 28467,
        "\"Nikita\")": 28468,
        "MAX_LEN": 28469,
        "buf[MAX_LEN": 28470,
        "(s.substr(i,": 28471,
        "buf[0])": 28472,
        "buf[1])": 28473,
        "buf[3])": 28474,
        "buf[2])": 28475,
        "buf[4])": 28476,
        "sum_mod(long": 28477,
        "subtract_mod(long": 28478,
        "multiply_mod(long": 28479,
        "modInverse(long": 28480,
        "divide_mod(long": 28481,
        "modInverse(b,": 28482,
        "\"..............\";": 28483,
        "\"YES\\n\",": 28484,
        "Next[10010];": 28485,
        "GetNext(string": 28486,
        "memset(Next,": 28487,
        "sizeof(Next));": 28488,
        "Next[0]": 28489,
        "s1[k": 28490,
        "Next[k];": 28491,
        "(s1[k": 28492,
        "Next[i]": 28493,
        "kmp(string": 28494,
        "GetNext(s2);": 28495,
        "s2[k": 28496,
        "(s2[k": 28497,
        "s[10]": 28498,
        "(kmp(p,": 28499,
        "friend_of_Alex[20]": 28500,
        "friend_of_Alex[k])": 28501,
        "mx_a": 28502,
        "mn_a": 28503,
        "mn_b": 28504,
        "mx_a),": 28505,
        "mn_a);": 28506,
        "mn_b);": 28507,
        "((max(2": 28508,
        "mn_a,": 28509,
        "mx_a)": 28510,
        "mn_b)": 28511,
        "max(2": 28512,
        "12345678;": 28513,
        "min(z,": 28514,
        "(max(2": 28515,
        "x[999999],": 28516,
        "y[999999];": 28517,
        "sort(y,": 28518,
        "x[0],": 28519,
        "brr[100005];": 28520,
        "999;": 28521,
        "ar1[101];": 28522,
        "maxl": 28523,
        "(maxl": 28524,
        "maxl);": 28525,
        "ar1[0];": 28526,
        "ar1[i])": 28527,
        "t[100],": 28528,
        "f[100],": 28529,
        "(maxa": 28530,
        "(mina": 28531,
        "(minb": 28532,
        "mina,": 28533,
        "maxa);": 28534,
        "tra[m": 28535,
        "tra[j];": 28536,
        "sort(tra,": 28537,
        "tra": 28538,
        "(ara[n": 28539,
        "tra[0])": 28540,
        "ara[0]": 28541,
        "b[10000];": 28542,
        "mmi": 28543,
        "min(mmi,": 28544,
        "(mmi": 28545,
        "101,": 28546,
        "mn2)": 28547,
        "max(minn": 28548,
        "max(a[n": 28549,
        "right[n": 28550,
        "wrong[m": 28551,
        "right[i];": 28552,
        "wrong[i];": 28553,
        "sort(right,": 28554,
        "sort(wrong,": 28555,
        "wrong": 28556,
        "right[0];": 28557,
        "wrong[0])": 28558,
        "*min_element(b,": 28559,
        "res++)": 28560,
        "Maxa": 28561,
        "max(Maxa,": 28562,
        "Maxa)": 28563,
        "max(Mina": 28564,
        "ar[1008],": 28565,
        "br[1008];": 28566,
        "br[i];": 28567,
        "sort(br,": 28568,
        "br[0]": 28569,
        "(!fl)": 28570,
        "max(a[0]": 28571,
        "insercion(int": 28572,
        "v2[m];": 28573,
        "v2[i];": 28574,
        "insercion(v,": 28575,
        "insercion(v2,": 28576,
        "v[0],": 28577,
        "va,": 28578,
        "max(a[n],": 28579,
        "min_n": 28580,
        "min_m": 28581,
        "max_n)": 28582,
        "min_n)": 28583,
        "min_n;": 28584,
        "min_m)": 28585,
        "(min_m": 28586,
        "wong;": 28587,
        "right.push_back(x);": 28588,
        "wong.push_back(x);": 28589,
        "sort(right.begin(),": 28590,
        "right.end());": 28591,
        "sort(wong.begin(),": 28592,
        "wong.end());": 28593,
        "(right[n": 28594,
        "wong[0]": 28595,
        "right[0]": 28596,
        "(right[0]": 28597,
        "wong[0])": 28598,
        "passed;": 28599,
        "failed;": 28600,
        "passed.push_back(x);": 28601,
        "failed.push_back(x);": 28602,
        "answers;": 28603,
        "transform((s1).begin(),": 28604,
        "(s1).end(),": 28605,
        "s1.begin(),": 28606,
        "transform((s2).begin(),": 28607,
        "(s2).end(),": 28608,
        "s2.begin(),": 28609,
        "(s1.compare(s2)": 28610,
        "tolower(a[i]);": 28611,
        "tolower(b[j]);": 28612,
        "tolower(b[i]);": 28613,
        "'Z'))": 28614,
        "((b[i]": 28615,
        "(int)a[i]": 28616,
        "(char)((int)a[i]": 28617,
        "((int)b[i]": 28618,
        "(int)b[i]": 28619,
        "(char)((int)b[i]": 28620,
        "(down)": 28621,
        "tolower(s2[i]);": 28622,
        "(int(s1[i])": 28623,
        "int(s2[i]))": 28624,
        "(a.compare(b)": 28625,
        "toupper(a[i]);": 28626,
        "toupper(b[i]);": 28627,
        "lowercase(char": 28628,
        "bc": 28629,
        "lowercase(a);": 28630,
        "lowercase(b);": 28631,
        "ac++;": 28632,
        "bc++;": 28633,
        "bc)": 28634,
        "(bc": 28635,
        "ac)": 28636,
        "value--;": 28637,
        "n1[i],": 28638,
        "n2[i];": 28639,
        "n1.size();": 28640,
        "n2[i])": 28641,
        "transform(str1.begin(),": 28642,
        "str1.end(),": 28643,
        "str1.begin(),": 28644,
        "transform(str2.begin(),": 28645,
        "str2.end(),": 28646,
        "str2.begin(),": 28647,
        "92)": 28648,
        "32))": 28649,
        "(tolower(a[i])": 28650,
        "tolower(b[i])": 28651,
        "91)": 28652,
        "x1),": 28653,
        "y3;": 28654,
        "(y3": 28655,
        "X1,": 28656,
        "X2,": 28657,
        "Y1,": 28658,
        "Y2,": 28659,
        "X1": 28660,
        "Y1": 28661,
        "X2": 28662,
        "Y2": 28663,
        "(abs(X2": 28664,
        "X1)": 28665,
        "(abs(Y2": 28666,
        "Y1)": 28667,
        "(X2": 28668,
        "(Y2": 28669,
        "(abs(x2": 28670,
        "(((x2": 28671,
        "(abs(num": 28672,
        "solveequal();": 28673,
        "xa,": 28674,
        "ya,": 28675,
        "xb,": 28676,
        "yb,": 28677,
        "xa": 28678,
        "xb": 28679,
        "yb": 28680,
        "xa;": 28681,
        "ya;": 28682,
        "abs(xb);": 28683,
        "abs(yb);": 28684,
        "(xb": 28685,
        "((xb": 28686,
        "yb)": 28687,
        "(dfs(x": 28688,
        "my))": 28689,
        "abs(sx": 28690,
        "tx);": 28691,
        "abs(sy": 28692,
        "ny)": 28693,
        "swap(nx,": 28694,
        "ny);": 28695,
        "((ny": 28696,
        "abs((x2": 28697,
        "abs((y2": 28698,
        "(xa": 28699,
        "xb)": 28700,
        "(ya": 28701,
        "((xa": 28702,
        "y11,": 28703,
        "y11": 28704,
        "abs(y11": 28705,
        "((abs(y2": 28706,
        "step2": 28707,
        "raznstep": 28708,
        "abs(step1": 28709,
        "step2);": 28710,
        "(((step1": 28711,
        "(step2": 28712,
        "(raznstep": 28713,
        "((t1": 28714,
        "((t2": 28715,
        "abs(count1": 28716,
        "(!(t3": 28717,
        "even(int": 28718,
        "isint(double": 28719,
        "(int)a;": 28720,
        "(!isint(q": 28721,
        "!isint(w": 28722,
        "(even(q": 28723,
        "even(w": 28724,
        "ae,": 28725,
        "be;": 28726,
        "ae": 28727,
        "abs(ae": 28728,
        "abs(be": 28729,
        "(val1": 28730,
        "(val2": 28731,
        "x[2],": 28732,
        "y[2],": 28733,
        "abs(x[1]": 28734,
        "abs(y[1]": 28735,
        "y[0]);": 28736,
        "((dx": 28737,
        "xabs": 28738,
        "yabs": 28739,
        "(xabs": 28740,
        "xmoves": 28741,
        "ymoves": 28742,
        "(xmoves": 28743,
        "tmpx": 28744,
        "tmpy": 28745,
        "(tmpx": 28746,
        "dx2": 28747,
        "dy2": 28748,
        "(dx2": 28749,
        "-dy2": 28750,
        "(abs(cx": 28751,
        "abs(cy": 28752,
        "(!((xx": 28753,
        "((abs(x1": 28754,
        "!(b": 28755,
        "abs((a": 28756,
        "abs((b": 28757,
        "S1[102];": 28758,
        "S2[102];": 28759,
        "(strcmp(S1,": 28760,
        "S2)": 28761,
        "puts(\"1\");": 28762,
        "1.0e-5;": 28763,
        "(!strcmp(a,": 28764,
        "cnk(int": 28765,
        "as(short": 28766,
        "s1[200],": 28767,
        "s2[200];": 28768,
        "p[100000];": 28769,
        "(strcmp(s1,": 28770,
        "x.length(),": 28771,
        "y.length();": 28772,
        "(lx": 28773,
        "ly)": 28774,
        "(cmp(a,": 28775,
        "number1,": 28776,
        "number2;": 28777,
        "number1": 28778,
        "(number1": 28779,
        "number2)": 28780,
        "\"#Color\"": 28781,
        "\"#Black&White\"": 28782,
        "'M'": 28783,
        "'Y')": 28784,
        "\"#Color\\n\";": 28785,
        "\"#Black&White\\n\";": 28786,
        "\"#Color\";": 28787,
        "\"#Black&White\";": 28788,
        "(r--)": 28789,
        "'Y'": 28790,
        "'M')": 28791,
        "(color)": 28792,
        "\"#Color\")": 28793,
        "fl++;": 28794,
        "multiset<char>": 28795,
        "ms.insert(c);": 28796,
        "(!ms.count('C')": 28797,
        "!ms.count('M')": 28798,
        "!ms.count('Y'))": 28799,
        "'Y'))": 28800,
        "c[251][251];": 28801,
        "((c[i][j]": 28802,
        "'G'))": 28803,
        "clr": 28804,
        "clr++;": 28805,
        "(clr": 28806,
        "p[n][m];": 28807,
        "(p[i][j]": 28808,
        "Map[110][110];": 28809,
        "Map[i][j];": 28810,
        "(Map[i][j]": 28811,
        "Map[i][j]": 28812,
        "cnt[N];": 28813,
        "cnt[idx]++;": 28814,
        "200500;": 28815,
        "v[maxn];": 28816,
        "h[maxn];": 28817,
        "h[hn++]": 28818,
        "sort(h,": 28819,
        "hn);": 28820,
        "hn;": 28821,
        "h[j]": 28822,
        "--cnt;": 28823,
        "b[++sz]": 28824,
        "choose(n": 28825,
        "x(n": 28826,
        "y.push_back(x2);": 28827,
        "sort(y.begin(),": 28828,
        "y.end());": 28829,
        "(int)y.size()": 28830,
        "v[100100],": 28831,
        "h[100100];": 28832,
        "can_do(int": 28833,
        "mid2,": 28834,
        "mid2);": 28835,
        "(h[mid]": 28836,
        "hi++;": 28837,
        "mid2)": 28838,
        "setprecision(20);": 28839,
        "v[n++]": 28840,
        "h[iter++]": 28841,
        "h[MAX],": 28842,
        "memset(book,": 28843,
        "sizeof(book));": 28844,
        "sort(h": 28845,
        "upper_bound(h": 28846,
        "(book[temp])": 28847,
        "book[temp]": 28848,
        "blocks;": 28849,
        "vert,": 28850,
        "horiz;": 28851,
        "vert": 28852,
        "vert;": 28853,
        "blocks.push_back(ss);": 28854,
        "sort(blocks.begin(),": 28855,
        "blocks.end());": 28856,
        "m[x2]++;": 28857,
        "blocks.push_back(maxx": 28858,
        "blocks.size();": 28859,
        "(!m.empty()": 28860,
        "(m.begin())->first": 28861,
        "blocks[i])": 28862,
        "(m.begin())->second;": 28863,
        "m.erase(m.begin());": 28864,
        "INFTY": 28865,
        "V[MAXN];": 28866,
        "H[MAXN];": 28867,
        "H[i]": 28868,
        "sort(V,": 28869,
        "V[N]": 28870,
        "INFTY;": 28871,
        "sort(H,": 28872,
        "H[j].first)": 28873,
        "H[j].second": 28874,
        "x[MX];": 28875,
        "x1[MX],": 28876,
        "x2[MX],": 28877,
        "y[MX];": 28878,
        "x[++n]": 28879,
        "sort(x": 28880,
        "x1[i]": 28881,
        "x2[i]": 28882,
        "v.push_back(x2[i]);": 28883,
        "lower_bound(v.begin(),": 28884,
        "ver(n);": 28885,
        "ver.push_back(1000000000);": 28886,
        "sort(ver.begin(),": 28887,
        "ver.end());": 28888,
        "hor;": 28889,
        "hor.push_back(x2);": 28890,
        "hor.size();": 28891,
        "sort(hor.begin(),": 28892,
        "hor.end());": 28893,
        "hor[p]": 28894,
        "ver[i])": 28895,
        "flag[N];": 28896,
        "Index": 28897,
        "(flag[Index]": 28898,
        "Index--;": 28899,
        "(Index": 28900,
        "flag[Index]": 28901,
        "x[maxn],": 28902,
        "upper_bound(x,": 28903,
        "(~k": 28904,
        "vis[k])": 28905,
        "(~k)": 28906,
        "x.push_back(1e9);": 28907,
        "y.push_back(y2);": 28908,
        "lie[maxn];": 28909,
        "hang[maxn];": 28910,
        "lie[i];": 28911,
        "sort(lie": 28912,
        "hang[++cnt]": 28913,
        "sort(hang": 28914,
        "(hang[i]": 28915,
        "lie[j])": 28916,
        "u[man],": 28917,
        "v[man];": 28918,
        "u[i];": 28919,
        "sort(u,": 28920,
        "upper_bound(u,": 28921,
        "(v[k]": 28922,
        "v[k]": 28923,
        "b[k++]": 28924,
        "tmp--,": 28925,
        "shu[N],": 28926,
        "k1[N];": 28927,
        "sort(shu,": 28928,
        "k1[t++]": 28929,
        "sort(k1,": 28930,
        "k1[j]": 28931,
        "shu[i])": 28932,
        "\"First\"": 28933,
        "\"Second\"": 28934,
        "\"Second\\n\";": 28935,
        "\"First\\n\";": 28936,
        "puts(n1": 28937,
        "\"Second\");": 28938,
        "\"Second\")": 28939,
        "n1--;": 28940,
        "n2--;": 28941,
        "((n1": 28942,
        "puts(A": 28943,
        "dp[101][101][5],": 28944,
        "turn)": 28945,
        "dp[n1][n2][turn];": 28946,
        "(!n1)": 28947,
        "min(k1,": 28948,
        "n1);": 28949,
        "rec(n1": 28950,
        "(!n2)": 28951,
        "min(k2,": 28952,
        "rec(n1,": 28953,
        "(!rec(n1,": 28954,
        "\"First\\n\"": 28955,
        "puts(\"First\");": 28956,
        "puts(\"Second\");": 28957,
        "ar[10000],": 28958,
        "ar[a": 28959,
        "ar[b": 28960,
        "like[33399];": 28961,
        "like[i];": 28962,
        "(like[like[like[i]]]": 28963,
        "a[a[a[i]]])": 28964,
        "a[a[a[a[i]]]])": 28965,
        "a[5001];": 28966,
        "--a[i];": 28967,
        "(x[x[x[i]]]": 28968,
        "seq[5010],": 28969,
        "(seq[seq[seq[i]]]": 28970,
        "(f[f[f[i]]]": 28971,
        "d[5011],": 28972,
        "lzl": 28973,
        "(d[l]": 28974,
        "(d[c]": 28975,
        "lzl++;": 28976,
        "(lzl": 28977,
        "(a[a[a[i]]]": 28978,
        "checkTriangle(const": 28979,
        "f[tmp]": 28980,
        "(checkTriangle(i,": 28981,
        "a[5555];": 28982,
        "input[10000];": 28983,
        "ng": 28984,
        "input[input[input[i]]])": 28985,
        "(ng": 28986,
        "a[a[a[i]]];": 28987,
        "(a[a[a[a[i]]]]": 28988,
        "intlog(double": 28989,
        "(int)(log(x)": 28990,
        "log(base));": 28991,
        "slope(double": 28992,
        "distance(int": 28993,
        "sqrt(pow(x2": 28994,
        "pow(y2": 28995,
        "dot_por(pair<long": 28996,
        "(v1.first": 28997,
        "v2.first": 28998,
        "v1.second": 28999,
        "v2.second);": 29000,
        "length_of_vector(pair<long": 29001,
        "sqrt(v.first": 29002,
        "v.first": 29003,
        "v.second": 29004,
        "v.second);": 29005,
        "indx,": 29006,
        "c[indx])": 29007,
        "(c[indx])": 29008,
        "c[indx]": 29009,
        "calc(a[indx]": 29010,
        "(a[a[a[a[i]": 29011,
        "(arr[arr[arr[i]]]": 29012,
        "f[n];": 29013,
        "((f[f[i]]": 29014,
        "(f[j]": 29015,
        "arr[5005];": 29016,
        "5100;": 29017,
        "f[f[f[i]]])": 29018,
        "l[5100]": 29019,
        "(l[l[l[l[i]]]]": 29020,
        "f[5001];": 29021,
        "f[5518];": 29022,
        "v.push_back(t);": 29023,
        "v[v[v[i]": 29024,
        "{'^',": 29025,
        "'>',": 29026,
        "'v',": 29027,
        "'<'};": 29028,
        "\"undefined\";": 29029,
        "\"cw\";": 29030,
        "\"ccw\";": 29031,
        "'<',": 29032,
        "'^',": 29033,
        "'v'};": 29034,
        "D[]": 29035,
        "'^')": 29036,
        "(C[0": 29037,
        "4)]": 29038,
        "D[0": 29039,
        "4)])": 29040,
        "\"undefined\\n\";": 29041,
        "\"cw\\n\";": 29042,
        "\"ccw\\n\";": 29043,
        "'>')": 29044,
        "(C[1": 29045,
        "D[3": 29046,
        "'v')": 29047,
        "(C[2": 29048,
        "D[2": 29049,
        "(C[3": 29050,
        "D[1": 29051,
        "\"undefined\"": 29052,
        "((p1": 29053,
        "\"cw\"": 29054,
        "\"ccw\"": 29055,
        "To(char": 29056,
        "(abs(To(s)": 29057,
        "To(e))": 29058,
        "puts(\"undefined\"),": 29059,
        "To(s)": 29060,
        "puts(\"cw\");": 29061,
        "puts(\"ccw\");": 29062,
        "firstLine;": 29063,
        "firstLine);": 29064,
        "firstLine[0],": 29065,
        "firstLine[2];": 29066,
        "212": 29067,
        "((pos1": 29068,
        "oka": 29069,
        "(oka": 29070,
        "mp['v']": 29071,
        "mp['<']": 29072,
        "mp['^']": 29073,
        "mp['>']": 29074,
        "mp[t];": 29075,
        "{'v',": 29076,
        "'>'};": 29077,
        "v.push_back('^');": 29078,
        "v.push_back('>');": 29079,
        "v.push_back('v');": 29080,
        "v.push_back('<');": 29081,
        "idxa,": 29082,
        "idxb;": 29083,
        "idxa": 29084,
        "idxb": 29085,
        "(idxa": 29086,
        "(v[(idxa": 29087,
        "v[idxb": 29088,
        "4])": 29089,
        "C[4]": 29090,
        "C[i])": 29091,
        "Go(char": 29092,
        "Go(A);": 29093,
        "Go(B);": 29094,
        "puts(\"undefined\");": 29095,
        "(MOD(aa": 29096,
        "MOD(aa": 29097,
        "char_to_angle(char": 29098,
        "270;": 29099,
        "char_to_angle(c1);": 29100,
        "char_to_angle(c2);": 29101,
        "(abs(d1": 29102,
        "90": 29103,
        "-90": 29104,
        "270": 29105,
        "-270": 29106,
        "ky": 29107,
        "\"v>^<\";": 29108,
        "ky[p])": 29109,
        "ky[q])": 29110,
        "f(char": 29111,
        "f(c1),": 29112,
        "f(c2);": 29113,
        "cek1,": 29114,
        "cek2;": 29115,
        "'<';": 29116,
        "'^';": 29117,
        "'>';": 29118,
        "'v';": 29119,
        "cek1": 29120,
        "cek2": 29121,
        "(cek1": 29122,
        "\"v<^>\";": 29123,
        "f3,": 29124,
        "f4;": 29125,
        "f4": 29126,
        "(s1[f3]": 29127,
        "s1[f4])": 29128,
        "a1[20]": 29129,
        "a2[20]": 29130,
        "tep1;": 29131,
        "tep2;": 29132,
        "tep1": 29133,
        "tep2": 29134,
        "(a1[i": 29135,
        "num]": 29136,
        "(a2[i]": 29137,
        "(a2[i": 29138,
        "number[5];": 29139,
        "number[u]": 29140,
        "number[v]": 29141,
        "number[w]": 29142,
        "number[x]": 29143,
        "number[oo]": 29144,
        "number[pp])": 29145,
        "(cw": 29146,
        "(ccw": 29147,
        "t3);": 29148,
        "banyaklemon": 29149,
        "banyakapel": 29150,
        "banyakpear": 29151,
        "min(banyaklemon,": 29152,
        "banyakapel);": 29153,
        "min(hasil,": 29154,
        "banyakpear);": 29155,
        "(7)": 29156,
        "arr[3],": 29157,
        "p.push_back(s);": 29158,
        "p.push_back(d);": 29159,
        "p.push_back(a);": 29160,
        "4));": 29161,
        "minb,": 29162,
        "minc,": 29163,
        "minc": 29164,
        "min(min(mina,": 29165,
        "minb),": 29166,
        "minc);": 29167,
        "cc)": 29168,
        "4)))": 29169,
        "absi(int": 29170,
        "absl(long": 29171,
        "min(p2,": 29172,
        "p3));": 29173,
        "tempa,": 29174,
        "tempb,": 29175,
        "min(tempa,": 29176,
        "tempb);": 29177,
        "tempc);": 29178,
        "compote(int": 29179,
        "compote(a": 29180,
        "compote(a,": 29181,
        "--b;": 29182,
        "--c;": 29183,
        "n3));": 29184,
        "8888888890;": 29185,
        "temp.str();": 29186,
        "lucky(long": 29187,
        "(!lucky(a))": 29188,
        "mulMod(long": 29189,
        "addMod(long": 29190,
        "fast(long": 29191,
        "fast(a,": 29192,
        "mulMod(tmp,": 29193,
        "(check(x": 29194,
        "solve(num)": 29195,
        "contain8": 29196,
        "-c;": 29197,
        "(contain8)": 29198,
        "\"8\\n\";": 29199,
        "-8)": 29200,
        "ca;": 29201,
        "10000000050;": 29202,
        "eight(int": 29203,
        "(eight(a": 29204,
        "checkDigit(long": 29205,
        "(checkDigit(temp))": 29206,
        "flr;": 29207,
        "flr++;": 29208,
        "(check(abs(flr)));": 29209,
        "(abs(cek)": 29210,
        "(check(num))": 29211,
        "check(a);": 29212,
        "(!check(tmp))": 29213,
        "tmp++,": 29214,
        "des,": 29215,
        "ex,": 29216,
        "lol,": 29217,
        "-0)": 29218,
        "des": 29219,
        "((des": 29220,
        "isluck(long": 29221,
        "(isluck(n))": 29222,
        "c8(long": 29223,
        "(c8(n": 29224,
        "floorNum,": 29225,
        "floorToGo,": 29226,
        "floorNum;": 29227,
        "floorToGo": 29228,
        "shouldContinue": 29229,
        "isLucky": 29230,
        "(shouldContinue)": 29231,
        "floorToGo++;": 29232,
        "floorToGo;": 29233,
        "(isLucky)": 29234,
        "floorNum": 29235,
        "IN(long": 29236,
        "Number,": 29237,
        "Temp;": 29238,
        "Number": 29239,
        "abs(Number);": 29240,
        "Temp": 29241,
        "(Temp": 29242,
        "!IN(Number": 29243,
        "tostr(int": 29244,
        "rr.str();": 29245,
        "check_lucky(long": 29246,
        "(!check_lucky(abs(a))": 29247,
        "++b)": 29248,
        "abs(num);": 29249,
        "(!lucky(a": 29250,
        "array_size;": 29251,
        "array_value;": 29252,
        "array_positivo(100005,": 29253,
        "array_negativo(100005,": 29254,
        "(array_value": 29255,
        "(array_positivo[array_value]": 29256,
        "array_positivo[array_value]++;": 29257,
        "array_value": 29258,
        "(array_negativo[array_value]": 29259,
        "array_negativo[array_value]++;": 29260,
        "count.insert(pair<int,": 29261,
        "int>(a[i],": 29262,
        "count.size()": 29263,
        "se.insert(x);": 29264,
        "ara[num": 29265,
        "(ara[0])": 29266,
        "vector<int>::iterator": 29267,
        "unique(v.begin(),": 29268,
        "v.resize(distance(v.begin(),": 29269,
        "it));": 29270,
        "arr[100010],": 29271,
        "num[maxn": 29272,
        "sun": 29273,
        "elements;": 29274,
        "elements.insert(p);": 29275,
        "elements.size()": 29276,
        "segundos": 29277,
        "(mapa[a]": 29278,
        "mapa[a]": 29279,
        "segundos++;": 29280,
        "s.erase(s.find(0));": 29281,
        "ans.insert(x);": 29282,
        "v.insert(arr[i]);": 29283,
        "ada[200005];": 29284,
        "(!ada[x]": 29285,
        "d[100010],": 29286,
        "c[b]": 29287,
        "d[b]": 29288,
        "z[100010]": 29289,
        "f[100010]": 29290,
        "z[a]": 29291,
        "f[-a]": 29292,
        "f[200005];": 29293,
        "add]++;": 29294,
        "(f[a": 29295,
        "add]": 29296,
        "ar[maxn];": 29297,
        "ar[temp]++;": 29298,
        "arr[-temp]++;": 29299,
        "unique(a,": 29300,
        "vis[2": 29301,
        "100005];": 29302,
        "Ai;": 29303,
        "(Ai": 29304,
        "Ai": 29305,
        "(!vis[Ai])": 29306,
        "vis[Ai]": 29307,
        "(cont[a]": 29308,
        "cont[a]": 29309,
        "!mp[x])": 29310,
        "mp[x]": 29311,
        "m1.clear();": 29312,
        "m1[a[i]]++;": 29313,
        "m1.size()": 29314,
        "b[100005],": 29315,
        "b[-x]++;": 29316,
        "v.erase(0);": 29317,
        "mark[32];": 29318,
        "(mark[i])": 29319,
        "mark);": 29320,
        "(!mark[s[p]": 29321,
        "mark[s[p]": 29322,
        "f[26]": 29323,
        "f[s[i]": 29324,
        "(f[s[i]": 29325,
        "pos.push_back(i);": 29326,
        "pos.size();": 29327,
        "pos[j];": 29328,
        "q.length();": 29329,
        "freq[26]": 29330,
        "freq[c": 29331,
        "(freq[q[i]": 29332,
        "v.push_back(q.substr(prev,": 29333,
        "freq[q[i]": 29334,
        "v.push_back(q.substr(i,": 29335,
        "(int)v.size();": 29336,
        "myset.insert(second[i]);": 29337,
        "myset.erase(second[i++]);": 29338,
        "second.size())": 29339,
        "second[i++];": 29340,
        "(myset.find(second[i])": 29341,
        "myset.end()": 29342,
        "y[30];": 29343,
        "(a.find('a'": 29344,
        "a.find('a'": 29345,
        "m[s[j]]++;": 29346,
        "(m[s[j]])": 29347,
        "s[u];": 29348,
        "cnt[26]": 29349,
        "ans.push_back(t);": 29350,
        "t.push_back(s[i]);": 29351,
        "S.insert(s.begin(),": 29352,
        "((int)S.size()": 29353,
        "F[26]": 29354,
        "s.substr(p)": 29355,
        "F[s[p]": 29356,
        "(F[s[c]": 29357,
        "s.substr(p,": 29358,
        "ans.push_back(tmp);": 29359,
        "(st.find(s[i])": 29360,
        "s.substr(a[i],": 29361,
        "s.substr(a[k": 29362,
        "s.substr(a[a.size()": 29363,
        "vis[35]": 29364,
        "(!vis[s[i]": 29365,
        "vis[s[i]": 29366,
        "vis[50];": 29367,
        "in.length(),": 29368,
        "(vis[now])": 29369,
        "in[0];": 29370,
        "(vis[now]": 29371,
        "(!ans.empty())": 29372,
        "(a[q[i]": 29373,
        "arr.push_back(i);": 29374,
        "a[q[i]": 29375,
        "arr.back();": 29376,
        "vii;": 29377,
        "viii;": 29378,
        "arr[s[0]": 29379,
        "viii.push_back(s.size()": 29380,
        "(!arr[s[i]": 29381,
        "viii.push_back(i": 29382,
        "sort(viii.begin(),": 29383,
        "viii.end());": 29384,
        "viii.size();": 29385,
        "ans(l,": 29386,
        "viii[i],": 29387,
        "vii.push_back(p);": 29388,
        "viii[i]": 29389,
        "(vii.size()": 29390,
        "vii.size();": 29391,
        "vii[i]": 29392,
        "(s.find(ch)": 29393,
        "string::npos": 29394,
        "istringstream": 29395,
        "iss(s);": 29396,
        "(iss": 29397,
        "f[26];": 29398,
        "(f[temp]": 29399,
        "f[temp]++;": 29400,
        "vsz": 29401,
        "vsz)": 29402,
        "v(256);": 29403,
        "(!v[s[i]])": 29404,
        "v[s[i]]": 29405,
        "w.push_back(i);": 29406,
        "(w.size()": 29407,
        "s.substr(w[i],": 29408,
        "w[i])": 29409,
        "s.substr(w[k": 29410,
        "(vis[a[i]": 29411,
        "allAreSame(string": 29412,
        "(S[i])": 29413,
        "S[i])": 29414,
        "printString(string": 29415,
        "(allAreSame(S))": 29416,
        "printString(S);": 29417,
        "(S1[i])": 29418,
        "S1[i];": 29419,
        "(S2[i])": 29420,
        "(S1[0]": 29421,
        "S2[i];": 29422,
        "(S3[i])": 29423,
        "S2[0]": 29424,
        "S3[i];": 29425,
        "sort(char": 29426,
        "*arr,": 29427,
        "size2": 29428,
        "(size": 29429,
        "str2[size2];": 29430,
        "sort(str2,": 29431,
        "size2);": 29432,
        "size2;": 29433,
        "final;": 29434,
        "final2;": 29435,
        "op.length();": 29436,
        "(op[i]": 29437,
        "sort(final.begin(),": 29438,
        "final.end());": 29439,
        "op.length()": 29440,
        "final.insert((j": 29441,
        "\"+\");": 29442,
        "res[s.length()];": 29443,
        "totalc": 29444,
        "printC": 29445,
        "printC++;": 29446,
        "(printC": 29447,
        "totalc)": 29448,
        "c2--;": 29449,
        "c3--;": 29450,
        "(isalnum(name[i])": 29451,
        "isalnum(name[i": 29452,
        "(name[j": 29453,
        "name[i])": 29454,
        "name[j": 29455,
        "cup;": 29456,
        "a.push_back(s[i]);": 29457,
        "sizeof(arr)": 29458,
        "sizeof(arr[0]);": 29459,
        "(s.length())": 29460,
        "s.insert(i,": 29461,
        "a[(n": 29462,
        "result1": 29463,
        "result2": 29464,
        "result3": 29465,
        "xay.length())": 29466,
        "result1.insert(result1.length(),": 29467,
        "\"1\");": 29468,
        "result2.insert(result2.length(),": 29469,
        "\"2\");": 29470,
        "result3.insert(result3.length(),": 29471,
        "\"3\");": 29472,
        "result3;": 29473,
        "result.length();": 29474,
        "result.length()": 29475,
        "satu,": 29476,
        "dua,": 29477,
        "(S[x]": 29478,
        "(satu": 29479,
        "S[x]": 29480,
        "satu--;": 29481,
        "(dua": 29482,
        "'2';": 29483,
        "dua--;": 29484,
        "(tiga": 29485,
        "'3';": 29486,
        "tiga--;": 29487,
        "swap(s[j],": 29488,
        "str[101];": 29489,
        "out.push_back(1);": 29490,
        "out.push_back(2);": 29491,
        "out.push_back(3);": 29492,
        "sort(out.begin(),": 29493,
        "out.end());": 29494,
        "out.size();": 29495,
        "v[v.size()": 29496,
        "three": 29497,
        "three++;": 29498,
        "(three": 29499,
        "nums.push_back(s[i]": 29500,
        "nums[0]": 29501,
        "sort((nums).begin(),": 29502,
        "(nums).end());": 29503,
        "nums.size()": 29504,
        "nums[i]": 29505,
        "nums[nums.size()": 29506,
        "a[++n])": 29507,
        "min(s1,": 29508,
        "abs(a[t++]": 29509,
        "p[1000];": 29510,
        "min(B,": 29511,
        "pos(n": 29512,
        "sort(pos.begin(),": 29513,
        "pos.end());": 29514,
        "abs(pos[i]": 29515,
        "visited[101];": 29516,
        "abs(arr[o]": 29517,
        "min(odd,": 29518,
        "k[50],": 29519,
        "t[50],": 29520,
        "k[i])": 29521,
        "k[i]);": 29522,
        "a[105]{};": 29523,
        "data[105];": 29524,
        "sort(data": 29525,
        "data": 29526,
        "abs(data[i]": 29527,
        "a[1002],": 29528,
        "sum_black": 29529,
        "sum_white": 29530,
        "(sum_black": 29531,
        "sum_white)": 29532,
        "Black(int": 29533,
        "White(int": 29534,
        "abs((2": 29535,
        "blackAns": 29536,
        "Black(arr,": 29537,
        "whiteAns": 29538,
        "White(arr,": 29539,
        "(blackAns": 29540,
        "whiteAns)": 29541,
        "abs(o": 29542,
        "qsort(int": 29543,
        "a[(s": 29544,
        "qsort(a,": 29545,
        "A(n": 29546,
        "ansj": 29547,
        "anso": 29548,
        "(ansj": 29549,
        "anso)": 29550,
        "p[110];": 29551,
        "p[t]": 29552,
        "memcpy(a,": 29553,
        "abs(0": 29554,
        "memcpy(p,": 29555,
        "abs(p[i]);": 29556,
        "tab[105],": 29557,
        "wynb": 29558,
        "wynw": 29559,
        "tab[i];": 29560,
        "sort(tab": 29561,
        "tab": 29562,
        "abs(tab[i]": 29563,
        "min(wynb,": 29564,
        "wynw)": 29565,
        "a[56];": 29566,
        "p[101];": 29567,
        "s.insert(i": 29568,
        "w.push_back(x);": 29569,
        "sort(w.begin(),": 29570,
        "w.end());": 29571,
        "answ": 29572,
        "jb": 29573,
        "abs(*i": 29574,
        "b[jb]);": 29575,
        "jb++;": 29576,
        "(jw": 29577,
        "w.size())": 29578,
        "w[jw]);": 29579,
        "jw++;": 29580,
        "min(ansb,": 29581,
        "answ)": 29582,
        "mov1": 29583,
        "mov2": 29584,
        "min(mov1,": 29585,
        "mov2)": 29586,
        "chess;": 29587,
        "acc;": 29588,
        "chess.push_back(acc);": 29589,
        "sort(chess.begin(),": 29590,
        "chess.end());": 29591,
        "(chess[x]": 29592,
        "abs(chess[x]": 29593,
        "test_odd()": 29594,
        "pos[(i": 29595,
        "test_even()": 29596,
        "vector<int>(N": 29597,
        "res_odd": 29598,
        "test_odd();": 29599,
        "res_even": 29600,
        "test_even();": 29601,
        "min(res_odd,": 29602,
        "res_even);": 29603,
        "ceil((double)(a": 29604,
        "wait": 29605,
        "(wait": 29606,
        "cal": 29607,
        "cal;": 29608,
        "(cal": 29609,
        "(float)((a": 29610,
        "(float)b;": 29611,
        "ceil(t)": 29612,
        "data,": 29613,
        "mbs,": 29614,
        "vid,": 29615,
        "mbs": 29616,
        "vid;": 29617,
        "((data": 29618,
        "mbs)": 29619,
        "vid": 29620,
        "mbs;": 29621,
        "(double)(ceil(c": 29622,
        "binarySearch()": 29623,
        "med,": 29624,
        "((lo": 29625,
        "(ok(med))": 29626,
        "med;": 29627,
        "wait;": 29628,
        "binary()": 29629,
        "1e6,": 29630,
        "(!mk)": 29631,
        "ceil(x": 29632,
        "ceil(((a": 29633,
        "1.0)": 29634,
        "int)ceil(a": 29635,
        "most;": 29636,
        "(ceil(double(i": 29637,
        "((((a": 29638,
        "(int)t;": 29639,
        "0.000001)": 29640,
        "ceil((req": 29641,
        "(int)ceil((a": 29642,
        "available": 29643,
        "needed": 29644,
        "available;": 29645,
        "(needed": 29646,
        "wait++;": 29647,
        "a[100500];": 29648,
        "ceil(((float)a": 29649,
        "((mid": 29650,
        "selectionSorting(int": 29651,
        "numberofm(int": 29652,
        "selectionSorting(a,": 29653,
        "numberofm(a,": 29654,
        "a[min])": 29655,
        "a[min];": 29656,
        "a[min]": 29657,
        "a[p++];": 29658,
        "13);": 29659,
        "arr[12];": 29660,
        "a[13];": 29661,
        "a[indx];": 29662,
        "indx--;": 29663,
        "i[12];": 29664,
        "i[a];": 29665,
        "(i[f": 29666,
        "i[f])": 29667,
        "i[f": 29668,
        "i[f];": 29669,
        "i[f]": 29670,
        "(test": 29671,
        "a[13]": 29672,
        "merge_sort(int": 29673,
        "merge_sort(a,": 29674,
        "11);": 29675,
        "height": 29676,
        "(height": 29677,
        "a[end];": 29678,
        "(11": 29679,
        "merge(a,": 29680,
        "l[n1],": 29681,
        "r[n2];": 29682,
        "a[low": 29683,
        "a[mid": 29684,
        "r[j];": 29685,
        "a[11": 29686,
        "sizeof(a[0]),": 29687,
        "month": 29688,
        "a[month];": 29689,
        "a[17],": 29690,
        "a[13],": 29691,
        "month[12],": 29692,
        "truth": 29693,
        "month[i];": 29694,
        "sort(month,": 29695,
        "month[i]": 29696,
        "truth)": 29697,
        "a[15];": 29698,
        "arr[y": 29699,
        "v.push_back(d);": 29700,
        "pref[27];": 29701,
        "pref[i].resize(n);": 29702,
        "pref[i][0]": 29703,
        "'A'));": 29704,
        "pref[i][j]": 29705,
        "pref[i][j": 29706,
        "pref[0][n": 29707,
        "pref[i][n": 29708,
        "hash[26]": 29709,
        "++hash[s[i]": 29710,
        "'A'];": 29711,
        "hash[0];": 29712,
        "hash[i]);": 29713,
        "m[s[i]": 29714,
        "(m.find(i)": 29715,
        "arr[100005]": 29716,
        "char(y": 29717,
        "65))": 29718,
        "arr[y]++;": 29719,
        "ap[27],": 29720,
        "ap[int(s[i])": 29721,
        "64]++;": 29722,
        "ap[i]);": 29723,
        "'A']++;": 29724,
        "arr[27];": 29725,
        "arr[x[i]": 29726,
        "minim": 29727,
        "min(arr[i],": 29728,
        "minim);": 29729,
        "(minim": 29730,
        "father[])": 29731,
        "(father[x]": 29732,
        "find(father[x],": 29733,
        "father);": 29734,
        "arr[26];": 29735,
        "arr);": 29736,
        "*count": 29737,
        "int[k];": 29738,
        "count[i]": 29739,
        "count[s[j]": 29740,
        "(count[i]": 29741,
        "count[i];": 29742,
        "(int)sqrt(u);": 29743,
        "to_mod,": 29744,
        "to_mod": 29745,
        "(to_mod": 29746,
        "moduloMultiplication(long": 29747,
        "tab[50];": 29748,
        "memset(tab,": 29749,
        "sizeof(tab));": 29750,
        "tab[ch[i]": 29751,
        "tab[i]);": 29752,
        "arr[(int)s[i]": 29753,
        "65]++;": 29754,
        "int[k": 29755,
        "(int)str[i];": 29756,
        "str[100001];": 29757,
        "str[i],": 29758,
        "letter[str[i]": 29759,
        "(!letter[i])": 29760,
        "sort(letter": 29761,
        "letter": 29762,
        "letter[1]": 29763,
        "arrOccur[26]": 29764,
        "arrOccur[c": 29765,
        "(*min_element(arrOccur,": 29766,
        "arrOccur": 29767,
        "min(mp[i],": 29768,
        "minm);": 29769,
        "s[MAX];": 29770,
        "bk[55];": 29771,
        "bk[s[i]": 29772,
        "bk[i]);": 29773,
        "count[26]": 29774,
        "count[s[i]": 29775,
        "(count[mini]": 29776,
        "count[i])": 29777,
        "count[mini]": 29778,
        "m.insert(make_pair(s[i],": 29779,
        "m[s[i]]++;": 29780,
        "(it->second);": 29781,
        "(mn)*k": 29782,
        "f[27];": 29783,
        "(int)len": 29784,
        "int('A')": 29785,
        "f[tmp]++;": 29786,
        "fre": 29787,
        "(int)k;": 29788,
        "min(fre,": 29789,
        "(fre": 29790,
        "f[tmp]--;": 29791,
        "dp[100001];": 29792,
        "book[26];": 29793,
        "boox[26];": 29794,
        "(book[s[i]": 29795,
        "65])": 29796,
        "book[s[i]": 29797,
        "65]": 29798,
        "boox[s[i]": 29799,
        "miax": 29800,
        "(boox[i]": 29801,
        "miax)": 29802,
        "boox[i];": 29803,
        "minimal;": 29804,
        "huruf[91];": 29805,
        "minimal": 29806,
        "huruf[int(s[i])]++;": 29807,
        "65;": 29808,
        "min(minimal,": 29809,
        "huruf[i]);": 29810,
        "t(k);": 29811,
        "t[s[i]": 29812,
        "*num": 29813,
        "n_end;": 29814,
        "n_end": 29815,
        "(n_end": 29816,
        "mp[x];": 29817,
        "a[311];": 29818,
        "a[s[i]]++;": 29819,
        "(iskom": 29820,
        "-3;": 29821,
        "-4;": 29822,
        "sets;": 29823,
        "sets.insert(temp);": 29824,
        "sets.size()": 29825,
        "d[4];": 29826,
        "n[j]": 29827,
        "S[4]": 29828,
        "{s1,": 29829,
        "s4};": 29830,
        "s(4);": 29831,
        "Arr[4],": 29832,
        "sort(Arr,": 29833,
        "Arr": 29834,
        "Arr[i": 29835,
        "(q[x]": 29836,
        "q[x]": 29837,
        "kuda;": 29838,
        "kuda.push_back(n);": 29839,
        "kuda.sort();": 29840,
        "kuda.unique();": 29841,
        "kuda.size()": 29842,
        "z.insert(x[i]);": 29843,
        "ar[5],": 29844,
        "myset.insert(n);": 29845,
        "(m.count(a)": 29846,
        "data.insert(n);": 29847,
        "sizeof(s)": 29848,
        "sizeof(s[0]));": 29849,
        "shoes[4],": 29850,
        "shoes[i];": 29851,
        "(shoes[i]": 29852,
        "shoes[j])": 29853,
        "shoes[j]": 29854,
        "ara[]": 29855,
        "-s;": 29856,
        "S(4);": 29857,
        "S[2]": 29858,
        "S[3];": 29859,
        "S.erase(unique(S.begin(),": 29860,
        "S.end()),": 29861,
        "swap(arr[j],": 29862,
        "arr[1": 29863,
        "num[4];": 29864,
        "s.insert(num[i]);": 29865,
        "(find(a.begin(),": 29866,
        "(mp[arr[i]]": 29867,
        "s.insert(s1);": 29868,
        "s.insert(s2);": 29869,
        "s.insert(s3);": 29870,
        "s.insert(s4);": 29871,
        "map<int64_t,": 29872,
        "mp[ch]": 29873,
        "\"Incorrect\"": 29874,
        "\"Correct\"": 29875,
        "rec;": 29876,
        "minr)": 29877,
        "reqrec": 29878,
        "reqrec--;": 29879,
        "(reqrec": 29880,
        "reqrec)": 29881,
        "mnm": 29882,
        "100000,": 29883,
        "mxm": 29884,
        "min(mnm,": 29885,
        "max(mxm,": 29886,
        "(mxm": 29887,
        "\"Correct\\n\";": 29888,
        "\"Incorrect\\n\";": 29889,
        "t(m);": 29890,
        "(!correct)": 29891,
        "temps2add": 29892,
        "temps2add--;": 29893,
        "(t[(t.size()": 29894,
        "(temps2add": 29895,
        "mark))": 29896,
        "30),": 29897,
        "x),": 29898,
        "bool(maxi": 29899,
        "bool(mini": 29900,
        "\"Incorrect\\n\",": 29901,
        "minTemp": 29902,
        "maxTemp": 29903,
        "(minTemp": 29904,
        "maxTemp)": 29905,
        "((minTemp": 29906,
        "f[N];": 29907,
        "v(m);": 29908,
        "puts(\"Incorrect\"),": 29909,
        "f[v[i]]": 29910,
        "accumulate(f": 29911,
        "puts(n": 29912,
        "!f[mn]": 29913,
        "!f[mx]": 29914,
        "\"Correct\");": 29915,
        "assistantTemps[m];": 29916,
        "assistantTemps[i];": 29917,
        "(assistantTemps[i]": 29918,
        "assistantTemps[i]": 29919,
        "missingTemps": 29920,
        "tempRange": 29921,
        "tempRange--;": 29922,
        "(tempRange": 29923,
        "missingTemps)": 29924,
        "simmin": 29925,
        "summax": 29926,
        "of;": 29927,
        "of.push_back(o);": 29928,
        "sort(of.begin(),": 29929,
        "of.end());": 29930,
        "of[0])": 29931,
        "simmin++;": 29932,
        "of[m": 29933,
        "summax++;": 29934,
        "summax;": 29935,
        "ma),": 29936,
        "cmn": 29937,
        "cmx": 29938,
        "max(cmx,": 29939,
        "min(cmn,": 29940,
        "((cmx": 29941,
        "(cmn": 29942,
        "mn))": 29943,
        "puts(\"Incorrect\");": 29944,
        "puts(\"Correct\");": 29945,
        "gmin,": 29946,
        "gmax;": 29947,
        "gmin": 29948,
        "gmin)": 29949,
        "+1;": 29950,
        "(mmax": 29951,
        "gmax)": 29952,
        "Mi": 29953,
        "min(Mi,": 29954,
        "inp);": 29955,
        "max(Ma,": 29956,
        "(Mi": 29957,
        "\"Incorrect\")": 29958,
        "hmr": 29959,
        "hmn": 29960,
        "hmn++;": 29961,
        "(cmx": 29962,
        "(hmr": 29963,
        "hmn)": 29964,
        "cor": 29965,
        "\"Correct\";": 29966,
        "inc": 29967,
        "\"Incorrect\";": 29968,
        "t[m];": 29969,
        "(!b[0]": 29970,
        "!b[1])))": 29971,
        "mint,": 29972,
        "maxt;": 29973,
        "cmin,": 29974,
        "cmax;": 29975,
        "cmin;": 29976,
        "cmax": 29977,
        "cmin": 29978,
        "min(cmin,": 29979,
        "max(cmax,": 29980,
        "try": 29981,
        "(cmin": 29982,
        "cmax)": 29983,
        "throw": 29984,
        "int(cmin": 29985,
        "mint)": 29986,
        "(cmax": 29987,
        "maxt))": 29988,
        "catch": 29989,
        "cur_min": 29990,
        "105,": 29991,
        "cur_max": 29992,
        "vis_min": 29993,
        "vis_max": 29994,
        "min(cur_min,": 29995,
        "max(cur_max,": 29996,
        "(cur_min": 29997,
        "(cur_max": 29998,
        "(vis_min": 29999,
        "record.push_back(t);": 30000,
        "(record[0]": 30001,
        "(record[m": 30002,
        "record[m": 30003,
        "a[maxx],": 30004,
        "sta1;": 30005,
        "sta1.push(temp);": 30006,
        "(sta1.size()": 30007,
        "sta1.top();": 30008,
        "sta1.pop();": 30009,
        "sta1.top()": 30010,
        "a[1000000];": 30011,
        "((int)abs(cur": 30012,
        "str[100005];": 30013,
        "words": 30014,
        "words++;": 30015,
        "t[1000002];": 30016,
        "sizeof(t));": 30017,
        "words;": 30018,
        "words.push_back(temp);": 30019,
        "(words[i": 30020,
        "words[i]": 30021,
        "word,": 30022,
        "(word": 30023,
        "data[100005];": 30024,
        "data[0];": 30025,
        "data[i": 30026,
        "A[100005],": 30027,
        "H)": 30028,
        "num[100001];": 30029,
        "t[maxn];": 30030,
        "que;": 30031,
        "que.push(t[i]);": 30032,
        "++sum": 30033,
        "k[26];": 30034,
        "\"zzzzzzzzzzzz\";": 30035,
        "ss.substr(0,": 30036,
        "(s1[x]": 30037,
        "s1[x];": 30038,
        "s1[0])": 30039,
        "y.size();": 30040,
        "y.substr(0,": 30041,
        "v.push_back(z);": 30042,
        "\"zzzzzzzzzzzz\",": 30043,
        "ans.push_back(f[0]);": 30044,
        "ans.push_back(f[i]);": 30045,
        "ans.push_back(l[0]);": 30046,
        "la;": 30047,
        "la)": 30048,
        "\"zzzzzzzzzz\";": 30049,
        "np;": 30050,
        "fi.size();": 30051,
        "la.size();": 30052,
        "fi.substr(0,": 30053,
        "la.substr(0,": 30054,
        "np);": 30055,
        "res1.push_back(s[i]);": 30056,
        "res2.push_back(t[j]);": 30057,
        "v.push_back(res1": 30058,
        "res2);": 30059,
        "b.substr(0,": 30060,
        "\"zzzzzzzzzzz\";": 30061,
        "s1len": 30062,
        "s1len;": 30063,
        "s1.substr(0,": 30064,
        "f_name,": 30065,
        "l_name,": 30066,
        "f_name": 30067,
        "l_name;": 30068,
        "f_name[0];": 30069,
        "f_name.size();": 30070,
        "(f_name[i]": 30071,
        "l_name[0])": 30072,
        "f_name[i];": 30073,
        "l_name[0];": 30074,
        "s2[j];": 30075,
        "vec.push_back(s3);": 30076,
        "vec[0]": 30077,
        "s2.substr(0,": 30078,
        "myset.insert(tmp);": 30079,
        "*(myset.begin())": 30080,
        "fir[0];": 30081,
        "la[0];": 30082,
        "fir.size();": 30083,
        "fir[i];": 30084,
        "\"zzzzzzzzzzzzzzzzzzzz\";": 30085,
        "yeet": 30086,
        "yeet.push_back(a[0]);": 30087,
        "b[next])": 30088,
        "yeet.push_back(a[i]);": 30089,
        "yeet.push_back(b[next]);": 30090,
        "c.clear();": 30091,
        "ss[flag++]": 30092,
        "ss[flag]": 30093,
        "s3.push_back(s1[0]);": 30094,
        "s3.push_back(s1[i]);": 30095,
        "s3.push_back(s2[0]);": 30096,
        "tmp.push_back(a[i]);": 30097,
        "tmp1.push_back(b[j]);": 30098,
        "mp[tmp1]": 30099,
        "s1[i++];": 30100,
        "\"z\";": 30101,
        "mn[0]++;": 30102,
        "in[100];": 30103,
        "\"qwertyuiopasdfghjkl;zxcvbnm,./\";": 30104,
        "strlen(in);": 30105,
        "strlen(k);": 30106,
        "k[j": 30107,
        "left_rigth;": 30108,
        "\"qwertyuiop\";": 30109,
        "\"asdfghjkl;\";": 30110,
        "\"zxcvbnm,./\";": 30111,
        "(left_rigth": 30112,
        "u[j])": 30113,
        "u[j": 30114,
        "m[j])": 30115,
        "{\"qwertyuiop\",": 30116,
        "\"asdfghjkl;\",": 30117,
        "\"zxcvbnm,./\"};": 30118,
        "s1[j].find(s[i]);": 30119,
        "s1[j][a": 30120,
        "\"qwertyuiopasdfghjkl;zxcvbnm,./\",": 30121,
        "s1[s1.find(s[i])": 30122,
        "order[maxn]": 30123,
        "pos(char": 30124,
        "(order[i]": 30125,
        "pos(a[i],": 30126,
        "order[p];": 30127,
        "putR(string": 30128,
        "putL(string": 30129,
        "putR(s1,": 30130,
        "putL(s1,": 30131,
        "n[j": 30132,
        "newS": 30133,
        "s.find(str[i]);": 30134,
        "s[ind": 30135,
        "ss[3][12]": 30136,
        "(cmd": 30137,
        "ss[j][k])": 30138,
        "ss[j][k": 30139,
        "arr[100]": 30140,
        "ar[100];": 30141,
        "x[35]": 30142,
        "{\"qwertyuiopasdfghjkl;zxcvbnm,./\"};": 30143,
        "s1[105];": 30144,
        "x[l])": 30145,
        "x[l": 30146,
        "s[120]": 30147,
        "way[2],": 30148,
        "(way[0]": 30149,
        "(p[0]": 30150,
        "(ss[j]": 30151,
        "ss[j": 30152,
        "x];": 30153,
        "z.size();": 30154,
        "z[j])": 30155,
        "z[j": 30156,
        "aset": 30157,
        "mole;": 30158,
        "aset.size();": 30159,
        "lim2": 30160,
        "mole.size();": 30161,
        "lim2;": 30162,
        "(mole[i]": 30163,
        "'q'": 30164,
        "mole[i]": 30165,
        "mole[i];": 30166,
        "aset[j])": 30167,
        "aset[j": 30168,
        "';'": 30169,
        "'/')": 30170,
        "check[(check.find(str[i])": 30171,
        "check.length())": 30172,
        "check.length()];": 30173,
        "k.find(s[i]);": 30174,
        "s1[j])": 30175,
        "s1[j": 30176,
        "arr[5000000];": 30177,
        "(arr[i][j": 30178,
        "reverse(r.begin(),": 30179,
        "2][n": 30180,
        "m[103][103];": 30181,
        "(m[i][j": 30182,
        "5][n": 30183,
        "(mp[j": 30184,
        "(mp[j][i": 30185,
        "(a[nx][ny]": 30186,
        "(dfs(i,": 30187,
        "(x;": 30188,
        "c[x][y];": 30189,
        "c[x": 30190,
        "c[x][y": 30191,
        "dx[k],": 30192,
        "a[nx][ny]": 30193,
        "data.push_back(line);": 30194,
        "[&]()": 30195,
        "->": 30196,
        "data[i][j": 30197,
        "}();": 30198,
        "(str1[0]": 30199,
        "str2[0])": 30200,
        "ans.push_back('1');": 30201,
        "ans.push_back('0');": 30202,
        "string1,": 30203,
        "string2;": 30204,
        "string1": 30205,
        "string1.length();": 30206,
        "(string1[i]": 30207,
        "string2[i])": 30208,
        "string1[i]": 30209,
        "l1.length();": 30210,
        "(l1[i]": 30211,
        "l2[i])": 30212,
        "l1[i]": 30213,
        "addBinary(string": 30214,
        "addBinary(a,": 30215,
        "st2;": 30216,
        "st1.size();": 30217,
        "(st1[i]": 30218,
        "st2[i])": 30219,
        "ch[2][200]": 30220,
        "cin.getline(ch[0],": 30221,
        "200);": 30222,
        "cin.getline(ch[1],": 30223,
        "ch[0][i]": 30224,
        "(ch[0][i]": 30225,
        "ch[1][i]": 30226,
        "((s1[i]": 30227,
        "s3.append(1,": 30228,
        "chal[110];": 30229,
        "chal;": 30230,
        "ar[l];": 30231,
        "chal[i])": 30232,
        "k[1000];": 30233,
        "*arr2,": 30234,
        "*res;": 30235,
        "arr2": 30236,
        "char[lim": 30237,
        "arr2[i]": 30238,
        "p1[105],": 30239,
        "p2[105];": 30240,
        "(p1[x]": 30241,
        "p2[x]": 30242,
        "p1[x]": 30243,
        "p2[x])": 30244,
        "sL": 30245,
        "s2L": 30246,
        "(sL": 30247,
        "s2L)": 30248,
        "s2L;": 30249,
        "(tmp--)": 30250,
        "sL;": 30251,
        "n1.length();": 30252,
        "p[51];": 30253,
        "avai": 30254,
        "avai)": 30255,
        "sup;": 30256,
        "sup.push_back(temp);": 30257,
        "sort(sup.begin(),": 30258,
        "sup.end());": 30259,
        "(sup.size()": 30260,
        "sup[sup.size()": 30261,
        "sup.pop_back();": 30262,
        "num[55];": 30263,
        "!(p": 30264,
        "sort(a.rbegin(),": 30265,
        "a.rend());": 30266,
        "getmax()": 30267,
        "f.size();": 30268,
        "f.erase(f.begin()": 30269,
        "imax);": 30270,
        "f.push_back(x);": 30271,
        "getmax();": 30272,
        "a[51];": 30273,
        "array[50];": 30274,
        "array[j++]": 30275,
        "arr[51];": 30276,
        "'K'": 30277,
        "'V')": 30278,
        "vis[i": 30279,
        "!vis[i": 30280,
        "'V'": 30281,
        "s[200]": 30282,
        "!s[i]": 30283,
        "!s[i": 30284,
        "sum()": 30285,
        "\"VK\")": 30286,
        "-135;": 30287,
        "sum());": 30288,
        "'K';": 30289,
        "'V';": 30290,
        "dp[110]": 30291,
        "state[110]": 30292,
        "state[i]": 30293,
        "state[i": 30294,
        "((state[i]": 30295,
        "jud": 30296,
        "s[len]": 30297,
        "(jud)": 30298,
        "count()": 30299,
        "count();": 30300,
        "'K'))": 30301,
        "pow_base,": 30302,
        "131,": 30303,
        "ihash[maxn];": 30304,
        "vis[maxn],": 30305,
        "pow_base": 30306,
        "\"VK\";": 30307,
        "ihash[i]": 30308,
        "ihash[i": 30309,
        "pow_base;": 30310,
        "F(string": 30311,
        "loc": 30312,
        "s.find(p);": 30313,
        "(loc": 30314,
        "s.find(p,": 30315,
        "F(s);": 30316,
        "F(s));": 30317,
        "flag[maxn]": 30318,
        "(flag[i": 30319,
        "res--,": 30320,
        "6e2": 30321,
        "second.size(),": 30322,
        "t[p]": 30323,
        "(str[t]": 30324,
        "str[t": 30325,
        "vis[t]": 30326,
        "vis[t": 30327,
        "(vis[t]": 30328,
        "a[10050];": 30329,
        "a[128]": 30330,
        "vis[128]": 30331,
        "a[len++]": 30332,
        "vis[len": 30333,
        "\"VV\"": 30334,
        "\"KK\")": 30335,
        "bit[2];": 30336,
        "bit[j];": 30337,
        "(bit[1]": 30338,
        "++x;": 30339,
        "\"X++\"": 30340,
        "\"++X\")": 30341,
        "\"--X\"": 30342,
        "\"X--\")": 30343,
        "\"X--\"": 30344,
        "\"--X\")": 30345,
        "\"X++\")": 30346,
        "x(0);": 30347,
        "s1[]": 30348,
        "\"++X\";": 30349,
        "s2[]": 30350,
        "\"X++\";": 30351,
        "strcmp(s,": 30352,
        "\"++X\"": 30353,
        "counta--;": 30354,
        "--r;": 30355,
        "Check_operation(string": 30356,
        "statment)": 30357,
        "statment.length();": 30358,
        "(statment[i]": 30359,
        "Run_Statements(string": 30360,
        "*statmnts,": 30361,
        "Statement": 30362,
        "statmnts[itr];": 30363,
        "Operation": 30364,
        "Check_operation(Statement);": 30365,
        "(Operation": 30366,
        "result--;": 30367,
        "*statements": 30368,
        "statements[itr];": 30369,
        "Run_Statements(statements,": 30370,
        "strcmp(x,": 30371,
        "--count;": 30372,
        "\"--X\"))": 30373,
        "(find(op.begin(),": 30374,
        "op.end(),": 30375,
        "op.end())": 30376,
        "(op[1]": 30377,
        "s[81];": 30378,
        "enc[11][11];": 30379,
        "t[12];": 30380,
        "gets(enc[i]);": 30381,
        "strncpy(t,": 30382,
        "t[10]": 30383,
        "(!strcmp(enc[k],": 30384,
        "m[d]": 30385,
        "80;": 30386,
        "ss(s.begin()": 30387,
        "m[ss];": 30388,
        "digit[10];": 30389,
        "sizeof(digit)": 30390,
        "sizeof(digit[0]);": 30391,
        "digit[i];": 30392,
        "digit[j])": 30393,
        "dg[10];": 30394,
        "sol[8];": 30395,
        "dg[i];": 30396,
        "failed": 30397,
        "(dg[j][k]": 30398,
        "(!failed)": 30399,
        "sol[i]": 30400,
        "sol[i];": 30401,
        "password.substr(index,": 30402,
        "password,": 30403,
        "rope;": 30404,
        "mp[rope]": 30405,
        "password.length();": 30406,
        "password.substr(i,": 30407,
        "A[10];": 30408,
        "S1);": 30409,
        "S1.substr(0,": 30410,
        "(S2": 30411,
        "S1.erase(0,": 30412,
        "binarycoding;": 30413,
        "v(10);": 30414,
        "binarycoding.size();": 30415,
        "binarycoding[i];": 30416,
        "A[11],": 30417,
        "S.substr(i,": 30418,
        "c.substr(i": 30419,
        "M[a]": 30420,
        "word.substr(i,": 30421,
        "M[words];": 30422,
        "b[15][115];": 30423,
        "h[15];": 30424,
        "pl;": 30425,
        "(b[j][x++]": 30426,
        "h[l++]": 30427,
        "mp[p]": 30428,
        "mp[s.substr(i,": 30429,
        "(a.substr(i": 30430,
        "xx[90];": 30431,
        "yy[11];": 30432,
        "zz[12][12];": 30433,
        "zz[i];": 30434,
        "yy[10]": 30435,
        "(strcmp(yy,": 30436,
        "zz[j])": 30437,
        "yy[a++]": 30438,
        "bincode;": 30439,
        "output[8];": 30440,
        "codes[10];": 30441,
        "sub[10];": 30442,
        "codes[i];": 30443,
        "sub[c++]": 30444,
        "bincode.substr(i,": 30445,
        "(sub[i]": 30446,
        "codes[f])": 30447,
        "output[i]": 30448,
        "s1[10],": 30449,
        "s2[10];": 30450,
        "80;)": 30451,
        "s1[k]": 30452,
        "s.insert(0,": 30453,
        "mp[a[i]];": 30454,
        "s[11];": 30455,
        "s[0].substr(i,": 30456,
        "m[temp]": 30457,
        "m[temp];": 30458,
        "comb[10];": 30459,
        "comb[i];": 30460,
        "(pass.substr(i": 30461,
        "comb[j])": 30462,
        "mp.insert(pair<string,": 30463,
        "int>(s,": 30464,
        "ans.push_back(mp.find(temp)->second);": 30465,
        "ans[j];": 30466,
        "n[10];": 30467,
        "s.substr(sp,": 30468,
        "char(m[str.substr(i,": 30469,
        "left[110],": 30470,
        "right[110];": 30471,
        "s[p].push_back(ss[i]);": 30472,
        "(s[p].size()": 30473,
        "encoded;": 30474,
        "code;": 30475,
        "code[s]": 30476,
        "encoded.substr(i": 30477,
        "code[s];": 30478,
        "((y1": 30479,
        "'h'))": 30480,
        "\"a8\"": 30481,
        "\"h8\"": 30482,
        "\"a1\"": 30483,
        "\"h1\")": 30484,
        "8))": 30485,
        "pos[3];": 30486,
        "pos[1]": 30487,
        "(pos[0]": 30488,
        "((S[0]": 30489,
        "dr[8]": 30490,
        "dc[8]": 30491,
        "nc": 30492,
        "dc[i];": 30493,
        "(nr": 30494,
        "bfs(row,": 30495,
        "col);": 30496,
        "pos1;": 30497,
        "(pos2": 30498,
        "Found(int": 30499,
        "Found(x": 30500,
        "Found(x,": 30501,
        "\"h1\"": 30502,
        "\"h8\")": 30503,
        "((8": 30504,
        "(((s[0]": 30505,
        "((s[1]": 30506,
        "\"3\\n\";": 30507,
        "\"a8\")": 30508,
        "\"a7\")": 30509,
        "\"a6\")": 30510,
        "\"a5\")": 30511,
        "\"a4\")": 30512,
        "\"a3\")": 30513,
        "\"a2\")": 30514,
        "\"a1\")": 30515,
        "\"h7\")": 30516,
        "\"h6\")": 30517,
        "\"h5\")": 30518,
        "\"h4\")": 30519,
        "\"h3\")": 30520,
        "\"h2\")": 30521,
        "\"b1\")": 30522,
        "\"c1\")": 30523,
        "\"d1\")": 30524,
        "\"e1\")": 30525,
        "\"f1\")": 30526,
        "\"g1\")": 30527,
        "\"b8\")": 30528,
        "\"c8\")": 30529,
        "\"d8\")": 30530,
        "\"e8\")": 30531,
        "\"f8\")": 30532,
        "\"g8\")": 30533,
        "{8,": 30534,
        "3};": 30535,
        "maxnum;": 30536,
        "(maxnum": 30537,
        "swap(l,": 30538,
        "righ": 30539,
        "righ)": 30540,
        "ex2": 30541,
        "(ex1": 30542,
        "minn++;": 30543,
        "b[200000": 30544,
        "visit[200000": 30545,
        "visit);": 30546,
        "b[200005],": 30547,
        "v[b[i]]": 30548,
        "v[a[i]];": 30549,
        "(a[i1]": 30550,
        "a[i1": 30551,
        "pos[N],": 30552,
        "id[N],": 30553,
        "BIT[N],": 30554,
        "brr[N];": 30555,
        "(arr[now]": 30556,
        "now++": 30557,
        "s1[n];": 30558,
        "s1[i]--,": 30559,
        "s2[i]--;": 30560,
        "arr[s2[i]]": 30561,
        "(arr[s1[i]]": 30562,
        "arr[s1[i": 30563,
        "a[mx],": 30564,
        "b[mx],": 30565,
        "vis[mx];": 30566,
        "vis[b[i]]": 30567,
        "(vis[a[i]]": 30568,
        "vis[a[i]];": 30569,
        "3.141592653589793238L;": 30570,
        "0.57721566490153286060651209;": 30571,
        "f[maxn],": 30572,
        "f[a[i]];": 30573,
        "position[300000];": 30574,
        "position[b[i]]": 30575,
        "(position[a[i]]": 30576,
        "position[a[i": 30577,
        "max);": 30578,
        "b[bi]": 30579,
        "A[200010],": 30580,
        "B[200010],": 30581,
        "pos[200010],": 30582,
        "mark[200010],": 30583,
        "ans[200010];": 30584,
        "pos[A[i]]": 30585,
        "A[pos[B[i]]]": 30586,
        "d.push(0);": 30587,
        "A[d.top()]": 30588,
        "d.pop();": 30589,
        "(d.size())": 30590,
        "d.top();": 30591,
        "d.push(i);": 30592,
        "mark[i": 30593,
        "ans[cur];": 30594,
        "(!mark[cur])": 30595,
        "ans[cur])": 30596,
        "A[maxn],": 30597,
        "B[maxn];": 30598,
        "(A[ans]": 30599,
        "510": 30600,
        "v1(n),": 30601,
        "v2(n),": 30602,
        "pos[v2[i]]": 30603,
        "until": 30604,
        "(pos[v1[i]]": 30605,
        "pos[v1[i": 30606,
        "until++;": 30607,
        "set<signed": 30608,
        "(signed": 30609,
        "cal++;": 30610,
        "p1[N],": 30611,
        "p2[N];": 30612,
        "p2[j])": 30613,
        "(p1[i]": 30614,
        "arr1[1000000];": 30615,
        "arr2[1000000];": 30616,
        "arr1[j])": 30617,
        "ve1,": 30618,
        "ve2(n": 30619,
        "ve1.push_back(x);": 30620,
        "ve2[x]": 30621,
        "ve1[i]": 30622,
        "ve2[ve1[i]];": 30623,
        "(ve1[i]": 30624,
        "ve1[i];": 30625,
        "pos[maxn];": 30626,
        "updt(int": 30627,
        "BIT[idx]": 30628,
        "-idx);": 30629,
        "qry(int": 30630,
        "BIT[idx],": 30631,
        "pos[arr[i]]": 30632,
        "pos[brr[i]];": 30633,
        "qry(now);": 30634,
        "updt(1,": 30635,
        "updt(now,": 30636,
        "max(mn,": 30637,
        "idx_b[200005],": 30638,
        "idx_a[200005];": 30639,
        "idx_b[b[i]]": 30640,
        "idx_b[a[i]];": 30641,
        "pos++)": 30642,
        "c[b[i]]": 30643,
        "(c[a[i]]": 30644,
        "c[a[i": 30645,
        "s[2][200000];": 30646,
        "q[200001];": 30647,
        "s[1][i];": 30648,
        "mxd": 30649,
        "s[0][qi]": 30650,
        "s[1][ci])": 30651,
        "++ci,": 30652,
        "++qi;": 30653,
        "ci;": 30654,
        "!q[s[1][i]])": 30655,
        "(s[1][i]": 30656,
        "s[0][j])": 30657,
        "q[s[0][j]]": 30658,
        "++mxd;": 30659,
        "max(3": 30660,
        "250": 30661,
        "\"Misha\"": 30662,
        "\"Vasya\"": 30663,
        "\"Tie\"": 30664,
        "((double)(3": 30665,
        "10.;": 30666,
        "(((double)a": 30667,
        "250.)": 30668,
        "(((double)b": 30669,
        "misha,": 30670,
        "vasya;": 30671,
        "misha": 30672,
        "250);": 30673,
        "vasya": 30674,
        "(misha": 30675,
        "vasya)": 30676,
        "250));": 30677,
        "vs": 30678,
        "(ms": 30679,
        "vs)": 30680,
        "(vs": 30681,
        "find_max(float": 30682,
        "max(((3": 30683,
        "250)": 30684,
        "t)));": 30685,
        "(find_max(a,": 30686,
        "find_max(b,": 30687,
        "(max(3": 30688,
        "puts(\"Misha\");": 30689,
        "puts(\"Vasya\");": 30690,
        "puts(\"Tie\");": 30691,
        "vashya;": 30692,
        "max((3": 30693,
        "vashya": 30694,
        "vashya)": 30695,
        "(vashya": 30696,
        "misha)": 30697,
        "(vasya": 30698,
        "\"Vasya\\n\";": 30699,
        "\"Misha\\n\";": 30700,
        "\"Tie\\n\";": 30701,
        "0xc0c0c0c0;": 30702,
        "contV,": 30703,
        "contM;": 30704,
        "contM": 30705,
        "contV": 30706,
        "(contV": 30707,
        "contM)": 30708,
        "(contM": 30709,
        "contV)": 30710,
        "sv;": 30711,
        "sv": 30712,
        "sv)": 30713,
        "250)));": 30714,
        "mpoints": 30715,
        "vpoints": 30716,
        "(mpoints": 30717,
        "vpoints)": 30718,
        "(vpoints": 30719,
        "mpoints)": 30720,
        "c)));": 30721,
        "d)));": 30722,
        "max((3.0": 30723,
        "10.0,": 30724,
        "250.0);": 30725,
        "max((b": 30726,
        "Mcost,": 30727,
        "Vcost,": 30728,
        "Mtime,": 30729,
        "Vtime;": 30730,
        "Mcost": 30731,
        "Vcost": 30732,
        "Mtime": 30733,
        "Misha": 30734,
        "Mcost)": 30735,
        "(Mcost": 30736,
        "Mtime);": 30737,
        "Vasya": 30738,
        "Vcost)": 30739,
        "(Vcost": 30740,
        "Vtime);": 30741,
        "(Misha": 30742,
        "Vasya)": 30743,
        "(Vasya": 30744,
        "Misha)": 30745,
        "max(((3.0": 30746,
        "10.0),": 30747,
        "m1));": 30748,
        "250.0));": 30749,
        "puts(m": 30750,
        "\"Vasya\");": 30751,
        "mymap[a[i]]++;": 30752,
        "a[_min])": 30753,
        "(mymap[a[_min]]": 30754,
        "\"Still": 30755,
        "Rozdil\"": 30756,
        "pow(10.0,": 30757,
        "9.0)": 30758,
        "more_than1;": 30759,
        "city[n];": 30760,
        "city[i])": 30761,
        "more_than1++;": 30762,
        "more_than1": 30763,
        "(more_than1": 30764,
        "a[100007],": 30765,
        "freq++;": 30766,
        "(freq": 30767,
        "(count(v.begin(),": 30768,
        "sortby(const": 30769,
        "b.first": 30770,
        "a.second": 30771,
        "area(int": 30772,
        "y3)": 30773,
        "abs((x1": 30774,
        "arr[205];": 30775,
        "mnind;": 30776,
        "mnind": 30777,
        "(mp[mn]": 30778,
        "p[b]++;": 30779,
        "multiple": 30780,
        "(multiple)": 30781,
        "Rozdil\\n\";": 30782,
        "min_value": 30783,
        "min_pos": 30784,
        "min_value)": 30785,
        "min_pos)": 30786,
        "puts(\"Still": 30787,
        "Rozdil\");": 30788,
        "*min_element(vec.begin(),": 30789,
        "cityNo;": 30790,
        "duplicate": 30791,
        "cityNo": 30792,
        "(duplicate)": 30793,
        "1000000005,": 30794,
        "mmin)": 30795,
        "a.push_back(y);": 30796,
        "5e5;": 30797,
        "flage": 30798,
        "(flage)": 30799,
        "A[0],": 30800,
        "Freq": 30801,
        "(Min": 30802,
        "(!(Freq": 30803,
        "ar[12": 30804,
        "28,": 30805,
        "31};": 30806,
        "ar[n]": 30807,
        "hari[13]": 30808,
        "har": 30809,
        "hari[n];": 30810,
        "(har": 30811,
        "month[13];": 30812,
        "set_month()": 30813,
        "month[1]": 30814,
        "month[2]": 30815,
        "month[3]": 30816,
        "month[4]": 30817,
        "month[5]": 30818,
        "month[6]": 30819,
        "month[7]": 30820,
        "month[8]": 30821,
        "month[9]": 30822,
        "month[10]": 30823,
        "month[11]": 30824,
        "month[12]": 30825,
        "set_month();": 30826,
        "month[m];": 30827,
        "months[12]": 30828,
        "{31,": 30829,
        "(months[a": 30830,
        "month[]": 30831,
        "month[m]": 30832,
        "total[13]": 30833,
        "total[m]": 30834,
        "(total[m]": 30835,
        "m31[]": 30836,
        "12};": 30837,
        "m30[]": 30838,
        "11};": 30839,
        "m28": 30840,
        "m31[i])": 30841,
        "ceil((double)(31": 30842,
        "m30[i])": 30843,
        "ceil((double)(30": 30844,
        "m28)": 30845,
        "ceil((double)(28": 30846,
        "(int)res": 30847,
        "((31": 30848,
        "(31": 30849,
        "((28": 30850,
        "(28": 30851,
        "((30": 30852,
        "(30": 30853,
        "\"5\";": 30854,
        "months[]": 30855,
        "month,": 30856,
        "firstDay;": 30857,
        "dayAmount": 30858,
        "months[month": 30859,
        "firstDay": 30860,
        "(!(dayAmount": 30861,
        "mnth,": 30862,
        "mnth": 30863,
        "arr[13]": 30864,
        "totalday": 30865,
        "arr[mnth];": 30866,
        "otherday": 30867,
        "(totalday": 30868,
        "otherday)": 30869,
        "month[m": 30870,
        "!!(K": 30871,
        "day[13]": 30872,
        "day[n]": 30873,
        "a[20]": 30874,
        "a[1][13]": 30875,
        "a[0][m];": 30876,
        "a[0][m]": 30877,
        "(po)": 30878,
        "a[12]": 30879,
        "x[13]": 30880,
        "daysPerMonth[13]": 30881,
        "daysPerMonth[m]": 30882,
        "dres": 30883,
        "(double)days": 30884,
        "((double)res": 30885,
        "dres)": 30886,
        "++res": 30887,
        "day[12]": 30888,
        "day[m": 30889,
        "month[13]": 30890,
        "week": 30891,
        "240": 30892,
        "240)": 30893,
        "ar[10];": 30894,
        "ar[4]": 30895,
        "ar[6]": 30896,
        "ar[7]": 30897,
        "ar[8]": 30898,
        "ar[9]": 30899,
        "Tim;": 30900,
        "Rem": 30901,
        "Rem)": 30902,
        "240;": 30903,
        "cmp(const": 30904,
        "shengyu)": 30905,
        "max(double": 30906,
        "val(int": 30907,
        "n_problems)": 30908,
        "val(n_problems);": 30909,
        "time_left": 30910,
        "(240": 30911,
        "(check(k,": 30912,
        "res(n,": 30913,
        "solve": 30914,
        "solve++;": 30915,
        "time[241];": 30916,
        "time[0]": 30917,
        "(tl": 30918,
        "mnts": 30919,
        "24": 30920,
        "mnts;": 30921,
        "rm)": 30922,
        "((5": 30923,
        "(-5": 30924,
        "sqrt(5": 30925,
        "(-2": 30926,
        "t)))": 30927,
        "((((5": 30928,
        "40": 30929,
        "sqrt(c)": 30930,
        "floor((-1": 30931,
        "sqrt(1": 30932,
        "problems,": 30933,
        "travel,": 30934,
        "mean;": 30935,
        "problems": 30936,
        "travel;": 30937,
        "mean": 30938,
        "problems;": 30939,
        "time)": 30940,
        "(solve": 30941,
        "(24": 30942,
        "((mm": 30943,
        "(hh": 30944,
        "hh--;": 30945,
        "t[1]--;": 30946,
        "(t[1]": 30947,
        "t[2]--;": 30948,
        "t[3]--;": 30949,
        "(t[3]": 30950,
        "(c(m)": 30951,
        "c(b))": 30952,
        "(check(h)": 30953,
        "check(m))": 30954,
        "a[300000];": 30955,
        "ju7(int": 30956,
        "ag(int": 30957,
        "&h,": 30958,
        "&m)": 30959,
        "(ju7(h,": 30960,
        "ag(x,": 30961,
        "C7(int": 30962,
        "(C7(hh)": 30963,
        "C7(mm))": 30964,
        "(!(C7(hh)": 30965,
        "C7(mm)))": 30966,
        "(f(h)": 30967,
        "f(m))": 30968,
        "f(m)": 30969,
        "&m,": 30970,
        "but": 30971,
        "(!check(h,": 30972,
        "del(h,": 30973,
        "but++;": 30974,
        "digsum(int64_t": 30975,
        "n{0};": 30976,
        "h{0};": 30977,
        "m{0};": 30978,
        "1440;": 30979,
        "(!ok(h)": 30980,
        "!ok(m))": 30981,
        "(!lucky(h)": 30982,
        "!lucky(m))": 30983,
        "CalTime(int": 30984,
        "tag;": 30985,
        "tag": 30986,
        "(tag": 30987,
        "CalTime(hh,": 30988,
        "c[95];": 30989,
        "a[1006];": 30990,
        "++count1;": 30991,
        "(str[n": 30992,
        "mark[100];": 30993,
        "out.push_back(cur": 30994,
        "(n[n.length()": 30995,
        "word[0];": 30996,
        "(word[n": 30997,
        "setprecision(12)": 30998,
        "LLONG_MAX": 30999,
        "v.push_back(N);": 31000,
        "ans.push_back(count);": 31001,
        "s[91];": 31002,
        "a[100005]": 31003,
        "b[100005]": 31004,
        "ns(n),": 31005,
        "ns[i];": 31006,
        "(ns[i]": 31007,
        "ns[i": 31008,
        "ans[i]);": 31009,
        "t[100005];": 31010,
        "A[100007];": 31011,
        "maxLen,": 31012,
        "maxLen": 31013,
        "max(maxLen,": 31014,
        "dp[n],": 31015,
        "max(an,": 31016,
        "max(cc,": 31017,
        "maxSize": 31018,
        "++size;": 31019,
        "max(maxSize,": 31020,
        "size);": 31021,
        "maxcount": 31022,
        "max(maxcount,": 31023,
        "cmax++;": 31024,
        "l(1),": 31025,
        "ml(1);": 31026,
        "profits[n];": 31027,
        "profits[i];": 31028,
        "(profits[i]": 31029,
        "profits[i": 31030,
        "max(ml,": 31031,
        "lenght[1000];": 31032,
        "money[n];": 31033,
        "money[i];": 31034,
        "(money[i]": 31035,
        "money[i": 31036,
        "maxle": 31037,
        "le++;": 31038,
        "maxle)": 31039,
        "le;": 31040,
        "buf": 31041,
        "buf)": 31042,
        "mret": 31043,
        "++ret;": 31044,
        "(mret": 31045,
        "ret)": 31046,
        "solve(i": 31047,
        "max(dp[i],": 31048,
        "a[curr];": 31049,
        "1);)": 31050,
        "v[temp": 31051,
        "num[start];": 31052,
        "(dfs(1,": 31053,
        "s[30001]": 31054,
        "s[now];": 31055,
        "port[30005];": 31056,
        "visit[30005];": 31057,
        "(visit[now])": 31058,
        "visit[now]": 31059,
        "dfs(now": 31060,
        "port[now],": 31061,
        "port[i];": 31062,
        "(dfs(0,": 31063,
        "llega": 31064,
        "(llega)": 31065,
        "p[k];": 31066,
        "adj[(int)1e5": 31067,
        "que.push(0);": 31068,
        "(que.size())": 31069,
        "que.front();": 31070,
        "que.pop();": 31071,
        "adj[cur].size();": 31072,
        "que.push(adj[cur][i]);": 31073,
        "adj[i].push_back(i": 31074,
        "solve(k);": 31075,
        "a[30010];": 31076,
        "a[30010],": 31077,
        "b[30010];": 31078,
        "a[i]]": 31079,
        "(b[t]": 31080,
        "reach": 31081,
        "&A)": 31082,
        "check(A);": 31083,
        "(reach": 31084,
        "g[1000000];": 31085,
        "g[a];": 31086,
        "cell,": 31087,
        "cell": 31088,
        "line[cell": 31089,
        "dest": 31090,
        "line[g];": 31091,
        "nPr[100][100];": 31092,
        "arr[l];": 31093,
        "cell[30005];": 31094,
        "(cell[i]": 31095,
        "cell[i]": 31096,
        "DFS(i": 31097,
        "cell[i]);": 31098,
        "memset(cell,": 31099,
        "sizeof(cell));": 31100,
        "cell[i];": 31101,
        "DFS(1);": 31102,
        "'U'))": 31103,
        "s.replace(i,": 31104,
        "\"D\");": 31105,
        "'R'))": 31106,
        "vec.push_back('D');": 31107,
        "vec.push_back(s[i]);": 31108,
        "y.length()": 31109,
        "((y[i]": 31110,
        "min(f[i],": 31111,
        "(sub": 31112,
        "\"UR\")": 31113,
        "a.push_back('D');": 31114,
        "b.push_back('D');": 31115,
        "b.push_back(s[i]);": 31116,
        "min(a.size(),": 31117,
        "ara[101];": 31118,
        "ara;": 31119,
        "5001;": 31120,
        "h;)": 31121,
        "long)r,": 31122,
        "l[1009],": 31123,
        "r[1009],": 31124,
        "(in;": 31125,
        "in++)": 31126,
        "l[in])": 31127,
        "l[in]": 31128,
        "l[in];": 31129,
        "r[in])": 31130,
        "p[m];": 31131,
        "p[i].second)": 31132,
        "accumulate(a.begin(),": 31133,
        "s_pro;": 31134,
        "pro[n": 31135,
        "pro[i],": 31136,
        "s_pro": 31137,
        "pro[i];": 31138,
        "sort(pro,": 31139,
        "lf,": 31140,
        "ri;": 31141,
        "(true": 31142,
        "!ok)": 31143,
        "pro[a];": 31144,
        "ggg;": 31145,
        "solve,": 31146,
        "solve;": 31147,
        "l[maxn],": 31148,
        "r[maxn],": 31149,
        "sub[maxn];": 31150,
        "memset(sub,": 31151,
        "sizeof(sub));": 31152,
        "sub[i]": 31153,
        "r[t": 31154,
        "(!yes)": 31155,
        "cmp;": 31156,
        "a[1100],": 31157,
        "b[1100][2],": 31158,
        "(b[m": 31159,
        "(b[j][0]": 31160,
        "(b[j][1]": 31161,
        "ri,": 31162,
        "li);": 31163,
        "auxl,": 31164,
        "auxr;": 31165,
        "sinoutput": 31166,
        "auxl": 31167,
        "(sinoutput": 31168,
        "auxl)": 31169,
        "auxr)": 31170,
        "(sinoutput)": 31171,
        "fast_in_out()": 31172,
        "pause()": 31173,
        "!prime[i];": 31174,
        "fast_in_out();": 31175,
        "pause();": 31176,
        "m--;)": 31177,
        "max(1LL": 31178,
        "s[index])": 31179,
        "index_s": 31180,
        "(s[index_s]": 31181,
        "index_s++;": 31182,
        "(t[c]": 31183,
        "s[e]": 31184,
        "s1[k];": 31185,
        "s1[++k];": 31186,
        "q.push(s[i]);": 31187,
        "v.push_back(t[i]);": 31188,
        "s.push_back('D');": 31189,
        "(s1[q]": 31190,
        "(int)t.size();": 31191,
        "(int)s.size();)": 31192,
        "s[51],": 31193,
        "t[51];": 31194,
        "NULL": 31195,
        "isl(char": 31196,
        "isu(char": 31197,
        "isa(char": 31198,
        "(isl(c)": 31199,
        "isu(c));": 31200,
        "isn(char": 31201,
        "isan(char": 31202,
        "(isa(c)": 31203,
        "isn(c));": 31204,
        "isv(char": 31205,
        "tolow(string": 31206,
        "(isu(s[i]))": 31207,
        "toup(string": 31208,
        "(isl(s[i]))": 31209,
        "(s1[ans]": 31210,
        "(s[now]": 31211,
        "s[iter])": 31212,
        "iter++;": 31213,
        "x2.length();": 31214,
        "(x1[ans]": 31215,
        "x2[i])": 31216,
        "lent;": 31217,
        "(s[ans]": 31218,
        "inst;": 31219,
        "inst.length();": 31220,
        "(cha[pos]": 31221,
        "inst[i])": 31222,
        "lastPos;": 31223,
        "s[ctr": 31224,
        "s1[k])": 31225,
        "++pos": 31226,
        "path,": 31227,
        "instr;": 31228,
        "path;": 31229,
        "instr.length())": 31230,
        "(path[pos": 31231,
        "instr[i])": 31232,
        "couner": 31233,
        "S[couner])": 31234,
        "couner++;": 31235,
        "lena,": 31236,
        "lenb;)": 31237,
        "(s[ans": 31238,
        "move.length();": 31239,
        "(move[i]": 31240,
        "line[l])": 31241,
        "s[ctr])": 31242,
        "(abs(s)": 31243,
        "abs(s)": 31244,
        "abs(sum);": 31245,
        "abs(sum),": 31246,
        "(abs(sum)": 31247,
        "abs(sum)": 31248,
        "(int)(abs(sum)": 31249,
        "(abs(t)": 31250,
        "abs(t)": 31251,
        "cards": 31252,
        "cards++;": 31253,
        "(abs(pre)": 31254,
        "abs(x));": 31255,
        "ceil(sum": 31256,
        "abs(rem);": 31257,
        "baad": 31258,
        "ceil(double(abs(sum))": 31259,
        "aa(n);": 31260,
        "need++;": 31261,
        "sf(n);": 31262,
        "sf[i];": 31263,
        "a[MAX]": 31264,
        "abs(p);": 31265,
        "ceil(p": 31266,
        "A[1000];": 31267,
        "'g'": 31268,
        "b[c": 31269,
        "\"***\",": 31270,
        "\"***\";": 31271,
        "\"***\"": 31272,
        "s.substr(j);": 31273,
        "res.push_back('*');": 31274,
        "res.push_back(s[i]);": 31275,
        "bisa": 31276,
        "assert(i": 31277,
        "bisa)": 31278,
        "ch[1000];": 31279,
        "!temp)": 31280,
        "(ch[i": 31281,
        "myMap;": 31282,
        "(bl": 31283,
        "flag[n];": 31284,
        "sizeof(flag));": 31285,
        "flag[j]": 31286,
        "flag[j": 31287,
        "(flag[n": 31288,
        "i;;)": 31289,
        "\"ogo\")": 31290,
        "2;)": 31291,
        "\"go\")": 31292,
        "found,": 31293,
        "a.find(\"ogo\");": 31294,
        "(a[fin": 31295,
        "a[fin": 31296,
        "a.replace(found,": 31297,
        "\"***\");": 31298,
        "25": 31299,
        "((26": 31300,
        "((len": 31301,
        "s[21];": 31302,
        "s[30];": 31303,
        "25))": 31304,
        "st.size())": 31305,
        "A[30]": 31306,
        "strlen(A);": 31307,
        "str[21];": 31308,
        "s[3001];": 31309,
        "((int)s.length()": 31310,
        "strlen(ch)": 31311,
        "25);": 31312,
        "tick": 31313,
        "tick++;": 31314,
        "item++;": 31315,
        "(v[i])": 31316,
        "ar[z]": 31317,
        "dragon[d": 31318,
        "memset(dragon,": 31319,
        "sizeof(dragon));": 31320,
        "d1[d];": 31321,
        "d1[i": 31322,
        "(d1[i": 31323,
        "(d1[i]": 31324,
        "arr[d];": 31325,
        "count(0);": 31326,
        "a[1000009]": 31327,
        "a[3]))": 31328,
        "s.insert(k": 31329,
        "s.insert(l": 31330,
        "s.insert(m": 31331,
        "s.insert(n": 31332,
        "B[n];": 31333,
        "101000;": 31334,
        "memcpy(b,": 31335,
        "arr2[N],": 31336,
        "sort(arr2,": 31337,
        "sort(brr,": 31338,
        "brr": 31339,
        "a[100001]": 31340,
        "arr[length];": 31341,
        "arrSorted[length];": 31342,
        "arrSorted[i]": 31343,
        "sort(arrSorted,": 31344,
        "arrSorted": 31345,
        "maxSwaps": 31346,
        "arrSorted[i])": 31347,
        "maxSwaps++;": 31348,
        "(maxSwaps": 31349,
        "arr(n),": 31350,
        "sarr(n);": 31351,
        "sarr[i]": 31352,
        "sort(sarr.begin(),": 31353,
        "sarr.end());": 31354,
        "(sarr[i]": 31355,
        "b[100010];": 31356,
        "sorted[100005];": 31357,
        "sorted[i]": 31358,
        "sort(sorted,": 31359,
        "sorted[i])": 31360,
        "A(n),": 31361,
        "B(n);": 31362,
        "sort(B.begin(),": 31363,
        "B.end());": 31364,
        "diff.push_back(i);": 31365,
        "A[diff[0]]": 31366,
        "B[diff[1]]": 31367,
        "B[diff[0]]": 31368,
        "A[diff[1]];": 31369,
        "max(b[i": 31370,
        "vv[i]);": 31371,
        "v1[i])": 31372,
        "v1[j]": 31373,
        "b.begin()": 31374,
        "swap(a[v[0]],": 31375,
        "a[v[1]]);": 31376,
        "(86400": 31377,
        "86400": 31378,
        "86400;": 31379,
        "day++)": 31380,
        "busy;": 31381,
        "K[i]);": 31382,
        "a[104];": 31383,
        "d[100];": 31384,
        "imp;": 31385,
        "imp.push_back(86400": 31386,
        "imp[i];": 31387,
        "spare": 31388,
        "belum": 31389,
        "(spare": 31390,
        "belum)": 31391,
        "!ans)": 31392,
        "tab[n];": 31393,
        "tab[j]);": 31394,
        "n)))": 31395,
        "pangkat(long": 31396,
        "pangkat(a,": 31397,
        "pangkat(2,": 31398,
        "poww(int": 31399,
        "35)": 31400,
        "poww(n);": 31401,
        "pangkat;": 31402,
        "bilangan;": 31403,
        "hasilPangkat": 31404,
        "basis": 31405,
        "divisor": 31406,
        "pangkat);": 31407,
        "bilangan": 31408,
        "reallyans": 31409,
        "((1ll": 31410,
        "turn(int": 31411,
        "turn(m);": 31412,
        "longinf": 31413,
        "long)1;": 31414,
        "long)2;": 31415,
        "fun(n);": 31416,
        "(a))": 31417,
        "sqrt2(int": 31418,
        "pkt": 31419,
        "pkt;": 31420,
        "sqrt2(m);": 31421,
        "(pkt": 31422,
        "start_func()": 31423,
        "start_func();": 31424,
        "log2(100000000))": 31425,
        "s[105]": 31426,
        "sort(s": 31427,
        "s[x1]": 31428,
        "min(f,": 31429,
        "d.push_back(abs(a[0]": 31430,
        "abs(a[2]": 31431,
        "*d.begin()": 31432,
        "X3,": 31433,
        "X3;": 31434,
        "max(X1,": 31435,
        "max(X2,": 31436,
        "X3))": 31437,
        "min(X1,": 31438,
        "min(X2,": 31439,
        "X3));": 31440,
        "sort(n,": 31441,
        "n[1];": 31442,
        "INT64M": 31443,
        "0X3F3F3F3F3F3F3F3F;": 31444,
        "INT32M": 31445,
        "0x3F3F3F3F;": 31446,
        "v.push_back(n);": 31447,
        "v[1]);": 31448,
        "A[3],": 31449,
        "inf,": 31450,
        "fabs(x1": 31451,
        "fabs(x2": 31452,
        "fabs(x3": 31453,
        "cal);": 31454,
        "maxima(int": 31455,
        "minima(int": 31456,
        "maxima(x1,": 31457,
        "minima(x1,": 31458,
        "middlePoint": 31459,
        "minimum;": 31460,
        "arr[0]);": 31461,
        "n3)": 31462,
        "distance(n1,": 31463,
        "abs(n2": 31464,
        "min(h,": 31465,
        "abs(n3": 31466,
        "*max_element(x,": 31467,
        "*min_element(x,": 31468,
        "md,": 31469,
        "distance[3],": 31470,
        "meet,": 31471,
        "sort(distance,": 31472,
        "meet": 31473,
        "distance[2]": 31474,
        "distance[1];": 31475,
        "distance[1]": 31476,
        "distance[0];": 31477,
        "mid(int": 31478,
        "mid(a,": 31479,
        "a(3);": 31480,
        "sizeof(a[0]);": 31481,
        "abs(arr[0]": 31482,
        "abs(arr[2]": 31483,
        "X[4],": 31484,
        "X[i];": 31485,
        "cmp(long": 31486,
        "result[3];": 31487,
        "puts(\"Karen\");": 31488,
        "\"Karen\"": 31489,
        "s.insert(b[i]);": 31490,
        "(s.find(val)": 31491,
        "\"Koyomi\"": 31492,
        "x[3005];": 31493,
        "y[3005];": 31494,
        "mark[5000005];": 31495,
        "mark[x[i]]": 31496,
        "mark[y[i]]": 31497,
        "(mark[temp])": 31498,
        "number++;": 31499,
        "2.001e3;": 31500,
        "st.insert(a[i]);": 31501,
        "st.insert(b[i]);": 31502,
        "(st.find(a[i]": 31503,
        "xor": 31504,
        "\"Karen\")": 31505,
        "a[2001];": 31506,
        "b[2001];": 31507,
        "s.insert(b[j]);": 31508,
        "(s.find(a[i]": 31509,
        "(s.find(x)": 31510,
        "4e6": 31511,
        "x[2005],": 31512,
        "y[2005],": 31513,
        "mark[maxn]": 31514,
        "(mark[x[i]": 31515,
        "y[j]])": 31516,
        "mp[2010": 31517,
        "2010];": 31518,
        "mp[b[i]]": 31519,
        "(mp[a[i]": 31520,
        "b[j]])": 31521,
        "y[2005];": 31522,
        "mark[4000005];": 31523,
        "{\"Karen\\n\",": 31524,
        "\"Koyomi\\n\"};": 31525,
        "mark[x[i]": 31526,
        "y[j]];": 31527,
        "s[cnt": 31528,
        "\"Karen\\n\";": 31529,
        "m(2000005,": 31530,
        "m[b[i]]++;": 31531,
        "2000001": 31532,
        "m[t]": 31533,
        "t3[4010];": 31534,
        "cherk(int": 31535,
        "(star": 31536,
        "(t3[mid]": 31537,
        "t1[2005],": 31538,
        "t2[2005];": 31539,
        "t1[i],": 31540,
        "t3[p++]": 31541,
        "t2[j],": 31542,
        "sort(t3,": 31543,
        "(cherk(t1[i]": 31544,
        "t2[j]))": 31545,
        "(s.find(temp)": 31546,
        "mp(10000000,": 31547,
        "\"Koyomi\\n\";": 31548,
        "isPresent(int": 31549,
        "a.insert(b[i]);": 31550,
        "a.insert(c[i]);": 31551,
        "xor1": 31552,
        "(a.find(xor1)": 31553,
        "b(n),": 31554,
        "c(n);": 31555,
        "(s.count(c[i]))": 31556,
        "\"Karen\";": 31557,
        "mp(30000000,": 31558,
        "v[m][n];": 31559,
        "v[i][n": 31560,
        "(v[0][i]": 31561,
        "m)))": 31562,
        "arr[500][500];": 31563,
        "arr[i][m])": 31564,
        "(arr[1][i]": 31565,
        "arr[n][i])": 31566,
        "(bisa)": 31567,
        "table[51][51];": 31568,
        "(table[i][j])": 31569,
        "arr[m][n];": 31570,
        "puts(\"2\");": 31571,
        "puts(\"4\");": 31572,
        "goodCell[51][51];": 31573,
        "goodCell[i][j];": 31574,
        "goodCell[i][j])": 31575,
        "men1": 31576,
        "(men1": 31577,
        "men)": 31578,
        "x[100][100];": 31579,
        "arena[52][52];": 31580,
        "arena[i][j];": 31581,
        "tipe": 31582,
        "(arena[i][0]": 31583,
        "arena[i][m": 31584,
        "(arena[0][i]": 31585,
        "arena[n": 31586,
        "(tipe": 31587,
        "isTwo": 31588,
        "(isTwo)": 31589,
        "(a[0][j]": 31590,
        "(a[s[i]": 31591,
        "casenum,": 31592,
        "alp[30];": 31593,
        "memset(alp,": 31594,
        "sizeof(alp));": 31595,
        "alp[str[i]": 31596,
        "alp[i]);": 31597,
        "s[999];": 31598,
        "ans[28];": 31599,
        "ans[s[i]": 31600,
        "(ans[s[i]": 31601,
        "arr[xx]": 31602,
        "n[30];": 31603,
        "n[k": 31604,
        "(n[s]": 31605,
        "(a[s[i]]": 31606,
        "((it->second)": 31607,
        "b[26]": 31608,
        "num[a[i]]++;": 31609,
        "cnt[c[i]": 31610,
        "2000001;": 31611,
        "freq[27]": 31612,
        "freq[s[i]": 31613,
        "num[260]": 31614,
        "++num[str[i]": 31615,
        "num[100]": 31616,
        "al;": 31617,
        "num[al": 31618,
        "t[1000],": 31619,
        "t[s[i]]++;": 31620,
        "(t[s[i]]": 31621,
        "ans[200];": 31622,
        "ans[one]++;": 31623,
        "(ans[now]": 31624,
        "ms.insert(str[i]);": 31625,
        "s[30]": 31626,
        "s[c": 31627,
        "mods(int": 31628,
        "spent": 31629,
        "l[55],": 31630,
        "r[55];": 31631,
        "x[100000": 31632,
        "y[100000": 31633,
        "l[60],": 31634,
        "r[60];": 31635,
        "l[100001],": 31636,
        "r[100001],": 31637,
        "(l[1]": 31638,
        "skip": 31639,
        "start[51],": 31640,
        "aend[51],": 31641,
        "start[i]": 31642,
        "aend[i];": 31643,
        "(start[1]": 31644,
        "aend[i]": 31645,
        "(start[i": 31646,
        "aend[n]": 31647,
        "-o": 31648,
        "*strt_time": 31649,
        "*end_time": 31650,
        "strt_time[i]": 31651,
        "end_time[i];": 31652,
        "mintime": 31653,
        "(strt_time[i]": 31654,
        "end_time[i]": 31655,
        "l[50],": 31656,
        "r[50];": 31657,
        "(((1": 31658,
        "(palin(b))": 31659,
        "ans.push_back(b);": 31660,
        "ans.end(),": 31661,
        "greater<string>());": 31662,
        "toascii(n[i]);": 31663,
        "asc)": 31664,
        "sort(ex.begin(),": 31665,
        "ex.end());": 31666,
        "ss.push_back(ex);": 31667,
        "sort(ss.begin(),": 31668,
        "ss.end());": 31669,
        "ss[(1": 31670,
        "esPalindromo(string": 31671,
        "resolver(string": 31672,
        "((str": 31673,
        "esPalindromo(str))": 31674,
        "int(s.size()))": 31675,
        "resolver((str": 31676,
        "s[p]),": 31677,
        "resolver(str,": 31678,
        "int(s.size());": 31679,
        "resolver(\"\",": 31680,
        "S[11];": 31681,
        "arr[S[i]": 31682,
        "(char)(i": 31683,
        "ai[20];": 31684,
        "wei": 31685,
        "map": 31686,
        "qingkuang": 31687,
        "huiwen;": 31688,
        "(qingkuang": 31689,
        "wei))": 31690,
        "wei;": 31691,
        "((qingkuang": 31692,
        "ai[o++]": 31693,
        "a[wei": 31694,
        "ai[o]": 31695,
        "huiwen": 31696,
        "ai[o": 31697,
        "(huiwen": 31698,
        "strcmp(ai,": 31699,
        "ans.c_str())": 31700,
        "++qingkuang;": 31701,
        "ck(string": 31702,
        "reverse(tm.begin(),": 31703,
        "tm.end());": 31704,
        "ok()": 31705,
        "mask++)": 31706,
        "((mask": 31707,
        "(ck(temp))": 31708,
        "ok();": 31709,
        "c[26]": 31710,
        "c[s[i]": 31711,
        "(c[i]--)": 31712,
        "(char)('a'": 31713,
        "putchar(maxc);": 31714,
        "alph": 31715,
        "-99;": 31716,
        "alph[a])": 31717,
        "(s[a]": 31718,
        "alph[mx])": 31719,
        "cadena;": 31720,
        "extreme": 31721,
        "veces": 31722,
        "cadena);": 31723,
        "cadena.begin();": 31724,
        "cadena.end();": 31725,
        "extreme)": 31726,
        "*iter;": 31727,
        "veces++;": 31728,
        "veces;": 31729,
        "extreme;": 31730,
        "'a']--)": 31731,
        "++mask)": 31732,
        "(mask": 31733,
        "reverse(aux2.begin(),": 31734,
        "aux2.end());": 31735,
        "*max_element(s.begin(),": 31736,
        "maxcount;": 31737,
        "char(mx);": 31738,
        "(isPalindrome(t))": 31739,
        "o_o": 31740,
        "numeric_limits<double>::epsilon();": 31741,
        "palinoal(string": 31742,
        "(l,": 31743,
        "x.size();)": 31744,
        "(x[l]": 31745,
        "x[r])": 31746,
        "(palinoal(x))": 31747,
        "(palin.size()": 31748,
        "palin)": 31749,
        "res(string": 31750,
        "--s.end();": 31751,
        "++st,": 31752,
        "--ed)": 31753,
        "(*st": 31754,
        "*ed)": 31755,
        "(dep": 31756,
        "(res(t)": 31757,
        "dfs(dep": 31758,
        "s[dep];": 31759,
        "t.erase(--t.end());": 31760,
        "(char)maxx;": 31761,
        "vaa;": 31762,
        "perm(int": 31763,
        "vaa.push_back(tem);": 31764,
        "perm(n": 31765,
        "tem);": 31766,
        "(k.length()": 31767,
        "k[k.length()": 31768,
        "perm(0,": 31769,
        "sort(vaa.begin(),": 31770,
        "vaa.end(),": 31771,
        "vaa.size();": 31772,
        "(pal(vaa[i]))": 31773,
        "vaa[i]": 31774,
        "vct;": 31775,
        "vct.resize(n);": 31776,
        "vct[i]": 31777,
        "vct[k]": 31778,
        "vct[k];": 31779,
        "one_loop": 31780,
        "one_loop;": 31781,
        "((rem": 31782,
        "kle": 31783,
        "(kle": 31784,
        "sqrt(++temp);": 31785,
        "--temp": 31786,
        "(int)temp;": 31787,
        "(!flage)": 31788,
        "wl;": 31789,
        "wl)": 31790,
        "wl++;": 31791,
        "abs(((temp1": 31792,
        "abs((temp2": 31793,
        "v1[200];": 31794,
        "mp[a[i]]--;": 31795,
        "ar[m];": 31796,
        "ar[j];": 31797,
        "a[o]": 31798,
        "a[o": 31799,
        "lste": 31800,
        "tr)": 31801,
        "(one)": 31802,
        "lste)": 31803,
        "aux.push_back(x);": 31804,
        "aux.size();": 31805,
        "(aux[j]": 31806,
        "aux[j": 31807,
        "(aux.size()": 31808,
        "needToUnion": 31809,
        "++id)": 31810,
        "arr(s);": 31811,
        "++p;": 31812,
        "(v[i].size()": 31813,
        "v[i][0]": 31814,
        "v[i].push_back(y);": 31815,
        "long)(mx": 31816,
        "tira": 31817,
        "certos": 31818,
        "tira--;": 31819,
        "certos++;": 31820,
        "m[k": 31821,
        "m[p]);": 31822,
        "cut": 31823,
        "one),": 31824,
        "((counter": 31825,
        "players,": 31826,
        "cleaner;": 31827,
        "fingers,": 31828,
        "tfingers": 31829,
        "players;": 31830,
        "fingers;": 31831,
        "players++;": 31832,
        "((tfingers": 31833,
        "players": 31834,
        "friends,": 31835,
        "friends)": 31836,
        "friends;": 31837,
        "friends++;": 31838,
        "friends": 31839,
        "people": 31840,
        "possible_sum,": 31841,
        "fingers_ways": 31842,
        "possible_sum": 31843,
        "(possible_sum": 31844,
        "fingers_ways++;": 31845,
        "entry,": 31846,
        "sum_fingers": 31847,
        "entry;": 31848,
        "sum_fingers)": 31849,
        "(sum_fingers": 31850,
        "sum_fingers++;": 31851,
        "total(0),": 31852,
        "answer(0);": 31853,
        "((total": 31854,
        "(((act": 31855,
        "\"GOTO": 31856,
        "Vasilisa.\\n\";": 31857,
        "ans.push_back((char)n);": 31858,
        "mRead()": 31859,
        "Vasilisa.\";": 31860,
        "solve(mRead())": 31861,
        "s.find('.');": 31862,
        "(s[n": 31863,
        "Vasilisa.\"": 31864,
        "s.find(\".\");": 31865,
        "(a[pos": 31866,
        "a[pos": 31867,
        "puts(\"GOTO": 31868,
        "Vasilisa.\");": 31869,
        "dot_at": 31870,
        "(s[dot_at": 31871,
        "(carry)": 31872,
        "carry--;": 31873,
        "(s[t": 31874,
        "a1++)": 31875,
        "(str[a1]": 31876,
        "(str[a1": 31877,
        "str[a1": 31878,
        "a2++)": 31879,
        "str[a2];": 31880,
        "si;": 31881,
        "si.append(1,": 31882,
        "si[si.size()": 31883,
        "num.length();": 31884,
        "(num[i": 31885,
        "num.substr(0,": 31886,
        "(char)(str[i": 31887,
        "dot;": 31888,
        "dot": 31889,
        "(s[dot": 31890,
        "((int)(s[dot": 31891,
        "(char)(s[dot": 31892,
        "s[dot": 31893,
        "wtf;": 31894,
        "(z[q]": 31895,
        "asd.push_back(z[q]);": 31896,
        "wtf.push_back(z[q]);": 31897,
        "asd.size();": 31898,
        "asd[s": 31899,
        "wtf[1]": 31900,
        "(dsa": 31901,
        "asd[q];": 31902,
        "asd[asd.size()": 31903,
        "(s.at(j": 31904,
        "s.at(j": 31905,
        "s.erase(j);": 31906,
        "dotted": 31907,
        "(dotted": 31908,
        "ada;": 31909,
        "intp;": 31910,
        "frap;": 31911,
        "intp": 31912,
        "intlen": 31913,
        "intp.length();": 31914,
        "(intp[intlen": 31915,
        "(frap[0]": 31916,
        "intp[intlen": 31917,
        "(S[a]": 31918,
        "(S[a": 31919,
        "S[a": 31920,
        "S[z];": 31921,
        "(a[a.size()": 31922,
        "x[k]": 31923,
        "(!x[g])": 31924,
        "3.141592653589793238462;": 31925,
        "b[1003];": 31926,
        "b[f]": 31927,
        "fix[100001];": 31928,
        "fix[0]": 31929,
        "(fix[(k": 31930,
        "fix[(k": 31931,
        "ihash[x": 31932,
        "16,": 31933,
        "32,": 31934,
        "64,": 31935,
        "128,": 31936,
        "256,": 31937,
        "512};": 31938,
        "minute_": 31939,
        "bo[10001];": 31940,
        "(minute_": 31941,
        "(!bo[now])": 31942,
        "bo[now]": 31943,
        "minute_++;": 31944,
        "used[1010];": 31945,
        "(!used[a])": 31946,
        "used[a]": 31947,
        "++sd;": 31948,
        "(sd": 31949,
        "fix[10001];": 31950,
        "fix[t]++;": 31951,
        "(fix[i]": 31952,
        "vis[maxn]": 31953,
        "vis[p]": 31954,
        "\"YES\",": 31955,
        "512)": 31956,
        "f[(i": 31957,
        "n]++;": 31958,
        "log2(n);": 31959,
        "\"YES\");": 31960,
        "512},": 31961,
        "fix[1005][1005],": 31962,
        "(fix[x][y]": 31963,
        "fix[x][y]++;": 31964,
        "fix[i][j];": 31965,
        "used[pos]": 31966,
        "(a[now]": 31967,
        "a[now]": 31968,
        "visited(n,": 31969,
        "(visited[last])": 31970,
        "visited[last]": 31971,
        "poss": 31972,
        "(poss)": 31973,
        "book[N];": 31974,
        "diff2)": 31975,
        "diff1)": 31976,
        "max(abs(z": 31977,
        "y1),": 31978,
        "abs(s1": 31979,
        "Y2;": 31980,
        "Roz1": 31981,
        "abs(X2": 31982,
        "X1);": 31983,
        "Roz2": 31984,
        "abs(Y2": 31985,
        "Y1);": 31986,
        "Wsp": 31987,
        "abs(Roz1": 31988,
        "Roz2);": 31989,
        "Oddz": 31990,
        "max(Roz2,": 31991,
        "Roz1)": 31992,
        "Wsp;": 31993,
        "sub1,": 31994,
        "sub2,": 31995,
        "sub1": 31996,
        "sub2": 31997,
        "max(sub1,": 31998,
        "sub2);": 31999,
        "x_1,": 32000,
        "y_1,": 32001,
        "x_2,": 32002,
        "y_2;": 32003,
        "y_1": 32004,
        "x_2": 32005,
        "max(abs(x_1": 32006,
        "x_2),": 32007,
        "abs(y_1": 32008,
        "y_2))": 32009,
        "min(abs(N": 32010,
        "abs(M": 32011,
        "abs(N": 32012,
        "min(abs(x1": 32013,
        "abs(abs(x2": 32014,
        "abs(abs(y2": 32015,
        "max(abs(y2": 32016,
        "max1(long": 32017,
        "max1(abs(x2": 32018,
        "y1));": 32019,
        "max(abs(x2": 32020,
        "min(x2,": 32021,
        "min(abs(y2": 32022,
        "x1));": 32023,
        "(int)abs(x[1]": 32024,
        "(int)abs(y[1]": 32025,
        "max(l1,": 32026,
        "swaps(int": 32027,
        "swaps(&x1,": 32028,
        "&x2);": 32029,
        "swaps(&y1,": 32030,
        "&y2);": 32031,
        "swaps(&X,": 32032,
        "&Y);": 32033,
        "vec[1000005];": 32034,
        "max(a1,": 32035,
        "3e7,": 32036,
        "xx1,": 32037,
        "xx2,": 32038,
        "yy2;": 32039,
        "xx1": 32040,
        "yy1": 32041,
        "xx2": 32042,
        "max(abs(xx1": 32043,
        "xx2),": 32044,
        "abs(yy1": 32045,
        "yy2))": 32046,
        "nl,": 32047,
        "drink": 32048,
        "slice": 32049,
        "salt": 32050,
        "(drink": 32051,
        "salt)": 32052,
        "drink;": 32053,
        "(salt": 32054,
        "drink)": 32055,
        "salt;": 32056,
        "(slice": 32057,
        "slice;": 32058,
        "drinks": 32059,
        "limes": 32060,
        "min(min(drinks": 32061,
        "limes),": 32062,
        "vect;": 32063,
        "total1": 32064,
        "total2": 32065,
        "min(total1,": 32066,
        "min(total,": 32067,
        "total2))": 32068,
        "min(c": 32069,
        "np))": 32070,
        "kl,": 32071,
        "cd,": 32072,
        "nnl,": 32073,
        "nslice,": 32074,
        "nnp;": 32075,
        "kl": 32076,
        "nnl": 32077,
        "(nl": 32078,
        "nslice": 32079,
        "nnp": 32080,
        "(np": 32081,
        "(nnl": 32082,
        "2000000;": 32083,
        "(nnp": 32084,
        "(nslice": 32085,
        "min(nnl,": 32086,
        "min(nslice,": 32087,
        "nnp))": 32088,
        "(nl);": 32089,
        "Arr[8];": 32090,
        "OverAllFirendsOfMili": 32091,
        "Toats": 32092,
        "En,": 32093,
        "Sa,": 32094,
        "Arr[1]": 32095,
        "Arr[2];": 32096,
        "Arr[6];": 32097,
        "En": 32098,
        "Arr[3]": 32099,
        "Arr[4];": 32100,
        "Sa": 32101,
        "Arr[5]": 32102,
        "Arr[7];": 32103,
        "(min(Toats,": 32104,
        "min(En,": 32105,
        "Sa))": 32106,
        "Arr[0]);": 32107,
        "min(min(((k": 32108,
        "nl),": 32109,
        "d)),": 32110,
        "ovarall": 32111,
        "enough": 32112,
        "toast": 32113,
        "min(enough,": 32114,
        "min(toast,": 32115,
        "salt));": 32116,
        "a[100002],": 32117,
        "b[100002];": 32118,
        "s[100002];": 32119,
        "(np);": 32120,
        "NP;": 32121,
        "NP": 32122,
        "(kl": 32123,
        "t3)": 32124,
        "min(nl,": 32125,
        "min(np,": 32126,
        "minGas": 32127,
        "minLimon": 32128,
        "minSal": 32129,
        "canGas": 32130,
        "canLim": 32131,
        "minGas;": 32132,
        "(canLim": 32133,
        "minLimon;": 32134,
        "minSal;": 32135,
        "casiresp1": 32136,
        "casiresp2": 32137,
        "min(casiresp1,": 32138,
        "g));": 32139,
        "total_drink": 32140,
        "lime_slices": 32141,
        "(total_drink": 32142,
        "lime_slices--;": 32143,
        "min(min((k": 32144,
        "np),": 32145,
        "min(min(k": 32146,
        "nl));": 32147,
        "np));": 32148,
        "totalMili": 32149,
        "nl);": 32150,
        "totalLimon": 32151,
        "totalSalt": 32152,
        "min(totalLimon,": 32153,
        "min(totalMili,": 32154,
        "totalSalt))": 32155,
        "mi(int": 32156,
        "num3;": 32157,
        "mi(num1,": 32158,
        "num3);": 32159,
        "ans3);": 32160,
        "Gdrink": 32161,
        "lime": 32162,
        "min(Gdrink,": 32163,
        "min(lime,": 32164,
        "salt))": 32165,
        "drink,": 32166,
        "slice,": 32167,
        "salt,": 32168,
        "min(slice,": 32169,
        "salt);": 32170,
        "drink);": 32171,
        "resultado,": 32172,
        "mltotal,": 32173,
        "lemoes,": 32174,
        "sal,": 32175,
        "resultadofinal;": 32176,
        "mltotal": 32177,
        "lemoes": 32178,
        "sal": 32179,
        "resultado": 32180,
        "min(min(mltotal,": 32181,
        "lemoes),": 32182,
        "sal);": 32183,
        "resultadofinal": 32184,
        "nl)": 32185,
        "min(nnp,": 32186,
        "vol": 32187,
        "toastFromBottle": 32188,
        "toastDueToSalt": 32189,
        "min(toastFromBottle,": 32190,
        "toastDueToSalt);": 32191,
        "limes);": 32192,
        "lime,": 32193,
        "toast,": 32194,
        "quant;": 32195,
        "min(min(drink,": 32196,
        "lime),": 32197,
        "quant": 32198,
        "tml,": 32199,
        "tsd,": 32200,
        "slt;": 32201,
        "tml": 32202,
        "tsd": 32203,
        "slt": 32204,
        "min(tml,": 32205,
        "tsd);": 32206,
        "slt)": 32207,
        "amigos,": 32208,
        "garrafas,": 32209,
        "militros,": 32210,
        "limoes,": 32211,
        "fatias,": 32212,
        "amigos": 32213,
        "garrafas": 32214,
        "militros": 32215,
        "limoes": 32216,
        "fatias": 32217,
        "garrafas;": 32218,
        "limoes;": 32219,
        "min(fatias,": 32220,
        "min(sal": 32221,
        "nl))": 32222,
        "last_digit": 32223,
        "(last_digit": 32224,
        "(k;": 32225,
        "pt(int": 32226,
        "(a[++i]": 32227,
        "(a[--j]": 32228,
        "swap(a[l],": 32229,
        "q_sort(int": 32230,
        "pt(a,": 32231,
        "q_sort(a,": 32232,
        "readint()": 32233,
        "sub(n);": 32234,
        "order;": 32235,
        "(order--)": 32236,
        "(n[n.size()": 32237,
        "n.erase(n.size()": 32238,
        "n[n.size()": 32239,
        "answer(unsigned": 32240,
        "answer(n,": 32241,
        "swap(long": 32242,
        "codechef": 32243,
        "(codechef)": 32244,
        "ck2": 32245,
        "ck3": 32246,
        "ck4": 32247,
        "arr2[n": 32248,
        "arr1[j]": 32249,
        "(ck1": 32250,
        "arr[205][4];": 32251,
        "x(n),": 32252,
        "y(n);": 32253,
        "arr[i][0]++,": 32254,
        "arr[j][1]++;": 32255,
        "arr[i][1]++,": 32256,
        "arr[j][0]++;": 32257,
        "arr[i][2]++,": 32258,
        "arr[j][3]++;": 32259,
        "arr[i][3]++,": 32260,
        "arr[j][2]++;": 32261,
        "arr[i][2]": 32262,
        "arr[i][3])": 32263,
        "a[x],": 32264,
        "x[201],": 32265,
        "y[201],": 32266,
        "a[2001][2001];": 32267,
        "-10005;": 32268,
        "a[x[i]][y[i]]": 32269,
        "(a[j][y[i]])": 32270,
        "(c0)": 32271,
        "(c1)": 32272,
        "(a[x[i]][j])": 32273,
        "(c2)": 32274,
        "(c3)": 32275,
        "x[200],": 32276,
        "y[200];": 32277,
        "le,": 32278,
        "2001,": 32279,
        "pts[size][2];": 32280,
        "pts[i][0]": 32281,
        "pts[i][1];": 32282,
        "a[pts[i][1]": 32283,
        "t][pts[i][0]": 32284,
        "t]": 32285,
        "pts[i][1]": 32286,
        "(a[r][j]": 32287,
        "(!left)": 32288,
        "(a[j][c]": 32289,
        "(!up)": 32290,
        "(!right)": 32291,
        "x[205],": 32292,
        "y[205];": 32293,
        "p[201];": 32294,
        "p[j].first)": 32295,
        "x4;": 32296,
        "x4++;": 32297,
        "X[n": 32298,
        "Y[n": 32299,
        "Y[i];": 32300,
        "(X[j]": 32301,
        "(Y[j]": 32302,
        "arr[200][2],": 32303,
        "arr[y][0]": 32304,
        "arr[y][1];": 32305,
        "(arr[l][0]": 32306,
        "arr[l][1]": 32307,
        "arr[y][1])": 32308,
        "(arr[q][1]": 32309,
        "arr[y][1]": 32310,
        "arr[q][0]": 32311,
        "arr[y][0])": 32312,
        "a[M][2];": 32313,
        "(a[j][0]": 32314,
        "ctf": 32315,
        "ct3": 32316,
        "ct4": 32317,
        "y[k])": 32318,
        "ctf++;": 32319,
        "my[205];": 32320,
        "my[i].first": 32321,
        "my[i].second;": 32322,
        "(my[i].first": 32323,
        "my[j].first": 32324,
        "my[i].second": 32325,
        "my[j].second)": 32326,
        "U++;": 32327,
        "y[200],": 32328,
        "supercentral(0);": 32329,
        "(bit": 32330,
        "supercentral": 32331,
        "sumt": 32332,
        "sumt)": 32333,
        "CountOfMoney,": 32334,
        "Hand": 32335,
        "CountOfMoney;": 32336,
        "list(CountOfMoney);": 32337,
        "(list[j]": 32338,
        "list[j": 32339,
        "swap(list[j],": 32340,
        "((Hand": 32341,
        "Sum)": 32342,
        "(Sum": 32343,
        "list[list.size()": 32344,
        "list.pop_back();": 32345,
        "num[j];": 32346,
        "insertion(int": 32347,
        "A[],": 32348,
        "hole": 32349,
        "(hole": 32350,
        "A[hole": 32351,
        "A[hole]": 32352,
        "hole--;": 32353,
        "Ncoins": 32354,
        "tSum": 32355,
        "minCoinValue": 32356,
        "minusSum": 32357,
        "coin": 32358,
        "Ncoins;": 32359,
        "A[Ncoins]": 32360,
        "insertion(A,": 32361,
        "Ncoins);": 32362,
        "minCoinValue;": 32363,
        "coin++;": 32364,
        "(minCoinValue": 32365,
        "minusSum)": 32366,
        "a[103]": 32367,
        "vec.end(),": 32368,
        "mys": 32369,
        "cpt": 32370,
        "ai[n];": 32371,
        "sort(ai,": 32372,
        "(mys": 32373,
        "cpt++;": 32374,
        "totSum": 32375,
        "minCoinsToWin()": 32376,
        "mySum": 32377,
        "(mySum": 32378,
        "mySum)": 32379,
        "input[t];": 32380,
        "temp_sum": 32381,
        "coins": 32382,
        "(temp_sum": 32383,
        "coins++;": 32384,
        "selection_insert(arr,": 32385,
        "*nums": 32386,
        "sort(nums,": 32387,
        "minisum": 32388,
        "(minisum": 32389,
        "input[i]": 32390,
        "ans[M];": 32391,
        "sid": 32392,
        "eid": 32393,
        "sid;": 32394,
        "ans[id++]": 32395,
        "(eid": 32396,
        "sid)": 32397,
        "max.push(s[s.size()": 32398,
        "max.top()": 32399,
        "max.top())": 32400,
        "max.push(s[i]);": 32401,
        "(!max.empty())": 32402,
        "max.top();": 32403,
        "max.pop();": 32404,
        "input[input.size()": 32405,
        "ch--)": 32406,
        "s[200100],": 32407,
        "(a[maxx]": 32408,
        "maxx--;": 32409,
        "97]--;": 32410,
        "char[s.length()": 32411,
        "char[j": 32412,
        "b[l++]": 32413,
        "(b[l": 32414,
        "lexMaxSubseq(const": 32415,
        "answ;": 32416,
        "next(n,": 32417,
        "s[next[i": 32418,
        "next[i]": 32419,
        "next[i": 32420,
        "next[0];": 32421,
        "s[curr];": 32422,
        "next[curr];": 32423,
        "lexMaxSubseq(s)": 32424,
        "sequence;": 32425,
        "sequence);": 32426,
        "letters;": 32427,
        "sequence.length();": 32428,
        "(!letters.empty()": 32429,
        "letters.front()": 32430,
        "sequence[i])": 32431,
        "letters.pop_front();": 32432,
        "letters.push_front(sequence[i]);": 32433,
        "(!letters.empty())": 32434,
        "letters.back();": 32435,
        "letters.pop_back();": 32436,
        "maxsuff[N];": 32437,
        "maxsuff[N": 32438,
        "s[N": 32439,
        "maxsuff[i]": 32440,
        "max(maxsuff[i": 32441,
        "maxsuff[i])": 32442,
        "arr[sz];": 32443,
        "s[arr[i]];": 32444,
        "max_chars,": 32445,
        "max_chars": 32446,
        "max_chars[i]": 32447,
        "max_chars[i": 32448,
        "solve(string::iterator": 32449,
        "ib,": 32450,
        "ie,": 32451,
        "ib;": 32452,
        "ie;": 32453,
        "solve(it": 32454,
        "d.push_front(*it);": 32455,
        "solve(ib,": 32456,
        "solve(s.begin(),": 32457,
        "(deque<char>::iterator": 32458,
        "d.begin();": 32459,
        "d.end();": 32460,
        "find_subsequence(string": 32461,
        "last_visited_index": 32462,
        "find_subsequence(s);": 32463,
        "vis[200000": 32464,
        "(mp[z])": 32465,
        "ss[100005],": 32466,
        "rs[100005];": 32467,
        "rs[k++]": 32468,
        "rs[k]": 32469,
        "ss[p++]": 32470,
        "rs[i];": 32471,
        "ss[p]": 32472,
        "it->first)": 32473,
        "m[s[i]]--;": 32474,
        "m.begin())": 32475,
        "c_max": 32476,
        "c_max)": 32477,
        "n[100004];": 32478,
        "r[2000],": 32479,
        "s[b])": 32480,
        "s[e];": 32481,
        "v.push_back(u);": 32482,
        "v[f];": 32483,
        "dic(long": 32484,
        "(dic(s)": 32485,
        "s[12],": 32486,
        "s1[12],": 32487,
        "s2[12];": 32488,
        "atoi(s);": 32489,
        "atoi(s1);": 32490,
        "atoi(s2);": 32491,
        "-n2": 32492,
        "-n1": 32493,
        "sl,": 32494,
        "(sl": 32495,
        "max(r": 32496,
        "max(max(b1,": 32497,
        "b2),": 32498,
        "slast;": 32499,
        "slast": 32500,
        "(slast": 32501,
        "-(abs(r)": 32502,
        "inp.length(),": 32503,
        "(inp.at(0)": 32504,
        "(inp.at(2)": 32505,
        "inp.at(1)": 32506,
        "(inp.at(n": 32507,
        "inp.at(n": 32508,
        "inp.at(i);": 32509,
        "(x[l": 32510,
        "getResult(int": 32511,
        "getResult(n)": 32512,
        "b[a]++;": 32513,
        "a[1004],": 32514,
        "minn(const": 32515,
        "minn(minx,": 32516,
        "points": 32517,
        "squares[1005]": 32518,
        "squares[c]++;": 32519,
        "min(points,": 32520,
        "squares[i]);": 32521,
        "a[maxn]": 32522,
        "bj[1005],": 32523,
        "bj[x]++;": 32524,
        "sort(bj": 32525,
        "bj[1]": 32526,
        "cnt[1003],": 32527,
        "arr[1000]": 32528,
        "*m;": 32529,
        "++m[temp": 32530,
        "++x[p];": 32531,
        "0x3fff;": 32532,
        "minx);": 32533,
        "gs[1010],": 32534,
        "gs[a[i]]++;": 32535,
        "10000001;": 32536,
        "(gs[i]": 32537,
        "answer)": 32538,
        "gs[i];": 32539,
        "ai[1010];": 32540,
        "ai[j]++;": 32541,
        "ai[i]);": 32542,
        "A[t]++;": 32543,
        "vec[inp]++;": 32544,
        "num[10000],": 32545,
        "1e5,": 32546,
        "MN;": 32547,
        "ar[a]++;": 32548,
        "sort(ar": 32549,
        "ar[1];": 32550,
        "idx--;": 32551,
        "a[idx]++;": 32552,
        "(*min_element(a,": 32553,
        "cnt[20090];": 32554,
        "cnt[arr[i]]++;": 32555,
        "cnt[j]);": 32556,
        "10000,": 32557,
        "Freq[n]": 32558,
        "Freq[ele": 32559,
        "(Freq[i]": 32560,
        "Freq[i];": 32561,
        "ar[a[i]": 32562,
        "freq[1005];": 32563,
        "freq[x]++;": 32564,
        "min(minimum,": 32565,
        "sum[1010];": 32566,
        "sum[c[i]]++;": 32567,
        "sum[i]--;": 32568,
        "zlicz[N];": 32569,
        "zlicz[c]++;": 32570,
        "zlicz[i]);": 32571,
        "{'a',": 32572,
        "'i',": 32573,
        "'u',": 32574,
        "'y'};": 32575,
        "stg(char": 32576,
        "stg(a[i])": 32577,
        "stg(a[i": 32578,
        "car(char": 32579,
        "'u'": 32580,
        "'y');": 32581,
        "(car(s[i]))": 32582,
        "(!hap)": 32583,
        "(!isvowel(s[i])": 32584,
        "!isvowel(s[i": 32585,
        "(!check(s[i])": 32586,
        "!check(s[i": 32587,
        "mp['i']": 32588,
        "mp['o']": 32589,
        "mp['u']": 32590,
        "mp['y']": 32591,
        "res[101];": 32592,
        "*words": 32593,
        "char[num": 32594,
        "dics[6]": 32595,
        "'y',": 32596,
        "((int)words[i]": 32597,
        "dics[j])": 32598,
        "(res[j]": 32599,
        "res[j]": 32600,
        "s1.insert('a');": 32601,
        "s1.insert('e');": 32602,
        "s1.insert('i');": 32603,
        "s1.insert('o');": 32604,
        "s1.insert('u');": 32605,
        "s1.insert('y');": 32606,
        "(s1.count(s.at(i)))": 32607,
        "\"aeiouy\";": 32608,
        "vowel(char": 32609,
        "V.find(c)": 32610,
        "(!vowel(s[i": 32611,
        "!vowel(s[i]))": 32612,
        "(check(s[i])": 32613,
        "check(s[i": 32614,
        "st(char": 32615,
        "(st(s[i])": 32616,
        "st(s[i": 32617,
        "ar[1000008];": 32618,
        "vi;": 32619,
        "vi.push_back('x');": 32620,
        "(!isv(s[i]))": 32621,
        "vi.push_back(s[i]);": 32622,
        "(!isv(vi[vi.size()": 32623,
        "vi.size();": 32624,
        "vi[i];": 32625,
        "b[10005],": 32626,
        "c[20]": 32627,
        "\"aeiouy\",": 32628,
        "d[10005];": 32629,
        "(f(b[i]))": 32630,
        "d[e]": 32631,
        "(f(b[i])": 32632,
        "is_vocal(const": 32633,
        "&i)": 32634,
        "es;": 32635,
        "es": 32636,
        "is_vocal(out[0]);": 32637,
        "(es)": 32638,
        "(!is_vocal(in[i]))": 32639,
        "is_vocal(in[i]);": 32640,
        "isVowel(char": 32641,
        "(isVowel(s[i])": 32642,
        "isVowel(s[i": 32643,
        "(isVowel(s[j": 32644,
        "isVowel(s[j]))": 32645,
        "s.erase(j,": 32646,
        "is_vowel(char": 32647,
        "(is_vowel(s[i])": 32648,
        "is_vowel(s[i": 32649,
        "\"qwrtpsdfghjklzxcvbnm\";": 32650,
        "cc(char": 32651,
        "cs[i])": 32652,
        "(cc(c[i]))": 32653,
        "pd(char": 32654,
        "str1);": 32655,
        "(pd(str[i": 32656,
        "pd(str[i": 32657,
        "(vi.empty())": 32658,
        "v[100];": 32659,
        "b['a']": 32660,
        "b['i']": 32661,
        "b['e']": 32662,
        "b['o']": 32663,
        "b['u']": 32664,
        "b['y']": 32665,
        "(b[s[i]])": 32666,
        "suma,": 32667,
        "sum[n];": 32668,
        "sum[n]": 32669,
        "a[(int)1e6];": 32670,
        "prod": 32671,
        "resta": 32672,
        "(prod": 32673,
        "prod;": 32674,
        "prod--;": 32675,
        "resta;": 32676,
        "arr[300009];": 32677,
        "vec.begin()": 32678,
        "minas": 32679,
        "minas);": 32680,
        "Long,": 32681,
        "Arr[1500000],": 32682,
        "repeticiones;": 32683,
        "Long)": 32684,
        "Long;": 32685,
        "Long);": 32686,
        "repeticiones": 32687,
        "Long": 32688,
        "g--)": 32689,
        "Arr[g]": 32690,
        "repeticiones--;": 32691,
        "arr[300010];": 32692,
        "900001;": 32693,
        "sort(An,": 32694,
        "An": 32695,
        "less<int>());": 32696,
        "300030;": 32697,
        "arr[N": 32698,
        "long)v[0]": 32699,
        "long)v[i]": 32700,
        "long)j;": 32701,
        "fact(1000007);": 32702,
        "mdpower(long": 32703,
        "998244353": 32704,
        "998244353)": 32705,
        "factorial()": 32706,
        "mdpower(a,": 32707,
        "brr[0]": 32708,
        "brr[i": 32709,
        "brr[n": 32710,
        "dat[300005];": 32711,
        "sum[300005];": 32712,
        "memset(dat,": 32713,
        "sizeof(dat));": 32714,
        "sort(dat,": 32715,
        "dat": 32716,
        "dat[0];": 32717,
        "(temp);": 32718,
        "numbers;": 32719,
        "numbers.push_back(t);": 32720,
        "sort(numbers.begin(),": 32721,
        "numbers.end());": 32722,
        "numbers[j];": 32723,
        "a[300001];": 32724,
        "he[4];": 32725,
        "he[0]": 32726,
        "he[1]": 32727,
        "he[2]": 32728,
        "he[3]": 32729,
        "(he[i]": 32730,
        "he[i];": 32731,
        "answers[6];": 32732,
        "answers[0]": 32733,
        "answers[1]": 32734,
        "answers[2]": 32735,
        "answers[3]": 32736,
        "answers[4]": 32737,
        "answers[5]": 32738,
        "sort(answers,": 32739,
        "answers": 32740,
        "values.push_back(a": 32741,
        "values.push_back((a": 32742,
        "*max_element(values.begin(),": 32743,
        "values.end())": 32744,
        "max(a": 32745,
        "d[6],": 32746,
        "d[4]": 32747,
        "(d[0]": 32748,
        "max1(int": 32749,
        "m[10],": 32750,
        "max[10];": 32751,
        "max[0]": 32752,
        "max[i]": 32753,
        "max1(m[i": 32754,
        "(da": 32755,
        "max[i])": 32756,
        "max(max(a": 32757,
        "maxx(int": 32758,
        "maxx(max,": 32759,
        "v.push_back((a": 32760,
        "*max_element((v).begin(),": 32761,
        "(v).end())": 32762,
        "getAns(int": 32763,
        "x[6];": 32764,
        "getAns(a,": 32765,
        "d[1110];": 32766,
        "maximumValue(int": 32767,
        "maximum)": 32768,
        "maximum;": 32769,
        "maximumValue(d,": 32770,
        "maximum);": 32771,
        "f1(int,": 32772,
        "f2(int,": 32773,
        "f2(a,": 32774,
        "f2(b,": 32775,
        "array[3],": 32776,
        "array[1];": 32777,
        "array[2];": 32778,
        "f1(a,": 32779,
        "p[6];": 32780,
        "p[4]": 32781,
        "p[5]": 32782,
        "sum[6],": 32783,
        "sum[3]": 32784,
        "sum[4]": 32785,
        "sum[5]": 32786,
        "max(sum[i],": 32787,
        "++num;": 32788,
        "v[6],": 32789,
        "v[5])": 32790,
        "(next_permutation(v,": 32791,
        "6));": 32792,
        "a[7],": 32793,
        "n(6);": 32794,
        "(sum1))": 32795,
        "arr[6],": 32796,
        "arr[c]": 32797,
        "arr[j]))": 32798,
        "num[6],": 32799,
        "num[t])": 32800,
        "(((arr[i]": 32801,
        "arr[t]++;": 32802,
        "stolen": 32803,
        "uts[101]": 32804,
        "freq[101]": 32805,
        "uts[i];": 32806,
        "sort(uts,": 32807,
        "uts": 32808,
        "kind": 32809,
        "(uts[i": 32810,
        "uts[i])": 32811,
        "freq[kind]++;": 32812,
        "kind++;": 32813,
        "kind--;": 32814,
        "kind;": 32815,
        "(maxcount": 32816,
        "freq[i])": 32817,
        "freq[i];": 32818,
        "m[arr[i]]++;": 32819,
        "mp[100005],": 32820,
        "mp[a[i]]);": 32821,
        "b[101]": 32822,
        "ut[125];": 32823,
        "memset(ut,": 32824,
        "sizeof(ut));": 32825,
        "ut[a]++;": 32826,
        "115;": 32827,
        "(ut[i]": 32828,
        "ut[i];": 32829,
        "arr[120];": 32830,
        "mode[120];": 32831,
        "num_unique": 32832,
        "max_mode_val": 32833,
        "mode[arr[i]]": 32834,
        "mode[arr[i]]++;": 32835,
        "(max_mode_val": 32836,
        "mode[arr[i]])": 32837,
        "mode[arr[i]];": 32838,
        "(mode[arr[i]]": 32839,
        "num_unique++;": 32840,
        "min_dishes": 32841,
        "us[101],": 32842,
        "us[i]": 32843,
        "us[a]++;": 32844,
        "t.insert(a);": 32845,
        "sort(us": 32846,
        "us": 32847,
        "101);": 32848,
        "((us[100]": 32849,
        "(us[100]": 32850,
        "us[i];": 32851,
        "a[MAXN]": 32852,
        "a[temp]);": 32853,
        "imax++;": 32854,
        "dishes": 32855,
        "(dishes": 32856,
        "dishes++;": 32857,
        "maxNum": 32858,
        "numType": 32859,
        "num[111];": 32860,
        "num[a]++;": 32861,
        "max(maxNum,": 32862,
        "numType++;": 32863,
        "((maxNum": 32864,
        "MAX_SIZE": 32865,
        "a[MAX_SIZE];": 32866,
        "temp(0);": 32867,
        "dish(0);": 32868,
        "dish": 32869,
        "max(dish,": 32870,
        "++a[c];": 32871,
        "(*max_element(a,": 32872,
        "105)": 32873,
        "cnt[101];": 32874,
        "(cnt[a]": 32875,
        "max(c2,": 32876,
        "(mp[*i]": 32877,
        "b[100]": 32878,
        "b[index]++;": 32879,
        "((max": 32880,
        "(int(max": 32881,
        "BigMod(long": 32882,
        "BigMod(N,": 32883,
        "((ret": 32884,
        "998244353))": 32885,
        "(BigMod(N,": 32886,
        "mp[x]);": 32887,
        "ceil((mx": 32888,
        "cnt[tmp]++;": 32889,
        "max(all,": 32890,
        "cnt[tmp]);": 32891,
        "(all": 32892,
        "all++;": 32893,
        "(cnt[i])": 32894,
        "ksm(long": 32895,
        "arr[107];": 32896,
        "(!arr[q])": 32897,
        "arr[q]++;": 32898,
        "max(arr[q],": 32899,
        "map;": 32900,
        "map[x]++;": 32901,
        "(map[x]": 32902,
        "map[x];": 32903,
        "ceil(m": 32904,
        "v[105],": 32905,
        "-12312,": 32906,
        "v[j]))": 32907,
        "4e5": 32908,
        "a[107];": 32909,
        "from++)": 32910,
        "to++)": 32911,
        "a[from];": 32912,
        "INFL": 32913,
        "rc[maxn": 32914,
        "maxl],": 32915,
        "lc[maxn": 32916,
        "maxl];": 32917,
        "newint": 32918,
        "(rc[cur]": 32919,
        "rc[cur]": 32920,
        "newint++;": 32921,
        "rc[cur];": 32922,
        "(lc[cur]": 32923,
        "lc[cur]": 32924,
        "lc[cur];": 32925,
        "add(0);": 32926,
        "get(pre));": 32927,
        "add(pre);": 32928,
        "v[k]);": 32929,
        "-1e18;": 32930,
        "V[j];": 32931,
        "max(cur,": 32932,
        "max_tmp": 32933,
        "max_sum": 32934,
        "num[i],": 32935,
        "max_tmp)": 32936,
        "dp[5100];": 32937,
        "dp[t]": 32938,
        "(dp[t]": 32939,
        "dp[t];": 32940,
        "solve2()": 32941,
        "solve2();": 32942,
        "*mas": 32943,
        "cur_res": 32944,
        "(cur_res": 32945,
        "cur_res;": 32946,
        "mas[j];": 32947,
        "l[n];": 32948,
        "total_cov": 32949,
        "(total_cov": 32950,
        "offset": 32951,
        "offset2": 32952,
        "offset;": 32953,
        "((offset": 32954,
        "(offset2": 32955,
        "min(offset,": 32956,
        "offset2)": 32957,
        "((offset2": 32958,
        "dist_len(int": 32959,
        "iss(str);": 32960,
        "iss": 32961,
        "toString(int": 32962,
        "cmpfunc(const": 32963,
        "(*(int": 32964,
        "*(int": 32965,
        "*)b);": 32966,
        "pow_mod(long": 32967,
        "arr[100000],": 32968,
        "fs": 32969,
        "(fs": 32970,
        "fs;": 32971,
        "ch[4][4];": 32972,
        "z[100100];": 32973,
        "compute()": 32974,
        "compute();": 32975,
        "numbers_total": 32976,
        "(numbers_total": 32977,
        "ceil(j": 32978,
        "nak": 32979,
        "(nak": 32980,
        "long)ceil(k": 32981,
        "(int)(ceil(ceil((double)n": 32982,
        "sheets,": 32983,
        "pack;": 32984,
        "sheets": 32985,
        "pack": 32986,
        "sk,": 32987,
        "sk": 32988,
        "((float)b": 32989,
        "(int)b": 32990,
        "((float)h": 32991,
        "(int)h": 32992,
        "10010;": 32993,
        "max0": 32994,
        "max0;": 32995,
        "sumpp": 32996,
        "(sumpp": 32997,
        "long)(ceil(ceil((double)(n)": 32998,
        "long)ceil(double((int)ceil(n": 32999,
        "ceil(double(n)": 33000,
        "ceil(double(tp)": 33001,
        "am++;": 33002,
        "calc(long": 33003,
        "pack)": 33004,
        "(floor(sheets": 33005,
        "(calc(mid))": 33006,
        "!!(M": 33007,
        "!!((N": 33008,
        "nu;": 33009,
        "nu": 33010,
        "cout.precision(15);": 33011,
        "numsheets": 33012,
        "numpacks": 33013,
        "(numsheets": 33014,
        "single": 33015,
        "ceil(single": 33016,
        "ceil((ceil(n": 33017,
        "arr[200000];": 33018,
        "maxsum": 33019,
        "(maxsum": 33020,
        "1000111222;": 33021,
        "500007;": 33022,
        "ar[N],": 33023,
        "just;": 33024,
        "just": 33025,
        "(just": 33026,
        "a[200100],": 33027,
        "sum[200005];": 33028,
        "ceil(double(sum": 33029,
        "2.0)))": 33030,
        "long)(ceil(1.0": 33031,
        "a[200003],": 33032,
        "l[500000]": 33033,
        "l[b];": 33034,
        "(float)l[b]": 33035,
        "(float)l[b];": 33036,
        "200100;": 33037,
        "v[b];": 33038,
        "arr[200005],": 33039,
        "sum[maxn]": 33040,
        "A[n])": 33041,
        "nilai[200000],": 33042,
        "nilai[i];": 33043,
        "tab[N];": 33044,
        "tab[n])": 33045,
        "ara[200001],": 33046,
        "flag3": 33047,
        "(islower(str[i]))": 33048,
        "(isdigit(str[i]))": 33049,
        "flag3)": 33050,
        "\"Too": 33051,
        "weak\"": 33052,
        "f3)": 33053,
        "dk": 33054,
        "tk": 33055,
        "digit,": 33056,
        "small,": 33057,
        "big,": 33058,
        "quit()": 33059,
        "quit();": 33060,
        "(isdigit(s[i]))": 33061,
        "(big": 33062,
        "cont_big_word": 33063,
        "cont_little_word": 33064,
        "cont_cifra": 33065,
        "(cont_little_word": 33066,
        "cont_cifra)": 33067,
        "'_'": 33068,
        "',';": 33069,
        "puts(\"Too": 33070,
        "weak\"),": 33071,
        "weak\");": 33072,
        "mima[10000],": 33073,
        "shuzi": 33074,
        "xiao": 33075,
        "mima;": 33076,
        "(strlen(mima)": 33077,
        "strlen(mima);": 33078,
        "(mima[i]": 33079,
        "mima[i]": 33080,
        "shuzi++;": 33081,
        "da++;": 33082,
        "xiao++;": 33083,
        "(shuzi": 33084,
        "haveNum": 33085,
        "haveSmallLetter": 33086,
        "haveBigLetter": 33087,
        "((str[ii]": 33088,
        "(str[ii]": 33089,
        "'z'))": 33090,
        "!haveNum": 33091,
        "!haveBigLetter": 33092,
        "!haveSmallLetter)": 33093,
        "weak\";": 33094,
        "flag3;": 33095,
        "((int)(s[i])": 33096,
        "(int)(s[i])": 33097,
        "58)": 33098,
        "64": 33099,
        "123)": 33100,
        "vec1(4,": 33101,
        "(password.length()": 33102,
        "vec1[0]": 33103,
        "(islower(password[i]))": 33104,
        "vec1[1]++;": 33105,
        "(isupper(password[i]))": 33106,
        "vec1[2]++;": 33107,
        "(isdigit(password[i]))": 33108,
        "vec1[3]++;": 33109,
        "vec1.size();": 33110,
        "(vec1[i]": 33111,
        "weak\\n\";": 33112,
        "124)": 33113,
        "46": 33114,
        "(isalpha(s[i])": 33115,
        "islower(s[i]))": 33116,
        "isupper(s[i]))": 33117,
        "((s.length()": 33118,
        "flaga": 33119,
        "no()": 33120,
        "hasLarge(const": 33121,
        "((int)s.size());": 33122,
        "hasSmall(const": 33123,
        "hasDigit(const": 33124,
        "no();": 33125,
        "(!hasLarge(s)": 33126,
        "!hasSmall(s)": 33127,
        "!hasDigit(s))": 33128,
        "cond_1": 33129,
        "cond_2": 33130,
        "cond_3": 33131,
        "cond_4": 33132,
        "(cond_1": 33133,
        "\"Correct\\n\"": 33134,
        "weak\\n\");": 33135,
        "p(s.length());": 33136,
        "\"contest\\n\";": 33137,
        "\"home\\n\";": 33138,
        "\"home\"": 33139,
        "\"contest\"": 33140,
        "\"contest\\n\"": 33141,
        "\"home\\n\");": 33142,
        "second[0]": 33143,
        "second[1]": 33144,
        "second[2])": 33145,
        "home,": 33146,
        "flights;": 33147,
        "Getint()": 33148,
        "57);": 33149,
        "58);": 33150,
        "Hash()": 33151,
        "'A'),": 33152,
        "val[17576];": 33153,
        "Getint(),": 33154,
        "Home": 33155,
        "Hash();": 33156,
        "--n)": 33157,
        "++val[Hash()],": 33158,
        "--val[Hash()];": 33159,
        "17576;": 33160,
        "(val[i])": 33161,
        "(puts(\"contest\"),": 33162,
        "(puts(\"home\"),": 33163,
        "x[q];": 33164,
        "dsa[c]++;": 33165,
        "asd[c]++;": 33166,
        "asd.begin();": 33167,
        "asd.end();": 33168,
        "(dsa[it->first]": 33169,
        "asd[it->first])": 33170,
        "a.substr(5,": 33171,
        "(!x[b])": 33172,
        "r.push_back(b);": 33173,
        "(!x[c])": 33174,
        "r.push_back(c);": 33175,
        "x[b]++;": 33176,
        "y[c]++;": 33177,
        "(x[r[i]]": 33178,
        "y[r[i]])": 33179,
        "mark[N];": 33180,
        "(!mark[j]": 33181,
        "t[j].substr(0,": 33182,
        "t[j].substr(5);": 33183,
        "\"home\\n\"": 33184,
        "\"contest\\n\");": 33185,
        "ada[105];": 33186,
        "vv.push_back(t);": 33187,
        "(aa.substr(0,": 33188,
        "tuu": 33189,
        "aa.substr(5,": 33190,
        "\"->\";": 33191,
        "aa.substr(0,": 33192,
        "(tuu": 33193,
        "vv[j]": 33194,
        "!ada[j]": 33195,
        "!bal)": 33196,
        "ada[j]": 33197,
        "(!bal)": 33198,
        "sf": 33199,
        "go,": 33200,
        "\"\\0\",": 33201,
        "\"\\0\";": 33202,
        "from.push_back(go[i]);": 33203,
        "to.push_back(go[i]);": 33204,
        "(from": 33205,
        "home)": 33206,
        "sf++;": 33207,
        "st++;": 33208,
        "(sf": 33209,
        "parent[300];": 33210,
        "parent[x]": 33211,
        "parent[parent[x]];": 33212,
        "c[500];": 33213,
        "\"home\")": 33214,
        "flights,": 33215,
        "str.clear();": 33216,
        "ho;": 33217,
        "\"contest\";": 33218,
        "\"home\";": 33219,
        "_v": 33220,
        "(Hash()": 33221,
        "Home)": 33222,
        "--_v;": 33223,
        "++_v;": 33224,
        "(puts(_v": 33225,
        "\"contest\"),": 33226,
        "s1.substr(5,": 33227,
        "v1.push_back(dep);": 33228,
        "v2.push_back(arr);": 33229,
        "v2[i])": 33230,
        "a[pos]": 33231,
        "((k)&1)": 33232,
        "swap(a[0],": 33233,
        "swap(a[1],": 33234,
        "ansmap[3][6]": 33235,
        "(ansmap[i][n]": 33236,
        "a[3][6]": 33237,
        "(a[i][n": 33238,
        "6]": 33239,
        "a[3][10]": 33240,
        "{\"012210\",": 33241,
        "\"100122\",": 33242,
        "\"221001\"};": 33243,
        "((a[i][n]": 33244,
        "t[][3]": 33245,
        "moves,": 33246,
        "t[moves": 33247,
        "6][pos]": 33248,
        "a[6][3]": 33249,
        "6][x]": 33250,
        "a[res][x]": 33251,
        "swap(arr[1],": 33252,
        "arr[2]);": 33253,
        "c[7]": 33254,
        "(b[k]": 33255,
        "a1[3],": 33256,
        "a2[3],": 33257,
        "a3[3],": 33258,
        "a4[3],": 33259,
        "a5[3],": 33260,
        "a6[3];": 33261,
        "a1[0]": 33262,
        "a1[1]": 33263,
        "a1[2]": 33264,
        "a2[1]": 33265,
        "a2[2]": 33266,
        "a3[1]": 33267,
        "a3[2]": 33268,
        "a4[0]": 33269,
        "a4[1]": 33270,
        "a4[2]": 33271,
        "a5[0]": 33272,
        "a5[1]": 33273,
        "a5[2]": 33274,
        "a6[0]": 33275,
        "a6[1]": 33276,
        "a6[2]": 33277,
        "a2[x]": 33278,
        "a3[x]": 33279,
        "a4[x]": 33280,
        "a5[x]": 33281,
        "a6[x]": 33282,
        "a1[x]": 33283,
        "swap(vis[0],": 33284,
        "vis[1]);": 33285,
        "swap(vis[1],": 33286,
        "vis[2]);": 33287,
        "(a[i][n]": 33288,
        "m[b]": 33289,
        "m[1];": 33290,
        "(ini": 33291,
        "a[n][x]": 33292,
        "cnt(0);": 33293,
        "s[100000];": 33294,
        "raw;": 33295,
        "raw)": 33296,
        "raw.size()": 33297,
        "quotient;": 33298,
        "raw.size())": 33299,
        "(raw[up": 33300,
        "raw[up": 33301,
        "a(s.size(),": 33302,
        "s[6000000];": 33303,
        "t[6000000];": 33304,
        "s[3000];": 33305,
        "buck[N];": 33306,
        "mx++;": 33307,
        "solve(const": 33308,
        "solve(s);": 33309,
        "drinks++;": 33310,
        "mode": 33311,
        "(s[(i": 33312,
        "s.size()]": 33313,
        "s.size()])": 33314,
        "(mode)": 33315,
        "(s[h": 33316,
        "s[h": 33317,
        "(a[ind": 33318,
        "str.size();)": 33319,
        "3e5;": 33320,
        "(s.at(i": 33321,
        "s.at(i": 33322,
        "hate": 33323,
        "\"that": 33324,
        "love": 33325,
        "\"it\\n\";": 33326,
        "that\"": 33327,
        "it\"": 33328,
        "it\";": 33329,
        "s.erase(tam": 33330,
        "tam);": 33331,
        "that": 33332,
        "\"it\"": 33333,
        "*s1": 33334,
        "*s2": 33335,
        "that\";": 33336,
        "*s3": 33337,
        "*s4": 33338,
        "\"hate": 33339,
        "\"love": 33340,
        "!l;": 33341,
        "ac()": 33342,
        "wa()": 33343,
        "wa();": 33344,
        "ac();": 33345,
        "\"it\";": 33346,
        "love\",": 33347,
        "hate\";": 33348,
        "hate\"": 33349,
        "love\"": 33350,
        "\"that\"": 33351,
        "it\\n\";": 33352,
        "(++a)": 33353,
        "sqrt(2.0": 33354,
        "0.25)": 33355,
        "0.5;": 33356,
        "ceil(s);": 33357,
        "delta,": 33358,
        "delta": 33359,
        "sqrt(delta);": 33360,
        "odp": 33361,
        "(x))": 33362,
        "(odp": 33363,
        "long)((-1.0": 33364,
        "0.0001);": 33365,
        "(sqrt((8": 33366,
        "dropout": 33367,
        "(!dropout)": 33368,
        "(\"slow\")": 33369,
        "sqrt(2": 33370,
        "0.25);": 33371,
        "long)(x": 33372,
        "sqrt(n": 33373,
        "long)floor(sqrt(2": 33374,
        "2000005;": 33375,
        "f(i)": 33376,
        "f(i);": 33377,
        "mayor": 33378,
        "long)((sqrt(8.000": 33379,
        "7.000)": 33380,
        "1.000)": 33381,
        "2.000);": 33382,
        "(mayor": 33383,
        "int)sqrt(2": 33384,
        "50010;": 33385,
        "((high": 33386,
        "find": 33387,
        "\"Mahmoud\"": 33388,
        "\"Ehab\"": 33389,
        "\"Mahmoud\\n\";": 33390,
        "\"Ehab\\n\";": 33391,
        "\"Mahmoud\")": 33392,
        "\"Ehab\");": 33393,
        "proof": 33394,
        "puts(\"Ehab\");": 33395,
        "puts(\"Mahmoud\");": 33396,
        "\"Mahmoud\\n\"": 33397,
        "\"Ehab\\n\");": 33398,
        "x(n);": 33399,
        "ox(n);": 33400,
        "oy(n);": 33401,
        "ox[i]": 33402,
        "oy[i]": 33403,
        "cty": 33404,
        "y.begin()": 33405,
        "cty++;": 33406,
        "x.begin()": 33407,
        "ctx++;": 33408,
        "(ctx": 33409,
        "cty)": 33410,
        "y[105];": 33411,
        "nx,": 33412,
        "ny;": 33413,
        "nx++;": 33414,
        "(y[b]": 33415,
        "ny++;": 33416,
        "min(nx,": 33417,
        "ansx,": 33418,
        "ansy,": 33419,
        "x[120],": 33420,
        "y[120];": 33421,
        "(!x[a])": 33422,
        "ansx++;": 33423,
        "(!y[b])": 33424,
        "y[b]": 33425,
        "ansy++;": 33426,
        "min(ansx,": 33427,
        "ansy);": 33428,
        "y[101];": 33429,
        "x[j]++;": 33430,
        "y[k]++;": 33431,
        "(y[i])": 33432,
        "ver,": 33433,
        "ver[a]++;": 33434,
        "hor[b]++;": 33435,
        "min(ver.size(),": 33436,
        "hor.size())": 33437,
        "x.insert(a);": 33438,
        "y.insert(b);": 33439,
        "min(x.size(),": 33440,
        "y.size())": 33441,
        "xx.insert(x);": 33442,
        "yy.insert(y);": 33443,
        "min(((int)((xx).size())),": 33444,
        "((int)((yy).size())))": 33445,
        "coloana[105],": 33446,
        "linie[105];": 33447,
        "(coloana[a]": 33448,
        "++y,": 33449,
        "coloana[a]": 33450,
        "(linie[b]": 33451,
        "++x,": 33452,
        "linie[b]": 33453,
        "(!h.count(a))": 33454,
        "h.insert(a);": 33455,
        "(!v.count(b))": 33456,
        "v.insert(b);": 33457,
        "min(h.size(),": 33458,
        "v.size());": 33459,
        "X.insert(x);": 33460,
        "Y.insert(y);": 33461,
        "min(X.size(),": 33462,
        "Y.size())": 33463,
        "(m1.count(x))": 33464,
        "m1[x]++;": 33465,
        "m1[x]": 33466,
        "(m2.count(y))": 33467,
        "m2[y]++;": 33468,
        "m2[y]": 33469,
        "min(m1.size(),": 33470,
        "m2.size())": 33471,
        "count_x,": 33472,
        "count_y;": 33473,
        "count_x.insert(x);": 33474,
        "count_y.insert(y);": 33475,
        "min(count_x.size(),": 33476,
        "count_y.size())": 33477,
        "x.insert(x1);": 33478,
        "y.insert(y1);": 33479,
        "dnt;": 33480,
        "dnt++;": 33481,
        "dnt)": 33482,
        "vertical,": 33483,
        "horizontal;": 33484,
        "vertical.insert(x);": 33485,
        "horizontal.insert(y);": 33486,
        "min(vertical.size(),": 33487,
        "horizontal.size())": 33488,
        "H[101]": 33489,
        "V[101]": 33490,
        "H[x]++;": 33491,
        "V[y]++;": 33492,
        "vertical;": 33493,
        "vertical.insert(i);": 33494,
        "horizontal.insert(j);": 33495,
        "letters[30];": 33496,
        "v.insert(vv);": 33497,
        "h.insert(hh);": 33498,
        "min(v.size(),": 33499,
        "h.size())": 33500,
        "cun1[500],": 33501,
        "cun2[500],": 33502,
        "memset(cun1,": 33503,
        "sizeof(cun1));": 33504,
        "memset(cun2,": 33505,
        "sizeof(cun2));": 33506,
        "(!cun1[x])": 33507,
        "(!cun2[y])": 33508,
        "cun1[x]++;": 33509,
        "cun2[y]++;": 33510,
        "disx": 33511,
        "disy": 33512,
        "ax[200],": 33513,
        "ay[200];": 33514,
        "memset(ax,": 33515,
        "sizeof(ax));": 33516,
        "memset(ay,": 33517,
        "sizeof(ay));": 33518,
        "(ax[x]": 33519,
        "disx++;": 33520,
        "ax[x]": 33521,
        "(ay[y]": 33522,
        "disy++;": 33523,
        "ay[y]": 33524,
        "min(disx,": 33525,
        "disy)": 33526,
        "room[MAXN][MAXN];": 33527,
        "memset(room,": 33528,
        "maxrow": 33529,
        "maxcol": 33530,
        "room[x][y]++;": 33531,
        "max(maxcol,": 33532,
        "room[j][i]);": 33533,
        "max(maxrow,": 33534,
        "room[i][j]);": 33535,
        "min(maxrow,": 33536,
        "min(maxcol,": 33537,
        "min(rows,": 33538,
        "cols)": 33539,
        "ar[x][y]": 33540,
        "mx1;": 33541,
        "mx2;": 33542,
        "min(minP,": 33543,
        "a[150000],": 33544,
        "b[150000];": 33545,
        "b[0],": 33546,
        "arr[100000][2];": 33547,
        "cheapest;": 33548,
        "cheapest": 33549,
        "(cheapest": 33550,
        "p[100005],": 33551,
        "p[1000000];": 33552,
        "MIN)": 33553,
        "kount": 33554,
        "a[100000][2],": 33555,
        "(min(mn,": 33556,
        "eat,": 33557,
        "eat": 33558,
        "cost,": 33559,
        "eat;": 33560,
        "need,": 33561,
        "long)need;": 33562,
        "(price": 33563,
        "110000;": 33564,
        "min_price": 33565,
        "min_price)": 33566,
        "(min_price": 33567,
        "prices)": 33568,
        "pmin": 33569,
        "pmin)": 33570,
        "pmin;": 33571,
        "prise": 33572,
        "min(prise,": 33573,
        "A[n][2];": 33574,
        "A[i][1];": 33575,
        "(A[i][1]": 33576,
        "before)": 33577,
        "(before": 33578,
        "A[i][0]);": 33579,
        "weight;": 33580,
        "p[100001];": 33581,
        "min_p": 33582,
        "amt,": 33583,
        "amt": 33584,
        "amt;": 33585,
        "min_p)": 33586,
        "(p[min]": 33587,
        "p[min];": 33588,
        "(dp": 33589,
        "a[101][101]": 33590,
        "s[100][2];": 33591,
        "NumOfFree": 33592,
        "++counter;": 33593,
        "++total;": 33594,
        "b[150],": 33595,
        "data[100];": 33596,
        "minCoins(int": 33597,
        "coins[],": 33598,
        "V)": 33599,
        "*table": 33600,
        "int[V": 33601,
        "table[0]": 33602,
        "table[i]": 33603,
        "(coins[j]": 33604,
        "sub_res": 33605,
        "coins[j]];": 33606,
        "(sub_res": 33607,
        "table[i])": 33608,
        "table[V];": 33609,
        "coins[]": 33610,
        "7};": 33611,
        "sizeof(coins)": 33612,
        "sizeof(coins[0]);": 33613,
        "minCoins(coins,": 33614,
        "CT[205];": 33615,
        "CT[i]": 33616,
        "(!CT[i": 33617,
        "CT[i": 33618,
        "CT[a]": 33619,
        "pow(a,": 33620,
        "powmod(a,": 33621,
        "sqr(long": 33622,
        "m[a];": 33623,
        "7.);": 33624,
        "a[1][1000];": 33625,
        "a[0][i];": 33626,
        "b[1][1000];": 33627,
        "(a[0][i]": 33628,
        "b[0][i]": 33629,
        "256;": 33630,
        "ceil(a": 33631,
        "7.0);": 33632,
        "big;": 33633,
        "big.push_back(a);": 33634,
        "(big[i]": 33635,
        "big[i]": 33636,
        "int)(ceil((double)n": 33637,
        "out(n);": 33638,
        "out[i]++;": 33639,
        "tests;": 33640,
        "min(1,": 33641,
        "var--;": 33642,
        "b[300000];": 33643,
        "bag;": 33644,
        "bag.push_back(x);": 33645,
        "(vector<int>::iterator": 33646,
        "bag.begin();": 33647,
        "bag.end();": 33648,
        "(table.find(*it)": 33649,
        "table.end())": 33650,
        "table.erase(*it);": 33651,
        "total--;": 33652,
        "table.insert(*it);": 33653,
        "mark[x]++;": 33654,
        "(mark[x]": 33655,
        "v(2": 33656,
        "s.erase(a);": 33657,
        "b[100001];": 33658,
        "*c": 33659,
        "*)a;": 33660,
        "*d": 33661,
        "*)b;": 33662,
        "*d;": 33663,
        "(M[a])": 33664,
        "((maxx)": 33665,
        "(maxx)": 33666,
        "(cnt));": 33667,
        "!M[a];": 33668,
        "(s.count(temp)": 33669,
        "s.erase(temp);": 33670,
        "pres[100010]{false};": 33671,
        "(!pres[p])": 33672,
        "pres[p]": 33673,
        "scan()": 33674,
        "scan(long": 33675,
        "scan();": 33676,
        "(s.count(tp))": 33677,
        "s.erase(tp);": 33678,
        "s.insert(tp);": 33679,
        "u[200300];": 33680,
        "(u[x])": 33681,
        "++cur;": 33682,
        "vec(10000);": 33683,
        "vis[100006];": 33684,
        "re--;": 33685,
        "ta.clear();": 33686,
        "(ta.count(tmp))": 33687,
        "ta.erase(tmp);": 33688,
        "ta.insert(tmp);": 33689,
        "ta.size();": 33690,
        "dic(N": 33691,
        "(int)(2": 33692,
        "(dic[a]": 33693,
        "dic[a]": 33694,
        "current);": 33695,
        "arr[100001]": 33696,
        "(arr[b])": 33697,
        "present--;": 33698,
        "present);": 33699,
        "100050;": 33700,
        "s[300005];": 33701,
        "num[300005];": 33702,
        "n0,": 33703,
        "n00;": 33704,
        "n00": 33705,
        "n00++;": 33706,
        "(num[n": 33707,
        "(n00": 33708,
        "a[300005];": 33709,
        "min((num": 33710,
        "(v.empty())": 33711,
        "v.back())": 33712,
        "num_0": 33713,
        "num_1": 33714,
        "num_0++;": 33715,
        "num_1--;": 33716,
        "min(num_1": 33717,
        "(buf[i]": 33718,
        "buf[i": 33719,
        "(((count": 33720,
        "(s[len": 33721,
        "min((count": 33722,
        "(count)*y)": 33723,
        "\"0\\n\",": 33724,
        "block": 33725,
        "block_reached": 33726,
        "block_reached)": 33727,
        "block++;": 33728,
        "block;": 33729,
        "min(min_cost,": 33730,
        "(block": 33731,
        "seq[3000010];": 33732,
        "seq;": 33733,
        "seq[i]": 33734,
        "seq[i])": 33735,
        "rev": 33736,
        "satuan;": 33737,
        "yes;": 33738,
        "satuan": 33739,
        "((satuan": 33740,
        "(satuan": 33741,
        "number.length();": 33742,
        "s.push(n": 33743,
        "(s.top()": 33744,
        "atoi(s.c_str());": 33745,
        "Lucky(int": 33746,
        "(Lucky(count))": 33747,
        "(a[res": 33748,
        "a[res])": 33749,
        "(res))": 33750,
        "qiu": 33751,
        "f[100005];": 33752,
        "f[k": 33753,
        "fq;": 33754,
        "fq[v[i]]++;": 33755,
        "(fq.size()": 33756,
        "candidate": 33757,
        "fq.begin()->first;": 33758,
        "candidate)": 33759,
        "d[z];": 33760,
        "d[q];": 33761,
        "patok": 33762,
        "(d[q]": 33763,
        "patok)": 33764,
        "seq)": 33765,
        "last(0),": 33766,
        "cont(1);": 33767,
        "++cont;": 33768,
        "arr[n])": 33769,
        "deq.push_back(x);": 33770,
        "arr[x]);": 33771,
        "deq[k];": 33772,
        "deq.front();": 33773,
        "arr[val]--;": 33774,
        "arr[v]++;": 33775,
        "arr[v]);": 33776,
        "deq.push_back(v);": 33777,
        "(!valid)": 33778,
        "(m[a[0]]": 33779,
        "m[a[j]]--;": 33780,
        "arr.push_back(x);": 33781,
        "(!same)": 33782,
        "ar[SIZE];": 33783,
        "tcases,": 33784,
        "I,": 33785,
        "J,": 33786,
        "(I": 33787,
        "I++)": 33788,
        "ar[I];": 33789,
        "(ar[I]": 33790,
        "ar[I]": 33791,
        "ar[I": 33792,
        "2e18)": 33793,
        "(gcd(x,": 33794,
        "lcm(temp,": 33795,
        "(!check(x": 33796,
        "!check(x": 33797,
        "\"No\\n\",": 33798,
        "\"Yes\\n\",": 33799,
        "(!(a[i]": 33800,
        "\"Yes\\n\"": 33801,
        "\"No\\n\");": 33802,
        "mx5": 33803,
        "arr[mx5];": 33804,
        "bol(int": 33805,
        "s.insert(bol(arr[i]));": 33806,
        "isp": 33807,
        "(isp": 33808,
        "a[100002]": 33809,
        "a[100020];": 33810,
        "sp.clear();": 33811,
        "sp.insert(a[i]);": 33812,
        "(sp.size()": 33813,
        "a[100505];": 33814,
        "three)": 33815,
        "items(n);": 33816,
        "(items[i]": 33817,
        "items[i]": 33818,
        "items[i": 33819,
        "pause;": 33820,
        "gcdofarray;": 33821,
        "gcdofarray": 33822,
        "(gcdofarray": 33823,
        "gcd(gcdofarray,": 33824,
        "gcdofarray);": 33825,
        "check(a[i]);": 33826,
        "gcd(mini,": 33827,
        "(!d[i])": 33828,
        "1000004)": 33829,
        "1000004": 33830,
        "!d[temp]))": 33831,
        "per(int": 33832,
        "per(a[i]);": 33833,
        "dp[2005][2005];": 33834,
        "helper()": 33835,
        "dp[x][i]": 33836,
        "((dp[x][i": 33837,
        "isPrimeRoot(int": 33838,
        "dp[x][k];": 33839,
        "dp[x][p": 33840,
        "helper();": 33841,
        "(isPrimeRoot(x))": 33842,
        "2200;": 33843,
        "q[MAXN];": 33844,
        "rtn": 33845,
        "rtn;": 33846,
        "(fpow(i,": 33847,
        "isRoot": 33848,
        "(isRoot)": 33849,
        "(test(x,": 33850,
        "modu(long": 33851,
        "po,": 33852,
        "((po": 33853,
        "det": 33854,
        "(modu(i,": 33855,
        "(det": 33856,
        "pwr(int": 33857,
        "&MOD)": 33858,
        "pwr(x,": 33859,
        "result)": 33860,
        "((pwr(x,": 33861,
        "isprime[100100];": 33862,
        "listprime;": 33863,
        "isprime[2]": 33864,
        "listprime.push_back(2);": 33865,
        "listprime.push_back(i);": 33866,
        "fastexpo(long": 33867,
        "pangkat)": 33868,
        "(pangkat": 33869,
        "fastexpo(num,": 33870,
        "pangkat": 33871,
        "ret,": 33872,
        "akhir,": 33873,
        "awal": 33874,
        "akhir": 33875,
        "bnyak": 33876,
        "(awal": 33877,
        "akhir)": 33878,
        "bnyak;": 33879,
        "fastexpo(2,": 33880,
        "(fastexpo(i,": 33881,
        "((val": 33882,
        "q[++top]": 33883,
        "q[j])": 33884,
        "__gcd(i,": 33885,
        "isit(long": 33886,
        "(isit(i,": 33887,
        "\"DL\")": 33888,
        "\"UR\";": 33889,
        "\"DR\")": 33890,
        "\"UL\";": 33891,
        "M[s]++;": 33892,
        "(M[\"ULDR\"]": 33893,
        "M[\"UR\"]": 33894,
        "M[\"UL\"]": 33895,
        "\"ULDR\")": 33896,
        "\"UR\"": 33897,
        "\"UL\"": 33898,
        "\"DR\"": 33899,
        "\"DL\"": 33900,
        "mp[\"UR\"]": 33901,
        "mp[\"DL\"]": 33902,
        "mp[\"UL\"]": 33903,
        "mp[\"DR\"]": 33904,
        "mp[\"ULDR\"]": 33905,
        "x[mp[s]]++;": 33906,
        "\"UL\")": 33907,
        "++e;": 33908,
        "++c3;": 33909,
        "long)(1": 33910,
        "h++,": 33911,
        "long)h": 33912,
        "ud++,": 33913,
        "lr++;": 33914,
        "\"DL\"))": 33915,
        "ud++;": 33916,
        "long)(++ud))": 33917,
        "long)(++lr));": 33918,
        "uno": 33919,
        "dos": 33920,
        "\"ULDR\";": 33921,
        "\"DL\";": 33922,
        "\"DR\";": 33923,
        "cc[s]++;": 33924,
        "cc[\"UL\"]": 33925,
        "cc[\"DR\"]": 33926,
        "cc[\"ULDR\"];": 33927,
        "cc[\"UR\"]": 33928,
        "cc[\"DL\"]": 33929,
        "int)l": 33930,
        "**c": 33931,
        "(c[i][k": 33932,
        "(b2": 33933,
        "color[120][120];": 33934,
        "color[i][j]": 33935,
        "first_row": 33936,
        "last_row": 33937,
        "row_start": 33938,
        "row_end": 33939,
        "(color[i][j]": 33940,
        "(row_start": 33941,
        "(first_row": 33942,
        "2][m": 33943,
        "area[120][120];": 33944,
        "area[i][j];": 33945,
        "(area[i][j]": 33946,
        "sqrt(c);": 33947,
        "s.find('B');": 33948,
        "mat[200][200];": 33949,
        "bstart": 33950,
        "bstartc": 33951,
        "bhoric": 33952,
        "(mat[bstart][i]": 33953,
        "bhoric++;": 33954,
        "(bhoric": 33955,
        "bvoric": 33956,
        "(mat[i][bstartc]": 33957,
        "bvoric++;": 33958,
        "(bvoric": 33959,
        "s[116][116];": 33960,
        "sumj": 33961,
        "mp[1005][1005];": 33962,
        "r3,": 33963,
        "l3,": 33964,
        "r4,": 33965,
        "l4;": 33966,
        "(a[r1][j]": 33967,
        "(a[j][l4]": 33968,
        "l3": 33969,
        "(a[j][l3]": 33970,
        "r4)": 33971,
        "l4)": 33972,
        "arr[150][150];": 33973,
        "sqrt(ada);": 33974,
        "v--)": 33975,
        "(a[v][j]": 33976,
        "(a[i][t]": 33977,
        "s[150][150];": 33978,
        "tj;": 33979,
        "tj": 33980,
        "(s[ti][j]": 33981,
        "(s[i][tj]": 33982,
        "tj)": 33983,
        "jj,": 33984,
        "iii,": 33985,
        "iii++;": 33986,
        "jjj++;": 33987,
        "iii)": 33988,
        "jjj)": 33989,
        "sqrs;": 33990,
        "sqrs.push_back(i": 33991,
        "(i);": 33992,
        "lev": 33993,
        "(lev": 33994,
        "lev)": 33995,
        "lev++;": 33996,
        "months[13]": 33997,
        "sabc(double": 33998,
        "a3))": 33999,
        "abs(g);": 34000,
        "gcd(i": 34001,
        "ii);": 34002,
        "gig": 34003,
        "3.1415926535897932384626433832795;": 34004,
        "a[111111];": 34005,
        "f[111111];": 34006,
        "ot": 34007,
        "SQRTN": 34008,
        "320;": 34009,
        "LOGN": 34010,
        "prv": 34011,
        "prv;": 34012,
        "(((l": 34013,
        "LCM": 34014,
        "LCM;": 34015,
        "++R;": 34016,
        "long)curr": 34017,
        "long)(i": 34018,
        "long)prev": 34019,
        "(level);": 34020,
        "2009;": 34021,
        "(((K": 34022,
        "price,": 34023,
        "coin;": 34024,
        "coin)": 34025,
        "n{},": 34026,
        "h{},": 34027,
        "a{},": 34028,
        "c{},": 34029,
        "c2{};": 34030,
        "shovelNum": 34031,
        "shovelNum++;": 34032,
        "(!(price": 34033,
        "newk": 34034,
        "newk)": 34035,
        "endloop;": 34036,
        "endloop:;": 34037,
        "remainder,": 34038,
        "aws": 34039,
        "(aws": 34040,
        "(((k": 34041,
        "__gcd(10,": 34042,
        "!((k": 34043,
        "ls(0),": 34044,
        "rs(0),": 34045,
        "lc(0),": 34046,
        "rc(0);": 34047,
        "rc++;": 34048,
        "(ls": 34049,
        "((ls": 34050,
        "(lc": 34051,
        "aa[110],": 34052,
        "bb[110],": 34053,
        "ab": 34054,
        "aa[a];": 34055,
        "bb[a];": 34056,
        "((aa[a]": 34057,
        "bb[a])": 34058,
        "u[n],": 34059,
        "sumu": 34060,
        "((sumu": 34061,
        "suml)": 34062,
        "(sumu": 34063,
        "((u[i]": 34064,
        "tp[1000020],": 34065,
        "dn[1000020],": 34066,
        "sumtp,": 34067,
        "sumdn;": 34068,
        "write(const": 34069,
        "f[1000001];": 34070,
        "f[s++]": 34071,
        "putchar(f[--s]);": 34072,
        "read(tp[i]);": 34073,
        "read(dn[i]);": 34074,
        "sumtp": 34075,
        "tp[i];": 34076,
        "sumdn": 34077,
        "dn[i];": 34078,
        "(!(sumtp": 34079,
        "!(sumdn": 34080,
        "(!((sumtp": 34081,
        "dn[i])": 34082,
        "!((sumdn": 34083,
        "dn[i]": 34084,
        "tp[i])": 34085,
        "((A[i]": 34086,
        "get++;": 34087,
        "(get)": 34088,
        "parity": 34089,
        "parity++;": 34090,
        "(!(s1": 34091,
        "!(s2": 34092,
        "(!(parity": 34093,
        "(parity": 34094,
        "((ca": 34095,
        "(cb": 34096,
        "((upper": 34097,
        "arr[i][0])": 34098,
        "arr[i][1])": 34099,
        "!(a": 34100,
        "b1++;": 34101,
        "\"-1\"))": 34102,
        "rotate": 34103,
        "sum_l": 34104,
        "sum_u": 34105,
        "((u": 34106,
        "(sum_l": 34107,
        "rotate)": 34108,
        "fg)": 34109,
        "bnt": 34110,
        "bnt++;": 34111,
        "(ant": 34112,
        "((ant": 34113,
        "bnt)": 34114,
        "sumpar": 34115,
        "sumimpar": 34116,
        "(sumpar": 34117,
        "((sumpar": 34118,
        "(sumimpar": 34119,
        "asum": 34120,
        "bsum": 34121,
        "(asum": 34122,
        "1123123123;": 34123,
        "cek[N": 34124,
        "min(x[kanan]": 34125,
        "choice": 34126,
        "choice;": 34127,
        "suf": 34128,
        "(choice": 34129,
        "i)];": 34130,
        "tmp]);": 34131,
        "ar[200005];": 34132,
        "arr[200010];": 34133,
        "(int)3e5": 34134,
        "a[201010];": 34135,
        "precision": 34136,
        "numeric_limits<long": 34137,
        "double>::digits10;": 34138,
        "st.push_back(a[i": 34139,
        "N];": 34140,
        "tu": 34141,
        "tu;": 34142,
        "tu)": 34143,
        "tu)];": 34144,
        "tu)]);": 34145,
        "nums[MAXN],": 34146,
        "nums[0];": 34147,
        "nums[2": 34148,
        "a[MX];": 34149,
        "arr[200005];": 34150,
        "222222;": 34151,
        "x[1": 34152,
        "(x[i": 34153,
        "Map[maxn];": 34154,
        "Map[i];": 34155,
        "sort(Map": 34156,
        "Map": 34157,
        "Map[i": 34158,
        "mid]": 34159,
        "Map[i]);": 34160,
        "a[200009];": 34161,
        "solve(1)": 34162,
        "solve(2)": 34163,
        "occ[26];": 34164,
        "occ[s[i]": 34165,
        "occ['b'": 34166,
        "occ['u'": 34167,
        "occ['a'": 34168,
        "occ['l'": 34169,
        "occ['s'": 34170,
        "occ['r'": 34171,
        "r[100003];": 34172,
        "r2[1000],": 34173,
        "r3[1000],": 34174,
        "(s[b]": 34175,
        "r[1]++;": 34176,
        "'u')": 34177,
        "r[2]++;": 34178,
        "r[3]++;": 34179,
        "r[4]++;": 34180,
        "r[5]++;": 34181,
        "r[6]++;": 34182,
        "r[7]++;": 34183,
        "(r[1]": 34184,
        "(r[2]": 34185,
        "(r[3]": 34186,
        "r[3]": 34187,
        "(r[4]": 34188,
        "r[4]": 34189,
        "(r[5]": 34190,
        "r[5]": 34191,
        "(r[6]": 34192,
        "r[6]": 34193,
        "(r[7]": 34194,
        "r[7]": 34195,
        "\"Bulbasaur\";": 34196,
        "mp[*it]++;": 34197,
        "my.begin();": 34198,
        "my.end();": 34199,
        "mp[*it]);": 34200,
        "alpha[2][26];": 34201,
        "alpha[0][c": 34202,
        "alpha[1][c": 34203,
        "alpha[1]['B'": 34204,
        "(alpha[0]['u'": 34205,
        "out)": 34206,
        "alpha[0]['u'": 34207,
        "(alpha[0]['l'": 34208,
        "alpha[0]['l'": 34209,
        "(alpha[0]['b'": 34210,
        "alpha[0]['b'": 34211,
        "(alpha[0]['a'": 34212,
        "alpha[0]['a'": 34213,
        "(alpha[0]['s'": 34214,
        "alpha[0]['s'": 34215,
        "(alpha[0]['r'": 34216,
        "alpha[0]['r'": 34217,
        "m['B'];": 34218,
        "m['u']": 34219,
        "m['l']);": 34220,
        "m['b']);": 34221,
        "m['s']);": 34222,
        "m['r']);": 34223,
        "Bulbasaur": 34224,
        "min(Bulbasaur,": 34225,
        "min(u": 34226,
        "r))))))": 34227,
        "m['B']);": 34228,
        "l[26]": 34229,
        "l[s[i]": 34230,
        "l[1]);": 34231,
        "l[18]);": 34232,
        "l[20]": 34233,
        "l[11]);": 34234,
        "l[17]);": 34235,
        "(int)2e5": 34236,
        "kol[s[i]]++;": 34237,
        "kol['u']": 34238,
        "kol['a']": 34239,
        "((int)(res).size());": 34240,
        "kol[res[i]]);": 34241,
        "s[100050];": 34242,
        "x[s[i]]++;": 34243,
        "x['u']": 34244,
        "x['a']": 34245,
        "min(x['B'],": 34246,
        "x['u']);": 34247,
        "x['l']);": 34248,
        "x['b']);": 34249,
        "x['a']);": 34250,
        "x['s']);": 34251,
        "x['r']);": 34252,
        "m['B']": 34253,
        "m['l']": 34254,
        "m['s']": 34255,
        "need.size();": 34256,
        "b[need[i]]++;": 34257,
        "isPrime(a);": 34258,
        "isPrime(b);": 34259,
        "Isprime(long": 34260,
        "(Isprime(n": 34261,
        "sushu(int": 34262,
        "(sushu(ans2))": 34263,
        "isprime(a);": 34264,
        "isprime(b);": 34265,
        "is_prime(1000000": 34266,
        "is_prime[2]": 34267,
        "is_prime[i]": 34268,
        "(!(is_prime[i]))": 34269,
        "(is_prime[n": 34270,
        "s(i)": 34271,
        "s(j)": 34272,
        "(check(i)": 34273,
        "check(b))": 34274,
        "p.resize(n": 34275,
        "p[n])": 34276,
        "isComposite(int": 34277,
        "((isComposite(i)": 34278,
        "isComposite(j))": 34279,
        "vis[1000010];": 34280,
        "4;;": 34281,
        "(!isprime(n": 34282,
        "a[10000010];": 34283,
        "isp[maxn];": 34284,
        "gp()": 34285,
        "memset(isp,": 34286,
        "sizeof(isp));": 34287,
        "isp[0]": 34288,
        "isp[1]": 34289,
        "(!isp[i])": 34290,
        "isp[j]": 34291,
        "gp();": 34292,
        "(isp[n": 34293,
        "isp[i])": 34294,
        "(!isPrime(i)": 34295,
        "!isPrime(j))": 34296,
        "(f(i)": 34297,
        "p(int": 34298,
        "(p(i)": 34299,
        "(p(n": 34300,
        "prime(a);": 34301,
        "prime(b);": 34302,
        "arr[104]": 34303,
        "arr[m]": 34304,
        "yx": 34305,
        "(yx": 34306,
        "xx[1002];": 34307,
        "xx[1005];": 34308,
        "g2": 34309,
        "(g1": 34310,
        "con1": 34311,
        "con2": 34312,
        "(con1": 34313,
        "C[105];": 34314,
        "c(n": 34315,
        "nxt()": 34316,
        "nxt();": 34317,
        "c(m);": 34318,
        "(pass": 34319,
        "pass)": 34320,
        "ci(m);": 34321,
        "ci[i];": 34322,
        "ci[j];": 34323,
        "(g2": 34324,
        "arra[100],": 34325,
        "arra[i]": 34326,
        "size_m,": 34327,
        "size_x,": 34328,
        "size_y;": 34329,
        "size_m;": 34330,
        "sum.resize(size_m);": 34331,
        "sum[ii]": 34332,
        "sum[ii": 34333,
        "size_x": 34334,
        "size_m)": 34335,
        "((sum[ii]": 34336,
        "size_y)": 34337,
        "((sum[size_m": 34338,
        "sum[ii])": 34339,
        "size_x))": 34340,
        "size_x)": 34341,
        "size_y))": 34342,
        "tem)": 34343,
        "vec(m);": 34344,
        "cnt[j];": 34345,
        "((be": 34346,
        "s[100000": 34347,
        "max_res": 34348,
        "max_res)": 34349,
        "maxC;": 34350,
        "maxC": 34351,
        "maxC)": 34352,
        "curl": 34353,
        "curl++;": 34354,
        "(curl": 34355,
        "maxl)": 34356,
        "curl;": 34357,
        "sk;": 34358,
        "(sk": 34359,
        "max(ats,": 34360,
        "maxlen": 34361,
        "curlen": 34362,
        "curlen++;": 34363,
        "max(maxlen,": 34364,
        "curlen);": 34365,
        "f[100010],": 34366,
        "maxlen[maxn];": 34367,
        "maxlen[i]": 34368,
        "maxlen[i": 34369,
        "(maxlen[i]": 34370,
        "maxlen[i];": 34371,
        "mininc(long": 34372,
        "mininc(0,": 34373,
        "mininc(i": 34374,
        "s[100000]": 34375,
        "(lim--)": 34376,
        "(!(m": 34377,
        "(m[a])": 34378,
        "store.size();": 34379,
        "store.insert(temp);": 34380,
        "store.size())": 34381,
        "(d)": 34382,
        "remainders;": 34383,
        "remainders.find(rem)": 34384,
        "remainders.end())": 34385,
        "remainders.insert(rem);": 34386,
        "rem)": 34387,
        "qiu[100000];": 34388,
        "memset(qiu,": 34389,
        "sizeof(qiu));": 34390,
        "(qiu[a]": 34391,
        "qiu[a]": 34392,
        "ma[a": 34393,
        "(ma[(a": 34394,
        "m)]": 34395,
        "m]++;": 34396,
        "(1e7);": 34397,
        "S.insert(k);": 34398,
        "(S.count(k))": 34399,
        "(stop)": 34400,
        "(check(b))": 34401,
        "(s1.find(d": 34402,
        "s1.end())": 34403,
        "s1.insert(d": 34404,
        "pii": 34405,
        "(double)clock()": 34406,
        "(double)CLOCKS_PER_SEC": 34407,
        "\"s\\n\";": 34408,
        "a[1000001],": 34409,
        "ceil(w)": 34410,
        "xay": 34411,
        "(y));": 34412,
        "gtr,": 34413,
        "smlr;": 34414,
        "gtr": 34415,
        "smlr": 34416,
        "util": 34417,
        "(gtr": 34418,
        "(smlr": 34419,
        "util;": 34420,
        "SieveOfEratosthenes(long": 34421,
        "tiles(long": 34422,
        "tiles(m,": 34423,
        "MaxDominoesNumber": 34424,
        "**board": 34425,
        "*[M];": 34426,
        "board[i]": 34427,
        "bool[N];": 34428,
        "swap(M,": 34429,
        "remain_domino": 34430,
        "remain_domino;": 34431,
        "MaxDominoesNumber++;": 34432,
        "((w": 34433,
        "Cost,": 34434,
        "Init,": 34435,
        "borrow;": 34436,
        "Cost;": 34437,
        "Init;": 34438,
        "borrow": 34439,
        "Cost)": 34440,
        "(borrow": 34441,
        "ndmny": 34442,
        "ndmny)": 34443,
        "expect": 34444,
        "(expect": 34445,
        "dollar;": 34446,
        "dollar": 34447,
        "Need_money;": 34448,
        "((number": 34449,
        "Need_money": 34450,
        "(Need_money": 34451,
        "max(sum": 34452,
        "0.5": 34453,
        "((amt": 34454,
        "solve(a": 34455,
        "solve(c": 34456,
        "hishab(long": 34457,
        "jhamela": 34458,
        "shob": 34459,
        "hishab((i": 34460,
        "hishab(i,": 34461,
        "LLONG_MAX);": 34462,
        "(shob": 34463,
        "max(b": 34464,
        "0LL);": 34465,
        "f(c,": 34466,
        "solve(A,": 34467,
        "solve(B,": 34468,
        "solve(C,": 34469,
        "getsum(int": 34470,
        "getsum(a": 34471,
        "getsum(b": 34472,
        "getsum(c": 34473,
        "dm(long": 34474,
        "max((long": 34475,
        "long)0,": 34476,
        "dm(a,": 34477,
        "dm(b,": 34478,
        "F(long": 34479,
        "F(min(a": 34480,
        "F(i);": 34481,
        "dp[200001];": 34482,
        "query(long": 34483,
        "fast_io();": 34484,
        "ajout": 34485,
        "ajout++)": 34486,
        "(ajout": 34487,
        "v3": 34488,
        "query(ajout);": 34489,
        "query(ajout": 34490,
        "v3)": 34491,
        "v3);": 34492,
        "calc(c,": 34493,
        "rexxx(long": 34494,
        "rexxx(c1,": 34495,
        "rexxx(c2,": 34496,
        "rexxx(x,": 34497,
        "200010,": 34498,
        "0x7FFFFFFF;": 34499,
        "min(ll": 34500,
        "(less": 34501,
        "sub(a,": 34502,
        "ll);": 34503,
        "sub(b,": 34504,
        "sub(c,": 34505,
        "ex(long": 34506,
        "min(Max": 34507,
        "fin(\"t.txt\");": 34508,
        "ex(a,": 34509,
        "ex(b,": 34510,
        "ex(c,": 34511,
        "long)0;": 34512,
        "sum[l];": 34513,
        "a[501],": 34514,
        "d[501][501];": 34515,
        "d[0][0]": 34516,
        "d[j][k]": 34517,
        "(d[j][k]": 34518,
        "1][k": 34519,
        "a[i]])": 34520,
        "d[m][i])": 34521,
        "dp[501][501],": 34522,
        "Dp[501][501];": 34523,
        "dp[j][a[i]]++;": 34524,
        "dp[j][k]": 34525,
        "a[i]];": 34526,
        "Dp[j][k];": 34527,
        "Dp[j][k]": 34528,
        "dp[j][k];": 34529,
        "Dp[m][j];": 34530,
        "a[505];": 34531,
        "dp[505][505];": 34532,
        "dp[j][t]": 34533,
        "1][t": 34534,
        "dp[m][i])": 34535,
        "dp[600][600],": 34536,
        "a[600];": 34537,
        "dp[m][i];": 34538,
        "modd,": 34539,
        "modd;": 34540,
        "d[505][505];": 34541,
        "502;": 34542,
        "dpn[N][N];": 34543,
        "dp[N][N];": 34544,
        "dpn[0][0]": 34545,
        "++t)": 34546,
        "++s)": 34547,
        "dp[t][s]": 34548,
        "(dp[t": 34549,
        "1][s": 34550,
        "dpn[t][s])": 34551,
        "dpn[t][s];": 34552,
        "dpn[t][s]": 34553,
        "dp[t][s];": 34554,
        "dp[m][s])": 34555,
        "(dp[j][k]": 34556,
        "x])": 34557,
        "dp[k][j]": 34558,
        "dp[k": 34559,
        "520;": 34560,
        "dp[MAXN][MAXN],": 34561,
        "dp[m][b]": 34562,
        "dp[2][505][505];": 34563,
        "dp[0][0][0]": 34564,
        "dp[flag][j][k]": 34565,
        "dp[flag": 34566,
        "1][j][k];": 34567,
        "(dp[flag][j][k]": 34568,
        "dp[flag][j": 34569,
        "a[i]][k": 34570,
        "dp[flag][i][m])": 34571,
        "f[501][501];": 34572,
        "(f[j][k]": 34573,
        "f[j": 34574,
        "f[m][i])": 34575,
        "2][0][0]": 34576,
        "1L;": 34577,
        "2][j][k]": 34578,
        "dp[(i": 34579,
        "2][j][k])": 34580,
        "2][m][i])": 34581,
        "dp[501][501];": 34582,
        "hot[N][N];": 34583,
        "Arr[N];": 34584,
        "hot[0][0]": 34585,
        "hot[j][k]": 34586,
        "hot[j": 34587,
        "Arr[i]],": 34588,
        "hot[m][i])": 34589,
        "dp[502][502];": 34590,
        "a[502];": 34591,
        "dp[m][k]": 34592,
        "dp[m][k": 34593,
        "tests": 34594,
        "(tests--)": 34595,
        "510;": 34596,
        "dp[1000][1000];": 34597,
        "read(0,": 34598,
        "(dp[j][t]": 34599,
        "(pow(k,": 34600,
        "vec.push_back(pow(k,": 34601,
        "lower_bound(vec.begin(),": 34602,
        "*it)": 34603,
        "vec.begin();": 34604,
        "importance(-1);": 34605,
        "importance": 34606,
        "(importance": 34607,
        "Pow(b,": 34608,
        "(Pow(k,": 34609,
        "w[n],": 34610,
        "q.push(w);": 34611,
        "pockets": 34612,
        "ceil(arr[i]": 34613,
        "(int)ceil(pockets": 34614,
        "w[100010];": 34615,
        "_x++)": 34616,
        "w[maxn];": 34617,
        "read(n),": 34618,
        "read(k);": 34619,
        "read(a[i]);": 34620,
        "arr[10005];": 34621,
        "x[100001];": 34622,
        "points[103];": 34623,
        "minimum(int": 34624,
        "curInd": 34625,
        "curMin": 34626,
        "points[curInd]": 34627,
        "points[curMin];": 34628,
        "curInd;": 34629,
        "curInd++;": 34630,
        "curMin;": 34631,
        "my_sort(int": 34632,
        "minimum(curInd,": 34633,
        "points[curInd];": 34634,
        "points[ind];": 34635,
        "points[ind]": 34636,
        "my_sort(n);": 34637,
        "Work()": 34638,
        "Work();": 34639,
        "arr[l]": 34640,
        "cnt),": 34641,
        "maxdiff;": 34642,
        "maxdiff": 34643,
        "maxdiff++;": 34644,
        "(maxdiff": 34645,
        "diameter": 34646,
        "(diameter": 34647,
        "removals": 34648,
        "removals);": 34649,
        "aes;": 34650,
        "aes": 34651,
        "aes0": 34652,
        "(aes0": 34653,
        "aes)": 34654,
        "sort(seq,": 34655,
        "(seq[end]": 34656,
        "seq[start]": 34657,
        "++end;": 34658,
        "++start;": 34659,
        "mmax;": 34660,
        "mmax++;": 34661,
        "min(count": 34662,
        "thislen": 34663,
        "thislen++;": 34664,
        "max(thislen,": 34665,
        "maxlen);": 34666,
        "pos++,": 34667,
        "pre[105];": 34668,
        "pre[i];": 34669,
        "sort(pre,": 34670,
        "(pre[j]": 34671,
        "number(a,": 34672,
        "((array[j]": 34673,
        "array[i])": 34674,
        "dp[100005];": 34675,
        "ele)": 34676,
        "dp[p]": 34677,
        "cnt(100001,": 34678,
        "cnt[1];": 34679,
        "dp[100000]": 34680,
        "cnt[100002];": 34681,
        "ans[100002];": 34682,
        "cnt[a]": 34683,
        "max(ans[i": 34684,
        "ans[100000]": 34685,
        "dp[100005],": 34686,
        "f[1];": 34687,
        "freq[100005];": 34688,
        "freq[a[i]]++;": 34689,
        "dp[100007][3][3];": 34690,
        "nextprev,": 34691,
        "(dp[val][nextprev][prev]": 34692,
        "dp[val][nextprev][prev];": 34693,
        "(nextprev": 34694,
        "a[val]": 34695,
        "go(val": 34696,
        "(go(val": 34697,
        "max((val": 34698,
        "0)));": 34699,
        "100003;": 34700,
        "max(a[1]": 34701,
        "go(2,": 34702,
        "dp[100001][2];": 34703,
        "(dp[maxn][0]": 34704,
        "dp[maxn][1])": 34705,
        "dp[maxn][0]": 34706,
        "dp[maxn][1]": 34707,
        "dp[N": 34708,
        "a[u]++;": 34709,
        "max(2LL": 34710,
        "dp[1]);": 34711,
        "dp[N]": 34712,
        "brr[100001]": 34713,
        "(brr[i": 34714,
        "brr[100000]": 34715,
        "ans[MAXN": 34716,
        "ans[maxi]": 34717,
        "arr[100009],": 34718,
        "c[100009],": 34719,
        "ans[100009];": 34720,
        "c[arr[i]]++;": 34721,
        "c(100001);": 34722,
        "c[ar]++;": 34723,
        "dp(100001);": 34724,
        "max(dp[100001],": 34725,
        "dp[100001": 34726,
        "m[200000]": 34727,
        "c[200000]": 34728,
        "c[a]++;": 34729,
        "*s.rbegin();": 34730,
        "take": 34731,
        "max(m[i": 34732,
        "take);": 34733,
        "m[*s.rbegin()]": 34734,
        "A[num]": 34735,
        "A[num])": 34736,
        "cnt[num]++;": 34737,
        "cnt[0];": 34738,
        "max(dp[0],": 34739,
        "dp[num": 34740,
        "numbers(max1);": 34741,
        "values(max1,": 34742,
        "numbers[n1]++;": 34743,
        "values[0]": 34744,
        "values[1]": 34745,
        "numbers[1];": 34746,
        "values[i]": 34747,
        "max(numbers[i]": 34748,
        "values[i": 34749,
        "values[max1": 34750,
        "val[100005]": 34751,
        "dp[100005]": 34752,
        "val[x]++;": 34753,
        "val[1];": 34754,
        "val[i]": 34755,
        "dp[100004]": 34756,
        "dp[100001]": 34757,
        "freq[b[j]]++;": 34758,
        "(!vis[b[j]])": 34759,
        "vis[b[j]]": 34760,
        "lower_bound(a": 34761,
        "lx++;": 34762,
        "max(freq[a[i]]": 34763,
        "freq[a[i]]": 34764,
        "dp[lx": 34765,
        "arr(1e5": 34766,
        "arr[temp]": 34767,
        "dp(1e5": 34768,
        "dp[z]": 34769,
        "max(dp[z": 34770,
        "dp[z": 34771,
        "arr[z];": 34772,
        "max(dp[1e5],": 34773,
        "dp[1e5": 34774,
        "dp[maxn],": 34775,
        "num[maxn],": 34776,
        "maxa;": 34777,
        "num[1];": 34778,
        "dp[maxa]": 34779,
        "num[t]++;": 34780,
        "dp(100005),": 34781,
        "cnt(100005);": 34782,
        "cnt[x]++,": 34783,
        "dp[mx]": 34784,
        "contiguous": 34785,
        "(contiguous": 34786,
        "sumo": 34787,
        "sumo++;": 34788,
        "sumz++;": 34789,
        "(sumo": 34790,
        "puts(strstr(s,": 34791,
        "\"0000000\")": 34792,
        "strstr(s,": 34793,
        "\"1111111\")": 34794,
        "r.length();": 34795,
        "(n.find(\"0000000\")": 34796,
        "n.find(\"1111111\")": 34797,
        "isSubstring(string": 34798,
        "\"1111111\";": 34799,
        "\"0000000\";": 34800,
        "(isSubstring(s1,": 34801,
        "isSubstring(s2,": 34802,
        "(n.find(\"1111111\")": 34803,
        "n.find(\"0000000\")": 34804,
        "counta2": 34805,
        "(counta": 34806,
        "counta2++;": 34807,
        "(counta2": 34808,
        "str[size];": 34809,
        "str_1[]": 34810,
        "str_0[]": 34811,
        "cin.getline(str,": 34812,
        "str_0)": 34813,
        "str_1))": 34814,
        "streak": 34815,
        "(streak": 34816,
        "streak++;": 34817,
        "isDanger(string": 34818,
        "plyrs)": 34819,
        "playerState": 34820,
        "plyrs[0];": 34821,
        "plNumber": 34822,
        "plyrs.length();": 34823,
        "comparator": 34824,
        "plyrs[i];": 34825,
        "(comparator": 34826,
        "playerState)": 34827,
        "plNumber++;": 34828,
        "comparator;": 34829,
        "(plNumber": 34830,
        "Players;": 34831,
        "(isDanger(Players))": 34832,
        "(count2": 34833,
        "wordVolume": 34834,
        "textVolume": 34835,
        "wordVolume++;": 34836,
        "max(textVolume,": 34837,
        "wordVolume);": 34838,
        "vec[i].size();": 34839,
        "(vec[i][j]": 34840,
        "'Z'": 34841,
        "f(s[i]);": 34842,
        "is_big(char": 34843,
        "(int)str.length();": 34844,
        "(is_big(str[i]))": 34845,
        "max(val,": 34846,
        "maxWord": 34847,
        "maxVolume": 34848,
        "(int)line[i];": 34849,
        "max(maxVolume,": 34850,
        "maxWord);": 34851,
        "maxWord++;": 34852,
        "maxWord)": 34853,
        "cin.get(sym);": 34854,
        "2e7": 34855,
        "95)": 34856,
        "compare": 34857,
        "(isupper(st[i]))": 34858,
        "max(Ans,": 34859,
        "test_cases": 34860,
        "(test_cases--)": 34861,
        "(ax": 34862,
        "ax)": 34863,
        "f[10010];": 34864,
        "10005)": 34865,
        "b]++;": 34866,
        "(f[c])": 34867,
        "(ada)": 34868,
        "blue)": 34869,
        "d[1000006][2];": 34870,
        "d[0][1]": 34871,
        "int(2);": 34872,
        "d[i][j]": 34873,
        "(d[i][j]": 34874,
        "(d[n][0]": 34875,
        "d[n][1])": 34876,
        "dp[1000010];": 34877,
        "oddsum": 34878,
        "evensum": 34879,
        "evensum;": 34880,
        "oddsum;": 34881,
        "val[2];": 34882,
        "val[0]": 34883,
        "val[1]": 34884,
        "val[i": 34885,
        "(val[i": 34886,
        "val[(i": 34887,
        "(val[0]": 34888,
        "val[1])": 34889,
        "1000100;": 34890,
        "0x7f7f7f7f;": 34891,
        "num[1000099];": 34892,
        "num[2]": 34893,
        "num[3]": 34894,
        "((num[i": 34895,
        "num[n]": 34896,
        "a[!num]": 34897,
        "(blue": 34898,
        "s0,": 34899,
        "dp(n,": 34900,
        "swap(now,": 34901,
        "gcd1(long": 34902,
        "dp[1000005],": 34903,
        "odd[1000005],": 34904,
        "ev[1000005];": 34905,
        "odd[1]": 34906,
        "(ev[i": 34907,
        "odd[i]": 34908,
        "(odd[i": 34909,
        "ev[i]": 34910,
        "pos[2];": 34911,
        "pos[0]": 34912,
        "pos[end]": 34913,
        "pos[(end": 34914,
        "pos[1])": 34915,
        "dp(n": 34916,
        "alt_prefix(n": 34917,
        "alt_prefix[1]": 34918,
        "alt_prefix[2]": 34919,
        "alt_prefix[i": 34920,
        "alt_prefix[i]": 34921,
        "(alt_prefix[i": 34922,
        "f[1000006];": 34923,
        "f[1000007];": 34924,
        "s[1001000];": 34925,
        "dp[MAXN][2];": 34926,
        "dp[i][i": 34927,
        "(dp[i][i": 34928,
        "1][(i": 34929,
        "(dp[n][0]": 34930,
        "dp[n][1]": 34931,
        "a[1000002];": 34932,
        "dp[2][maxn];": 34933,
        "dp[0][i": 34934,
        "dp[1][i]": 34935,
        "(dp[1][i": 34936,
        "dp[1][i": 34937,
        "(dp[0][i": 34938,
        "(dp[0][n": 34939,
        "dp[1][n": 34940,
        "d[1234567][2];": 34941,
        "d[1][0]": 34942,
        "d[1][1]": 34943,
        "d[i][0]": 34944,
        "d[i][1]": 34945,
        "d[i][i": 34946,
        "1][1": 34947,
        "acumx": 34948,
        "acum0": 34949,
        "(acumx": 34950,
        "(acum0": 34951,
        "acumx)": 34952,
        "998244353LL;": 34953,
        "dp[maxn][2],": 34954,
        "dp[1][0]": 34955,
        "dp[n][1])": 34956,
        "f[maxn]": 34957,
        "dp[0],": 34958,
        "dp[1],": 34959,
        "(dp[0]": 34960,
        "abs(cnt1": 34961,
        "cntb,": 34962,
        "nq;": 34963,
        "nq": 34964,
        "nq++;": 34965,
        "abs(cnta": 34966,
        "cntb);": 34967,
        "b[200000];": 34968,
        "a[++n]": 34969,
        "a_4": 34970,
        "a_7": 34971,
        "b_4": 34972,
        "b_7": 34973,
        "a_4++;": 34974,
        "a_7++;": 34975,
        "b_4++;": 34976,
        "b_7++;": 34977,
        "b_4;": 34978,
        "(del": 34979,
        "-del;": 34980,
        "del)": 34981,
        "n[100005];": 34982,
        "memset(n,": 34983,
        "sizeof(n));": 34984,
        "cnt4": 34985,
        "cnt7": 34986,
        "cnt4++;": 34987,
        "cnt7++;": 34988,
        "max(cnt4,": 34989,
        "cnt7);": 34990,
        "max(count1,": 34991,
        "cnt7,": 34992,
        "cnt4;": 34993,
        "max(cnt7,": 34994,
        "cnt4)": 34995,
        "min(cnt4,": 34996,
        "(cnt4": 34997,
        "(cnt7": 34998,
        "f[10];": 34999,
        "f[a[i]": 35000,
        "min(f[4],": 35001,
        "f[7]),": 35002,
        "f[4]": 35003,
        "f[7]": 35004,
        "max(f[4],": 35005,
        "f[7]);": 35006,
        "coA": 35007,
        "coB": 35008,
        "wrong++;": 35009,
        "coA++;": 35010,
        "coB++;": 35011,
        "abs(coB": 35012,
        "coA);": 35013,
        "ops;": 35014,
        "(wrong": 35015,
        "num4": 35016,
        "num7": 35017,
        "num4++;": 35018,
        "num7++;": 35019,
        "max(num4,": 35020,
        "num7);": 35021,
        "b[i]))": 35022,
        "v2.size());": 35023,
        "_tmp": 35024,
        "_tc": 35025,
        "((_tc": 35026,
        "(_tc": 35027,
        "_tmp;": 35028,
        "++last)": 35029,
        "3000": 35030,
        "min(num4,": 35031,
        "num7)": 35032,
        "so,": 35033,
        "++so;": 35034,
        "++os;": 35035,
        "max(so,": 35036,
        "os)": 35037,
        "c74": 35038,
        "c47": 35039,
        "c74++;": 35040,
        "c47++;": 35041,
        "max(c47,": 35042,
        "c74)": 35043,
        "qta,": 35044,
        "qtb;": 35045,
        "qta.first++;": 35046,
        "qta.second++;": 35047,
        "qtb.first++;": 35048,
        "qtb.second++;": 35049,
        "(qta.first": 35050,
        "qtb.first)": 35051,
        "qta.first": 35052,
        "qtb.first;": 35053,
        "qtb.first": 35054,
        "qtb.second": 35055,
        "qta.first;": 35056,
        "qta.second": 35057,
        "(qta.second": 35058,
        "qtb.second)": 35059,
        "qtb.second;": 35060,
        "qta.second;": 35061,
        "n4++;": 35062,
        "n7++;": 35063,
        "max(n4,": 35064,
        "n7);": 35065,
        "jia": 35066,
        "yi": 35067,
        "jiati": 35068,
        "yiti": 35069,
        "(jia": 35070,
        "jia++;": 35071,
        "yi++;": 35072,
        "jiati++;": 35073,
        "(yi": 35074,
        "yiti++;": 35075,
        "ti++;": 35076,
        "(jiati": 35077,
        "yiti)": 35078,
        "vb,": 35079,
        "vb": 35080,
        "v2))": 35081,
        "pow2[35],": 35082,
        "log2(x)": 35083,
        "mask)": 35084,
        "bacterias;": 35085,
        "contador_final": 35086,
        "contador_bacterias;": 35087,
        "(bacterias": 35088,
        "contador_bacterias": 35089,
        "(contador_bacterias": 35090,
        "bacterias": 35091,
        "bacterias)": 35092,
        "contador_final++;": 35093,
        "__builtin_popcount(x)": 35094,
        "V.push_back(c);": 35095,
        "__builtin_popcount(n)": 35096,
        "palabra;": 35097,
        "vocale": 35098,
        "\"aeioun\";": 35099,
        "valido": 35100,
        "\"aeiou\";": 35101,
        "palabra.size();": 35102,
        "(vocale.find(palabra[tam": 35103,
        "long)tam": 35104,
        "(vocale.find(palabra[i])": 35105,
        "(valido.find(palabra[i": 35106,
        "((int)((s).size()))": 35107,
        "(!vowel(s[i])": 35108,
        "!vowel(s[i": 35109,
        "(s[((int)((s).size()))": 35110,
        "'n'": 35111,
        "!vowel(s[((int)((s).size()))": 35112,
        "vowels": 35113,
        "binary_search(vowels.begin(),": 35114,
        "vowels.end(),": 35115,
        "is_valid(string": 35116,
        "(is_vowel(s[i]))": 35117,
        "(int)s.length())": 35118,
        "(!is_vowel(s[i": 35119,
        "(is_valid(s))": 35120,
        "esVocal(char": 35121,
        "(!esVocal(s[i])": 35122,
        "(!esVocal(s[i": 35123,
        "(!esVocal(s[n": 35124,
        "isyuan(char": 35125,
        "(isyuan(s[i])": 35126,
        "(!isyuan(s[i": 35127,
        "(!vowel(s[i]))": 35128,
        "(vowel(s[i": 35129,
        "fun1(char": 35130,
        "(!fun1(s[i])": 35131,
        "!fun1(s[i": 35132,
        "str[1007];": 35133,
        "vis[1007];": 35134,
        "vis['a']": 35135,
        "vis['e']": 35136,
        "vis['i']": 35137,
        "vis['o']": 35138,
        "vis['u']": 35139,
        "(!vis[str[i]]": 35140,
        "(!vis[str[i": 35141,
        "9e5": 35142,
        "gl(char": 35143,
        "gl(s[j]),": 35144,
        "gl(s[j": 35145,
        "gl(s[s.size()": 35146,
        "ch[66666];": 35147,
        "ss[6]": 35148,
        "'u'};": 35149,
        "pd(int": 35150,
        "ss[j])": 35151,
        "(!pd(i)": 35152,
        "!pd(i": 35153,
        "isVowel(string": 35154,
        "\"e\"": 35155,
        "\"i\"": 35156,
        "\"o\"": 35157,
        "\"u\")": 35158,
        "(aux.substr(i,": 35159,
        "\"n\")": 35160,
        "(!isVowel(aux.substr(i,": 35161,
        "(!isVowel(aux.substr(i": 35162,
        "(resp)": 35163,
        "(isvowel(s[i])": 35164,
        "(!isvowel(s[i": 35165,
        "(isvowel(s[s.size()": 35166,
        "band;": 35167,
        "(!isVowel(s[i": 35168,
        "(band)": 35169
    }
}